// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/type/http_status.proto

package org.wso2.vick.auth.cell.sts.generated.envoy.type;

import org.wso2.vick.auth.cell.sts.generated.validate.Validate;

public final class HttpStatusOuterClass {

    private HttpStatusOuterClass() {

    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {

    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {

        registerAllExtensions(
                (com.google.protobuf.ExtensionRegistryLite) registry);
    }

    /**
     * <pre>
     * HTTP response codes supported in Envoy.
     * For more details: http://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml
     * </pre>
     * <p>
     * Protobuf enum {@code envoy.type.StatusCode}
     */
    public enum StatusCode
            implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <pre>
         * Empty - This code not part of the HTTP status code specification, but it is needed for proto
         * `enum` type.
         * </pre>
         *
         * <code>Empty = 0;</code>
         */
        Empty(0),
        /**
         * <code>Continue = 100;</code>
         */
        Continue(100),
        /**
         * <code>OK = 200;</code>
         */
        OK(200),
        /**
         * <code>Created = 201;</code>
         */
        Created(201),
        /**
         * <code>Accepted = 202;</code>
         */
        Accepted(202),
        /**
         * <code>NonAuthoritativeInformation = 203;</code>
         */
        NonAuthoritativeInformation(203),
        /**
         * <code>NoContent = 204;</code>
         */
        NoContent(204),
        /**
         * <code>ResetContent = 205;</code>
         */
        ResetContent(205),
        /**
         * <code>PartialContent = 206;</code>
         */
        PartialContent(206),
        /**
         * <code>MultiStatus = 207;</code>
         */
        MultiStatus(207),
        /**
         * <code>AlreadyReported = 208;</code>
         */
        AlreadyReported(208),
        /**
         * <code>IMUsed = 226;</code>
         */
        IMUsed(226),
        /**
         * <code>MultipleChoices = 300;</code>
         */
        MultipleChoices(300),
        /**
         * <code>MovedPermanently = 301;</code>
         */
        MovedPermanently(301),
        /**
         * <code>Found = 302;</code>
         */
        Found(302),
        /**
         * <code>SeeOther = 303;</code>
         */
        SeeOther(303),
        /**
         * <code>NotModified = 304;</code>
         */
        NotModified(304),
        /**
         * <code>UseProxy = 305;</code>
         */
        UseProxy(305),
        /**
         * <code>TemporaryRedirect = 307;</code>
         */
        TemporaryRedirect(307),
        /**
         * <code>PermanentRedirect = 308;</code>
         */
        PermanentRedirect(308),
        /**
         * <code>BadRequest = 400;</code>
         */
        BadRequest(400),
        /**
         * <code>Unauthorized = 401;</code>
         */
        Unauthorized(401),
        /**
         * <code>PaymentRequired = 402;</code>
         */
        PaymentRequired(402),
        /**
         * <code>Forbidden = 403;</code>
         */
        Forbidden(403),
        /**
         * <code>NotFound = 404;</code>
         */
        NotFound(404),
        /**
         * <code>MethodNotAllowed = 405;</code>
         */
        MethodNotAllowed(405),
        /**
         * <code>NotAcceptable = 406;</code>
         */
        NotAcceptable(406),
        /**
         * <code>ProxyAuthenticationRequired = 407;</code>
         */
        ProxyAuthenticationRequired(407),
        /**
         * <code>RequestTimeout = 408;</code>
         */
        RequestTimeout(408),
        /**
         * <code>Conflict = 409;</code>
         */
        Conflict(409),
        /**
         * <code>Gone = 410;</code>
         */
        Gone(410),
        /**
         * <code>LengthRequired = 411;</code>
         */
        LengthRequired(411),
        /**
         * <code>PreconditionFailed = 412;</code>
         */
        PreconditionFailed(412),
        /**
         * <code>PayloadTooLarge = 413;</code>
         */
        PayloadTooLarge(413),
        /**
         * <code>URITooLong = 414;</code>
         */
        URITooLong(414),
        /**
         * <code>UnsupportedMediaType = 415;</code>
         */
        UnsupportedMediaType(415),
        /**
         * <code>RangeNotSatisfiable = 416;</code>
         */
        RangeNotSatisfiable(416),
        /**
         * <code>ExpectationFailed = 417;</code>
         */
        ExpectationFailed(417),
        /**
         * <code>MisdirectedRequest = 421;</code>
         */
        MisdirectedRequest(421),
        /**
         * <code>UnprocessableEntity = 422;</code>
         */
        UnprocessableEntity(422),
        /**
         * <code>Locked = 423;</code>
         */
        Locked(423),
        /**
         * <code>FailedDependency = 424;</code>
         */
        FailedDependency(424),
        /**
         * <code>UpgradeRequired = 426;</code>
         */
        UpgradeRequired(426),
        /**
         * <code>PreconditionRequired = 428;</code>
         */
        PreconditionRequired(428),
        /**
         * <code>TooManyRequests = 429;</code>
         */
        TooManyRequests(429),
        /**
         * <code>RequestHeaderFieldsTooLarge = 431;</code>
         */
        RequestHeaderFieldsTooLarge(431),
        /**
         * <code>InternalServerError = 500;</code>
         */
        InternalServerError(500),
        /**
         * <code>NotImplemented = 501;</code>
         */
        NotImplemented(501),
        /**
         * <code>BadGateway = 502;</code>
         */
        BadGateway(502),
        /**
         * <code>ServiceUnavailable = 503;</code>
         */
        ServiceUnavailable(503),
        /**
         * <code>GatewayTimeout = 504;</code>
         */
        GatewayTimeout(504),
        /**
         * <code>HTTPVersionNotSupported = 505;</code>
         */
        HTTPVersionNotSupported(505),
        /**
         * <code>VariantAlsoNegotiates = 506;</code>
         */
        VariantAlsoNegotiates(506),
        /**
         * <code>InsufficientStorage = 507;</code>
         */
        InsufficientStorage(507),
        /**
         * <code>LoopDetected = 508;</code>
         */
        LoopDetected(508),
        /**
         * <code>NotExtended = 510;</code>
         */
        NotExtended(510),
        /**
         * <code>NetworkAuthenticationRequired = 511;</code>
         */
        NetworkAuthenticationRequired(511),
        UNRECOGNIZED(-1),
        ;

        /**
         * <pre>
         * Empty - This code not part of the HTTP status code specification, but it is needed for proto
         * `enum` type.
         * </pre>
         *
         * <code>Empty = 0;</code>
         */
        public static final int Empty_VALUE = 0;
        /**
         * <code>Continue = 100;</code>
         */
        public static final int Continue_VALUE = 100;
        /**
         * <code>OK = 200;</code>
         */
        public static final int OK_VALUE = 200;
        /**
         * <code>Created = 201;</code>
         */
        public static final int Created_VALUE = 201;
        /**
         * <code>Accepted = 202;</code>
         */
        public static final int Accepted_VALUE = 202;
        /**
         * <code>NonAuthoritativeInformation = 203;</code>
         */
        public static final int NonAuthoritativeInformation_VALUE = 203;
        /**
         * <code>NoContent = 204;</code>
         */
        public static final int NoContent_VALUE = 204;
        /**
         * <code>ResetContent = 205;</code>
         */
        public static final int ResetContent_VALUE = 205;
        /**
         * <code>PartialContent = 206;</code>
         */
        public static final int PartialContent_VALUE = 206;
        /**
         * <code>MultiStatus = 207;</code>
         */
        public static final int MultiStatus_VALUE = 207;
        /**
         * <code>AlreadyReported = 208;</code>
         */
        public static final int AlreadyReported_VALUE = 208;
        /**
         * <code>IMUsed = 226;</code>
         */
        public static final int IMUsed_VALUE = 226;
        /**
         * <code>MultipleChoices = 300;</code>
         */
        public static final int MultipleChoices_VALUE = 300;
        /**
         * <code>MovedPermanently = 301;</code>
         */
        public static final int MovedPermanently_VALUE = 301;
        /**
         * <code>Found = 302;</code>
         */
        public static final int Found_VALUE = 302;
        /**
         * <code>SeeOther = 303;</code>
         */
        public static final int SeeOther_VALUE = 303;
        /**
         * <code>NotModified = 304;</code>
         */
        public static final int NotModified_VALUE = 304;
        /**
         * <code>UseProxy = 305;</code>
         */
        public static final int UseProxy_VALUE = 305;
        /**
         * <code>TemporaryRedirect = 307;</code>
         */
        public static final int TemporaryRedirect_VALUE = 307;
        /**
         * <code>PermanentRedirect = 308;</code>
         */
        public static final int PermanentRedirect_VALUE = 308;
        /**
         * <code>BadRequest = 400;</code>
         */
        public static final int BadRequest_VALUE = 400;
        /**
         * <code>Unauthorized = 401;</code>
         */
        public static final int Unauthorized_VALUE = 401;
        /**
         * <code>PaymentRequired = 402;</code>
         */
        public static final int PaymentRequired_VALUE = 402;
        /**
         * <code>Forbidden = 403;</code>
         */
        public static final int Forbidden_VALUE = 403;
        /**
         * <code>NotFound = 404;</code>
         */
        public static final int NotFound_VALUE = 404;
        /**
         * <code>MethodNotAllowed = 405;</code>
         */
        public static final int MethodNotAllowed_VALUE = 405;
        /**
         * <code>NotAcceptable = 406;</code>
         */
        public static final int NotAcceptable_VALUE = 406;
        /**
         * <code>ProxyAuthenticationRequired = 407;</code>
         */
        public static final int ProxyAuthenticationRequired_VALUE = 407;
        /**
         * <code>RequestTimeout = 408;</code>
         */
        public static final int RequestTimeout_VALUE = 408;
        /**
         * <code>Conflict = 409;</code>
         */
        public static final int Conflict_VALUE = 409;
        /**
         * <code>Gone = 410;</code>
         */
        public static final int Gone_VALUE = 410;
        /**
         * <code>LengthRequired = 411;</code>
         */
        public static final int LengthRequired_VALUE = 411;
        /**
         * <code>PreconditionFailed = 412;</code>
         */
        public static final int PreconditionFailed_VALUE = 412;
        /**
         * <code>PayloadTooLarge = 413;</code>
         */
        public static final int PayloadTooLarge_VALUE = 413;
        /**
         * <code>URITooLong = 414;</code>
         */
        public static final int URITooLong_VALUE = 414;
        /**
         * <code>UnsupportedMediaType = 415;</code>
         */
        public static final int UnsupportedMediaType_VALUE = 415;
        /**
         * <code>RangeNotSatisfiable = 416;</code>
         */
        public static final int RangeNotSatisfiable_VALUE = 416;
        /**
         * <code>ExpectationFailed = 417;</code>
         */
        public static final int ExpectationFailed_VALUE = 417;
        /**
         * <code>MisdirectedRequest = 421;</code>
         */
        public static final int MisdirectedRequest_VALUE = 421;
        /**
         * <code>UnprocessableEntity = 422;</code>
         */
        public static final int UnprocessableEntity_VALUE = 422;
        /**
         * <code>Locked = 423;</code>
         */
        public static final int Locked_VALUE = 423;
        /**
         * <code>FailedDependency = 424;</code>
         */
        public static final int FailedDependency_VALUE = 424;
        /**
         * <code>UpgradeRequired = 426;</code>
         */
        public static final int UpgradeRequired_VALUE = 426;
        /**
         * <code>PreconditionRequired = 428;</code>
         */
        public static final int PreconditionRequired_VALUE = 428;
        /**
         * <code>TooManyRequests = 429;</code>
         */
        public static final int TooManyRequests_VALUE = 429;
        /**
         * <code>RequestHeaderFieldsTooLarge = 431;</code>
         */
        public static final int RequestHeaderFieldsTooLarge_VALUE = 431;
        /**
         * <code>InternalServerError = 500;</code>
         */
        public static final int InternalServerError_VALUE = 500;
        /**
         * <code>NotImplemented = 501;</code>
         */
        public static final int NotImplemented_VALUE = 501;
        /**
         * <code>BadGateway = 502;</code>
         */
        public static final int BadGateway_VALUE = 502;
        /**
         * <code>ServiceUnavailable = 503;</code>
         */
        public static final int ServiceUnavailable_VALUE = 503;
        /**
         * <code>GatewayTimeout = 504;</code>
         */
        public static final int GatewayTimeout_VALUE = 504;
        /**
         * <code>HTTPVersionNotSupported = 505;</code>
         */
        public static final int HTTPVersionNotSupported_VALUE = 505;
        /**
         * <code>VariantAlsoNegotiates = 506;</code>
         */
        public static final int VariantAlsoNegotiates_VALUE = 506;
        /**
         * <code>InsufficientStorage = 507;</code>
         */
        public static final int InsufficientStorage_VALUE = 507;
        /**
         * <code>LoopDetected = 508;</code>
         */
        public static final int LoopDetected_VALUE = 508;
        /**
         * <code>NotExtended = 510;</code>
         */
        public static final int NotExtended_VALUE = 510;
        /**
         * <code>NetworkAuthenticationRequired = 511;</code>
         */
        public static final int NetworkAuthenticationRequired_VALUE = 511;

        public final int getNumber() {

            if (this == UNRECOGNIZED) {
                throw new java.lang.IllegalArgumentException(
                        "Can't get the number of an unknown enum value.");
            }
            return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static StatusCode valueOf(int value) {

            return forNumber(value);
        }

        public static StatusCode forNumber(int value) {

            switch (value) {
                case 0:
                    return Empty;
                case 100:
                    return Continue;
                case 200:
                    return OK;
                case 201:
                    return Created;
                case 202:
                    return Accepted;
                case 203:
                    return NonAuthoritativeInformation;
                case 204:
                    return NoContent;
                case 205:
                    return ResetContent;
                case 206:
                    return PartialContent;
                case 207:
                    return MultiStatus;
                case 208:
                    return AlreadyReported;
                case 226:
                    return IMUsed;
                case 300:
                    return MultipleChoices;
                case 301:
                    return MovedPermanently;
                case 302:
                    return Found;
                case 303:
                    return SeeOther;
                case 304:
                    return NotModified;
                case 305:
                    return UseProxy;
                case 307:
                    return TemporaryRedirect;
                case 308:
                    return PermanentRedirect;
                case 400:
                    return BadRequest;
                case 401:
                    return Unauthorized;
                case 402:
                    return PaymentRequired;
                case 403:
                    return Forbidden;
                case 404:
                    return NotFound;
                case 405:
                    return MethodNotAllowed;
                case 406:
                    return NotAcceptable;
                case 407:
                    return ProxyAuthenticationRequired;
                case 408:
                    return RequestTimeout;
                case 409:
                    return Conflict;
                case 410:
                    return Gone;
                case 411:
                    return LengthRequired;
                case 412:
                    return PreconditionFailed;
                case 413:
                    return PayloadTooLarge;
                case 414:
                    return URITooLong;
                case 415:
                    return UnsupportedMediaType;
                case 416:
                    return RangeNotSatisfiable;
                case 417:
                    return ExpectationFailed;
                case 421:
                    return MisdirectedRequest;
                case 422:
                    return UnprocessableEntity;
                case 423:
                    return Locked;
                case 424:
                    return FailedDependency;
                case 426:
                    return UpgradeRequired;
                case 428:
                    return PreconditionRequired;
                case 429:
                    return TooManyRequests;
                case 431:
                    return RequestHeaderFieldsTooLarge;
                case 500:
                    return InternalServerError;
                case 501:
                    return NotImplemented;
                case 502:
                    return BadGateway;
                case 503:
                    return ServiceUnavailable;
                case 504:
                    return GatewayTimeout;
                case 505:
                    return HTTPVersionNotSupported;
                case 506:
                    return VariantAlsoNegotiates;
                case 507:
                    return InsufficientStorage;
                case 508:
                    return LoopDetected;
                case 510:
                    return NotExtended;
                case 511:
                    return NetworkAuthenticationRequired;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<StatusCode>
        internalGetValueMap() {

            return internalValueMap;
        }

        private static final com.google.protobuf.Internal.EnumLiteMap<
                StatusCode> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<StatusCode>() {
                    public StatusCode findValueByNumber(int number) {

                        return StatusCode.forNumber(number);
                    }
                };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {

            return getDescriptor().getValues().get(ordinal());
        }

        public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {

            return getDescriptor();
        }

        public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {

            return HttpStatusOuterClass.getDescriptor().getEnumTypes().get(0);
        }

        private static final StatusCode[] VALUES = values();

        public static StatusCode valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {

            if (desc.getType() != getDescriptor()) {
                throw new java.lang.IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            if (desc.getIndex() == -1) {
                return UNRECOGNIZED;
            }
            return VALUES[desc.getIndex()];
        }

        private final int value;

        private StatusCode(int value) {

            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:envoy.type.StatusCode)
    }

    public interface HttpStatusOrBuilder extends
            // @@protoc_insertion_point(interface_extends:envoy.type.HttpStatus)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Supplies HTTP response code.
         * </pre>
         *
         * <code>.envoy.type.StatusCode code = 1 [(.validate.rules) = { ... }</code>
         */
        int getCodeValue();

        /**
         * <pre>
         * Supplies HTTP response code.
         * </pre>
         *
         * <code>.envoy.type.StatusCode code = 1 [(.validate.rules) = { ... }</code>
         */
        HttpStatusOuterClass.StatusCode getCode();
    }

    /**
     * <pre>
     * HTTP status.
     * </pre>
     * <p>
     * Protobuf type {@code envoy.type.HttpStatus}
     */
    public static final class HttpStatus extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:envoy.type.HttpStatus)
            HttpStatusOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use HttpStatus.newBuilder() to construct.
        private HttpStatus(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

            super(builder);
        }

        private HttpStatus() {

            code_ = 0;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {

            return this.unknownFields;
        }

        private HttpStatus(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8: {
                            int rawValue = input.readEnum();

                            code_ = rawValue;
                            break;
                        }
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {

            return HttpStatusOuterClass.internal_static_envoy_type_HttpStatus_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {

            return HttpStatusOuterClass.internal_static_envoy_type_HttpStatus_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            HttpStatusOuterClass.HttpStatus.class, HttpStatusOuterClass.HttpStatus.Builder.class);
        }

        public static final int CODE_FIELD_NUMBER = 1;
        private int code_;

        /**
         * <pre>
         * Supplies HTTP response code.
         * </pre>
         *
         * <code>.envoy.type.StatusCode code = 1 [(.validate.rules) = { ... }</code>
         */
        public int getCodeValue() {

            return code_;
        }

        /**
         * <pre>
         * Supplies HTTP response code.
         * </pre>
         *
         * <code>.envoy.type.StatusCode code = 1 [(.validate.rules) = { ... }</code>
         */
        public HttpStatusOuterClass.StatusCode getCode() {

            @SuppressWarnings("deprecation")
            HttpStatusOuterClass.StatusCode result = HttpStatusOuterClass.StatusCode.valueOf(code_);
            return result == null ? HttpStatusOuterClass.StatusCode.UNRECOGNIZED : result;
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {

            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {

            if (code_ != HttpStatusOuterClass.StatusCode.Empty.getNumber()) {
                output.writeEnum(1, code_);
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {

            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (code_ != HttpStatusOuterClass.StatusCode.Empty.getNumber()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(1, code_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {

            if (obj == this) {
                return true;
            }
            if (!(obj instanceof HttpStatusOuterClass.HttpStatus)) {
                return super.equals(obj);
            }
            HttpStatusOuterClass.HttpStatus other = (HttpStatusOuterClass.HttpStatus) obj;

            boolean result = true;
            result = result && code_ == other.code_;
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {

            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + CODE_FIELD_NUMBER;
            hash = (53 * hash) + code_;
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static HttpStatusOuterClass.HttpStatus parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static HttpStatusOuterClass.HttpStatus parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static HttpStatusOuterClass.HttpStatus parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static HttpStatusOuterClass.HttpStatus parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static HttpStatusOuterClass.HttpStatus parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static HttpStatusOuterClass.HttpStatus parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static HttpStatusOuterClass.HttpStatus parseFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static HttpStatusOuterClass.HttpStatus parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static HttpStatusOuterClass.HttpStatus parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static HttpStatusOuterClass.HttpStatus parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static HttpStatusOuterClass.HttpStatus parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static HttpStatusOuterClass.HttpStatus parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {

            return newBuilder();
        }

        public static Builder newBuilder() {

            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(HttpStatusOuterClass.HttpStatus prototype) {

            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {

            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * HTTP status.
         * </pre>
         * <p>
         * Protobuf type {@code envoy.type.HttpStatus}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:envoy.type.HttpStatus)
                HttpStatusOuterClass.HttpStatusOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return HttpStatusOuterClass.internal_static_envoy_type_HttpStatus_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return HttpStatusOuterClass.internal_static_envoy_type_HttpStatus_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                HttpStatusOuterClass.HttpStatus.class, HttpStatusOuterClass.HttpStatus.Builder.class);
            }

            // Construct using envoy.type.HttpStatusOuterClass.HttpStatus.newBuilder()
            private Builder() {

                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {

                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @java.lang.Override
            public Builder clear() {

                super.clear();
                code_ = 0;

                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {

                return HttpStatusOuterClass.internal_static_envoy_type_HttpStatus_descriptor;
            }

            @java.lang.Override
            public HttpStatusOuterClass.HttpStatus getDefaultInstanceForType() {

                return HttpStatusOuterClass.HttpStatus.getDefaultInstance();
            }

            @java.lang.Override
            public HttpStatusOuterClass.HttpStatus build() {

                HttpStatusOuterClass.HttpStatus result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public HttpStatusOuterClass.HttpStatus buildPartial() {

                HttpStatusOuterClass.HttpStatus result = new HttpStatusOuterClass.HttpStatus(this);
                result.code_ = code_;
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {

                return (Builder) super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {

                return (Builder) super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                return (Builder) super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {

                return (Builder) super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {

                if (other instanceof HttpStatusOuterClass.HttpStatus) {
                    return mergeFrom((HttpStatusOuterClass.HttpStatus) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(HttpStatusOuterClass.HttpStatus other) {

                if (other == HttpStatusOuterClass.HttpStatus.getDefaultInstance()) return this;
                if (other.code_ != 0) {
                    setCodeValue(other.getCodeValue());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {

                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                HttpStatusOuterClass.HttpStatus parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (HttpStatusOuterClass.HttpStatus) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int code_ = 0;

            /**
             * <pre>
             * Supplies HTTP response code.
             * </pre>
             *
             * <code>.envoy.type.StatusCode code = 1 [(.validate.rules) = { ... }</code>
             */
            public int getCodeValue() {

                return code_;
            }

            /**
             * <pre>
             * Supplies HTTP response code.
             * </pre>
             *
             * <code>.envoy.type.StatusCode code = 1 [(.validate.rules) = { ... }</code>
             */
            public Builder setCodeValue(int value) {

                code_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Supplies HTTP response code.
             * </pre>
             *
             * <code>.envoy.type.StatusCode code = 1 [(.validate.rules) = { ... }</code>
             */
            public HttpStatusOuterClass.StatusCode getCode() {

                @SuppressWarnings("deprecation")
                HttpStatusOuterClass.StatusCode result = HttpStatusOuterClass.StatusCode.valueOf(code_);
                return result == null ? HttpStatusOuterClass.StatusCode.UNRECOGNIZED : result;
            }

            /**
             * <pre>
             * Supplies HTTP response code.
             * </pre>
             *
             * <code>.envoy.type.StatusCode code = 1 [(.validate.rules) = { ... }</code>
             */
            public Builder setCode(HttpStatusOuterClass.StatusCode value) {

                if (value == null) {
                    throw new NullPointerException();
                }

                code_ = value.getNumber();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Supplies HTTP response code.
             * </pre>
             *
             * <code>.envoy.type.StatusCode code = 1 [(.validate.rules) = { ... }</code>
             */
            public Builder clearCode() {

                code_ = 0;
                onChanged();
                return this;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.setUnknownFieldsProto3(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:envoy.type.HttpStatus)
        }

        // @@protoc_insertion_point(class_scope:envoy.type.HttpStatus)
        private static final HttpStatusOuterClass.HttpStatus DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new HttpStatusOuterClass.HttpStatus();
        }

        public static HttpStatusOuterClass.HttpStatus getDefaultInstance() {

            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<HttpStatus>
                PARSER = new com.google.protobuf.AbstractParser<HttpStatus>() {
            @java.lang.Override
            public HttpStatus parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return new HttpStatus(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<HttpStatus> parser() {

            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<HttpStatus> getParserForType() {

            return PARSER;
        }

        @java.lang.Override
        public HttpStatusOuterClass.HttpStatus getDefaultInstanceForType() {

            return DEFAULT_INSTANCE;
        }

    }

    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_envoy_type_HttpStatus_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_envoy_type_HttpStatus_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {

        return descriptor;
    }

    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;

    static {
        java.lang.String[] descriptorData = {
                "\n\034envoy/type/http_status.proto\022\nenvoy.ty" +
                        "pe\032\027validate/validate.proto\"H\n\nHttpStatu" +
                        "s\022:\n\004code\030\001 \001(\0162\026.envoy.type.StatusCodeB" +
                        "\024\272\351\300\003\005\202\001\002 \000\272\351\300\003\005\202\001\002\020\001*\265\t\n\nStatusCode\022\t\n\005" +
                        "Empty\020\000\022\014\n\010Continue\020d\022\007\n\002OK\020\310\001\022\014\n\007Create" +
                        "d\020\311\001\022\r\n\010Accepted\020\312\001\022 \n\033NonAuthoritativeI" +
                        "nformation\020\313\001\022\016\n\tNoContent\020\314\001\022\021\n\014ResetCo" +
                        "ntent\020\315\001\022\023\n\016PartialContent\020\316\001\022\020\n\013MultiSt" +
                        "atus\020\317\001\022\024\n\017AlreadyReported\020\320\001\022\013\n\006IMUsed\020" +
                        "\342\001\022\024\n\017MultipleChoices\020\254\002\022\025\n\020MovedPermane" +
                        "ntly\020\255\002\022\n\n\005Found\020\256\002\022\r\n\010SeeOther\020\257\002\022\020\n\013No" +
                        "tModified\020\260\002\022\r\n\010UseProxy\020\261\002\022\026\n\021Temporary" +
                        "Redirect\020\263\002\022\026\n\021PermanentRedirect\020\264\002\022\017\n\nB" +
                        "adRequest\020\220\003\022\021\n\014Unauthorized\020\221\003\022\024\n\017Payme" +
                        "ntRequired\020\222\003\022\016\n\tForbidden\020\223\003\022\r\n\010NotFoun" +
                        "d\020\224\003\022\025\n\020MethodNotAllowed\020\225\003\022\022\n\rNotAccept" +
                        "able\020\226\003\022 \n\033ProxyAuthenticationRequired\020\227" +
                        "\003\022\023\n\016RequestTimeout\020\230\003\022\r\n\010Conflict\020\231\003\022\t\n" +
                        "\004Gone\020\232\003\022\023\n\016LengthRequired\020\233\003\022\027\n\022Precond" +
                        "itionFailed\020\234\003\022\024\n\017PayloadTooLarge\020\235\003\022\017\n\n" +
                        "URITooLong\020\236\003\022\031\n\024UnsupportedMediaType\020\237\003" +
                        "\022\030\n\023RangeNotSatisfiable\020\240\003\022\026\n\021Expectatio" +
                        "nFailed\020\241\003\022\027\n\022MisdirectedRequest\020\245\003\022\030\n\023U" +
                        "nprocessableEntity\020\246\003\022\013\n\006Locked\020\247\003\022\025\n\020Fa" +
                        "iledDependency\020\250\003\022\024\n\017UpgradeRequired\020\252\003\022" +
                        "\031\n\024PreconditionRequired\020\254\003\022\024\n\017TooManyReq" +
                        "uests\020\255\003\022 \n\033RequestHeaderFieldsTooLarge\020" +
                        "\257\003\022\030\n\023InternalServerError\020\364\003\022\023\n\016NotImple" +
                        "mented\020\365\003\022\017\n\nBadGateway\020\366\003\022\027\n\022ServiceUna" +
                        "vailable\020\367\003\022\023\n\016GatewayTimeout\020\370\003\022\034\n\027HTTP" +
                        "VersionNotSupported\020\371\003\022\032\n\025VariantAlsoNeg" +
                        "otiates\020\372\003\022\030\n\023InsufficientStorage\020\373\003\022\021\n\014" +
                        "LoopDetected\020\374\003\022\020\n\013NotExtended\020\376\003\022\"\n\035Net" +
                        "workAuthenticationRequired\020\377\003b\006proto3"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            com.google.protobuf.Descriptors.FileDescriptor root) {

                        descriptor = root;
                        return null;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[]{
                                Validate.getDescriptor(),
                        }, assigner);
        internal_static_envoy_type_HttpStatus_descriptor =
                getDescriptor().getMessageTypes().get(0);
        internal_static_envoy_type_HttpStatus_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_envoy_type_HttpStatus_descriptor,
                new java.lang.String[]{"Code",});
        com.google.protobuf.ExtensionRegistry registry =
                com.google.protobuf.ExtensionRegistry.newInstance();
        registry.add(Validate.rules);
        com.google.protobuf.Descriptors.FileDescriptor
                .internalUpdateFileDescriptor(descriptor, registry);
        Validate.getDescriptor();
    }

    // @@protoc_insertion_point(outer_class_scope)
}
