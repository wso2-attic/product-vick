// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/api/v2/core/address.proto

package org.wso2.vick.auth.cell.sts.generated.envoy.core;

import org.wso2.vick.auth.cell.sts.generated.validate.Validate;

public final class AddressOuterClass {

    private AddressOuterClass() {

    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {

    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {

        registerAllExtensions(
                (com.google.protobuf.ExtensionRegistryLite) registry);
    }

    public interface PipeOrBuilder extends
            // @@protoc_insertion_point(interface_extends:envoy.api.v2.core.Pipe)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Unix Domain Socket path. On Linux, paths starting with '&#64;' will use the
         * abstract namespace. The starting '&#64;' is replaced by a null byte by Envoy.
         * Paths starting with '&#64;' will result in an error in environments other than
         * Linux.
         * </pre>
         *
         * <code>string path = 1 [(.validate.rules) = { ... }</code>
         */
        java.lang.String getPath();

        /**
         * <pre>
         * Unix Domain Socket path. On Linux, paths starting with '&#64;' will use the
         * abstract namespace. The starting '&#64;' is replaced by a null byte by Envoy.
         * Paths starting with '&#64;' will result in an error in environments other than
         * Linux.
         * </pre>
         *
         * <code>string path = 1 [(.validate.rules) = { ... }</code>
         */
        com.google.protobuf.ByteString
        getPathBytes();
    }

    /**
     * Protobuf type {@code envoy.api.v2.core.Pipe}
     */
    public static final class Pipe extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:envoy.api.v2.core.Pipe)
            PipeOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use Pipe.newBuilder() to construct.
        private Pipe(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

            super(builder);
        }

        private Pipe() {

            path_ = "";
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {

            return this.unknownFields;
        }

        private Pipe(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10: {
                            java.lang.String s = input.readStringRequireUtf8();

                            path_ = s;
                            break;
                        }
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {

            return AddressOuterClass.internal_static_envoy_api_v2_core_Pipe_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {

            return AddressOuterClass.internal_static_envoy_api_v2_core_Pipe_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            AddressOuterClass.Pipe.class, AddressOuterClass.Pipe.Builder.class);
        }

        public static final int PATH_FIELD_NUMBER = 1;
        private volatile java.lang.Object path_;

        /**
         * <pre>
         * Unix Domain Socket path. On Linux, paths starting with '&#64;' will use the
         * abstract namespace. The starting '&#64;' is replaced by a null byte by Envoy.
         * Paths starting with '&#64;' will result in an error in environments other than
         * Linux.
         * </pre>
         *
         * <code>string path = 1 [(.validate.rules) = { ... }</code>
         */
        public java.lang.String getPath() {

            java.lang.Object ref = path_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                path_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * Unix Domain Socket path. On Linux, paths starting with '&#64;' will use the
         * abstract namespace. The starting '&#64;' is replaced by a null byte by Envoy.
         * Paths starting with '&#64;' will result in an error in environments other than
         * Linux.
         * </pre>
         *
         * <code>string path = 1 [(.validate.rules) = { ... }</code>
         */
        public com.google.protobuf.ByteString
        getPathBytes() {

            java.lang.Object ref = path_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                path_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {

            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {

            if (!getPathBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, path_);
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {

            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getPathBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, path_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {

            if (obj == this) {
                return true;
            }
            if (!(obj instanceof AddressOuterClass.Pipe)) {
                return super.equals(obj);
            }
            AddressOuterClass.Pipe other = (AddressOuterClass.Pipe) obj;

            boolean result = true;
            result = result && getPath()
                    .equals(other.getPath());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {

            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + PATH_FIELD_NUMBER;
            hash = (53 * hash) + getPath().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static AddressOuterClass.Pipe parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static AddressOuterClass.Pipe parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static AddressOuterClass.Pipe parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static AddressOuterClass.Pipe parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static AddressOuterClass.Pipe parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static AddressOuterClass.Pipe parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static AddressOuterClass.Pipe parseFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static AddressOuterClass.Pipe parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static AddressOuterClass.Pipe parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static AddressOuterClass.Pipe parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static AddressOuterClass.Pipe parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static AddressOuterClass.Pipe parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {

            return newBuilder();
        }

        public static Builder newBuilder() {

            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(AddressOuterClass.Pipe prototype) {

            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {

            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code envoy.api.v2.core.Pipe}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:envoy.api.v2.core.Pipe)
                AddressOuterClass.PipeOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return AddressOuterClass.internal_static_envoy_api_v2_core_Pipe_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return AddressOuterClass.internal_static_envoy_api_v2_core_Pipe_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                AddressOuterClass.Pipe.class, AddressOuterClass.Pipe.Builder.class);
            }

            // Construct using envoy.api.v2.core.AddressOuterClass.Pipe.newBuilder()
            private Builder() {

                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {

                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @java.lang.Override
            public Builder clear() {

                super.clear();
                path_ = "";

                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {

                return AddressOuterClass.internal_static_envoy_api_v2_core_Pipe_descriptor;
            }

            @java.lang.Override
            public AddressOuterClass.Pipe getDefaultInstanceForType() {

                return AddressOuterClass.Pipe.getDefaultInstance();
            }

            @java.lang.Override
            public AddressOuterClass.Pipe build() {

                AddressOuterClass.Pipe result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public AddressOuterClass.Pipe buildPartial() {

                AddressOuterClass.Pipe result = new AddressOuterClass.Pipe(this);
                result.path_ = path_;
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {

                return (Builder) super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {

                return (Builder) super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                return (Builder) super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {

                return (Builder) super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {

                if (other instanceof AddressOuterClass.Pipe) {
                    return mergeFrom((AddressOuterClass.Pipe) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(AddressOuterClass.Pipe other) {

                if (other == AddressOuterClass.Pipe.getDefaultInstance()) return this;
                if (!other.getPath().isEmpty()) {
                    path_ = other.path_;
                    onChanged();
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {

                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                AddressOuterClass.Pipe parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (AddressOuterClass.Pipe) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private java.lang.Object path_ = "";

            /**
             * <pre>
             * Unix Domain Socket path. On Linux, paths starting with '&#64;' will use the
             * abstract namespace. The starting '&#64;' is replaced by a null byte by Envoy.
             * Paths starting with '&#64;' will result in an error in environments other than
             * Linux.
             * </pre>
             *
             * <code>string path = 1 [(.validate.rules) = { ... }</code>
             */
            public java.lang.String getPath() {

                java.lang.Object ref = path_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    path_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * Unix Domain Socket path. On Linux, paths starting with '&#64;' will use the
             * abstract namespace. The starting '&#64;' is replaced by a null byte by Envoy.
             * Paths starting with '&#64;' will result in an error in environments other than
             * Linux.
             * </pre>
             *
             * <code>string path = 1 [(.validate.rules) = { ... }</code>
             */
            public com.google.protobuf.ByteString
            getPathBytes() {

                java.lang.Object ref = path_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    path_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * Unix Domain Socket path. On Linux, paths starting with '&#64;' will use the
             * abstract namespace. The starting '&#64;' is replaced by a null byte by Envoy.
             * Paths starting with '&#64;' will result in an error in environments other than
             * Linux.
             * </pre>
             *
             * <code>string path = 1 [(.validate.rules) = { ... }</code>
             */
            public Builder setPath(
                    java.lang.String value) {

                if (value == null) {
                    throw new NullPointerException();
                }

                path_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Unix Domain Socket path. On Linux, paths starting with '&#64;' will use the
             * abstract namespace. The starting '&#64;' is replaced by a null byte by Envoy.
             * Paths starting with '&#64;' will result in an error in environments other than
             * Linux.
             * </pre>
             *
             * <code>string path = 1 [(.validate.rules) = { ... }</code>
             */
            public Builder clearPath() {

                path_ = getDefaultInstance().getPath();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Unix Domain Socket path. On Linux, paths starting with '&#64;' will use the
             * abstract namespace. The starting '&#64;' is replaced by a null byte by Envoy.
             * Paths starting with '&#64;' will result in an error in environments other than
             * Linux.
             * </pre>
             *
             * <code>string path = 1 [(.validate.rules) = { ... }</code>
             */
            public Builder setPathBytes(
                    com.google.protobuf.ByteString value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                path_ = value;
                onChanged();
                return this;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.setUnknownFieldsProto3(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:envoy.api.v2.core.Pipe)
        }

        // @@protoc_insertion_point(class_scope:envoy.api.v2.core.Pipe)
        private static final AddressOuterClass.Pipe DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new AddressOuterClass.Pipe();
        }

        public static AddressOuterClass.Pipe getDefaultInstance() {

            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Pipe>
                PARSER = new com.google.protobuf.AbstractParser<Pipe>() {
            @java.lang.Override
            public Pipe parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return new Pipe(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<Pipe> parser() {

            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Pipe> getParserForType() {

            return PARSER;
        }

        @java.lang.Override
        public AddressOuterClass.Pipe getDefaultInstanceForType() {

            return DEFAULT_INSTANCE;
        }

    }

    public interface SocketAddressOrBuilder extends
            // @@protoc_insertion_point(interface_extends:envoy.api.v2.core.SocketAddress)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>.envoy.api.v2.core.SocketAddress.Protocol protocol = 1 [(.validate.rules) = { ... }</code>
         */
        int getProtocolValue();

        /**
         * <code>.envoy.api.v2.core.SocketAddress.Protocol protocol = 1 [(.validate.rules) = { ... }</code>
         */
        AddressOuterClass.SocketAddress.Protocol getProtocol();

        /**
         * <pre>
         * The address for this socket. :ref:`Listeners &lt;config_listeners&gt;` will bind
         * to the address. An empty address is not allowed. Specify ``0.0.0.0`` or ``::``
         * to bind to any address. [#comment:TODO(zuercher) reinstate when implemented:
         * It is possible to distinguish a Listener address via the prefix/suffix matching
         * in :ref:`FilterChainMatch &lt;envoy_api_msg_listener.FilterChainMatch&gt;`.] When used
         * within an upstream :ref:`BindConfig &lt;envoy_api_msg_core.BindConfig&gt;`, the address
         * controls the source address of outbound connections. For :ref:`clusters
         * &lt;envoy_api_msg_Cluster&gt;`, the cluster type determines whether the
         * address must be an IP (*STATIC* or *EDS* clusters) or a hostname resolved by DNS
         * (*STRICT_DNS* or *LOGICAL_DNS* clusters). Address resolution can be customized
         * via :ref:`resolver_name &lt;envoy_api_field_core.SocketAddress.resolver_name&gt;`.
         * </pre>
         *
         * <code>string address = 2 [(.validate.rules) = { ... }</code>
         */
        java.lang.String getAddress();

        /**
         * <pre>
         * The address for this socket. :ref:`Listeners &lt;config_listeners&gt;` will bind
         * to the address. An empty address is not allowed. Specify ``0.0.0.0`` or ``::``
         * to bind to any address. [#comment:TODO(zuercher) reinstate when implemented:
         * It is possible to distinguish a Listener address via the prefix/suffix matching
         * in :ref:`FilterChainMatch &lt;envoy_api_msg_listener.FilterChainMatch&gt;`.] When used
         * within an upstream :ref:`BindConfig &lt;envoy_api_msg_core.BindConfig&gt;`, the address
         * controls the source address of outbound connections. For :ref:`clusters
         * &lt;envoy_api_msg_Cluster&gt;`, the cluster type determines whether the
         * address must be an IP (*STATIC* or *EDS* clusters) or a hostname resolved by DNS
         * (*STRICT_DNS* or *LOGICAL_DNS* clusters). Address resolution can be customized
         * via :ref:`resolver_name &lt;envoy_api_field_core.SocketAddress.resolver_name&gt;`.
         * </pre>
         *
         * <code>string address = 2 [(.validate.rules) = { ... }</code>
         */
        com.google.protobuf.ByteString
        getAddressBytes();

        /**
         * <code>uint32 port_value = 3 [(.validate.rules) = { ... }</code>
         */
        int getPortValue();

        /**
         * <pre>
         * This is only valid if :ref:`resolver_name
         * &lt;envoy_api_field_core.SocketAddress.resolver_name&gt;` is specified below and the
         * named resolver is capable of named port resolution.
         * </pre>
         *
         * <code>string named_port = 4;</code>
         */
        java.lang.String getNamedPort();

        /**
         * <pre>
         * This is only valid if :ref:`resolver_name
         * &lt;envoy_api_field_core.SocketAddress.resolver_name&gt;` is specified below and the
         * named resolver is capable of named port resolution.
         * </pre>
         *
         * <code>string named_port = 4;</code>
         */
        com.google.protobuf.ByteString
        getNamedPortBytes();

        /**
         * <pre>
         * The name of the resolver. This must have been registered with Envoy. If this is
         * empty, a context dependent default applies. If address is a hostname this
         * should be set for resolution other than DNS. If the address is a concrete
         * IP address, no resolution will occur.
         * </pre>
         *
         * <code>string resolver_name = 5;</code>
         */
        java.lang.String getResolverName();

        /**
         * <pre>
         * The name of the resolver. This must have been registered with Envoy. If this is
         * empty, a context dependent default applies. If address is a hostname this
         * should be set for resolution other than DNS. If the address is a concrete
         * IP address, no resolution will occur.
         * </pre>
         *
         * <code>string resolver_name = 5;</code>
         */
        com.google.protobuf.ByteString
        getResolverNameBytes();

        /**
         * <pre>
         * When binding to an IPv6 address above, this enables `IPv4 compatibity
         * &lt;https://tools.ietf.org/html/rfc3493#page-11&gt;`_. Binding to ``::`` will
         * allow both IPv4 and IPv6 connections, with peer IPv4 addresses mapped into
         * IPv6 space as ``::FFFF:&lt;IPv4-address&gt;``.
         * </pre>
         *
         * <code>bool ipv4_compat = 6;</code>
         */
        boolean getIpv4Compat();

        public AddressOuterClass.SocketAddress.PortSpecifierCase getPortSpecifierCase();
    }

    /**
     * Protobuf type {@code envoy.api.v2.core.SocketAddress}
     */
    public static final class SocketAddress extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:envoy.api.v2.core.SocketAddress)
            SocketAddressOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use SocketAddress.newBuilder() to construct.
        private SocketAddress(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

            super(builder);
        }

        private SocketAddress() {

            protocol_ = 0;
            address_ = "";
            resolverName_ = "";
            ipv4Compat_ = false;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {

            return this.unknownFields;
        }

        private SocketAddress(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8: {
                            int rawValue = input.readEnum();

                            protocol_ = rawValue;
                            break;
                        }
                        case 18: {
                            java.lang.String s = input.readStringRequireUtf8();

                            address_ = s;
                            break;
                        }
                        case 24: {
                            portSpecifierCase_ = 3;
                            portSpecifier_ = input.readUInt32();
                            break;
                        }
                        case 34: {
                            java.lang.String s = input.readStringRequireUtf8();
                            portSpecifierCase_ = 4;
                            portSpecifier_ = s;
                            break;
                        }
                        case 42: {
                            java.lang.String s = input.readStringRequireUtf8();

                            resolverName_ = s;
                            break;
                        }
                        case 48: {

                            ipv4Compat_ = input.readBool();
                            break;
                        }
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {

            return AddressOuterClass.internal_static_envoy_api_v2_core_SocketAddress_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {

            return AddressOuterClass.internal_static_envoy_api_v2_core_SocketAddress_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            AddressOuterClass.SocketAddress.class, AddressOuterClass.SocketAddress.Builder.class);
        }

        /**
         * Protobuf enum {@code envoy.api.v2.core.SocketAddress.Protocol}
         */
        public enum Protocol
                implements com.google.protobuf.ProtocolMessageEnum {
            /**
             * <code>TCP = 0;</code>
             */
            TCP(0),
            /**
             * <pre>
             * [#not-implemented-hide:]
             * </pre>
             *
             * <code>UDP = 1;</code>
             */
            UDP(1),
            UNRECOGNIZED(-1),
            ;

            /**
             * <code>TCP = 0;</code>
             */
            public static final int TCP_VALUE = 0;
            /**
             * <pre>
             * [#not-implemented-hide:]
             * </pre>
             *
             * <code>UDP = 1;</code>
             */
            public static final int UDP_VALUE = 1;

            public final int getNumber() {

                if (this == UNRECOGNIZED) {
                    throw new java.lang.IllegalArgumentException(
                            "Can't get the number of an unknown enum value.");
                }
                return value;
            }

            /**
             * @deprecated Use {@link #forNumber(int)} instead.
             */
            @java.lang.Deprecated
            public static Protocol valueOf(int value) {

                return forNumber(value);
            }

            public static Protocol forNumber(int value) {

                switch (value) {
                    case 0:
                        return TCP;
                    case 1:
                        return UDP;
                    default:
                        return null;
                }
            }

            public static com.google.protobuf.Internal.EnumLiteMap<Protocol>
            internalGetValueMap() {

                return internalValueMap;
            }

            private static final com.google.protobuf.Internal.EnumLiteMap<
                    Protocol> internalValueMap =
                    new com.google.protobuf.Internal.EnumLiteMap<Protocol>() {
                        public Protocol findValueByNumber(int number) {

                            return Protocol.forNumber(number);
                        }
                    };

            public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {

                return getDescriptor().getValues().get(ordinal());
            }

            public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {

                return getDescriptor();
            }

            public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {

                return AddressOuterClass.SocketAddress.getDescriptor().getEnumTypes().get(0);
            }

            private static final Protocol[] VALUES = values();

            public static Protocol valueOf(
                    com.google.protobuf.Descriptors.EnumValueDescriptor desc) {

                if (desc.getType() != getDescriptor()) {
                    throw new java.lang.IllegalArgumentException(
                            "EnumValueDescriptor is not for this type.");
                }
                if (desc.getIndex() == -1) {
                    return UNRECOGNIZED;
                }
                return VALUES[desc.getIndex()];
            }

            private final int value;

            private Protocol(int value) {

                this.value = value;
            }

            // @@protoc_insertion_point(enum_scope:envoy.api.v2.core.SocketAddress.Protocol)
        }

        private int portSpecifierCase_ = 0;
        private java.lang.Object portSpecifier_;

        public enum PortSpecifierCase
                implements com.google.protobuf.Internal.EnumLite {
            PORT_VALUE(3),
            NAMED_PORT(4),
            PORTSPECIFIER_NOT_SET(0);
            private final int value;

            private PortSpecifierCase(int value) {

                this.value = value;
            }

            /**
             * @deprecated Use {@link #forNumber(int)} instead.
             */
            @java.lang.Deprecated
            public static PortSpecifierCase valueOf(int value) {

                return forNumber(value);
            }

            public static PortSpecifierCase forNumber(int value) {

                switch (value) {
                    case 3:
                        return PORT_VALUE;
                    case 4:
                        return NAMED_PORT;
                    case 0:
                        return PORTSPECIFIER_NOT_SET;
                    default:
                        return null;
                }
            }

            public int getNumber() {

                return this.value;
            }
        }

        ;

        public PortSpecifierCase
        getPortSpecifierCase() {

            return PortSpecifierCase.forNumber(
                    portSpecifierCase_);
        }

        public static final int PROTOCOL_FIELD_NUMBER = 1;
        private int protocol_;

        /**
         * <code>.envoy.api.v2.core.SocketAddress.Protocol protocol = 1 [(.validate.rules) = { ... }</code>
         */
        public int getProtocolValue() {

            return protocol_;
        }

        /**
         * <code>.envoy.api.v2.core.SocketAddress.Protocol protocol = 1 [(.validate.rules) = { ... }</code>
         */
        public AddressOuterClass.SocketAddress.Protocol getProtocol() {

            @SuppressWarnings("deprecation")
            AddressOuterClass.SocketAddress.Protocol result = AddressOuterClass.SocketAddress.Protocol.valueOf(protocol_);
            return result == null ? AddressOuterClass.SocketAddress.Protocol.UNRECOGNIZED : result;
        }

        public static final int ADDRESS_FIELD_NUMBER = 2;
        private volatile java.lang.Object address_;

        /**
         * <pre>
         * The address for this socket. :ref:`Listeners &lt;config_listeners&gt;` will bind
         * to the address. An empty address is not allowed. Specify ``0.0.0.0`` or ``::``
         * to bind to any address. [#comment:TODO(zuercher) reinstate when implemented:
         * It is possible to distinguish a Listener address via the prefix/suffix matching
         * in :ref:`FilterChainMatch &lt;envoy_api_msg_listener.FilterChainMatch&gt;`.] When used
         * within an upstream :ref:`BindConfig &lt;envoy_api_msg_core.BindConfig&gt;`, the address
         * controls the source address of outbound connections. For :ref:`clusters
         * &lt;envoy_api_msg_Cluster&gt;`, the cluster type determines whether the
         * address must be an IP (*STATIC* or *EDS* clusters) or a hostname resolved by DNS
         * (*STRICT_DNS* or *LOGICAL_DNS* clusters). Address resolution can be customized
         * via :ref:`resolver_name &lt;envoy_api_field_core.SocketAddress.resolver_name&gt;`.
         * </pre>
         *
         * <code>string address = 2 [(.validate.rules) = { ... }</code>
         */
        public java.lang.String getAddress() {

            java.lang.Object ref = address_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                address_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * The address for this socket. :ref:`Listeners &lt;config_listeners&gt;` will bind
         * to the address. An empty address is not allowed. Specify ``0.0.0.0`` or ``::``
         * to bind to any address. [#comment:TODO(zuercher) reinstate when implemented:
         * It is possible to distinguish a Listener address via the prefix/suffix matching
         * in :ref:`FilterChainMatch &lt;envoy_api_msg_listener.FilterChainMatch&gt;`.] When used
         * within an upstream :ref:`BindConfig &lt;envoy_api_msg_core.BindConfig&gt;`, the address
         * controls the source address of outbound connections. For :ref:`clusters
         * &lt;envoy_api_msg_Cluster&gt;`, the cluster type determines whether the
         * address must be an IP (*STATIC* or *EDS* clusters) or a hostname resolved by DNS
         * (*STRICT_DNS* or *LOGICAL_DNS* clusters). Address resolution can be customized
         * via :ref:`resolver_name &lt;envoy_api_field_core.SocketAddress.resolver_name&gt;`.
         * </pre>
         *
         * <code>string address = 2 [(.validate.rules) = { ... }</code>
         */
        public com.google.protobuf.ByteString
        getAddressBytes() {

            java.lang.Object ref = address_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                address_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int PORT_VALUE_FIELD_NUMBER = 3;

        /**
         * <code>uint32 port_value = 3 [(.validate.rules) = { ... }</code>
         */
        public int getPortValue() {

            if (portSpecifierCase_ == 3) {
                return (java.lang.Integer) portSpecifier_;
            }
            return 0;
        }

        public static final int NAMED_PORT_FIELD_NUMBER = 4;

        /**
         * <pre>
         * This is only valid if :ref:`resolver_name
         * &lt;envoy_api_field_core.SocketAddress.resolver_name&gt;` is specified below and the
         * named resolver is capable of named port resolution.
         * </pre>
         *
         * <code>string named_port = 4;</code>
         */
        public java.lang.String getNamedPort() {

            java.lang.Object ref = "";
            if (portSpecifierCase_ == 4) {
                ref = portSpecifier_;
            }
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (portSpecifierCase_ == 4) {
                    portSpecifier_ = s;
                }
                return s;
            }
        }

        /**
         * <pre>
         * This is only valid if :ref:`resolver_name
         * &lt;envoy_api_field_core.SocketAddress.resolver_name&gt;` is specified below and the
         * named resolver is capable of named port resolution.
         * </pre>
         *
         * <code>string named_port = 4;</code>
         */
        public com.google.protobuf.ByteString
        getNamedPortBytes() {

            java.lang.Object ref = "";
            if (portSpecifierCase_ == 4) {
                ref = portSpecifier_;
            }
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                if (portSpecifierCase_ == 4) {
                    portSpecifier_ = b;
                }
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int RESOLVER_NAME_FIELD_NUMBER = 5;
        private volatile java.lang.Object resolverName_;

        /**
         * <pre>
         * The name of the resolver. This must have been registered with Envoy. If this is
         * empty, a context dependent default applies. If address is a hostname this
         * should be set for resolution other than DNS. If the address is a concrete
         * IP address, no resolution will occur.
         * </pre>
         *
         * <code>string resolver_name = 5;</code>
         */
        public java.lang.String getResolverName() {

            java.lang.Object ref = resolverName_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                resolverName_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * The name of the resolver. This must have been registered with Envoy. If this is
         * empty, a context dependent default applies. If address is a hostname this
         * should be set for resolution other than DNS. If the address is a concrete
         * IP address, no resolution will occur.
         * </pre>
         *
         * <code>string resolver_name = 5;</code>
         */
        public com.google.protobuf.ByteString
        getResolverNameBytes() {

            java.lang.Object ref = resolverName_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                resolverName_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int IPV4_COMPAT_FIELD_NUMBER = 6;
        private boolean ipv4Compat_;

        /**
         * <pre>
         * When binding to an IPv6 address above, this enables `IPv4 compatibity
         * &lt;https://tools.ietf.org/html/rfc3493#page-11&gt;`_. Binding to ``::`` will
         * allow both IPv4 and IPv6 connections, with peer IPv4 addresses mapped into
         * IPv6 space as ``::FFFF:&lt;IPv4-address&gt;``.
         * </pre>
         *
         * <code>bool ipv4_compat = 6;</code>
         */
        public boolean getIpv4Compat() {

            return ipv4Compat_;
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {

            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {

            if (protocol_ != AddressOuterClass.SocketAddress.Protocol.TCP.getNumber()) {
                output.writeEnum(1, protocol_);
            }
            if (!getAddressBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 2, address_);
            }
            if (portSpecifierCase_ == 3) {
                output.writeUInt32(
                        3, (int) ((java.lang.Integer) portSpecifier_));
            }
            if (portSpecifierCase_ == 4) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 4, portSpecifier_);
            }
            if (!getResolverNameBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 5, resolverName_);
            }
            if (ipv4Compat_ != false) {
                output.writeBool(6, ipv4Compat_);
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {

            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (protocol_ != AddressOuterClass.SocketAddress.Protocol.TCP.getNumber()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(1, protocol_);
            }
            if (!getAddressBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, address_);
            }
            if (portSpecifierCase_ == 3) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(
                                3, (int) ((java.lang.Integer) portSpecifier_));
            }
            if (portSpecifierCase_ == 4) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, portSpecifier_);
            }
            if (!getResolverNameBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, resolverName_);
            }
            if (ipv4Compat_ != false) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(6, ipv4Compat_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {

            if (obj == this) {
                return true;
            }
            if (!(obj instanceof AddressOuterClass.SocketAddress)) {
                return super.equals(obj);
            }
            AddressOuterClass.SocketAddress other = (AddressOuterClass.SocketAddress) obj;

            boolean result = true;
            result = result && protocol_ == other.protocol_;
            result = result && getAddress()
                    .equals(other.getAddress());
            result = result && getResolverName()
                    .equals(other.getResolverName());
            result = result && (getIpv4Compat()
                    == other.getIpv4Compat());
            result = result && getPortSpecifierCase().equals(
                    other.getPortSpecifierCase());
            if (!result) return false;
            switch (portSpecifierCase_) {
                case 3:
                    result = result && (getPortValue()
                            == other.getPortValue());
                    break;
                case 4:
                    result = result && getNamedPort()
                            .equals(other.getNamedPort());
                    break;
                case 0:
                default:
            }
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {

            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + PROTOCOL_FIELD_NUMBER;
            hash = (53 * hash) + protocol_;
            hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
            hash = (53 * hash) + getAddress().hashCode();
            hash = (37 * hash) + RESOLVER_NAME_FIELD_NUMBER;
            hash = (53 * hash) + getResolverName().hashCode();
            hash = (37 * hash) + IPV4_COMPAT_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                    getIpv4Compat());
            switch (portSpecifierCase_) {
                case 3:
                    hash = (37 * hash) + PORT_VALUE_FIELD_NUMBER;
                    hash = (53 * hash) + getPortValue();
                    break;
                case 4:
                    hash = (37 * hash) + NAMED_PORT_FIELD_NUMBER;
                    hash = (53 * hash) + getNamedPort().hashCode();
                    break;
                case 0:
                default:
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static AddressOuterClass.SocketAddress parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static AddressOuterClass.SocketAddress parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static AddressOuterClass.SocketAddress parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static AddressOuterClass.SocketAddress parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static AddressOuterClass.SocketAddress parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static AddressOuterClass.SocketAddress parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static AddressOuterClass.SocketAddress parseFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static AddressOuterClass.SocketAddress parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static AddressOuterClass.SocketAddress parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static AddressOuterClass.SocketAddress parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static AddressOuterClass.SocketAddress parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static AddressOuterClass.SocketAddress parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {

            return newBuilder();
        }

        public static Builder newBuilder() {

            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(AddressOuterClass.SocketAddress prototype) {

            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {

            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code envoy.api.v2.core.SocketAddress}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:envoy.api.v2.core.SocketAddress)
                AddressOuterClass.SocketAddressOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return AddressOuterClass.internal_static_envoy_api_v2_core_SocketAddress_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return AddressOuterClass.internal_static_envoy_api_v2_core_SocketAddress_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                AddressOuterClass.SocketAddress.class, AddressOuterClass.SocketAddress.Builder.class);
            }

            // Construct using envoy.api.v2.core.AddressOuterClass.SocketAddress.newBuilder()
            private Builder() {

                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {

                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @java.lang.Override
            public Builder clear() {

                super.clear();
                protocol_ = 0;

                address_ = "";

                resolverName_ = "";

                ipv4Compat_ = false;

                portSpecifierCase_ = 0;
                portSpecifier_ = null;
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {

                return AddressOuterClass.internal_static_envoy_api_v2_core_SocketAddress_descriptor;
            }

            @java.lang.Override
            public AddressOuterClass.SocketAddress getDefaultInstanceForType() {

                return AddressOuterClass.SocketAddress.getDefaultInstance();
            }

            @java.lang.Override
            public AddressOuterClass.SocketAddress build() {

                AddressOuterClass.SocketAddress result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public AddressOuterClass.SocketAddress buildPartial() {

                AddressOuterClass.SocketAddress result = new AddressOuterClass.SocketAddress(this);
                result.protocol_ = protocol_;
                result.address_ = address_;
                if (portSpecifierCase_ == 3) {
                    result.portSpecifier_ = portSpecifier_;
                }
                if (portSpecifierCase_ == 4) {
                    result.portSpecifier_ = portSpecifier_;
                }
                result.resolverName_ = resolverName_;
                result.ipv4Compat_ = ipv4Compat_;
                result.portSpecifierCase_ = portSpecifierCase_;
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {

                return (Builder) super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {

                return (Builder) super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                return (Builder) super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {

                return (Builder) super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {

                if (other instanceof AddressOuterClass.SocketAddress) {
                    return mergeFrom((AddressOuterClass.SocketAddress) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(AddressOuterClass.SocketAddress other) {

                if (other == AddressOuterClass.SocketAddress.getDefaultInstance()) return this;
                if (other.protocol_ != 0) {
                    setProtocolValue(other.getProtocolValue());
                }
                if (!other.getAddress().isEmpty()) {
                    address_ = other.address_;
                    onChanged();
                }
                if (!other.getResolverName().isEmpty()) {
                    resolverName_ = other.resolverName_;
                    onChanged();
                }
                if (other.getIpv4Compat() != false) {
                    setIpv4Compat(other.getIpv4Compat());
                }
                switch (other.getPortSpecifierCase()) {
                    case PORT_VALUE: {
                        setPortValue(other.getPortValue());
                        break;
                    }
                    case NAMED_PORT: {
                        portSpecifierCase_ = 4;
                        portSpecifier_ = other.portSpecifier_;
                        onChanged();
                        break;
                    }
                    case PORTSPECIFIER_NOT_SET: {
                        break;
                    }
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {

                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                AddressOuterClass.SocketAddress parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (AddressOuterClass.SocketAddress) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int portSpecifierCase_ = 0;
            private java.lang.Object portSpecifier_;

            public PortSpecifierCase
            getPortSpecifierCase() {

                return PortSpecifierCase.forNumber(
                        portSpecifierCase_);
            }

            public Builder clearPortSpecifier() {

                portSpecifierCase_ = 0;
                portSpecifier_ = null;
                onChanged();
                return this;
            }

            private int protocol_ = 0;

            /**
             * <code>.envoy.api.v2.core.SocketAddress.Protocol protocol = 1 [(.validate.rules) = { ... }</code>
             */
            public int getProtocolValue() {

                return protocol_;
            }

            /**
             * <code>.envoy.api.v2.core.SocketAddress.Protocol protocol = 1 [(.validate.rules) = { ... }</code>
             */
            public Builder setProtocolValue(int value) {

                protocol_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>.envoy.api.v2.core.SocketAddress.Protocol protocol = 1 [(.validate.rules) = { ... }</code>
             */
            public AddressOuterClass.SocketAddress.Protocol getProtocol() {

                @SuppressWarnings("deprecation")
                AddressOuterClass.SocketAddress.Protocol result = AddressOuterClass.SocketAddress.Protocol.valueOf(protocol_);
                return result == null ? AddressOuterClass.SocketAddress.Protocol.UNRECOGNIZED : result;
            }

            /**
             * <code>.envoy.api.v2.core.SocketAddress.Protocol protocol = 1 [(.validate.rules) = { ... }</code>
             */
            public Builder setProtocol(AddressOuterClass.SocketAddress.Protocol value) {

                if (value == null) {
                    throw new NullPointerException();
                }

                protocol_ = value.getNumber();
                onChanged();
                return this;
            }

            /**
             * <code>.envoy.api.v2.core.SocketAddress.Protocol protocol = 1 [(.validate.rules) = { ... }</code>
             */
            public Builder clearProtocol() {

                protocol_ = 0;
                onChanged();
                return this;
            }

            private java.lang.Object address_ = "";

            /**
             * <pre>
             * The address for this socket. :ref:`Listeners &lt;config_listeners&gt;` will bind
             * to the address. An empty address is not allowed. Specify ``0.0.0.0`` or ``::``
             * to bind to any address. [#comment:TODO(zuercher) reinstate when implemented:
             * It is possible to distinguish a Listener address via the prefix/suffix matching
             * in :ref:`FilterChainMatch &lt;envoy_api_msg_listener.FilterChainMatch&gt;`.] When used
             * within an upstream :ref:`BindConfig &lt;envoy_api_msg_core.BindConfig&gt;`, the address
             * controls the source address of outbound connections. For :ref:`clusters
             * &lt;envoy_api_msg_Cluster&gt;`, the cluster type determines whether the
             * address must be an IP (*STATIC* or *EDS* clusters) or a hostname resolved by DNS
             * (*STRICT_DNS* or *LOGICAL_DNS* clusters). Address resolution can be customized
             * via :ref:`resolver_name &lt;envoy_api_field_core.SocketAddress.resolver_name&gt;`.
             * </pre>
             *
             * <code>string address = 2 [(.validate.rules) = { ... }</code>
             */
            public java.lang.String getAddress() {

                java.lang.Object ref = address_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    address_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * The address for this socket. :ref:`Listeners &lt;config_listeners&gt;` will bind
             * to the address. An empty address is not allowed. Specify ``0.0.0.0`` or ``::``
             * to bind to any address. [#comment:TODO(zuercher) reinstate when implemented:
             * It is possible to distinguish a Listener address via the prefix/suffix matching
             * in :ref:`FilterChainMatch &lt;envoy_api_msg_listener.FilterChainMatch&gt;`.] When used
             * within an upstream :ref:`BindConfig &lt;envoy_api_msg_core.BindConfig&gt;`, the address
             * controls the source address of outbound connections. For :ref:`clusters
             * &lt;envoy_api_msg_Cluster&gt;`, the cluster type determines whether the
             * address must be an IP (*STATIC* or *EDS* clusters) or a hostname resolved by DNS
             * (*STRICT_DNS* or *LOGICAL_DNS* clusters). Address resolution can be customized
             * via :ref:`resolver_name &lt;envoy_api_field_core.SocketAddress.resolver_name&gt;`.
             * </pre>
             *
             * <code>string address = 2 [(.validate.rules) = { ... }</code>
             */
            public com.google.protobuf.ByteString
            getAddressBytes() {

                java.lang.Object ref = address_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    address_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * The address for this socket. :ref:`Listeners &lt;config_listeners&gt;` will bind
             * to the address. An empty address is not allowed. Specify ``0.0.0.0`` or ``::``
             * to bind to any address. [#comment:TODO(zuercher) reinstate when implemented:
             * It is possible to distinguish a Listener address via the prefix/suffix matching
             * in :ref:`FilterChainMatch &lt;envoy_api_msg_listener.FilterChainMatch&gt;`.] When used
             * within an upstream :ref:`BindConfig &lt;envoy_api_msg_core.BindConfig&gt;`, the address
             * controls the source address of outbound connections. For :ref:`clusters
             * &lt;envoy_api_msg_Cluster&gt;`, the cluster type determines whether the
             * address must be an IP (*STATIC* or *EDS* clusters) or a hostname resolved by DNS
             * (*STRICT_DNS* or *LOGICAL_DNS* clusters). Address resolution can be customized
             * via :ref:`resolver_name &lt;envoy_api_field_core.SocketAddress.resolver_name&gt;`.
             * </pre>
             *
             * <code>string address = 2 [(.validate.rules) = { ... }</code>
             */
            public Builder setAddress(
                    java.lang.String value) {

                if (value == null) {
                    throw new NullPointerException();
                }

                address_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The address for this socket. :ref:`Listeners &lt;config_listeners&gt;` will bind
             * to the address. An empty address is not allowed. Specify ``0.0.0.0`` or ``::``
             * to bind to any address. [#comment:TODO(zuercher) reinstate when implemented:
             * It is possible to distinguish a Listener address via the prefix/suffix matching
             * in :ref:`FilterChainMatch &lt;envoy_api_msg_listener.FilterChainMatch&gt;`.] When used
             * within an upstream :ref:`BindConfig &lt;envoy_api_msg_core.BindConfig&gt;`, the address
             * controls the source address of outbound connections. For :ref:`clusters
             * &lt;envoy_api_msg_Cluster&gt;`, the cluster type determines whether the
             * address must be an IP (*STATIC* or *EDS* clusters) or a hostname resolved by DNS
             * (*STRICT_DNS* or *LOGICAL_DNS* clusters). Address resolution can be customized
             * via :ref:`resolver_name &lt;envoy_api_field_core.SocketAddress.resolver_name&gt;`.
             * </pre>
             *
             * <code>string address = 2 [(.validate.rules) = { ... }</code>
             */
            public Builder clearAddress() {

                address_ = getDefaultInstance().getAddress();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The address for this socket. :ref:`Listeners &lt;config_listeners&gt;` will bind
             * to the address. An empty address is not allowed. Specify ``0.0.0.0`` or ``::``
             * to bind to any address. [#comment:TODO(zuercher) reinstate when implemented:
             * It is possible to distinguish a Listener address via the prefix/suffix matching
             * in :ref:`FilterChainMatch &lt;envoy_api_msg_listener.FilterChainMatch&gt;`.] When used
             * within an upstream :ref:`BindConfig &lt;envoy_api_msg_core.BindConfig&gt;`, the address
             * controls the source address of outbound connections. For :ref:`clusters
             * &lt;envoy_api_msg_Cluster&gt;`, the cluster type determines whether the
             * address must be an IP (*STATIC* or *EDS* clusters) or a hostname resolved by DNS
             * (*STRICT_DNS* or *LOGICAL_DNS* clusters). Address resolution can be customized
             * via :ref:`resolver_name &lt;envoy_api_field_core.SocketAddress.resolver_name&gt;`.
             * </pre>
             *
             * <code>string address = 2 [(.validate.rules) = { ... }</code>
             */
            public Builder setAddressBytes(
                    com.google.protobuf.ByteString value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                address_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>uint32 port_value = 3 [(.validate.rules) = { ... }</code>
             */
            public int getPortValue() {

                if (portSpecifierCase_ == 3) {
                    return (java.lang.Integer) portSpecifier_;
                }
                return 0;
            }

            /**
             * <code>uint32 port_value = 3 [(.validate.rules) = { ... }</code>
             */
            public Builder setPortValue(int value) {

                portSpecifierCase_ = 3;
                portSpecifier_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>uint32 port_value = 3 [(.validate.rules) = { ... }</code>
             */
            public Builder clearPortValue() {

                if (portSpecifierCase_ == 3) {
                    portSpecifierCase_ = 0;
                    portSpecifier_ = null;
                    onChanged();
                }
                return this;
            }

            /**
             * <pre>
             * This is only valid if :ref:`resolver_name
             * &lt;envoy_api_field_core.SocketAddress.resolver_name&gt;` is specified below and the
             * named resolver is capable of named port resolution.
             * </pre>
             *
             * <code>string named_port = 4;</code>
             */
            public java.lang.String getNamedPort() {

                java.lang.Object ref = "";
                if (portSpecifierCase_ == 4) {
                    ref = portSpecifier_;
                }
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (portSpecifierCase_ == 4) {
                        portSpecifier_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * This is only valid if :ref:`resolver_name
             * &lt;envoy_api_field_core.SocketAddress.resolver_name&gt;` is specified below and the
             * named resolver is capable of named port resolution.
             * </pre>
             *
             * <code>string named_port = 4;</code>
             */
            public com.google.protobuf.ByteString
            getNamedPortBytes() {

                java.lang.Object ref = "";
                if (portSpecifierCase_ == 4) {
                    ref = portSpecifier_;
                }
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    if (portSpecifierCase_ == 4) {
                        portSpecifier_ = b;
                    }
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * This is only valid if :ref:`resolver_name
             * &lt;envoy_api_field_core.SocketAddress.resolver_name&gt;` is specified below and the
             * named resolver is capable of named port resolution.
             * </pre>
             *
             * <code>string named_port = 4;</code>
             */
            public Builder setNamedPort(
                    java.lang.String value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                portSpecifierCase_ = 4;
                portSpecifier_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * This is only valid if :ref:`resolver_name
             * &lt;envoy_api_field_core.SocketAddress.resolver_name&gt;` is specified below and the
             * named resolver is capable of named port resolution.
             * </pre>
             *
             * <code>string named_port = 4;</code>
             */
            public Builder clearNamedPort() {

                if (portSpecifierCase_ == 4) {
                    portSpecifierCase_ = 0;
                    portSpecifier_ = null;
                    onChanged();
                }
                return this;
            }

            /**
             * <pre>
             * This is only valid if :ref:`resolver_name
             * &lt;envoy_api_field_core.SocketAddress.resolver_name&gt;` is specified below and the
             * named resolver is capable of named port resolution.
             * </pre>
             *
             * <code>string named_port = 4;</code>
             */
            public Builder setNamedPortBytes(
                    com.google.protobuf.ByteString value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);
                portSpecifierCase_ = 4;
                portSpecifier_ = value;
                onChanged();
                return this;
            }

            private java.lang.Object resolverName_ = "";

            /**
             * <pre>
             * The name of the resolver. This must have been registered with Envoy. If this is
             * empty, a context dependent default applies. If address is a hostname this
             * should be set for resolution other than DNS. If the address is a concrete
             * IP address, no resolution will occur.
             * </pre>
             *
             * <code>string resolver_name = 5;</code>
             */
            public java.lang.String getResolverName() {

                java.lang.Object ref = resolverName_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    resolverName_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * The name of the resolver. This must have been registered with Envoy. If this is
             * empty, a context dependent default applies. If address is a hostname this
             * should be set for resolution other than DNS. If the address is a concrete
             * IP address, no resolution will occur.
             * </pre>
             *
             * <code>string resolver_name = 5;</code>
             */
            public com.google.protobuf.ByteString
            getResolverNameBytes() {

                java.lang.Object ref = resolverName_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    resolverName_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * The name of the resolver. This must have been registered with Envoy. If this is
             * empty, a context dependent default applies. If address is a hostname this
             * should be set for resolution other than DNS. If the address is a concrete
             * IP address, no resolution will occur.
             * </pre>
             *
             * <code>string resolver_name = 5;</code>
             */
            public Builder setResolverName(
                    java.lang.String value) {

                if (value == null) {
                    throw new NullPointerException();
                }

                resolverName_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The name of the resolver. This must have been registered with Envoy. If this is
             * empty, a context dependent default applies. If address is a hostname this
             * should be set for resolution other than DNS. If the address is a concrete
             * IP address, no resolution will occur.
             * </pre>
             *
             * <code>string resolver_name = 5;</code>
             */
            public Builder clearResolverName() {

                resolverName_ = getDefaultInstance().getResolverName();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The name of the resolver. This must have been registered with Envoy. If this is
             * empty, a context dependent default applies. If address is a hostname this
             * should be set for resolution other than DNS. If the address is a concrete
             * IP address, no resolution will occur.
             * </pre>
             *
             * <code>string resolver_name = 5;</code>
             */
            public Builder setResolverNameBytes(
                    com.google.protobuf.ByteString value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                resolverName_ = value;
                onChanged();
                return this;
            }

            private boolean ipv4Compat_;

            /**
             * <pre>
             * When binding to an IPv6 address above, this enables `IPv4 compatibity
             * &lt;https://tools.ietf.org/html/rfc3493#page-11&gt;`_. Binding to ``::`` will
             * allow both IPv4 and IPv6 connections, with peer IPv4 addresses mapped into
             * IPv6 space as ``::FFFF:&lt;IPv4-address&gt;``.
             * </pre>
             *
             * <code>bool ipv4_compat = 6;</code>
             */
            public boolean getIpv4Compat() {

                return ipv4Compat_;
            }

            /**
             * <pre>
             * When binding to an IPv6 address above, this enables `IPv4 compatibity
             * &lt;https://tools.ietf.org/html/rfc3493#page-11&gt;`_. Binding to ``::`` will
             * allow both IPv4 and IPv6 connections, with peer IPv4 addresses mapped into
             * IPv6 space as ``::FFFF:&lt;IPv4-address&gt;``.
             * </pre>
             *
             * <code>bool ipv4_compat = 6;</code>
             */
            public Builder setIpv4Compat(boolean value) {

                ipv4Compat_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * When binding to an IPv6 address above, this enables `IPv4 compatibity
             * &lt;https://tools.ietf.org/html/rfc3493#page-11&gt;`_. Binding to ``::`` will
             * allow both IPv4 and IPv6 connections, with peer IPv4 addresses mapped into
             * IPv6 space as ``::FFFF:&lt;IPv4-address&gt;``.
             * </pre>
             *
             * <code>bool ipv4_compat = 6;</code>
             */
            public Builder clearIpv4Compat() {

                ipv4Compat_ = false;
                onChanged();
                return this;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.setUnknownFieldsProto3(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:envoy.api.v2.core.SocketAddress)
        }

        // @@protoc_insertion_point(class_scope:envoy.api.v2.core.SocketAddress)
        private static final AddressOuterClass.SocketAddress DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new AddressOuterClass.SocketAddress();
        }

        public static AddressOuterClass.SocketAddress getDefaultInstance() {

            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<SocketAddress>
                PARSER = new com.google.protobuf.AbstractParser<SocketAddress>() {
            @java.lang.Override
            public SocketAddress parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return new SocketAddress(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<SocketAddress> parser() {

            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<SocketAddress> getParserForType() {

            return PARSER;
        }

        @java.lang.Override
        public AddressOuterClass.SocketAddress getDefaultInstanceForType() {

            return DEFAULT_INSTANCE;
        }

    }

    public interface TcpKeepaliveOrBuilder extends
            // @@protoc_insertion_point(interface_extends:envoy.api.v2.core.TcpKeepalive)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Maximum number of keepalive probes to send without response before deciding
         * the connection is dead. Default is to use the OS level configuration (unless
         * overridden, Linux defaults to 9.)
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value keepalive_probes = 1;</code>
         */
        boolean hasKeepaliveProbes();

        /**
         * <pre>
         * Maximum number of keepalive probes to send without response before deciding
         * the connection is dead. Default is to use the OS level configuration (unless
         * overridden, Linux defaults to 9.)
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value keepalive_probes = 1;</code>
         */
        com.google.protobuf.UInt32Value getKeepaliveProbes();

        /**
         * <pre>
         * Maximum number of keepalive probes to send without response before deciding
         * the connection is dead. Default is to use the OS level configuration (unless
         * overridden, Linux defaults to 9.)
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value keepalive_probes = 1;</code>
         */
        com.google.protobuf.UInt32ValueOrBuilder getKeepaliveProbesOrBuilder();

        /**
         * <pre>
         * The number of seconds a connection needs to be idle before keep-alive probes
         * start being sent. Default is to use the OS level configuration (unless
         * overridden, Linux defaults to 7200s (ie 2 hours.)
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value keepalive_time = 2;</code>
         */
        boolean hasKeepaliveTime();

        /**
         * <pre>
         * The number of seconds a connection needs to be idle before keep-alive probes
         * start being sent. Default is to use the OS level configuration (unless
         * overridden, Linux defaults to 7200s (ie 2 hours.)
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value keepalive_time = 2;</code>
         */
        com.google.protobuf.UInt32Value getKeepaliveTime();

        /**
         * <pre>
         * The number of seconds a connection needs to be idle before keep-alive probes
         * start being sent. Default is to use the OS level configuration (unless
         * overridden, Linux defaults to 7200s (ie 2 hours.)
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value keepalive_time = 2;</code>
         */
        com.google.protobuf.UInt32ValueOrBuilder getKeepaliveTimeOrBuilder();

        /**
         * <pre>
         * The number of seconds between keep-alive probes. Default is to use the OS
         * level configuration (unless overridden, Linux defaults to 75s.)
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value keepalive_interval = 3;</code>
         */
        boolean hasKeepaliveInterval();

        /**
         * <pre>
         * The number of seconds between keep-alive probes. Default is to use the OS
         * level configuration (unless overridden, Linux defaults to 75s.)
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value keepalive_interval = 3;</code>
         */
        com.google.protobuf.UInt32Value getKeepaliveInterval();

        /**
         * <pre>
         * The number of seconds between keep-alive probes. Default is to use the OS
         * level configuration (unless overridden, Linux defaults to 75s.)
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value keepalive_interval = 3;</code>
         */
        com.google.protobuf.UInt32ValueOrBuilder getKeepaliveIntervalOrBuilder();
    }

    /**
     * Protobuf type {@code envoy.api.v2.core.TcpKeepalive}
     */
    public static final class TcpKeepalive extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:envoy.api.v2.core.TcpKeepalive)
            TcpKeepaliveOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use TcpKeepalive.newBuilder() to construct.
        private TcpKeepalive(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

            super(builder);
        }

        private TcpKeepalive() {

        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {

            return this.unknownFields;
        }

        private TcpKeepalive(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10: {
                            com.google.protobuf.UInt32Value.Builder subBuilder = null;
                            if (keepaliveProbes_ != null) {
                                subBuilder = keepaliveProbes_.toBuilder();
                            }
                            keepaliveProbes_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(keepaliveProbes_);
                                keepaliveProbes_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 18: {
                            com.google.protobuf.UInt32Value.Builder subBuilder = null;
                            if (keepaliveTime_ != null) {
                                subBuilder = keepaliveTime_.toBuilder();
                            }
                            keepaliveTime_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(keepaliveTime_);
                                keepaliveTime_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 26: {
                            com.google.protobuf.UInt32Value.Builder subBuilder = null;
                            if (keepaliveInterval_ != null) {
                                subBuilder = keepaliveInterval_.toBuilder();
                            }
                            keepaliveInterval_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(keepaliveInterval_);
                                keepaliveInterval_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {

            return AddressOuterClass.internal_static_envoy_api_v2_core_TcpKeepalive_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {

            return AddressOuterClass.internal_static_envoy_api_v2_core_TcpKeepalive_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            AddressOuterClass.TcpKeepalive.class, AddressOuterClass.TcpKeepalive.Builder.class);
        }

        public static final int KEEPALIVE_PROBES_FIELD_NUMBER = 1;
        private com.google.protobuf.UInt32Value keepaliveProbes_;

        /**
         * <pre>
         * Maximum number of keepalive probes to send without response before deciding
         * the connection is dead. Default is to use the OS level configuration (unless
         * overridden, Linux defaults to 9.)
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value keepalive_probes = 1;</code>
         */
        public boolean hasKeepaliveProbes() {

            return keepaliveProbes_ != null;
        }

        /**
         * <pre>
         * Maximum number of keepalive probes to send without response before deciding
         * the connection is dead. Default is to use the OS level configuration (unless
         * overridden, Linux defaults to 9.)
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value keepalive_probes = 1;</code>
         */
        public com.google.protobuf.UInt32Value getKeepaliveProbes() {

            return keepaliveProbes_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : keepaliveProbes_;
        }

        /**
         * <pre>
         * Maximum number of keepalive probes to send without response before deciding
         * the connection is dead. Default is to use the OS level configuration (unless
         * overridden, Linux defaults to 9.)
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value keepalive_probes = 1;</code>
         */
        public com.google.protobuf.UInt32ValueOrBuilder getKeepaliveProbesOrBuilder() {

            return getKeepaliveProbes();
        }

        public static final int KEEPALIVE_TIME_FIELD_NUMBER = 2;
        private com.google.protobuf.UInt32Value keepaliveTime_;

        /**
         * <pre>
         * The number of seconds a connection needs to be idle before keep-alive probes
         * start being sent. Default is to use the OS level configuration (unless
         * overridden, Linux defaults to 7200s (ie 2 hours.)
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value keepalive_time = 2;</code>
         */
        public boolean hasKeepaliveTime() {

            return keepaliveTime_ != null;
        }

        /**
         * <pre>
         * The number of seconds a connection needs to be idle before keep-alive probes
         * start being sent. Default is to use the OS level configuration (unless
         * overridden, Linux defaults to 7200s (ie 2 hours.)
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value keepalive_time = 2;</code>
         */
        public com.google.protobuf.UInt32Value getKeepaliveTime() {

            return keepaliveTime_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : keepaliveTime_;
        }

        /**
         * <pre>
         * The number of seconds a connection needs to be idle before keep-alive probes
         * start being sent. Default is to use the OS level configuration (unless
         * overridden, Linux defaults to 7200s (ie 2 hours.)
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value keepalive_time = 2;</code>
         */
        public com.google.protobuf.UInt32ValueOrBuilder getKeepaliveTimeOrBuilder() {

            return getKeepaliveTime();
        }

        public static final int KEEPALIVE_INTERVAL_FIELD_NUMBER = 3;
        private com.google.protobuf.UInt32Value keepaliveInterval_;

        /**
         * <pre>
         * The number of seconds between keep-alive probes. Default is to use the OS
         * level configuration (unless overridden, Linux defaults to 75s.)
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value keepalive_interval = 3;</code>
         */
        public boolean hasKeepaliveInterval() {

            return keepaliveInterval_ != null;
        }

        /**
         * <pre>
         * The number of seconds between keep-alive probes. Default is to use the OS
         * level configuration (unless overridden, Linux defaults to 75s.)
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value keepalive_interval = 3;</code>
         */
        public com.google.protobuf.UInt32Value getKeepaliveInterval() {

            return keepaliveInterval_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : keepaliveInterval_;
        }

        /**
         * <pre>
         * The number of seconds between keep-alive probes. Default is to use the OS
         * level configuration (unless overridden, Linux defaults to 75s.)
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value keepalive_interval = 3;</code>
         */
        public com.google.protobuf.UInt32ValueOrBuilder getKeepaliveIntervalOrBuilder() {

            return getKeepaliveInterval();
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {

            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {

            if (keepaliveProbes_ != null) {
                output.writeMessage(1, getKeepaliveProbes());
            }
            if (keepaliveTime_ != null) {
                output.writeMessage(2, getKeepaliveTime());
            }
            if (keepaliveInterval_ != null) {
                output.writeMessage(3, getKeepaliveInterval());
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {

            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (keepaliveProbes_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getKeepaliveProbes());
            }
            if (keepaliveTime_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, getKeepaliveTime());
            }
            if (keepaliveInterval_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(3, getKeepaliveInterval());
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {

            if (obj == this) {
                return true;
            }
            if (!(obj instanceof AddressOuterClass.TcpKeepalive)) {
                return super.equals(obj);
            }
            AddressOuterClass.TcpKeepalive other = (AddressOuterClass.TcpKeepalive) obj;

            boolean result = true;
            result = result && (hasKeepaliveProbes() == other.hasKeepaliveProbes());
            if (hasKeepaliveProbes()) {
                result = result && getKeepaliveProbes()
                        .equals(other.getKeepaliveProbes());
            }
            result = result && (hasKeepaliveTime() == other.hasKeepaliveTime());
            if (hasKeepaliveTime()) {
                result = result && getKeepaliveTime()
                        .equals(other.getKeepaliveTime());
            }
            result = result && (hasKeepaliveInterval() == other.hasKeepaliveInterval());
            if (hasKeepaliveInterval()) {
                result = result && getKeepaliveInterval()
                        .equals(other.getKeepaliveInterval());
            }
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {

            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasKeepaliveProbes()) {
                hash = (37 * hash) + KEEPALIVE_PROBES_FIELD_NUMBER;
                hash = (53 * hash) + getKeepaliveProbes().hashCode();
            }
            if (hasKeepaliveTime()) {
                hash = (37 * hash) + KEEPALIVE_TIME_FIELD_NUMBER;
                hash = (53 * hash) + getKeepaliveTime().hashCode();
            }
            if (hasKeepaliveInterval()) {
                hash = (37 * hash) + KEEPALIVE_INTERVAL_FIELD_NUMBER;
                hash = (53 * hash) + getKeepaliveInterval().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static AddressOuterClass.TcpKeepalive parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static AddressOuterClass.TcpKeepalive parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static AddressOuterClass.TcpKeepalive parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static AddressOuterClass.TcpKeepalive parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static AddressOuterClass.TcpKeepalive parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static AddressOuterClass.TcpKeepalive parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static AddressOuterClass.TcpKeepalive parseFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static AddressOuterClass.TcpKeepalive parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static AddressOuterClass.TcpKeepalive parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static AddressOuterClass.TcpKeepalive parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static AddressOuterClass.TcpKeepalive parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static AddressOuterClass.TcpKeepalive parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {

            return newBuilder();
        }

        public static Builder newBuilder() {

            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(AddressOuterClass.TcpKeepalive prototype) {

            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {

            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code envoy.api.v2.core.TcpKeepalive}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:envoy.api.v2.core.TcpKeepalive)
                AddressOuterClass.TcpKeepaliveOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return AddressOuterClass.internal_static_envoy_api_v2_core_TcpKeepalive_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return AddressOuterClass.internal_static_envoy_api_v2_core_TcpKeepalive_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                AddressOuterClass.TcpKeepalive.class, AddressOuterClass.TcpKeepalive.Builder.class);
            }

            // Construct using envoy.api.v2.core.AddressOuterClass.TcpKeepalive.newBuilder()
            private Builder() {

                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {

                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @java.lang.Override
            public Builder clear() {

                super.clear();
                if (keepaliveProbesBuilder_ == null) {
                    keepaliveProbes_ = null;
                } else {
                    keepaliveProbes_ = null;
                    keepaliveProbesBuilder_ = null;
                }
                if (keepaliveTimeBuilder_ == null) {
                    keepaliveTime_ = null;
                } else {
                    keepaliveTime_ = null;
                    keepaliveTimeBuilder_ = null;
                }
                if (keepaliveIntervalBuilder_ == null) {
                    keepaliveInterval_ = null;
                } else {
                    keepaliveInterval_ = null;
                    keepaliveIntervalBuilder_ = null;
                }
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {

                return AddressOuterClass.internal_static_envoy_api_v2_core_TcpKeepalive_descriptor;
            }

            @java.lang.Override
            public AddressOuterClass.TcpKeepalive getDefaultInstanceForType() {

                return AddressOuterClass.TcpKeepalive.getDefaultInstance();
            }

            @java.lang.Override
            public AddressOuterClass.TcpKeepalive build() {

                AddressOuterClass.TcpKeepalive result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public AddressOuterClass.TcpKeepalive buildPartial() {

                AddressOuterClass.TcpKeepalive result = new AddressOuterClass.TcpKeepalive(this);
                if (keepaliveProbesBuilder_ == null) {
                    result.keepaliveProbes_ = keepaliveProbes_;
                } else {
                    result.keepaliveProbes_ = keepaliveProbesBuilder_.build();
                }
                if (keepaliveTimeBuilder_ == null) {
                    result.keepaliveTime_ = keepaliveTime_;
                } else {
                    result.keepaliveTime_ = keepaliveTimeBuilder_.build();
                }
                if (keepaliveIntervalBuilder_ == null) {
                    result.keepaliveInterval_ = keepaliveInterval_;
                } else {
                    result.keepaliveInterval_ = keepaliveIntervalBuilder_.build();
                }
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {

                return (Builder) super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {

                return (Builder) super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                return (Builder) super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {

                return (Builder) super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {

                if (other instanceof AddressOuterClass.TcpKeepalive) {
                    return mergeFrom((AddressOuterClass.TcpKeepalive) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(AddressOuterClass.TcpKeepalive other) {

                if (other == AddressOuterClass.TcpKeepalive.getDefaultInstance()) return this;
                if (other.hasKeepaliveProbes()) {
                    mergeKeepaliveProbes(other.getKeepaliveProbes());
                }
                if (other.hasKeepaliveTime()) {
                    mergeKeepaliveTime(other.getKeepaliveTime());
                }
                if (other.hasKeepaliveInterval()) {
                    mergeKeepaliveInterval(other.getKeepaliveInterval());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {

                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                AddressOuterClass.TcpKeepalive parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (AddressOuterClass.TcpKeepalive) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private com.google.protobuf.UInt32Value keepaliveProbes_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> keepaliveProbesBuilder_;

            /**
             * <pre>
             * Maximum number of keepalive probes to send without response before deciding
             * the connection is dead. Default is to use the OS level configuration (unless
             * overridden, Linux defaults to 9.)
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value keepalive_probes = 1;</code>
             */
            public boolean hasKeepaliveProbes() {

                return keepaliveProbesBuilder_ != null || keepaliveProbes_ != null;
            }

            /**
             * <pre>
             * Maximum number of keepalive probes to send without response before deciding
             * the connection is dead. Default is to use the OS level configuration (unless
             * overridden, Linux defaults to 9.)
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value keepalive_probes = 1;</code>
             */
            public com.google.protobuf.UInt32Value getKeepaliveProbes() {

                if (keepaliveProbesBuilder_ == null) {
                    return keepaliveProbes_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : keepaliveProbes_;
                } else {
                    return keepaliveProbesBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Maximum number of keepalive probes to send without response before deciding
             * the connection is dead. Default is to use the OS level configuration (unless
             * overridden, Linux defaults to 9.)
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value keepalive_probes = 1;</code>
             */
            public Builder setKeepaliveProbes(com.google.protobuf.UInt32Value value) {

                if (keepaliveProbesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    keepaliveProbes_ = value;
                    onChanged();
                } else {
                    keepaliveProbesBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * Maximum number of keepalive probes to send without response before deciding
             * the connection is dead. Default is to use the OS level configuration (unless
             * overridden, Linux defaults to 9.)
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value keepalive_probes = 1;</code>
             */
            public Builder setKeepaliveProbes(
                    com.google.protobuf.UInt32Value.Builder builderForValue) {

                if (keepaliveProbesBuilder_ == null) {
                    keepaliveProbes_ = builderForValue.build();
                    onChanged();
                } else {
                    keepaliveProbesBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * Maximum number of keepalive probes to send without response before deciding
             * the connection is dead. Default is to use the OS level configuration (unless
             * overridden, Linux defaults to 9.)
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value keepalive_probes = 1;</code>
             */
            public Builder mergeKeepaliveProbes(com.google.protobuf.UInt32Value value) {

                if (keepaliveProbesBuilder_ == null) {
                    if (keepaliveProbes_ != null) {
                        keepaliveProbes_ =
                                com.google.protobuf.UInt32Value.newBuilder(keepaliveProbes_).mergeFrom(value).buildPartial();
                    } else {
                        keepaliveProbes_ = value;
                    }
                    onChanged();
                } else {
                    keepaliveProbesBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * Maximum number of keepalive probes to send without response before deciding
             * the connection is dead. Default is to use the OS level configuration (unless
             * overridden, Linux defaults to 9.)
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value keepalive_probes = 1;</code>
             */
            public Builder clearKeepaliveProbes() {

                if (keepaliveProbesBuilder_ == null) {
                    keepaliveProbes_ = null;
                    onChanged();
                } else {
                    keepaliveProbes_ = null;
                    keepaliveProbesBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * Maximum number of keepalive probes to send without response before deciding
             * the connection is dead. Default is to use the OS level configuration (unless
             * overridden, Linux defaults to 9.)
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value keepalive_probes = 1;</code>
             */
            public com.google.protobuf.UInt32Value.Builder getKeepaliveProbesBuilder() {

                onChanged();
                return getKeepaliveProbesFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Maximum number of keepalive probes to send without response before deciding
             * the connection is dead. Default is to use the OS level configuration (unless
             * overridden, Linux defaults to 9.)
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value keepalive_probes = 1;</code>
             */
            public com.google.protobuf.UInt32ValueOrBuilder getKeepaliveProbesOrBuilder() {

                if (keepaliveProbesBuilder_ != null) {
                    return keepaliveProbesBuilder_.getMessageOrBuilder();
                } else {
                    return keepaliveProbes_ == null ?
                            com.google.protobuf.UInt32Value.getDefaultInstance() : keepaliveProbes_;
                }
            }

            /**
             * <pre>
             * Maximum number of keepalive probes to send without response before deciding
             * the connection is dead. Default is to use the OS level configuration (unless
             * overridden, Linux defaults to 9.)
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value keepalive_probes = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>
            getKeepaliveProbesFieldBuilder() {

                if (keepaliveProbesBuilder_ == null) {
                    keepaliveProbesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                            getKeepaliveProbes(),
                            getParentForChildren(),
                            isClean());
                    keepaliveProbes_ = null;
                }
                return keepaliveProbesBuilder_;
            }

            private com.google.protobuf.UInt32Value keepaliveTime_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> keepaliveTimeBuilder_;

            /**
             * <pre>
             * The number of seconds a connection needs to be idle before keep-alive probes
             * start being sent. Default is to use the OS level configuration (unless
             * overridden, Linux defaults to 7200s (ie 2 hours.)
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value keepalive_time = 2;</code>
             */
            public boolean hasKeepaliveTime() {

                return keepaliveTimeBuilder_ != null || keepaliveTime_ != null;
            }

            /**
             * <pre>
             * The number of seconds a connection needs to be idle before keep-alive probes
             * start being sent. Default is to use the OS level configuration (unless
             * overridden, Linux defaults to 7200s (ie 2 hours.)
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value keepalive_time = 2;</code>
             */
            public com.google.protobuf.UInt32Value getKeepaliveTime() {

                if (keepaliveTimeBuilder_ == null) {
                    return keepaliveTime_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : keepaliveTime_;
                } else {
                    return keepaliveTimeBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * The number of seconds a connection needs to be idle before keep-alive probes
             * start being sent. Default is to use the OS level configuration (unless
             * overridden, Linux defaults to 7200s (ie 2 hours.)
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value keepalive_time = 2;</code>
             */
            public Builder setKeepaliveTime(com.google.protobuf.UInt32Value value) {

                if (keepaliveTimeBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    keepaliveTime_ = value;
                    onChanged();
                } else {
                    keepaliveTimeBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * The number of seconds a connection needs to be idle before keep-alive probes
             * start being sent. Default is to use the OS level configuration (unless
             * overridden, Linux defaults to 7200s (ie 2 hours.)
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value keepalive_time = 2;</code>
             */
            public Builder setKeepaliveTime(
                    com.google.protobuf.UInt32Value.Builder builderForValue) {

                if (keepaliveTimeBuilder_ == null) {
                    keepaliveTime_ = builderForValue.build();
                    onChanged();
                } else {
                    keepaliveTimeBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * The number of seconds a connection needs to be idle before keep-alive probes
             * start being sent. Default is to use the OS level configuration (unless
             * overridden, Linux defaults to 7200s (ie 2 hours.)
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value keepalive_time = 2;</code>
             */
            public Builder mergeKeepaliveTime(com.google.protobuf.UInt32Value value) {

                if (keepaliveTimeBuilder_ == null) {
                    if (keepaliveTime_ != null) {
                        keepaliveTime_ =
                                com.google.protobuf.UInt32Value.newBuilder(keepaliveTime_).mergeFrom(value).buildPartial();
                    } else {
                        keepaliveTime_ = value;
                    }
                    onChanged();
                } else {
                    keepaliveTimeBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * The number of seconds a connection needs to be idle before keep-alive probes
             * start being sent. Default is to use the OS level configuration (unless
             * overridden, Linux defaults to 7200s (ie 2 hours.)
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value keepalive_time = 2;</code>
             */
            public Builder clearKeepaliveTime() {

                if (keepaliveTimeBuilder_ == null) {
                    keepaliveTime_ = null;
                    onChanged();
                } else {
                    keepaliveTime_ = null;
                    keepaliveTimeBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * The number of seconds a connection needs to be idle before keep-alive probes
             * start being sent. Default is to use the OS level configuration (unless
             * overridden, Linux defaults to 7200s (ie 2 hours.)
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value keepalive_time = 2;</code>
             */
            public com.google.protobuf.UInt32Value.Builder getKeepaliveTimeBuilder() {

                onChanged();
                return getKeepaliveTimeFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * The number of seconds a connection needs to be idle before keep-alive probes
             * start being sent. Default is to use the OS level configuration (unless
             * overridden, Linux defaults to 7200s (ie 2 hours.)
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value keepalive_time = 2;</code>
             */
            public com.google.protobuf.UInt32ValueOrBuilder getKeepaliveTimeOrBuilder() {

                if (keepaliveTimeBuilder_ != null) {
                    return keepaliveTimeBuilder_.getMessageOrBuilder();
                } else {
                    return keepaliveTime_ == null ?
                            com.google.protobuf.UInt32Value.getDefaultInstance() : keepaliveTime_;
                }
            }

            /**
             * <pre>
             * The number of seconds a connection needs to be idle before keep-alive probes
             * start being sent. Default is to use the OS level configuration (unless
             * overridden, Linux defaults to 7200s (ie 2 hours.)
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value keepalive_time = 2;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>
            getKeepaliveTimeFieldBuilder() {

                if (keepaliveTimeBuilder_ == null) {
                    keepaliveTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                            getKeepaliveTime(),
                            getParentForChildren(),
                            isClean());
                    keepaliveTime_ = null;
                }
                return keepaliveTimeBuilder_;
            }

            private com.google.protobuf.UInt32Value keepaliveInterval_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> keepaliveIntervalBuilder_;

            /**
             * <pre>
             * The number of seconds between keep-alive probes. Default is to use the OS
             * level configuration (unless overridden, Linux defaults to 75s.)
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value keepalive_interval = 3;</code>
             */
            public boolean hasKeepaliveInterval() {

                return keepaliveIntervalBuilder_ != null || keepaliveInterval_ != null;
            }

            /**
             * <pre>
             * The number of seconds between keep-alive probes. Default is to use the OS
             * level configuration (unless overridden, Linux defaults to 75s.)
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value keepalive_interval = 3;</code>
             */
            public com.google.protobuf.UInt32Value getKeepaliveInterval() {

                if (keepaliveIntervalBuilder_ == null) {
                    return keepaliveInterval_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : keepaliveInterval_;
                } else {
                    return keepaliveIntervalBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * The number of seconds between keep-alive probes. Default is to use the OS
             * level configuration (unless overridden, Linux defaults to 75s.)
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value keepalive_interval = 3;</code>
             */
            public Builder setKeepaliveInterval(com.google.protobuf.UInt32Value value) {

                if (keepaliveIntervalBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    keepaliveInterval_ = value;
                    onChanged();
                } else {
                    keepaliveIntervalBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * The number of seconds between keep-alive probes. Default is to use the OS
             * level configuration (unless overridden, Linux defaults to 75s.)
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value keepalive_interval = 3;</code>
             */
            public Builder setKeepaliveInterval(
                    com.google.protobuf.UInt32Value.Builder builderForValue) {

                if (keepaliveIntervalBuilder_ == null) {
                    keepaliveInterval_ = builderForValue.build();
                    onChanged();
                } else {
                    keepaliveIntervalBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * The number of seconds between keep-alive probes. Default is to use the OS
             * level configuration (unless overridden, Linux defaults to 75s.)
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value keepalive_interval = 3;</code>
             */
            public Builder mergeKeepaliveInterval(com.google.protobuf.UInt32Value value) {

                if (keepaliveIntervalBuilder_ == null) {
                    if (keepaliveInterval_ != null) {
                        keepaliveInterval_ =
                                com.google.protobuf.UInt32Value.newBuilder(keepaliveInterval_).mergeFrom(value).buildPartial();
                    } else {
                        keepaliveInterval_ = value;
                    }
                    onChanged();
                } else {
                    keepaliveIntervalBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * The number of seconds between keep-alive probes. Default is to use the OS
             * level configuration (unless overridden, Linux defaults to 75s.)
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value keepalive_interval = 3;</code>
             */
            public Builder clearKeepaliveInterval() {

                if (keepaliveIntervalBuilder_ == null) {
                    keepaliveInterval_ = null;
                    onChanged();
                } else {
                    keepaliveInterval_ = null;
                    keepaliveIntervalBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * The number of seconds between keep-alive probes. Default is to use the OS
             * level configuration (unless overridden, Linux defaults to 75s.)
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value keepalive_interval = 3;</code>
             */
            public com.google.protobuf.UInt32Value.Builder getKeepaliveIntervalBuilder() {

                onChanged();
                return getKeepaliveIntervalFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * The number of seconds between keep-alive probes. Default is to use the OS
             * level configuration (unless overridden, Linux defaults to 75s.)
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value keepalive_interval = 3;</code>
             */
            public com.google.protobuf.UInt32ValueOrBuilder getKeepaliveIntervalOrBuilder() {

                if (keepaliveIntervalBuilder_ != null) {
                    return keepaliveIntervalBuilder_.getMessageOrBuilder();
                } else {
                    return keepaliveInterval_ == null ?
                            com.google.protobuf.UInt32Value.getDefaultInstance() : keepaliveInterval_;
                }
            }

            /**
             * <pre>
             * The number of seconds between keep-alive probes. Default is to use the OS
             * level configuration (unless overridden, Linux defaults to 75s.)
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value keepalive_interval = 3;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>
            getKeepaliveIntervalFieldBuilder() {

                if (keepaliveIntervalBuilder_ == null) {
                    keepaliveIntervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                            getKeepaliveInterval(),
                            getParentForChildren(),
                            isClean());
                    keepaliveInterval_ = null;
                }
                return keepaliveIntervalBuilder_;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.setUnknownFieldsProto3(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:envoy.api.v2.core.TcpKeepalive)
        }

        // @@protoc_insertion_point(class_scope:envoy.api.v2.core.TcpKeepalive)
        private static final AddressOuterClass.TcpKeepalive DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new AddressOuterClass.TcpKeepalive();
        }

        public static AddressOuterClass.TcpKeepalive getDefaultInstance() {

            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<TcpKeepalive>
                PARSER = new com.google.protobuf.AbstractParser<TcpKeepalive>() {
            @java.lang.Override
            public TcpKeepalive parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return new TcpKeepalive(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<TcpKeepalive> parser() {

            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<TcpKeepalive> getParserForType() {

            return PARSER;
        }

        @java.lang.Override
        public AddressOuterClass.TcpKeepalive getDefaultInstanceForType() {

            return DEFAULT_INSTANCE;
        }

    }

    public interface BindConfigOrBuilder extends
            // @@protoc_insertion_point(interface_extends:envoy.api.v2.core.BindConfig)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * The address to bind to when creating a socket.
         * </pre>
         *
         * <code>.envoy.api.v2.core.SocketAddress source_address = 1 [(.gogoproto.nullable) = false, (.validate.rules) = { ... }</code>
         */
        boolean hasSourceAddress();

        /**
         * <pre>
         * The address to bind to when creating a socket.
         * </pre>
         *
         * <code>.envoy.api.v2.core.SocketAddress source_address = 1 [(.gogoproto.nullable) = false, (.validate.rules) = { ... }</code>
         */
        AddressOuterClass.SocketAddress getSourceAddress();

        /**
         * <pre>
         * The address to bind to when creating a socket.
         * </pre>
         *
         * <code>.envoy.api.v2.core.SocketAddress source_address = 1 [(.gogoproto.nullable) = false, (.validate.rules) = { ... }</code>
         */
        AddressOuterClass.SocketAddressOrBuilder getSourceAddressOrBuilder();

        /**
         * <pre>
         * Whether to set the *IP_FREEBIND* option when creating the socket. When this
         * flag is set to true, allows the :ref:`source_address
         * &lt;envoy_api_field_UpstreamBindConfig.source_address&gt;` to be an IP address
         * that is not configured on the system running Envoy. When this flag is set
         * to false, the option *IP_FREEBIND* is disabled on the socket. When this
         * flag is not set (default), the socket is not modified, i.e. the option is
         * neither enabled nor disabled.
         * </pre>
         *
         * <code>.google.protobuf.BoolValue freebind = 2;</code>
         */
        boolean hasFreebind();

        /**
         * <pre>
         * Whether to set the *IP_FREEBIND* option when creating the socket. When this
         * flag is set to true, allows the :ref:`source_address
         * &lt;envoy_api_field_UpstreamBindConfig.source_address&gt;` to be an IP address
         * that is not configured on the system running Envoy. When this flag is set
         * to false, the option *IP_FREEBIND* is disabled on the socket. When this
         * flag is not set (default), the socket is not modified, i.e. the option is
         * neither enabled nor disabled.
         * </pre>
         *
         * <code>.google.protobuf.BoolValue freebind = 2;</code>
         */
        com.google.protobuf.BoolValue getFreebind();

        /**
         * <pre>
         * Whether to set the *IP_FREEBIND* option when creating the socket. When this
         * flag is set to true, allows the :ref:`source_address
         * &lt;envoy_api_field_UpstreamBindConfig.source_address&gt;` to be an IP address
         * that is not configured on the system running Envoy. When this flag is set
         * to false, the option *IP_FREEBIND* is disabled on the socket. When this
         * flag is not set (default), the socket is not modified, i.e. the option is
         * neither enabled nor disabled.
         * </pre>
         *
         * <code>.google.protobuf.BoolValue freebind = 2;</code>
         */
        com.google.protobuf.BoolValueOrBuilder getFreebindOrBuilder();

        /**
         * <pre>
         * Additional socket options that may not be present in Envoy source code or
         * precompiled binaries.
         * </pre>
         *
         * <code>repeated .envoy.api.v2.core.SocketOption socket_options = 3;</code>
         */
        java.util.List<Base.SocketOption>
        getSocketOptionsList();

        /**
         * <pre>
         * Additional socket options that may not be present in Envoy source code or
         * precompiled binaries.
         * </pre>
         *
         * <code>repeated .envoy.api.v2.core.SocketOption socket_options = 3;</code>
         */
        Base.SocketOption getSocketOptions(int index);

        /**
         * <pre>
         * Additional socket options that may not be present in Envoy source code or
         * precompiled binaries.
         * </pre>
         *
         * <code>repeated .envoy.api.v2.core.SocketOption socket_options = 3;</code>
         */
        int getSocketOptionsCount();

        /**
         * <pre>
         * Additional socket options that may not be present in Envoy source code or
         * precompiled binaries.
         * </pre>
         *
         * <code>repeated .envoy.api.v2.core.SocketOption socket_options = 3;</code>
         */
        java.util.List<? extends Base.SocketOptionOrBuilder>
        getSocketOptionsOrBuilderList();

        /**
         * <pre>
         * Additional socket options that may not be present in Envoy source code or
         * precompiled binaries.
         * </pre>
         *
         * <code>repeated .envoy.api.v2.core.SocketOption socket_options = 3;</code>
         */
        Base.SocketOptionOrBuilder getSocketOptionsOrBuilder(
                int index);
    }

    /**
     * Protobuf type {@code envoy.api.v2.core.BindConfig}
     */
    public static final class BindConfig extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:envoy.api.v2.core.BindConfig)
            BindConfigOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use BindConfig.newBuilder() to construct.
        private BindConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

            super(builder);
        }

        private BindConfig() {

            socketOptions_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {

            return this.unknownFields;
        }

        private BindConfig(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10: {
                            AddressOuterClass.SocketAddress.Builder subBuilder = null;
                            if (sourceAddress_ != null) {
                                subBuilder = sourceAddress_.toBuilder();
                            }
                            sourceAddress_ = input.readMessage(AddressOuterClass.SocketAddress.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(sourceAddress_);
                                sourceAddress_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 18: {
                            com.google.protobuf.BoolValue.Builder subBuilder = null;
                            if (freebind_ != null) {
                                subBuilder = freebind_.toBuilder();
                            }
                            freebind_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(freebind_);
                                freebind_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 26: {
                            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                                socketOptions_ = new java.util.ArrayList<Base.SocketOption>();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            socketOptions_.add(
                                    input.readMessage(Base.SocketOption.parser(), extensionRegistry));
                            break;
                        }
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                    socketOptions_ = java.util.Collections.unmodifiableList(socketOptions_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {

            return AddressOuterClass.internal_static_envoy_api_v2_core_BindConfig_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {

            return AddressOuterClass.internal_static_envoy_api_v2_core_BindConfig_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            AddressOuterClass.BindConfig.class, AddressOuterClass.BindConfig.Builder.class);
        }

        private int bitField0_;
        public static final int SOURCE_ADDRESS_FIELD_NUMBER = 1;
        private AddressOuterClass.SocketAddress sourceAddress_;

        /**
         * <pre>
         * The address to bind to when creating a socket.
         * </pre>
         *
         * <code>.envoy.api.v2.core.SocketAddress source_address = 1 [(.gogoproto.nullable) = false, (.validate.rules) = { ... }</code>
         */
        public boolean hasSourceAddress() {

            return sourceAddress_ != null;
        }

        /**
         * <pre>
         * The address to bind to when creating a socket.
         * </pre>
         *
         * <code>.envoy.api.v2.core.SocketAddress source_address = 1 [(.gogoproto.nullable) = false, (.validate.rules) = { ... }</code>
         */
        public AddressOuterClass.SocketAddress getSourceAddress() {

            return sourceAddress_ == null ? AddressOuterClass.SocketAddress.getDefaultInstance() : sourceAddress_;
        }

        /**
         * <pre>
         * The address to bind to when creating a socket.
         * </pre>
         *
         * <code>.envoy.api.v2.core.SocketAddress source_address = 1 [(.gogoproto.nullable) = false, (.validate.rules) = { ... }</code>
         */
        public AddressOuterClass.SocketAddressOrBuilder getSourceAddressOrBuilder() {

            return getSourceAddress();
        }

        public static final int FREEBIND_FIELD_NUMBER = 2;
        private com.google.protobuf.BoolValue freebind_;

        /**
         * <pre>
         * Whether to set the *IP_FREEBIND* option when creating the socket. When this
         * flag is set to true, allows the :ref:`source_address
         * &lt;envoy_api_field_UpstreamBindConfig.source_address&gt;` to be an IP address
         * that is not configured on the system running Envoy. When this flag is set
         * to false, the option *IP_FREEBIND* is disabled on the socket. When this
         * flag is not set (default), the socket is not modified, i.e. the option is
         * neither enabled nor disabled.
         * </pre>
         *
         * <code>.google.protobuf.BoolValue freebind = 2;</code>
         */
        public boolean hasFreebind() {

            return freebind_ != null;
        }

        /**
         * <pre>
         * Whether to set the *IP_FREEBIND* option when creating the socket. When this
         * flag is set to true, allows the :ref:`source_address
         * &lt;envoy_api_field_UpstreamBindConfig.source_address&gt;` to be an IP address
         * that is not configured on the system running Envoy. When this flag is set
         * to false, the option *IP_FREEBIND* is disabled on the socket. When this
         * flag is not set (default), the socket is not modified, i.e. the option is
         * neither enabled nor disabled.
         * </pre>
         *
         * <code>.google.protobuf.BoolValue freebind = 2;</code>
         */
        public com.google.protobuf.BoolValue getFreebind() {

            return freebind_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : freebind_;
        }

        /**
         * <pre>
         * Whether to set the *IP_FREEBIND* option when creating the socket. When this
         * flag is set to true, allows the :ref:`source_address
         * &lt;envoy_api_field_UpstreamBindConfig.source_address&gt;` to be an IP address
         * that is not configured on the system running Envoy. When this flag is set
         * to false, the option *IP_FREEBIND* is disabled on the socket. When this
         * flag is not set (default), the socket is not modified, i.e. the option is
         * neither enabled nor disabled.
         * </pre>
         *
         * <code>.google.protobuf.BoolValue freebind = 2;</code>
         */
        public com.google.protobuf.BoolValueOrBuilder getFreebindOrBuilder() {

            return getFreebind();
        }

        public static final int SOCKET_OPTIONS_FIELD_NUMBER = 3;
        private java.util.List<Base.SocketOption> socketOptions_;

        /**
         * <pre>
         * Additional socket options that may not be present in Envoy source code or
         * precompiled binaries.
         * </pre>
         *
         * <code>repeated .envoy.api.v2.core.SocketOption socket_options = 3;</code>
         */
        public java.util.List<Base.SocketOption> getSocketOptionsList() {

            return socketOptions_;
        }

        /**
         * <pre>
         * Additional socket options that may not be present in Envoy source code or
         * precompiled binaries.
         * </pre>
         *
         * <code>repeated .envoy.api.v2.core.SocketOption socket_options = 3;</code>
         */
        public java.util.List<? extends Base.SocketOptionOrBuilder>
        getSocketOptionsOrBuilderList() {

            return socketOptions_;
        }

        /**
         * <pre>
         * Additional socket options that may not be present in Envoy source code or
         * precompiled binaries.
         * </pre>
         *
         * <code>repeated .envoy.api.v2.core.SocketOption socket_options = 3;</code>
         */
        public int getSocketOptionsCount() {

            return socketOptions_.size();
        }

        /**
         * <pre>
         * Additional socket options that may not be present in Envoy source code or
         * precompiled binaries.
         * </pre>
         *
         * <code>repeated .envoy.api.v2.core.SocketOption socket_options = 3;</code>
         */
        public Base.SocketOption getSocketOptions(int index) {

            return socketOptions_.get(index);
        }

        /**
         * <pre>
         * Additional socket options that may not be present in Envoy source code or
         * precompiled binaries.
         * </pre>
         *
         * <code>repeated .envoy.api.v2.core.SocketOption socket_options = 3;</code>
         */
        public Base.SocketOptionOrBuilder getSocketOptionsOrBuilder(
                int index) {

            return socketOptions_.get(index);
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {

            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {

            if (sourceAddress_ != null) {
                output.writeMessage(1, getSourceAddress());
            }
            if (freebind_ != null) {
                output.writeMessage(2, getFreebind());
            }
            for (int i = 0; i < socketOptions_.size(); i++) {
                output.writeMessage(3, socketOptions_.get(i));
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {

            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (sourceAddress_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getSourceAddress());
            }
            if (freebind_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, getFreebind());
            }
            for (int i = 0; i < socketOptions_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(3, socketOptions_.get(i));
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {

            if (obj == this) {
                return true;
            }
            if (!(obj instanceof AddressOuterClass.BindConfig)) {
                return super.equals(obj);
            }
            AddressOuterClass.BindConfig other = (AddressOuterClass.BindConfig) obj;

            boolean result = true;
            result = result && (hasSourceAddress() == other.hasSourceAddress());
            if (hasSourceAddress()) {
                result = result && getSourceAddress()
                        .equals(other.getSourceAddress());
            }
            result = result && (hasFreebind() == other.hasFreebind());
            if (hasFreebind()) {
                result = result && getFreebind()
                        .equals(other.getFreebind());
            }
            result = result && getSocketOptionsList()
                    .equals(other.getSocketOptionsList());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {

            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasSourceAddress()) {
                hash = (37 * hash) + SOURCE_ADDRESS_FIELD_NUMBER;
                hash = (53 * hash) + getSourceAddress().hashCode();
            }
            if (hasFreebind()) {
                hash = (37 * hash) + FREEBIND_FIELD_NUMBER;
                hash = (53 * hash) + getFreebind().hashCode();
            }
            if (getSocketOptionsCount() > 0) {
                hash = (37 * hash) + SOCKET_OPTIONS_FIELD_NUMBER;
                hash = (53 * hash) + getSocketOptionsList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static AddressOuterClass.BindConfig parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static AddressOuterClass.BindConfig parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static AddressOuterClass.BindConfig parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static AddressOuterClass.BindConfig parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static AddressOuterClass.BindConfig parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static AddressOuterClass.BindConfig parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static AddressOuterClass.BindConfig parseFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static AddressOuterClass.BindConfig parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static AddressOuterClass.BindConfig parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static AddressOuterClass.BindConfig parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static AddressOuterClass.BindConfig parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static AddressOuterClass.BindConfig parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {

            return newBuilder();
        }

        public static Builder newBuilder() {

            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(AddressOuterClass.BindConfig prototype) {

            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {

            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code envoy.api.v2.core.BindConfig}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:envoy.api.v2.core.BindConfig)
                AddressOuterClass.BindConfigOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return AddressOuterClass.internal_static_envoy_api_v2_core_BindConfig_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return AddressOuterClass.internal_static_envoy_api_v2_core_BindConfig_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                AddressOuterClass.BindConfig.class, AddressOuterClass.BindConfig.Builder.class);
            }

            // Construct using envoy.api.v2.core.AddressOuterClass.BindConfig.newBuilder()
            private Builder() {

                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {

                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getSocketOptionsFieldBuilder();
                }
            }

            @java.lang.Override
            public Builder clear() {

                super.clear();
                if (sourceAddressBuilder_ == null) {
                    sourceAddress_ = null;
                } else {
                    sourceAddress_ = null;
                    sourceAddressBuilder_ = null;
                }
                if (freebindBuilder_ == null) {
                    freebind_ = null;
                } else {
                    freebind_ = null;
                    freebindBuilder_ = null;
                }
                if (socketOptionsBuilder_ == null) {
                    socketOptions_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000004);
                } else {
                    socketOptionsBuilder_.clear();
                }
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {

                return AddressOuterClass.internal_static_envoy_api_v2_core_BindConfig_descriptor;
            }

            @java.lang.Override
            public AddressOuterClass.BindConfig getDefaultInstanceForType() {

                return AddressOuterClass.BindConfig.getDefaultInstance();
            }

            @java.lang.Override
            public AddressOuterClass.BindConfig build() {

                AddressOuterClass.BindConfig result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public AddressOuterClass.BindConfig buildPartial() {

                AddressOuterClass.BindConfig result = new AddressOuterClass.BindConfig(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (sourceAddressBuilder_ == null) {
                    result.sourceAddress_ = sourceAddress_;
                } else {
                    result.sourceAddress_ = sourceAddressBuilder_.build();
                }
                if (freebindBuilder_ == null) {
                    result.freebind_ = freebind_;
                } else {
                    result.freebind_ = freebindBuilder_.build();
                }
                if (socketOptionsBuilder_ == null) {
                    if (((bitField0_ & 0x00000004) == 0x00000004)) {
                        socketOptions_ = java.util.Collections.unmodifiableList(socketOptions_);
                        bitField0_ = (bitField0_ & ~0x00000004);
                    }
                    result.socketOptions_ = socketOptions_;
                } else {
                    result.socketOptions_ = socketOptionsBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {

                return (Builder) super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {

                return (Builder) super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                return (Builder) super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {

                return (Builder) super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {

                if (other instanceof AddressOuterClass.BindConfig) {
                    return mergeFrom((AddressOuterClass.BindConfig) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(AddressOuterClass.BindConfig other) {

                if (other == AddressOuterClass.BindConfig.getDefaultInstance()) return this;
                if (other.hasSourceAddress()) {
                    mergeSourceAddress(other.getSourceAddress());
                }
                if (other.hasFreebind()) {
                    mergeFreebind(other.getFreebind());
                }
                if (socketOptionsBuilder_ == null) {
                    if (!other.socketOptions_.isEmpty()) {
                        if (socketOptions_.isEmpty()) {
                            socketOptions_ = other.socketOptions_;
                            bitField0_ = (bitField0_ & ~0x00000004);
                        } else {
                            ensureSocketOptionsIsMutable();
                            socketOptions_.addAll(other.socketOptions_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.socketOptions_.isEmpty()) {
                        if (socketOptionsBuilder_.isEmpty()) {
                            socketOptionsBuilder_.dispose();
                            socketOptionsBuilder_ = null;
                            socketOptions_ = other.socketOptions_;
                            bitField0_ = (bitField0_ & ~0x00000004);
                            socketOptionsBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getSocketOptionsFieldBuilder() : null;
                        } else {
                            socketOptionsBuilder_.addAllMessages(other.socketOptions_);
                        }
                    }
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {

                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                AddressOuterClass.BindConfig parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (AddressOuterClass.BindConfig) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private AddressOuterClass.SocketAddress sourceAddress_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    AddressOuterClass.SocketAddress, AddressOuterClass.SocketAddress.Builder, AddressOuterClass.SocketAddressOrBuilder> sourceAddressBuilder_;

            /**
             * <pre>
             * The address to bind to when creating a socket.
             * </pre>
             *
             * <code>.envoy.api.v2.core.SocketAddress source_address = 1 [(.gogoproto.nullable) = false, (.validate.rules) = { ... }</code>
             */
            public boolean hasSourceAddress() {

                return sourceAddressBuilder_ != null || sourceAddress_ != null;
            }

            /**
             * <pre>
             * The address to bind to when creating a socket.
             * </pre>
             *
             * <code>.envoy.api.v2.core.SocketAddress source_address = 1 [(.gogoproto.nullable) = false, (.validate.rules) = { ... }</code>
             */
            public AddressOuterClass.SocketAddress getSourceAddress() {

                if (sourceAddressBuilder_ == null) {
                    return sourceAddress_ == null ? AddressOuterClass.SocketAddress.getDefaultInstance() : sourceAddress_;
                } else {
                    return sourceAddressBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * The address to bind to when creating a socket.
             * </pre>
             *
             * <code>.envoy.api.v2.core.SocketAddress source_address = 1 [(.gogoproto.nullable) = false, (.validate.rules) = { ... }</code>
             */
            public Builder setSourceAddress(AddressOuterClass.SocketAddress value) {

                if (sourceAddressBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    sourceAddress_ = value;
                    onChanged();
                } else {
                    sourceAddressBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * The address to bind to when creating a socket.
             * </pre>
             *
             * <code>.envoy.api.v2.core.SocketAddress source_address = 1 [(.gogoproto.nullable) = false, (.validate.rules) = { ... }</code>
             */
            public Builder setSourceAddress(
                    AddressOuterClass.SocketAddress.Builder builderForValue) {

                if (sourceAddressBuilder_ == null) {
                    sourceAddress_ = builderForValue.build();
                    onChanged();
                } else {
                    sourceAddressBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * The address to bind to when creating a socket.
             * </pre>
             *
             * <code>.envoy.api.v2.core.SocketAddress source_address = 1 [(.gogoproto.nullable) = false, (.validate.rules) = { ... }</code>
             */
            public Builder mergeSourceAddress(AddressOuterClass.SocketAddress value) {

                if (sourceAddressBuilder_ == null) {
                    if (sourceAddress_ != null) {
                        sourceAddress_ =
                                AddressOuterClass.SocketAddress.newBuilder(sourceAddress_).mergeFrom(value).buildPartial();
                    } else {
                        sourceAddress_ = value;
                    }
                    onChanged();
                } else {
                    sourceAddressBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * The address to bind to when creating a socket.
             * </pre>
             *
             * <code>.envoy.api.v2.core.SocketAddress source_address = 1 [(.gogoproto.nullable) = false, (.validate.rules) = { ... }</code>
             */
            public Builder clearSourceAddress() {

                if (sourceAddressBuilder_ == null) {
                    sourceAddress_ = null;
                    onChanged();
                } else {
                    sourceAddress_ = null;
                    sourceAddressBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * The address to bind to when creating a socket.
             * </pre>
             *
             * <code>.envoy.api.v2.core.SocketAddress source_address = 1 [(.gogoproto.nullable) = false, (.validate.rules) = { ... }</code>
             */
            public AddressOuterClass.SocketAddress.Builder getSourceAddressBuilder() {

                onChanged();
                return getSourceAddressFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * The address to bind to when creating a socket.
             * </pre>
             *
             * <code>.envoy.api.v2.core.SocketAddress source_address = 1 [(.gogoproto.nullable) = false, (.validate.rules) = { ... }</code>
             */
            public AddressOuterClass.SocketAddressOrBuilder getSourceAddressOrBuilder() {

                if (sourceAddressBuilder_ != null) {
                    return sourceAddressBuilder_.getMessageOrBuilder();
                } else {
                    return sourceAddress_ == null ?
                            AddressOuterClass.SocketAddress.getDefaultInstance() : sourceAddress_;
                }
            }

            /**
             * <pre>
             * The address to bind to when creating a socket.
             * </pre>
             *
             * <code>.envoy.api.v2.core.SocketAddress source_address = 1 [(.gogoproto.nullable) = false, (.validate.rules) = { ... }</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    AddressOuterClass.SocketAddress, AddressOuterClass.SocketAddress.Builder, AddressOuterClass.SocketAddressOrBuilder>
            getSourceAddressFieldBuilder() {

                if (sourceAddressBuilder_ == null) {
                    sourceAddressBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            AddressOuterClass.SocketAddress, AddressOuterClass.SocketAddress.Builder, AddressOuterClass.SocketAddressOrBuilder>(
                            getSourceAddress(),
                            getParentForChildren(),
                            isClean());
                    sourceAddress_ = null;
                }
                return sourceAddressBuilder_;
            }

            private com.google.protobuf.BoolValue freebind_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> freebindBuilder_;

            /**
             * <pre>
             * Whether to set the *IP_FREEBIND* option when creating the socket. When this
             * flag is set to true, allows the :ref:`source_address
             * &lt;envoy_api_field_UpstreamBindConfig.source_address&gt;` to be an IP address
             * that is not configured on the system running Envoy. When this flag is set
             * to false, the option *IP_FREEBIND* is disabled on the socket. When this
             * flag is not set (default), the socket is not modified, i.e. the option is
             * neither enabled nor disabled.
             * </pre>
             *
             * <code>.google.protobuf.BoolValue freebind = 2;</code>
             */
            public boolean hasFreebind() {

                return freebindBuilder_ != null || freebind_ != null;
            }

            /**
             * <pre>
             * Whether to set the *IP_FREEBIND* option when creating the socket. When this
             * flag is set to true, allows the :ref:`source_address
             * &lt;envoy_api_field_UpstreamBindConfig.source_address&gt;` to be an IP address
             * that is not configured on the system running Envoy. When this flag is set
             * to false, the option *IP_FREEBIND* is disabled on the socket. When this
             * flag is not set (default), the socket is not modified, i.e. the option is
             * neither enabled nor disabled.
             * </pre>
             *
             * <code>.google.protobuf.BoolValue freebind = 2;</code>
             */
            public com.google.protobuf.BoolValue getFreebind() {

                if (freebindBuilder_ == null) {
                    return freebind_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : freebind_;
                } else {
                    return freebindBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Whether to set the *IP_FREEBIND* option when creating the socket. When this
             * flag is set to true, allows the :ref:`source_address
             * &lt;envoy_api_field_UpstreamBindConfig.source_address&gt;` to be an IP address
             * that is not configured on the system running Envoy. When this flag is set
             * to false, the option *IP_FREEBIND* is disabled on the socket. When this
             * flag is not set (default), the socket is not modified, i.e. the option is
             * neither enabled nor disabled.
             * </pre>
             *
             * <code>.google.protobuf.BoolValue freebind = 2;</code>
             */
            public Builder setFreebind(com.google.protobuf.BoolValue value) {

                if (freebindBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    freebind_ = value;
                    onChanged();
                } else {
                    freebindBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * Whether to set the *IP_FREEBIND* option when creating the socket. When this
             * flag is set to true, allows the :ref:`source_address
             * &lt;envoy_api_field_UpstreamBindConfig.source_address&gt;` to be an IP address
             * that is not configured on the system running Envoy. When this flag is set
             * to false, the option *IP_FREEBIND* is disabled on the socket. When this
             * flag is not set (default), the socket is not modified, i.e. the option is
             * neither enabled nor disabled.
             * </pre>
             *
             * <code>.google.protobuf.BoolValue freebind = 2;</code>
             */
            public Builder setFreebind(
                    com.google.protobuf.BoolValue.Builder builderForValue) {

                if (freebindBuilder_ == null) {
                    freebind_ = builderForValue.build();
                    onChanged();
                } else {
                    freebindBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * Whether to set the *IP_FREEBIND* option when creating the socket. When this
             * flag is set to true, allows the :ref:`source_address
             * &lt;envoy_api_field_UpstreamBindConfig.source_address&gt;` to be an IP address
             * that is not configured on the system running Envoy. When this flag is set
             * to false, the option *IP_FREEBIND* is disabled on the socket. When this
             * flag is not set (default), the socket is not modified, i.e. the option is
             * neither enabled nor disabled.
             * </pre>
             *
             * <code>.google.protobuf.BoolValue freebind = 2;</code>
             */
            public Builder mergeFreebind(com.google.protobuf.BoolValue value) {

                if (freebindBuilder_ == null) {
                    if (freebind_ != null) {
                        freebind_ =
                                com.google.protobuf.BoolValue.newBuilder(freebind_).mergeFrom(value).buildPartial();
                    } else {
                        freebind_ = value;
                    }
                    onChanged();
                } else {
                    freebindBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * Whether to set the *IP_FREEBIND* option when creating the socket. When this
             * flag is set to true, allows the :ref:`source_address
             * &lt;envoy_api_field_UpstreamBindConfig.source_address&gt;` to be an IP address
             * that is not configured on the system running Envoy. When this flag is set
             * to false, the option *IP_FREEBIND* is disabled on the socket. When this
             * flag is not set (default), the socket is not modified, i.e. the option is
             * neither enabled nor disabled.
             * </pre>
             *
             * <code>.google.protobuf.BoolValue freebind = 2;</code>
             */
            public Builder clearFreebind() {

                if (freebindBuilder_ == null) {
                    freebind_ = null;
                    onChanged();
                } else {
                    freebind_ = null;
                    freebindBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * Whether to set the *IP_FREEBIND* option when creating the socket. When this
             * flag is set to true, allows the :ref:`source_address
             * &lt;envoy_api_field_UpstreamBindConfig.source_address&gt;` to be an IP address
             * that is not configured on the system running Envoy. When this flag is set
             * to false, the option *IP_FREEBIND* is disabled on the socket. When this
             * flag is not set (default), the socket is not modified, i.e. the option is
             * neither enabled nor disabled.
             * </pre>
             *
             * <code>.google.protobuf.BoolValue freebind = 2;</code>
             */
            public com.google.protobuf.BoolValue.Builder getFreebindBuilder() {

                onChanged();
                return getFreebindFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Whether to set the *IP_FREEBIND* option when creating the socket. When this
             * flag is set to true, allows the :ref:`source_address
             * &lt;envoy_api_field_UpstreamBindConfig.source_address&gt;` to be an IP address
             * that is not configured on the system running Envoy. When this flag is set
             * to false, the option *IP_FREEBIND* is disabled on the socket. When this
             * flag is not set (default), the socket is not modified, i.e. the option is
             * neither enabled nor disabled.
             * </pre>
             *
             * <code>.google.protobuf.BoolValue freebind = 2;</code>
             */
            public com.google.protobuf.BoolValueOrBuilder getFreebindOrBuilder() {

                if (freebindBuilder_ != null) {
                    return freebindBuilder_.getMessageOrBuilder();
                } else {
                    return freebind_ == null ?
                            com.google.protobuf.BoolValue.getDefaultInstance() : freebind_;
                }
            }

            /**
             * <pre>
             * Whether to set the *IP_FREEBIND* option when creating the socket. When this
             * flag is set to true, allows the :ref:`source_address
             * &lt;envoy_api_field_UpstreamBindConfig.source_address&gt;` to be an IP address
             * that is not configured on the system running Envoy. When this flag is set
             * to false, the option *IP_FREEBIND* is disabled on the socket. When this
             * flag is not set (default), the socket is not modified, i.e. the option is
             * neither enabled nor disabled.
             * </pre>
             *
             * <code>.google.protobuf.BoolValue freebind = 2;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>
            getFreebindFieldBuilder() {

                if (freebindBuilder_ == null) {
                    freebindBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                            getFreebind(),
                            getParentForChildren(),
                            isClean());
                    freebind_ = null;
                }
                return freebindBuilder_;
            }

            private java.util.List<Base.SocketOption> socketOptions_ =
                    java.util.Collections.emptyList();

            private void ensureSocketOptionsIsMutable() {

                if (!((bitField0_ & 0x00000004) == 0x00000004)) {
                    socketOptions_ = new java.util.ArrayList<Base.SocketOption>(socketOptions_);
                    bitField0_ |= 0x00000004;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    Base.SocketOption, Base.SocketOption.Builder, Base.SocketOptionOrBuilder> socketOptionsBuilder_;

            /**
             * <pre>
             * Additional socket options that may not be present in Envoy source code or
             * precompiled binaries.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.SocketOption socket_options = 3;</code>
             */
            public java.util.List<Base.SocketOption> getSocketOptionsList() {

                if (socketOptionsBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(socketOptions_);
                } else {
                    return socketOptionsBuilder_.getMessageList();
                }
            }

            /**
             * <pre>
             * Additional socket options that may not be present in Envoy source code or
             * precompiled binaries.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.SocketOption socket_options = 3;</code>
             */
            public int getSocketOptionsCount() {

                if (socketOptionsBuilder_ == null) {
                    return socketOptions_.size();
                } else {
                    return socketOptionsBuilder_.getCount();
                }
            }

            /**
             * <pre>
             * Additional socket options that may not be present in Envoy source code or
             * precompiled binaries.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.SocketOption socket_options = 3;</code>
             */
            public Base.SocketOption getSocketOptions(int index) {

                if (socketOptionsBuilder_ == null) {
                    return socketOptions_.get(index);
                } else {
                    return socketOptionsBuilder_.getMessage(index);
                }
            }

            /**
             * <pre>
             * Additional socket options that may not be present in Envoy source code or
             * precompiled binaries.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.SocketOption socket_options = 3;</code>
             */
            public Builder setSocketOptions(
                    int index, Base.SocketOption value) {

                if (socketOptionsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureSocketOptionsIsMutable();
                    socketOptions_.set(index, value);
                    onChanged();
                } else {
                    socketOptionsBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * Additional socket options that may not be present in Envoy source code or
             * precompiled binaries.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.SocketOption socket_options = 3;</code>
             */
            public Builder setSocketOptions(
                    int index, Base.SocketOption.Builder builderForValue) {

                if (socketOptionsBuilder_ == null) {
                    ensureSocketOptionsIsMutable();
                    socketOptions_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    socketOptionsBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * Additional socket options that may not be present in Envoy source code or
             * precompiled binaries.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.SocketOption socket_options = 3;</code>
             */
            public Builder addSocketOptions(Base.SocketOption value) {

                if (socketOptionsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureSocketOptionsIsMutable();
                    socketOptions_.add(value);
                    onChanged();
                } else {
                    socketOptionsBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <pre>
             * Additional socket options that may not be present in Envoy source code or
             * precompiled binaries.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.SocketOption socket_options = 3;</code>
             */
            public Builder addSocketOptions(
                    int index, Base.SocketOption value) {

                if (socketOptionsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureSocketOptionsIsMutable();
                    socketOptions_.add(index, value);
                    onChanged();
                } else {
                    socketOptionsBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * Additional socket options that may not be present in Envoy source code or
             * precompiled binaries.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.SocketOption socket_options = 3;</code>
             */
            public Builder addSocketOptions(
                    Base.SocketOption.Builder builderForValue) {

                if (socketOptionsBuilder_ == null) {
                    ensureSocketOptionsIsMutable();
                    socketOptions_.add(builderForValue.build());
                    onChanged();
                } else {
                    socketOptionsBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * Additional socket options that may not be present in Envoy source code or
             * precompiled binaries.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.SocketOption socket_options = 3;</code>
             */
            public Builder addSocketOptions(
                    int index, Base.SocketOption.Builder builderForValue) {

                if (socketOptionsBuilder_ == null) {
                    ensureSocketOptionsIsMutable();
                    socketOptions_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    socketOptionsBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * Additional socket options that may not be present in Envoy source code or
             * precompiled binaries.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.SocketOption socket_options = 3;</code>
             */
            public Builder addAllSocketOptions(
                    java.lang.Iterable<? extends Base.SocketOption> values) {

                if (socketOptionsBuilder_ == null) {
                    ensureSocketOptionsIsMutable();
                    addAll(
                            values, socketOptions_);
                    onChanged();
                } else {
                    socketOptionsBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <pre>
             * Additional socket options that may not be present in Envoy source code or
             * precompiled binaries.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.SocketOption socket_options = 3;</code>
             */
            public Builder clearSocketOptions() {

                if (socketOptionsBuilder_ == null) {
                    socketOptions_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000004);
                    onChanged();
                } else {
                    socketOptionsBuilder_.clear();
                }
                return this;
            }

            /**
             * <pre>
             * Additional socket options that may not be present in Envoy source code or
             * precompiled binaries.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.SocketOption socket_options = 3;</code>
             */
            public Builder removeSocketOptions(int index) {

                if (socketOptionsBuilder_ == null) {
                    ensureSocketOptionsIsMutable();
                    socketOptions_.remove(index);
                    onChanged();
                } else {
                    socketOptionsBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <pre>
             * Additional socket options that may not be present in Envoy source code or
             * precompiled binaries.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.SocketOption socket_options = 3;</code>
             */
            public Base.SocketOption.Builder getSocketOptionsBuilder(
                    int index) {

                return getSocketOptionsFieldBuilder().getBuilder(index);
            }

            /**
             * <pre>
             * Additional socket options that may not be present in Envoy source code or
             * precompiled binaries.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.SocketOption socket_options = 3;</code>
             */
            public Base.SocketOptionOrBuilder getSocketOptionsOrBuilder(
                    int index) {

                if (socketOptionsBuilder_ == null) {
                    return socketOptions_.get(index);
                } else {
                    return socketOptionsBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <pre>
             * Additional socket options that may not be present in Envoy source code or
             * precompiled binaries.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.SocketOption socket_options = 3;</code>
             */
            public java.util.List<? extends Base.SocketOptionOrBuilder>
            getSocketOptionsOrBuilderList() {

                if (socketOptionsBuilder_ != null) {
                    return socketOptionsBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(socketOptions_);
                }
            }

            /**
             * <pre>
             * Additional socket options that may not be present in Envoy source code or
             * precompiled binaries.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.SocketOption socket_options = 3;</code>
             */
            public Base.SocketOption.Builder addSocketOptionsBuilder() {

                return getSocketOptionsFieldBuilder().addBuilder(
                        Base.SocketOption.getDefaultInstance());
            }

            /**
             * <pre>
             * Additional socket options that may not be present in Envoy source code or
             * precompiled binaries.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.SocketOption socket_options = 3;</code>
             */
            public Base.SocketOption.Builder addSocketOptionsBuilder(
                    int index) {

                return getSocketOptionsFieldBuilder().addBuilder(
                        index, Base.SocketOption.getDefaultInstance());
            }

            /**
             * <pre>
             * Additional socket options that may not be present in Envoy source code or
             * precompiled binaries.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.SocketOption socket_options = 3;</code>
             */
            public java.util.List<Base.SocketOption.Builder>
            getSocketOptionsBuilderList() {

                return getSocketOptionsFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    Base.SocketOption, Base.SocketOption.Builder, Base.SocketOptionOrBuilder>
            getSocketOptionsFieldBuilder() {

                if (socketOptionsBuilder_ == null) {
                    socketOptionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            Base.SocketOption, Base.SocketOption.Builder, Base.SocketOptionOrBuilder>(
                            socketOptions_,
                            ((bitField0_ & 0x00000004) == 0x00000004),
                            getParentForChildren(),
                            isClean());
                    socketOptions_ = null;
                }
                return socketOptionsBuilder_;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.setUnknownFieldsProto3(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:envoy.api.v2.core.BindConfig)
        }

        // @@protoc_insertion_point(class_scope:envoy.api.v2.core.BindConfig)
        private static final AddressOuterClass.BindConfig DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new AddressOuterClass.BindConfig();
        }

        public static AddressOuterClass.BindConfig getDefaultInstance() {

            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<BindConfig>
                PARSER = new com.google.protobuf.AbstractParser<BindConfig>() {
            @java.lang.Override
            public BindConfig parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return new BindConfig(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<BindConfig> parser() {

            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<BindConfig> getParserForType() {

            return PARSER;
        }

        @java.lang.Override
        public AddressOuterClass.BindConfig getDefaultInstanceForType() {

            return DEFAULT_INSTANCE;
        }

    }

    public interface AddressOrBuilder extends
            // @@protoc_insertion_point(interface_extends:envoy.api.v2.core.Address)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>.envoy.api.v2.core.SocketAddress socket_address = 1;</code>
         */
        boolean hasSocketAddress();

        /**
         * <code>.envoy.api.v2.core.SocketAddress socket_address = 1;</code>
         */
        AddressOuterClass.SocketAddress getSocketAddress();

        /**
         * <code>.envoy.api.v2.core.SocketAddress socket_address = 1;</code>
         */
        AddressOuterClass.SocketAddressOrBuilder getSocketAddressOrBuilder();

        /**
         * <code>.envoy.api.v2.core.Pipe pipe = 2;</code>
         */
        boolean hasPipe();

        /**
         * <code>.envoy.api.v2.core.Pipe pipe = 2;</code>
         */
        AddressOuterClass.Pipe getPipe();

        /**
         * <code>.envoy.api.v2.core.Pipe pipe = 2;</code>
         */
        AddressOuterClass.PipeOrBuilder getPipeOrBuilder();

        public AddressOuterClass.Address.AddressCase getAddressCase();
    }

    /**
     * <pre>
     * Addresses specify either a logical or physical address and port, which are
     * used to tell Envoy where to bind/listen, connect to upstream and find
     * management servers.
     * </pre>
     * <p>
     * Protobuf type {@code envoy.api.v2.core.Address}
     */
    public static final class Address extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:envoy.api.v2.core.Address)
            AddressOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use Address.newBuilder() to construct.
        private Address(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

            super(builder);
        }

        private Address() {

        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {

            return this.unknownFields;
        }

        private Address(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10: {
                            AddressOuterClass.SocketAddress.Builder subBuilder = null;
                            if (addressCase_ == 1) {
                                subBuilder = ((AddressOuterClass.SocketAddress) address_).toBuilder();
                            }
                            address_ =
                                    input.readMessage(AddressOuterClass.SocketAddress.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom((AddressOuterClass.SocketAddress) address_);
                                address_ = subBuilder.buildPartial();
                            }
                            addressCase_ = 1;
                            break;
                        }
                        case 18: {
                            AddressOuterClass.Pipe.Builder subBuilder = null;
                            if (addressCase_ == 2) {
                                subBuilder = ((AddressOuterClass.Pipe) address_).toBuilder();
                            }
                            address_ =
                                    input.readMessage(AddressOuterClass.Pipe.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom((AddressOuterClass.Pipe) address_);
                                address_ = subBuilder.buildPartial();
                            }
                            addressCase_ = 2;
                            break;
                        }
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {

            return AddressOuterClass.internal_static_envoy_api_v2_core_Address_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {

            return AddressOuterClass.internal_static_envoy_api_v2_core_Address_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            AddressOuterClass.Address.class, AddressOuterClass.Address.Builder.class);
        }

        private int addressCase_ = 0;
        private java.lang.Object address_;

        public enum AddressCase
                implements com.google.protobuf.Internal.EnumLite {
            SOCKET_ADDRESS(1),
            PIPE(2),
            ADDRESS_NOT_SET(0);
            private final int value;

            private AddressCase(int value) {

                this.value = value;
            }

            /**
             * @deprecated Use {@link #forNumber(int)} instead.
             */
            @java.lang.Deprecated
            public static AddressCase valueOf(int value) {

                return forNumber(value);
            }

            public static AddressCase forNumber(int value) {

                switch (value) {
                    case 1:
                        return SOCKET_ADDRESS;
                    case 2:
                        return PIPE;
                    case 0:
                        return ADDRESS_NOT_SET;
                    default:
                        return null;
                }
            }

            public int getNumber() {

                return this.value;
            }
        }

        ;

        public AddressCase
        getAddressCase() {

            return AddressCase.forNumber(
                    addressCase_);
        }

        public static final int SOCKET_ADDRESS_FIELD_NUMBER = 1;

        /**
         * <code>.envoy.api.v2.core.SocketAddress socket_address = 1;</code>
         */
        public boolean hasSocketAddress() {

            return addressCase_ == 1;
        }

        /**
         * <code>.envoy.api.v2.core.SocketAddress socket_address = 1;</code>
         */
        public AddressOuterClass.SocketAddress getSocketAddress() {

            if (addressCase_ == 1) {
                return (AddressOuterClass.SocketAddress) address_;
            }
            return AddressOuterClass.SocketAddress.getDefaultInstance();
        }

        /**
         * <code>.envoy.api.v2.core.SocketAddress socket_address = 1;</code>
         */
        public AddressOuterClass.SocketAddressOrBuilder getSocketAddressOrBuilder() {

            if (addressCase_ == 1) {
                return (AddressOuterClass.SocketAddress) address_;
            }
            return AddressOuterClass.SocketAddress.getDefaultInstance();
        }

        public static final int PIPE_FIELD_NUMBER = 2;

        /**
         * <code>.envoy.api.v2.core.Pipe pipe = 2;</code>
         */
        public boolean hasPipe() {

            return addressCase_ == 2;
        }

        /**
         * <code>.envoy.api.v2.core.Pipe pipe = 2;</code>
         */
        public AddressOuterClass.Pipe getPipe() {

            if (addressCase_ == 2) {
                return (AddressOuterClass.Pipe) address_;
            }
            return AddressOuterClass.Pipe.getDefaultInstance();
        }

        /**
         * <code>.envoy.api.v2.core.Pipe pipe = 2;</code>
         */
        public AddressOuterClass.PipeOrBuilder getPipeOrBuilder() {

            if (addressCase_ == 2) {
                return (AddressOuterClass.Pipe) address_;
            }
            return AddressOuterClass.Pipe.getDefaultInstance();
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {

            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {

            if (addressCase_ == 1) {
                output.writeMessage(1, (AddressOuterClass.SocketAddress) address_);
            }
            if (addressCase_ == 2) {
                output.writeMessage(2, (AddressOuterClass.Pipe) address_);
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {

            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (addressCase_ == 1) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, (AddressOuterClass.SocketAddress) address_);
            }
            if (addressCase_ == 2) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, (AddressOuterClass.Pipe) address_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {

            if (obj == this) {
                return true;
            }
            if (!(obj instanceof AddressOuterClass.Address)) {
                return super.equals(obj);
            }
            AddressOuterClass.Address other = (AddressOuterClass.Address) obj;

            boolean result = true;
            result = result && getAddressCase().equals(
                    other.getAddressCase());
            if (!result) return false;
            switch (addressCase_) {
                case 1:
                    result = result && getSocketAddress()
                            .equals(other.getSocketAddress());
                    break;
                case 2:
                    result = result && getPipe()
                            .equals(other.getPipe());
                    break;
                case 0:
                default:
            }
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {

            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            switch (addressCase_) {
                case 1:
                    hash = (37 * hash) + SOCKET_ADDRESS_FIELD_NUMBER;
                    hash = (53 * hash) + getSocketAddress().hashCode();
                    break;
                case 2:
                    hash = (37 * hash) + PIPE_FIELD_NUMBER;
                    hash = (53 * hash) + getPipe().hashCode();
                    break;
                case 0:
                default:
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static AddressOuterClass.Address parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static AddressOuterClass.Address parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static AddressOuterClass.Address parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static AddressOuterClass.Address parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static AddressOuterClass.Address parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static AddressOuterClass.Address parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static AddressOuterClass.Address parseFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static AddressOuterClass.Address parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static AddressOuterClass.Address parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static AddressOuterClass.Address parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static AddressOuterClass.Address parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static AddressOuterClass.Address parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {

            return newBuilder();
        }

        public static Builder newBuilder() {

            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(AddressOuterClass.Address prototype) {

            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {

            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * Addresses specify either a logical or physical address and port, which are
         * used to tell Envoy where to bind/listen, connect to upstream and find
         * management servers.
         * </pre>
         * <p>
         * Protobuf type {@code envoy.api.v2.core.Address}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:envoy.api.v2.core.Address)
                AddressOuterClass.AddressOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return AddressOuterClass.internal_static_envoy_api_v2_core_Address_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return AddressOuterClass.internal_static_envoy_api_v2_core_Address_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                AddressOuterClass.Address.class, AddressOuterClass.Address.Builder.class);
            }

            // Construct using envoy.api.v2.core.AddressOuterClass.Address.newBuilder()
            private Builder() {

                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {

                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @java.lang.Override
            public Builder clear() {

                super.clear();
                addressCase_ = 0;
                address_ = null;
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {

                return AddressOuterClass.internal_static_envoy_api_v2_core_Address_descriptor;
            }

            @java.lang.Override
            public AddressOuterClass.Address getDefaultInstanceForType() {

                return AddressOuterClass.Address.getDefaultInstance();
            }

            @java.lang.Override
            public AddressOuterClass.Address build() {

                AddressOuterClass.Address result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public AddressOuterClass.Address buildPartial() {

                AddressOuterClass.Address result = new AddressOuterClass.Address(this);
                if (addressCase_ == 1) {
                    if (socketAddressBuilder_ == null) {
                        result.address_ = address_;
                    } else {
                        result.address_ = socketAddressBuilder_.build();
                    }
                }
                if (addressCase_ == 2) {
                    if (pipeBuilder_ == null) {
                        result.address_ = address_;
                    } else {
                        result.address_ = pipeBuilder_.build();
                    }
                }
                result.addressCase_ = addressCase_;
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {

                return (Builder) super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {

                return (Builder) super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                return (Builder) super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {

                return (Builder) super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {

                if (other instanceof AddressOuterClass.Address) {
                    return mergeFrom((AddressOuterClass.Address) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(AddressOuterClass.Address other) {

                if (other == AddressOuterClass.Address.getDefaultInstance()) return this;
                switch (other.getAddressCase()) {
                    case SOCKET_ADDRESS: {
                        mergeSocketAddress(other.getSocketAddress());
                        break;
                    }
                    case PIPE: {
                        mergePipe(other.getPipe());
                        break;
                    }
                    case ADDRESS_NOT_SET: {
                        break;
                    }
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {

                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                AddressOuterClass.Address parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (AddressOuterClass.Address) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int addressCase_ = 0;
            private java.lang.Object address_;

            public AddressCase
            getAddressCase() {

                return AddressCase.forNumber(
                        addressCase_);
            }

            public Builder clearAddress() {

                addressCase_ = 0;
                address_ = null;
                onChanged();
                return this;
            }

            private com.google.protobuf.SingleFieldBuilderV3<
                    AddressOuterClass.SocketAddress, AddressOuterClass.SocketAddress.Builder, AddressOuterClass.SocketAddressOrBuilder> socketAddressBuilder_;

            /**
             * <code>.envoy.api.v2.core.SocketAddress socket_address = 1;</code>
             */
            public boolean hasSocketAddress() {

                return addressCase_ == 1;
            }

            /**
             * <code>.envoy.api.v2.core.SocketAddress socket_address = 1;</code>
             */
            public AddressOuterClass.SocketAddress getSocketAddress() {

                if (socketAddressBuilder_ == null) {
                    if (addressCase_ == 1) {
                        return (AddressOuterClass.SocketAddress) address_;
                    }
                    return AddressOuterClass.SocketAddress.getDefaultInstance();
                } else {
                    if (addressCase_ == 1) {
                        return socketAddressBuilder_.getMessage();
                    }
                    return AddressOuterClass.SocketAddress.getDefaultInstance();
                }
            }

            /**
             * <code>.envoy.api.v2.core.SocketAddress socket_address = 1;</code>
             */
            public Builder setSocketAddress(AddressOuterClass.SocketAddress value) {

                if (socketAddressBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    address_ = value;
                    onChanged();
                } else {
                    socketAddressBuilder_.setMessage(value);
                }
                addressCase_ = 1;
                return this;
            }

            /**
             * <code>.envoy.api.v2.core.SocketAddress socket_address = 1;</code>
             */
            public Builder setSocketAddress(
                    AddressOuterClass.SocketAddress.Builder builderForValue) {

                if (socketAddressBuilder_ == null) {
                    address_ = builderForValue.build();
                    onChanged();
                } else {
                    socketAddressBuilder_.setMessage(builderForValue.build());
                }
                addressCase_ = 1;
                return this;
            }

            /**
             * <code>.envoy.api.v2.core.SocketAddress socket_address = 1;</code>
             */
            public Builder mergeSocketAddress(AddressOuterClass.SocketAddress value) {

                if (socketAddressBuilder_ == null) {
                    if (addressCase_ == 1 &&
                            address_ != AddressOuterClass.SocketAddress.getDefaultInstance()) {
                        address_ = AddressOuterClass.SocketAddress.newBuilder((AddressOuterClass.SocketAddress) address_)
                                .mergeFrom(value).buildPartial();
                    } else {
                        address_ = value;
                    }
                    onChanged();
                } else {
                    if (addressCase_ == 1) {
                        socketAddressBuilder_.mergeFrom(value);
                    }
                    socketAddressBuilder_.setMessage(value);
                }
                addressCase_ = 1;
                return this;
            }

            /**
             * <code>.envoy.api.v2.core.SocketAddress socket_address = 1;</code>
             */
            public Builder clearSocketAddress() {

                if (socketAddressBuilder_ == null) {
                    if (addressCase_ == 1) {
                        addressCase_ = 0;
                        address_ = null;
                        onChanged();
                    }
                } else {
                    if (addressCase_ == 1) {
                        addressCase_ = 0;
                        address_ = null;
                    }
                    socketAddressBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>.envoy.api.v2.core.SocketAddress socket_address = 1;</code>
             */
            public AddressOuterClass.SocketAddress.Builder getSocketAddressBuilder() {

                return getSocketAddressFieldBuilder().getBuilder();
            }

            /**
             * <code>.envoy.api.v2.core.SocketAddress socket_address = 1;</code>
             */
            public AddressOuterClass.SocketAddressOrBuilder getSocketAddressOrBuilder() {

                if ((addressCase_ == 1) && (socketAddressBuilder_ != null)) {
                    return socketAddressBuilder_.getMessageOrBuilder();
                } else {
                    if (addressCase_ == 1) {
                        return (AddressOuterClass.SocketAddress) address_;
                    }
                    return AddressOuterClass.SocketAddress.getDefaultInstance();
                }
            }

            /**
             * <code>.envoy.api.v2.core.SocketAddress socket_address = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    AddressOuterClass.SocketAddress, AddressOuterClass.SocketAddress.Builder, AddressOuterClass.SocketAddressOrBuilder>
            getSocketAddressFieldBuilder() {

                if (socketAddressBuilder_ == null) {
                    if (!(addressCase_ == 1)) {
                        address_ = AddressOuterClass.SocketAddress.getDefaultInstance();
                    }
                    socketAddressBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            AddressOuterClass.SocketAddress, AddressOuterClass.SocketAddress.Builder, AddressOuterClass.SocketAddressOrBuilder>(
                            (AddressOuterClass.SocketAddress) address_,
                            getParentForChildren(),
                            isClean());
                    address_ = null;
                }
                addressCase_ = 1;
                onChanged();
                ;
                return socketAddressBuilder_;
            }

            private com.google.protobuf.SingleFieldBuilderV3<
                    AddressOuterClass.Pipe, AddressOuterClass.Pipe.Builder, AddressOuterClass.PipeOrBuilder> pipeBuilder_;

            /**
             * <code>.envoy.api.v2.core.Pipe pipe = 2;</code>
             */
            public boolean hasPipe() {

                return addressCase_ == 2;
            }

            /**
             * <code>.envoy.api.v2.core.Pipe pipe = 2;</code>
             */
            public AddressOuterClass.Pipe getPipe() {

                if (pipeBuilder_ == null) {
                    if (addressCase_ == 2) {
                        return (AddressOuterClass.Pipe) address_;
                    }
                    return AddressOuterClass.Pipe.getDefaultInstance();
                } else {
                    if (addressCase_ == 2) {
                        return pipeBuilder_.getMessage();
                    }
                    return AddressOuterClass.Pipe.getDefaultInstance();
                }
            }

            /**
             * <code>.envoy.api.v2.core.Pipe pipe = 2;</code>
             */
            public Builder setPipe(AddressOuterClass.Pipe value) {

                if (pipeBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    address_ = value;
                    onChanged();
                } else {
                    pipeBuilder_.setMessage(value);
                }
                addressCase_ = 2;
                return this;
            }

            /**
             * <code>.envoy.api.v2.core.Pipe pipe = 2;</code>
             */
            public Builder setPipe(
                    AddressOuterClass.Pipe.Builder builderForValue) {

                if (pipeBuilder_ == null) {
                    address_ = builderForValue.build();
                    onChanged();
                } else {
                    pipeBuilder_.setMessage(builderForValue.build());
                }
                addressCase_ = 2;
                return this;
            }

            /**
             * <code>.envoy.api.v2.core.Pipe pipe = 2;</code>
             */
            public Builder mergePipe(AddressOuterClass.Pipe value) {

                if (pipeBuilder_ == null) {
                    if (addressCase_ == 2 &&
                            address_ != AddressOuterClass.Pipe.getDefaultInstance()) {
                        address_ = AddressOuterClass.Pipe.newBuilder((AddressOuterClass.Pipe) address_)
                                .mergeFrom(value).buildPartial();
                    } else {
                        address_ = value;
                    }
                    onChanged();
                } else {
                    if (addressCase_ == 2) {
                        pipeBuilder_.mergeFrom(value);
                    }
                    pipeBuilder_.setMessage(value);
                }
                addressCase_ = 2;
                return this;
            }

            /**
             * <code>.envoy.api.v2.core.Pipe pipe = 2;</code>
             */
            public Builder clearPipe() {

                if (pipeBuilder_ == null) {
                    if (addressCase_ == 2) {
                        addressCase_ = 0;
                        address_ = null;
                        onChanged();
                    }
                } else {
                    if (addressCase_ == 2) {
                        addressCase_ = 0;
                        address_ = null;
                    }
                    pipeBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>.envoy.api.v2.core.Pipe pipe = 2;</code>
             */
            public AddressOuterClass.Pipe.Builder getPipeBuilder() {

                return getPipeFieldBuilder().getBuilder();
            }

            /**
             * <code>.envoy.api.v2.core.Pipe pipe = 2;</code>
             */
            public AddressOuterClass.PipeOrBuilder getPipeOrBuilder() {

                if ((addressCase_ == 2) && (pipeBuilder_ != null)) {
                    return pipeBuilder_.getMessageOrBuilder();
                } else {
                    if (addressCase_ == 2) {
                        return (AddressOuterClass.Pipe) address_;
                    }
                    return AddressOuterClass.Pipe.getDefaultInstance();
                }
            }

            /**
             * <code>.envoy.api.v2.core.Pipe pipe = 2;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    AddressOuterClass.Pipe, AddressOuterClass.Pipe.Builder, AddressOuterClass.PipeOrBuilder>
            getPipeFieldBuilder() {

                if (pipeBuilder_ == null) {
                    if (!(addressCase_ == 2)) {
                        address_ = AddressOuterClass.Pipe.getDefaultInstance();
                    }
                    pipeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            AddressOuterClass.Pipe, AddressOuterClass.Pipe.Builder, AddressOuterClass.PipeOrBuilder>(
                            (AddressOuterClass.Pipe) address_,
                            getParentForChildren(),
                            isClean());
                    address_ = null;
                }
                addressCase_ = 2;
                onChanged();
                ;
                return pipeBuilder_;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.setUnknownFieldsProto3(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:envoy.api.v2.core.Address)
        }

        // @@protoc_insertion_point(class_scope:envoy.api.v2.core.Address)
        private static final AddressOuterClass.Address DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new AddressOuterClass.Address();
        }

        public static AddressOuterClass.Address getDefaultInstance() {

            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Address>
                PARSER = new com.google.protobuf.AbstractParser<Address>() {
            @java.lang.Override
            public Address parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return new Address(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<Address> parser() {

            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Address> getParserForType() {

            return PARSER;
        }

        @java.lang.Override
        public AddressOuterClass.Address getDefaultInstanceForType() {

            return DEFAULT_INSTANCE;
        }

    }

    public interface CidrRangeOrBuilder extends
            // @@protoc_insertion_point(interface_extends:envoy.api.v2.core.CidrRange)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * IPv4 or IPv6 address, e.g. ``192.0.0.0`` or ``2001:db8::``.
         * </pre>
         *
         * <code>string address_prefix = 1 [(.validate.rules) = { ... }</code>
         */
        java.lang.String getAddressPrefix();

        /**
         * <pre>
         * IPv4 or IPv6 address, e.g. ``192.0.0.0`` or ``2001:db8::``.
         * </pre>
         *
         * <code>string address_prefix = 1 [(.validate.rules) = { ... }</code>
         */
        com.google.protobuf.ByteString
        getAddressPrefixBytes();

        /**
         * <pre>
         * Length of prefix, e.g. 0, 32.
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value prefix_len = 2 [(.validate.rules) = { ... }</code>
         */
        boolean hasPrefixLen();

        /**
         * <pre>
         * Length of prefix, e.g. 0, 32.
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value prefix_len = 2 [(.validate.rules) = { ... }</code>
         */
        com.google.protobuf.UInt32Value getPrefixLen();

        /**
         * <pre>
         * Length of prefix, e.g. 0, 32.
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value prefix_len = 2 [(.validate.rules) = { ... }</code>
         */
        com.google.protobuf.UInt32ValueOrBuilder getPrefixLenOrBuilder();
    }

    /**
     * <pre>
     * CidrRange specifies an IP Address and a prefix length to construct
     * the subnet mask for a `CIDR &lt;https://tools.ietf.org/html/rfc4632&gt;`_ range.
     * </pre>
     * <p>
     * Protobuf type {@code envoy.api.v2.core.CidrRange}
     */
    public static final class CidrRange extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:envoy.api.v2.core.CidrRange)
            CidrRangeOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use CidrRange.newBuilder() to construct.
        private CidrRange(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

            super(builder);
        }

        private CidrRange() {

            addressPrefix_ = "";
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {

            return this.unknownFields;
        }

        private CidrRange(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10: {
                            java.lang.String s = input.readStringRequireUtf8();

                            addressPrefix_ = s;
                            break;
                        }
                        case 18: {
                            com.google.protobuf.UInt32Value.Builder subBuilder = null;
                            if (prefixLen_ != null) {
                                subBuilder = prefixLen_.toBuilder();
                            }
                            prefixLen_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(prefixLen_);
                                prefixLen_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {

            return AddressOuterClass.internal_static_envoy_api_v2_core_CidrRange_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {

            return AddressOuterClass.internal_static_envoy_api_v2_core_CidrRange_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            AddressOuterClass.CidrRange.class, AddressOuterClass.CidrRange.Builder.class);
        }

        public static final int ADDRESS_PREFIX_FIELD_NUMBER = 1;
        private volatile java.lang.Object addressPrefix_;

        /**
         * <pre>
         * IPv4 or IPv6 address, e.g. ``192.0.0.0`` or ``2001:db8::``.
         * </pre>
         *
         * <code>string address_prefix = 1 [(.validate.rules) = { ... }</code>
         */
        public java.lang.String getAddressPrefix() {

            java.lang.Object ref = addressPrefix_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                addressPrefix_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * IPv4 or IPv6 address, e.g. ``192.0.0.0`` or ``2001:db8::``.
         * </pre>
         *
         * <code>string address_prefix = 1 [(.validate.rules) = { ... }</code>
         */
        public com.google.protobuf.ByteString
        getAddressPrefixBytes() {

            java.lang.Object ref = addressPrefix_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                addressPrefix_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int PREFIX_LEN_FIELD_NUMBER = 2;
        private com.google.protobuf.UInt32Value prefixLen_;

        /**
         * <pre>
         * Length of prefix, e.g. 0, 32.
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value prefix_len = 2 [(.validate.rules) = { ... }</code>
         */
        public boolean hasPrefixLen() {

            return prefixLen_ != null;
        }

        /**
         * <pre>
         * Length of prefix, e.g. 0, 32.
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value prefix_len = 2 [(.validate.rules) = { ... }</code>
         */
        public com.google.protobuf.UInt32Value getPrefixLen() {

            return prefixLen_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : prefixLen_;
        }

        /**
         * <pre>
         * Length of prefix, e.g. 0, 32.
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value prefix_len = 2 [(.validate.rules) = { ... }</code>
         */
        public com.google.protobuf.UInt32ValueOrBuilder getPrefixLenOrBuilder() {

            return getPrefixLen();
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {

            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {

            if (!getAddressPrefixBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, addressPrefix_);
            }
            if (prefixLen_ != null) {
                output.writeMessage(2, getPrefixLen());
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {

            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getAddressPrefixBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, addressPrefix_);
            }
            if (prefixLen_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, getPrefixLen());
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {

            if (obj == this) {
                return true;
            }
            if (!(obj instanceof AddressOuterClass.CidrRange)) {
                return super.equals(obj);
            }
            AddressOuterClass.CidrRange other = (AddressOuterClass.CidrRange) obj;

            boolean result = true;
            result = result && getAddressPrefix()
                    .equals(other.getAddressPrefix());
            result = result && (hasPrefixLen() == other.hasPrefixLen());
            if (hasPrefixLen()) {
                result = result && getPrefixLen()
                        .equals(other.getPrefixLen());
            }
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {

            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + ADDRESS_PREFIX_FIELD_NUMBER;
            hash = (53 * hash) + getAddressPrefix().hashCode();
            if (hasPrefixLen()) {
                hash = (37 * hash) + PREFIX_LEN_FIELD_NUMBER;
                hash = (53 * hash) + getPrefixLen().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static AddressOuterClass.CidrRange parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static AddressOuterClass.CidrRange parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static AddressOuterClass.CidrRange parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static AddressOuterClass.CidrRange parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static AddressOuterClass.CidrRange parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static AddressOuterClass.CidrRange parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static AddressOuterClass.CidrRange parseFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static AddressOuterClass.CidrRange parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static AddressOuterClass.CidrRange parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static AddressOuterClass.CidrRange parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static AddressOuterClass.CidrRange parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static AddressOuterClass.CidrRange parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {

            return newBuilder();
        }

        public static Builder newBuilder() {

            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(AddressOuterClass.CidrRange prototype) {

            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {

            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * CidrRange specifies an IP Address and a prefix length to construct
         * the subnet mask for a `CIDR &lt;https://tools.ietf.org/html/rfc4632&gt;`_ range.
         * </pre>
         * <p>
         * Protobuf type {@code envoy.api.v2.core.CidrRange}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:envoy.api.v2.core.CidrRange)
                AddressOuterClass.CidrRangeOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return AddressOuterClass.internal_static_envoy_api_v2_core_CidrRange_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return AddressOuterClass.internal_static_envoy_api_v2_core_CidrRange_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                AddressOuterClass.CidrRange.class, AddressOuterClass.CidrRange.Builder.class);
            }

            // Construct using envoy.api.v2.core.AddressOuterClass.CidrRange.newBuilder()
            private Builder() {

                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {

                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @java.lang.Override
            public Builder clear() {

                super.clear();
                addressPrefix_ = "";

                if (prefixLenBuilder_ == null) {
                    prefixLen_ = null;
                } else {
                    prefixLen_ = null;
                    prefixLenBuilder_ = null;
                }
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {

                return AddressOuterClass.internal_static_envoy_api_v2_core_CidrRange_descriptor;
            }

            @java.lang.Override
            public AddressOuterClass.CidrRange getDefaultInstanceForType() {

                return AddressOuterClass.CidrRange.getDefaultInstance();
            }

            @java.lang.Override
            public AddressOuterClass.CidrRange build() {

                AddressOuterClass.CidrRange result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public AddressOuterClass.CidrRange buildPartial() {

                AddressOuterClass.CidrRange result = new AddressOuterClass.CidrRange(this);
                result.addressPrefix_ = addressPrefix_;
                if (prefixLenBuilder_ == null) {
                    result.prefixLen_ = prefixLen_;
                } else {
                    result.prefixLen_ = prefixLenBuilder_.build();
                }
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {

                return (Builder) super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {

                return (Builder) super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                return (Builder) super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {

                return (Builder) super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {

                if (other instanceof AddressOuterClass.CidrRange) {
                    return mergeFrom((AddressOuterClass.CidrRange) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(AddressOuterClass.CidrRange other) {

                if (other == AddressOuterClass.CidrRange.getDefaultInstance()) return this;
                if (!other.getAddressPrefix().isEmpty()) {
                    addressPrefix_ = other.addressPrefix_;
                    onChanged();
                }
                if (other.hasPrefixLen()) {
                    mergePrefixLen(other.getPrefixLen());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {

                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                AddressOuterClass.CidrRange parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (AddressOuterClass.CidrRange) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private java.lang.Object addressPrefix_ = "";

            /**
             * <pre>
             * IPv4 or IPv6 address, e.g. ``192.0.0.0`` or ``2001:db8::``.
             * </pre>
             *
             * <code>string address_prefix = 1 [(.validate.rules) = { ... }</code>
             */
            public java.lang.String getAddressPrefix() {

                java.lang.Object ref = addressPrefix_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    addressPrefix_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * IPv4 or IPv6 address, e.g. ``192.0.0.0`` or ``2001:db8::``.
             * </pre>
             *
             * <code>string address_prefix = 1 [(.validate.rules) = { ... }</code>
             */
            public com.google.protobuf.ByteString
            getAddressPrefixBytes() {

                java.lang.Object ref = addressPrefix_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    addressPrefix_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * IPv4 or IPv6 address, e.g. ``192.0.0.0`` or ``2001:db8::``.
             * </pre>
             *
             * <code>string address_prefix = 1 [(.validate.rules) = { ... }</code>
             */
            public Builder setAddressPrefix(
                    java.lang.String value) {

                if (value == null) {
                    throw new NullPointerException();
                }

                addressPrefix_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * IPv4 or IPv6 address, e.g. ``192.0.0.0`` or ``2001:db8::``.
             * </pre>
             *
             * <code>string address_prefix = 1 [(.validate.rules) = { ... }</code>
             */
            public Builder clearAddressPrefix() {

                addressPrefix_ = getDefaultInstance().getAddressPrefix();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * IPv4 or IPv6 address, e.g. ``192.0.0.0`` or ``2001:db8::``.
             * </pre>
             *
             * <code>string address_prefix = 1 [(.validate.rules) = { ... }</code>
             */
            public Builder setAddressPrefixBytes(
                    com.google.protobuf.ByteString value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                addressPrefix_ = value;
                onChanged();
                return this;
            }

            private com.google.protobuf.UInt32Value prefixLen_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> prefixLenBuilder_;

            /**
             * <pre>
             * Length of prefix, e.g. 0, 32.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value prefix_len = 2 [(.validate.rules) = { ... }</code>
             */
            public boolean hasPrefixLen() {

                return prefixLenBuilder_ != null || prefixLen_ != null;
            }

            /**
             * <pre>
             * Length of prefix, e.g. 0, 32.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value prefix_len = 2 [(.validate.rules) = { ... }</code>
             */
            public com.google.protobuf.UInt32Value getPrefixLen() {

                if (prefixLenBuilder_ == null) {
                    return prefixLen_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : prefixLen_;
                } else {
                    return prefixLenBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Length of prefix, e.g. 0, 32.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value prefix_len = 2 [(.validate.rules) = { ... }</code>
             */
            public Builder setPrefixLen(com.google.protobuf.UInt32Value value) {

                if (prefixLenBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    prefixLen_ = value;
                    onChanged();
                } else {
                    prefixLenBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * Length of prefix, e.g. 0, 32.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value prefix_len = 2 [(.validate.rules) = { ... }</code>
             */
            public Builder setPrefixLen(
                    com.google.protobuf.UInt32Value.Builder builderForValue) {

                if (prefixLenBuilder_ == null) {
                    prefixLen_ = builderForValue.build();
                    onChanged();
                } else {
                    prefixLenBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * Length of prefix, e.g. 0, 32.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value prefix_len = 2 [(.validate.rules) = { ... }</code>
             */
            public Builder mergePrefixLen(com.google.protobuf.UInt32Value value) {

                if (prefixLenBuilder_ == null) {
                    if (prefixLen_ != null) {
                        prefixLen_ =
                                com.google.protobuf.UInt32Value.newBuilder(prefixLen_).mergeFrom(value).buildPartial();
                    } else {
                        prefixLen_ = value;
                    }
                    onChanged();
                } else {
                    prefixLenBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * Length of prefix, e.g. 0, 32.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value prefix_len = 2 [(.validate.rules) = { ... }</code>
             */
            public Builder clearPrefixLen() {

                if (prefixLenBuilder_ == null) {
                    prefixLen_ = null;
                    onChanged();
                } else {
                    prefixLen_ = null;
                    prefixLenBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * Length of prefix, e.g. 0, 32.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value prefix_len = 2 [(.validate.rules) = { ... }</code>
             */
            public com.google.protobuf.UInt32Value.Builder getPrefixLenBuilder() {

                onChanged();
                return getPrefixLenFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Length of prefix, e.g. 0, 32.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value prefix_len = 2 [(.validate.rules) = { ... }</code>
             */
            public com.google.protobuf.UInt32ValueOrBuilder getPrefixLenOrBuilder() {

                if (prefixLenBuilder_ != null) {
                    return prefixLenBuilder_.getMessageOrBuilder();
                } else {
                    return prefixLen_ == null ?
                            com.google.protobuf.UInt32Value.getDefaultInstance() : prefixLen_;
                }
            }

            /**
             * <pre>
             * Length of prefix, e.g. 0, 32.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value prefix_len = 2 [(.validate.rules) = { ... }</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>
            getPrefixLenFieldBuilder() {

                if (prefixLenBuilder_ == null) {
                    prefixLenBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                            getPrefixLen(),
                            getParentForChildren(),
                            isClean());
                    prefixLen_ = null;
                }
                return prefixLenBuilder_;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.setUnknownFieldsProto3(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:envoy.api.v2.core.CidrRange)
        }

        // @@protoc_insertion_point(class_scope:envoy.api.v2.core.CidrRange)
        private static final AddressOuterClass.CidrRange DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new AddressOuterClass.CidrRange();
        }

        public static AddressOuterClass.CidrRange getDefaultInstance() {

            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<CidrRange>
                PARSER = new com.google.protobuf.AbstractParser<CidrRange>() {
            @java.lang.Override
            public CidrRange parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return new CidrRange(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<CidrRange> parser() {

            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<CidrRange> getParserForType() {

            return PARSER;
        }

        @java.lang.Override
        public AddressOuterClass.CidrRange getDefaultInstanceForType() {

            return DEFAULT_INSTANCE;
        }

    }

    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_envoy_api_v2_core_Pipe_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_envoy_api_v2_core_Pipe_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_envoy_api_v2_core_SocketAddress_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_envoy_api_v2_core_SocketAddress_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_envoy_api_v2_core_TcpKeepalive_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_envoy_api_v2_core_TcpKeepalive_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_envoy_api_v2_core_BindConfig_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_envoy_api_v2_core_BindConfig_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_envoy_api_v2_core_Address_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_envoy_api_v2_core_Address_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_envoy_api_v2_core_CidrRange_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_envoy_api_v2_core_CidrRange_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {

        return descriptor;
    }

    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;

    static {
        java.lang.String[] descriptorData = {
                "\n\037envoy/api/v2/core/address.proto\022\021envoy" +
                        ".api.v2.core\032\034envoy/api/v2/core/base.pro" +
                        "to\032\036google/protobuf/wrappers.proto\032\027vali" +
                        "date/validate.proto\032\024gogoproto/gogo.prot" +
                        "o\"\037\n\004Pipe\022\027\n\004path\030\001 \001(\tB\t\272\351\300\003\004r\002 \001\"\226\002\n\rS" +
                        "ocketAddress\022G\n\010protocol\030\001 \001(\0162).envoy.a" +
                        "pi.v2.core.SocketAddress.ProtocolB\n\272\351\300\003\005" +
                        "\202\001\002\020\001\022\032\n\007address\030\002 \001(\tB\t\272\351\300\003\004r\002 \001\022!\n\npor" +
                        "t_value\030\003 \001(\rB\013\272\351\300\003\006*\004\030\377\377\003H\000\022\024\n\nnamed_po" +
                        "rt\030\004 \001(\tH\000\022\025\n\rresolver_name\030\005 \001(\t\022\023\n\013ipv" +
                        "4_compat\030\006 \001(\010\"\"\n\010Protocol\022\007\n\003TCP\020\000\022\007\n\003U" +
                        "DP\020\001\032\004\210\243\036\000B\027\n\016port_specifier\022\005\270\351\300\003\001\"\266\001\n\014" +
                        "TcpKeepalive\0226\n\020keepalive_probes\030\001 \001(\0132\034" +
                        ".google.protobuf.UInt32Value\0224\n\016keepaliv" +
                        "e_time\030\002 \001(\0132\034.google.protobuf.UInt32Val" +
                        "ue\0228\n\022keepalive_interval\030\003 \001(\0132\034.google." +
                        "protobuf.UInt32Value\"\275\001\n\nBindConfig\022H\n\016s" +
                        "ource_address\030\001 \001(\0132 .envoy.api.v2.core." +
                        "SocketAddressB\016\272\351\300\003\005\212\001\002\020\001\310\336\037\000\022,\n\010freebin" +
                        "d\030\002 \001(\0132\032.google.protobuf.BoolValue\0227\n\016s" +
                        "ocket_options\030\003 \003(\0132\037.envoy.api.v2.core." +
                        "SocketOption\"\200\001\n\007Address\022:\n\016socket_addre" +
                        "ss\030\001 \001(\0132 .envoy.api.v2.core.SocketAddre" +
                        "ssH\000\022\'\n\004pipe\030\002 \001(\0132\027.envoy.api.v2.core.P" +
                        "ipeH\000B\020\n\007address\022\005\270\351\300\003\001\"l\n\tCidrRange\022!\n\016" +
                        "address_prefix\030\001 \001(\tB\t\272\351\300\003\004r\002 \001\022<\n\nprefi" +
                        "x_len\030\002 \001(\0132\034.google.protobuf.UInt32Valu" +
                        "eB\n\272\351\300\003\005*\003\030\200\001B\004\250\342\036\001b\006proto3"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            com.google.protobuf.Descriptors.FileDescriptor root) {

                        descriptor = root;
                        return null;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[]{
                                Base.getDescriptor(),
                                com.google.protobuf.WrappersProto.getDescriptor(),
                                Validate.getDescriptor(),
                                com.google.protobuf.GoGoProtos.getDescriptor(),
                        }, assigner);
        internal_static_envoy_api_v2_core_Pipe_descriptor =
                getDescriptor().getMessageTypes().get(0);
        internal_static_envoy_api_v2_core_Pipe_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_envoy_api_v2_core_Pipe_descriptor,
                new java.lang.String[]{"Path",});
        internal_static_envoy_api_v2_core_SocketAddress_descriptor =
                getDescriptor().getMessageTypes().get(1);
        internal_static_envoy_api_v2_core_SocketAddress_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_envoy_api_v2_core_SocketAddress_descriptor,
                new java.lang.String[]{"Protocol", "Address", "PortValue", "NamedPort", "ResolverName", "Ipv4Compat", "PortSpecifier",});
        internal_static_envoy_api_v2_core_TcpKeepalive_descriptor =
                getDescriptor().getMessageTypes().get(2);
        internal_static_envoy_api_v2_core_TcpKeepalive_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_envoy_api_v2_core_TcpKeepalive_descriptor,
                new java.lang.String[]{"KeepaliveProbes", "KeepaliveTime", "KeepaliveInterval",});
        internal_static_envoy_api_v2_core_BindConfig_descriptor =
                getDescriptor().getMessageTypes().get(3);
        internal_static_envoy_api_v2_core_BindConfig_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_envoy_api_v2_core_BindConfig_descriptor,
                new java.lang.String[]{"SourceAddress", "Freebind", "SocketOptions",});
        internal_static_envoy_api_v2_core_Address_descriptor =
                getDescriptor().getMessageTypes().get(4);
        internal_static_envoy_api_v2_core_Address_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_envoy_api_v2_core_Address_descriptor,
                new java.lang.String[]{"SocketAddress", "Pipe", "Address",});
        internal_static_envoy_api_v2_core_CidrRange_descriptor =
                getDescriptor().getMessageTypes().get(5);
        internal_static_envoy_api_v2_core_CidrRange_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_envoy_api_v2_core_CidrRange_descriptor,
                new java.lang.String[]{"AddressPrefix", "PrefixLen",});
        com.google.protobuf.ExtensionRegistry registry =
                com.google.protobuf.ExtensionRegistry.newInstance();
        registry.add(com.google.protobuf.GoGoProtos.equalAll);
        registry.add(com.google.protobuf.GoGoProtos.goprotoEnumPrefix);
        registry.add(com.google.protobuf.GoGoProtos.nullable);
        registry.add(Validate.required);
        registry.add(Validate.rules);
        com.google.protobuf.Descriptors.FileDescriptor
                .internalUpdateFileDescriptor(descriptor, registry);
        Base.getDescriptor();
        com.google.protobuf.WrappersProto.getDescriptor();
        Validate.getDescriptor();
        com.google.protobuf.GoGoProtos.getDescriptor();
    }

    // @@protoc_insertion_point(outer_class_scope)
}
