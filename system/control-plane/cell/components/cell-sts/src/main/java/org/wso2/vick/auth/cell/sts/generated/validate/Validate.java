// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: validate.proto

package org.wso2.vick.auth.cell.sts.generated.validate;

public final class Validate {

    private Validate() {

    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {

        registry.add(Validate.disabled);
        registry.add(Validate.required);
        registry.add(Validate.rules);
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {

        registerAllExtensions(
                (com.google.protobuf.ExtensionRegistryLite) registry);
    }

    public interface FieldRulesOrBuilder extends
            // @@protoc_insertion_point(interface_extends:validate.FieldRules)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Scalar Field Types
         * </pre>
         *
         * <code>optional .validate.FloatRules float = 1;</code>
         */
        boolean hasFloat();

        /**
         * <pre>
         * Scalar Field Types
         * </pre>
         *
         * <code>optional .validate.FloatRules float = 1;</code>
         */
        Validate.FloatRules getFloat();

        /**
         * <pre>
         * Scalar Field Types
         * </pre>
         *
         * <code>optional .validate.FloatRules float = 1;</code>
         */
        Validate.FloatRulesOrBuilder getFloatOrBuilder();

        /**
         * <code>optional .validate.DoubleRules double = 2;</code>
         */
        boolean hasDouble();

        /**
         * <code>optional .validate.DoubleRules double = 2;</code>
         */
        Validate.DoubleRules getDouble();

        /**
         * <code>optional .validate.DoubleRules double = 2;</code>
         */
        Validate.DoubleRulesOrBuilder getDoubleOrBuilder();

        /**
         * <code>optional .validate.Int32Rules int32 = 3;</code>
         */
        boolean hasInt32();

        /**
         * <code>optional .validate.Int32Rules int32 = 3;</code>
         */
        Validate.Int32Rules getInt32();

        /**
         * <code>optional .validate.Int32Rules int32 = 3;</code>
         */
        Validate.Int32RulesOrBuilder getInt32OrBuilder();

        /**
         * <code>optional .validate.Int64Rules int64 = 4;</code>
         */
        boolean hasInt64();

        /**
         * <code>optional .validate.Int64Rules int64 = 4;</code>
         */
        Validate.Int64Rules getInt64();

        /**
         * <code>optional .validate.Int64Rules int64 = 4;</code>
         */
        Validate.Int64RulesOrBuilder getInt64OrBuilder();

        /**
         * <code>optional .validate.UInt32Rules uint32 = 5;</code>
         */
        boolean hasUint32();

        /**
         * <code>optional .validate.UInt32Rules uint32 = 5;</code>
         */
        Validate.UInt32Rules getUint32();

        /**
         * <code>optional .validate.UInt32Rules uint32 = 5;</code>
         */
        Validate.UInt32RulesOrBuilder getUint32OrBuilder();

        /**
         * <code>optional .validate.UInt64Rules uint64 = 6;</code>
         */
        boolean hasUint64();

        /**
         * <code>optional .validate.UInt64Rules uint64 = 6;</code>
         */
        Validate.UInt64Rules getUint64();

        /**
         * <code>optional .validate.UInt64Rules uint64 = 6;</code>
         */
        Validate.UInt64RulesOrBuilder getUint64OrBuilder();

        /**
         * <code>optional .validate.SInt32Rules sint32 = 7;</code>
         */
        boolean hasSint32();

        /**
         * <code>optional .validate.SInt32Rules sint32 = 7;</code>
         */
        Validate.SInt32Rules getSint32();

        /**
         * <code>optional .validate.SInt32Rules sint32 = 7;</code>
         */
        Validate.SInt32RulesOrBuilder getSint32OrBuilder();

        /**
         * <code>optional .validate.SInt64Rules sint64 = 8;</code>
         */
        boolean hasSint64();

        /**
         * <code>optional .validate.SInt64Rules sint64 = 8;</code>
         */
        Validate.SInt64Rules getSint64();

        /**
         * <code>optional .validate.SInt64Rules sint64 = 8;</code>
         */
        Validate.SInt64RulesOrBuilder getSint64OrBuilder();

        /**
         * <code>optional .validate.Fixed32Rules fixed32 = 9;</code>
         */
        boolean hasFixed32();

        /**
         * <code>optional .validate.Fixed32Rules fixed32 = 9;</code>
         */
        Validate.Fixed32Rules getFixed32();

        /**
         * <code>optional .validate.Fixed32Rules fixed32 = 9;</code>
         */
        Validate.Fixed32RulesOrBuilder getFixed32OrBuilder();

        /**
         * <code>optional .validate.Fixed64Rules fixed64 = 10;</code>
         */
        boolean hasFixed64();

        /**
         * <code>optional .validate.Fixed64Rules fixed64 = 10;</code>
         */
        Validate.Fixed64Rules getFixed64();

        /**
         * <code>optional .validate.Fixed64Rules fixed64 = 10;</code>
         */
        Validate.Fixed64RulesOrBuilder getFixed64OrBuilder();

        /**
         * <code>optional .validate.SFixed32Rules sfixed32 = 11;</code>
         */
        boolean hasSfixed32();

        /**
         * <code>optional .validate.SFixed32Rules sfixed32 = 11;</code>
         */
        Validate.SFixed32Rules getSfixed32();

        /**
         * <code>optional .validate.SFixed32Rules sfixed32 = 11;</code>
         */
        Validate.SFixed32RulesOrBuilder getSfixed32OrBuilder();

        /**
         * <code>optional .validate.SFixed64Rules sfixed64 = 12;</code>
         */
        boolean hasSfixed64();

        /**
         * <code>optional .validate.SFixed64Rules sfixed64 = 12;</code>
         */
        Validate.SFixed64Rules getSfixed64();

        /**
         * <code>optional .validate.SFixed64Rules sfixed64 = 12;</code>
         */
        Validate.SFixed64RulesOrBuilder getSfixed64OrBuilder();

        /**
         * <code>optional .validate.BoolRules bool = 13;</code>
         */
        boolean hasBool();

        /**
         * <code>optional .validate.BoolRules bool = 13;</code>
         */
        Validate.BoolRules getBool();

        /**
         * <code>optional .validate.BoolRules bool = 13;</code>
         */
        Validate.BoolRulesOrBuilder getBoolOrBuilder();

        /**
         * <code>optional .validate.StringRules string = 14;</code>
         */
        boolean hasString();

        /**
         * <code>optional .validate.StringRules string = 14;</code>
         */
        Validate.StringRules getString();

        /**
         * <code>optional .validate.StringRules string = 14;</code>
         */
        Validate.StringRulesOrBuilder getStringOrBuilder();

        /**
         * <code>optional .validate.BytesRules bytes = 15;</code>
         */
        boolean hasBytes();

        /**
         * <code>optional .validate.BytesRules bytes = 15;</code>
         */
        Validate.BytesRules getBytes();

        /**
         * <code>optional .validate.BytesRules bytes = 15;</code>
         */
        Validate.BytesRulesOrBuilder getBytesOrBuilder();

        /**
         * <pre>
         * Complex Field Types
         * </pre>
         *
         * <code>optional .validate.EnumRules enum = 16;</code>
         */
        boolean hasEnum();

        /**
         * <pre>
         * Complex Field Types
         * </pre>
         *
         * <code>optional .validate.EnumRules enum = 16;</code>
         */
        Validate.EnumRules getEnum();

        /**
         * <pre>
         * Complex Field Types
         * </pre>
         *
         * <code>optional .validate.EnumRules enum = 16;</code>
         */
        Validate.EnumRulesOrBuilder getEnumOrBuilder();

        /**
         * <code>optional .validate.MessageRules message = 17;</code>
         */
        boolean hasMessage();

        /**
         * <code>optional .validate.MessageRules message = 17;</code>
         */
        Validate.MessageRules getMessage();

        /**
         * <code>optional .validate.MessageRules message = 17;</code>
         */
        Validate.MessageRulesOrBuilder getMessageOrBuilder();

        /**
         * <code>optional .validate.RepeatedRules repeated = 18;</code>
         */
        boolean hasRepeated();

        /**
         * <code>optional .validate.RepeatedRules repeated = 18;</code>
         */
        Validate.RepeatedRules getRepeated();

        /**
         * <code>optional .validate.RepeatedRules repeated = 18;</code>
         */
        Validate.RepeatedRulesOrBuilder getRepeatedOrBuilder();

        /**
         * <code>optional .validate.MapRules map = 19;</code>
         */
        boolean hasMap();

        /**
         * <code>optional .validate.MapRules map = 19;</code>
         */
        Validate.MapRules getMap();

        /**
         * <code>optional .validate.MapRules map = 19;</code>
         */
        Validate.MapRulesOrBuilder getMapOrBuilder();

        /**
         * <pre>
         * Well-Known Field Types
         * </pre>
         *
         * <code>optional .validate.AnyRules any = 20;</code>
         */
        boolean hasAny();

        /**
         * <pre>
         * Well-Known Field Types
         * </pre>
         *
         * <code>optional .validate.AnyRules any = 20;</code>
         */
        Validate.AnyRules getAny();

        /**
         * <pre>
         * Well-Known Field Types
         * </pre>
         *
         * <code>optional .validate.AnyRules any = 20;</code>
         */
        Validate.AnyRulesOrBuilder getAnyOrBuilder();

        /**
         * <code>optional .validate.DurationRules duration = 21;</code>
         */
        boolean hasDuration();

        /**
         * <code>optional .validate.DurationRules duration = 21;</code>
         */
        Validate.DurationRules getDuration();

        /**
         * <code>optional .validate.DurationRules duration = 21;</code>
         */
        Validate.DurationRulesOrBuilder getDurationOrBuilder();

        /**
         * <code>optional .validate.TimestampRules timestamp = 22;</code>
         */
        boolean hasTimestamp();

        /**
         * <code>optional .validate.TimestampRules timestamp = 22;</code>
         */
        Validate.TimestampRules getTimestamp();

        /**
         * <code>optional .validate.TimestampRules timestamp = 22;</code>
         */
        Validate.TimestampRulesOrBuilder getTimestampOrBuilder();

        public Validate.FieldRules.TypeCase getTypeCase();
    }

    /**
     * <pre>
     * FieldRules encapsulates the rules for each type of field. Depending on the
     * field, the correct set should be used to ensure proper validations.
     * </pre>
     * <p>
     * Protobuf type {@code validate.FieldRules}
     */
    public static final class FieldRules extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:validate.FieldRules)
            FieldRulesOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use FieldRules.newBuilder() to construct.
        private FieldRules(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

            super(builder);
        }

        private FieldRules() {

        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {

            return this.unknownFields;
        }

        private FieldRules(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10: {
                            Validate.FloatRules.Builder subBuilder = null;
                            if (typeCase_ == 1) {
                                subBuilder = ((Validate.FloatRules) type_).toBuilder();
                            }
                            type_ =
                                    input.readMessage(Validate.FloatRules.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom((Validate.FloatRules) type_);
                                type_ = subBuilder.buildPartial();
                            }
                            typeCase_ = 1;
                            break;
                        }
                        case 18: {
                            Validate.DoubleRules.Builder subBuilder = null;
                            if (typeCase_ == 2) {
                                subBuilder = ((Validate.DoubleRules) type_).toBuilder();
                            }
                            type_ =
                                    input.readMessage(Validate.DoubleRules.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom((Validate.DoubleRules) type_);
                                type_ = subBuilder.buildPartial();
                            }
                            typeCase_ = 2;
                            break;
                        }
                        case 26: {
                            Validate.Int32Rules.Builder subBuilder = null;
                            if (typeCase_ == 3) {
                                subBuilder = ((Validate.Int32Rules) type_).toBuilder();
                            }
                            type_ =
                                    input.readMessage(Validate.Int32Rules.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom((Validate.Int32Rules) type_);
                                type_ = subBuilder.buildPartial();
                            }
                            typeCase_ = 3;
                            break;
                        }
                        case 34: {
                            Validate.Int64Rules.Builder subBuilder = null;
                            if (typeCase_ == 4) {
                                subBuilder = ((Validate.Int64Rules) type_).toBuilder();
                            }
                            type_ =
                                    input.readMessage(Validate.Int64Rules.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom((Validate.Int64Rules) type_);
                                type_ = subBuilder.buildPartial();
                            }
                            typeCase_ = 4;
                            break;
                        }
                        case 42: {
                            Validate.UInt32Rules.Builder subBuilder = null;
                            if (typeCase_ == 5) {
                                subBuilder = ((Validate.UInt32Rules) type_).toBuilder();
                            }
                            type_ =
                                    input.readMessage(Validate.UInt32Rules.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom((Validate.UInt32Rules) type_);
                                type_ = subBuilder.buildPartial();
                            }
                            typeCase_ = 5;
                            break;
                        }
                        case 50: {
                            Validate.UInt64Rules.Builder subBuilder = null;
                            if (typeCase_ == 6) {
                                subBuilder = ((Validate.UInt64Rules) type_).toBuilder();
                            }
                            type_ =
                                    input.readMessage(Validate.UInt64Rules.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom((Validate.UInt64Rules) type_);
                                type_ = subBuilder.buildPartial();
                            }
                            typeCase_ = 6;
                            break;
                        }
                        case 58: {
                            Validate.SInt32Rules.Builder subBuilder = null;
                            if (typeCase_ == 7) {
                                subBuilder = ((Validate.SInt32Rules) type_).toBuilder();
                            }
                            type_ =
                                    input.readMessage(Validate.SInt32Rules.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom((Validate.SInt32Rules) type_);
                                type_ = subBuilder.buildPartial();
                            }
                            typeCase_ = 7;
                            break;
                        }
                        case 66: {
                            Validate.SInt64Rules.Builder subBuilder = null;
                            if (typeCase_ == 8) {
                                subBuilder = ((Validate.SInt64Rules) type_).toBuilder();
                            }
                            type_ =
                                    input.readMessage(Validate.SInt64Rules.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom((Validate.SInt64Rules) type_);
                                type_ = subBuilder.buildPartial();
                            }
                            typeCase_ = 8;
                            break;
                        }
                        case 74: {
                            Validate.Fixed32Rules.Builder subBuilder = null;
                            if (typeCase_ == 9) {
                                subBuilder = ((Validate.Fixed32Rules) type_).toBuilder();
                            }
                            type_ =
                                    input.readMessage(Validate.Fixed32Rules.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom((Validate.Fixed32Rules) type_);
                                type_ = subBuilder.buildPartial();
                            }
                            typeCase_ = 9;
                            break;
                        }
                        case 82: {
                            Validate.Fixed64Rules.Builder subBuilder = null;
                            if (typeCase_ == 10) {
                                subBuilder = ((Validate.Fixed64Rules) type_).toBuilder();
                            }
                            type_ =
                                    input.readMessage(Validate.Fixed64Rules.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom((Validate.Fixed64Rules) type_);
                                type_ = subBuilder.buildPartial();
                            }
                            typeCase_ = 10;
                            break;
                        }
                        case 90: {
                            Validate.SFixed32Rules.Builder subBuilder = null;
                            if (typeCase_ == 11) {
                                subBuilder = ((Validate.SFixed32Rules) type_).toBuilder();
                            }
                            type_ =
                                    input.readMessage(Validate.SFixed32Rules.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom((Validate.SFixed32Rules) type_);
                                type_ = subBuilder.buildPartial();
                            }
                            typeCase_ = 11;
                            break;
                        }
                        case 98: {
                            Validate.SFixed64Rules.Builder subBuilder = null;
                            if (typeCase_ == 12) {
                                subBuilder = ((Validate.SFixed64Rules) type_).toBuilder();
                            }
                            type_ =
                                    input.readMessage(Validate.SFixed64Rules.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom((Validate.SFixed64Rules) type_);
                                type_ = subBuilder.buildPartial();
                            }
                            typeCase_ = 12;
                            break;
                        }
                        case 106: {
                            Validate.BoolRules.Builder subBuilder = null;
                            if (typeCase_ == 13) {
                                subBuilder = ((Validate.BoolRules) type_).toBuilder();
                            }
                            type_ =
                                    input.readMessage(Validate.BoolRules.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom((Validate.BoolRules) type_);
                                type_ = subBuilder.buildPartial();
                            }
                            typeCase_ = 13;
                            break;
                        }
                        case 114: {
                            Validate.StringRules.Builder subBuilder = null;
                            if (typeCase_ == 14) {
                                subBuilder = ((Validate.StringRules) type_).toBuilder();
                            }
                            type_ =
                                    input.readMessage(Validate.StringRules.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom((Validate.StringRules) type_);
                                type_ = subBuilder.buildPartial();
                            }
                            typeCase_ = 14;
                            break;
                        }
                        case 122: {
                            Validate.BytesRules.Builder subBuilder = null;
                            if (typeCase_ == 15) {
                                subBuilder = ((Validate.BytesRules) type_).toBuilder();
                            }
                            type_ =
                                    input.readMessage(Validate.BytesRules.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom((Validate.BytesRules) type_);
                                type_ = subBuilder.buildPartial();
                            }
                            typeCase_ = 15;
                            break;
                        }
                        case 130: {
                            Validate.EnumRules.Builder subBuilder = null;
                            if (typeCase_ == 16) {
                                subBuilder = ((Validate.EnumRules) type_).toBuilder();
                            }
                            type_ =
                                    input.readMessage(Validate.EnumRules.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom((Validate.EnumRules) type_);
                                type_ = subBuilder.buildPartial();
                            }
                            typeCase_ = 16;
                            break;
                        }
                        case 138: {
                            Validate.MessageRules.Builder subBuilder = null;
                            if (typeCase_ == 17) {
                                subBuilder = ((Validate.MessageRules) type_).toBuilder();
                            }
                            type_ =
                                    input.readMessage(Validate.MessageRules.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom((Validate.MessageRules) type_);
                                type_ = subBuilder.buildPartial();
                            }
                            typeCase_ = 17;
                            break;
                        }
                        case 146: {
                            Validate.RepeatedRules.Builder subBuilder = null;
                            if (typeCase_ == 18) {
                                subBuilder = ((Validate.RepeatedRules) type_).toBuilder();
                            }
                            type_ =
                                    input.readMessage(Validate.RepeatedRules.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom((Validate.RepeatedRules) type_);
                                type_ = subBuilder.buildPartial();
                            }
                            typeCase_ = 18;
                            break;
                        }
                        case 154: {
                            Validate.MapRules.Builder subBuilder = null;
                            if (typeCase_ == 19) {
                                subBuilder = ((Validate.MapRules) type_).toBuilder();
                            }
                            type_ =
                                    input.readMessage(Validate.MapRules.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom((Validate.MapRules) type_);
                                type_ = subBuilder.buildPartial();
                            }
                            typeCase_ = 19;
                            break;
                        }
                        case 162: {
                            Validate.AnyRules.Builder subBuilder = null;
                            if (typeCase_ == 20) {
                                subBuilder = ((Validate.AnyRules) type_).toBuilder();
                            }
                            type_ =
                                    input.readMessage(Validate.AnyRules.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom((Validate.AnyRules) type_);
                                type_ = subBuilder.buildPartial();
                            }
                            typeCase_ = 20;
                            break;
                        }
                        case 170: {
                            Validate.DurationRules.Builder subBuilder = null;
                            if (typeCase_ == 21) {
                                subBuilder = ((Validate.DurationRules) type_).toBuilder();
                            }
                            type_ =
                                    input.readMessage(Validate.DurationRules.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom((Validate.DurationRules) type_);
                                type_ = subBuilder.buildPartial();
                            }
                            typeCase_ = 21;
                            break;
                        }
                        case 178: {
                            Validate.TimestampRules.Builder subBuilder = null;
                            if (typeCase_ == 22) {
                                subBuilder = ((Validate.TimestampRules) type_).toBuilder();
                            }
                            type_ =
                                    input.readMessage(Validate.TimestampRules.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom((Validate.TimestampRules) type_);
                                type_ = subBuilder.buildPartial();
                            }
                            typeCase_ = 22;
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {

            return Validate.internal_static_validate_FieldRules_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {

            return Validate.internal_static_validate_FieldRules_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Validate.FieldRules.class, Validate.FieldRules.Builder.class);
        }

        private int bitField0_;
        private int typeCase_ = 0;
        private java.lang.Object type_;

        public enum TypeCase
                implements com.google.protobuf.Internal.EnumLite {
            FLOAT(1),
            DOUBLE(2),
            INT32(3),
            INT64(4),
            UINT32(5),
            UINT64(6),
            SINT32(7),
            SINT64(8),
            FIXED32(9),
            FIXED64(10),
            SFIXED32(11),
            SFIXED64(12),
            BOOL(13),
            STRING(14),
            BYTES(15),
            ENUM(16),
            MESSAGE(17),
            REPEATED(18),
            MAP(19),
            ANY(20),
            DURATION(21),
            TIMESTAMP(22),
            TYPE_NOT_SET(0);
            private final int value;

            private TypeCase(int value) {

                this.value = value;
            }

            /**
             * @deprecated Use {@link #forNumber(int)} instead.
             */
            @java.lang.Deprecated
            public static TypeCase valueOf(int value) {

                return forNumber(value);
            }

            public static TypeCase forNumber(int value) {

                switch (value) {
                    case 1:
                        return FLOAT;
                    case 2:
                        return DOUBLE;
                    case 3:
                        return INT32;
                    case 4:
                        return INT64;
                    case 5:
                        return UINT32;
                    case 6:
                        return UINT64;
                    case 7:
                        return SINT32;
                    case 8:
                        return SINT64;
                    case 9:
                        return FIXED32;
                    case 10:
                        return FIXED64;
                    case 11:
                        return SFIXED32;
                    case 12:
                        return SFIXED64;
                    case 13:
                        return BOOL;
                    case 14:
                        return STRING;
                    case 15:
                        return BYTES;
                    case 16:
                        return ENUM;
                    case 17:
                        return MESSAGE;
                    case 18:
                        return REPEATED;
                    case 19:
                        return MAP;
                    case 20:
                        return ANY;
                    case 21:
                        return DURATION;
                    case 22:
                        return TIMESTAMP;
                    case 0:
                        return TYPE_NOT_SET;
                    default:
                        return null;
                }
            }

            public int getNumber() {

                return this.value;
            }
        }

        ;

        public TypeCase
        getTypeCase() {

            return TypeCase.forNumber(
                    typeCase_);
        }

        public static final int FLOAT_FIELD_NUMBER = 1;

        /**
         * <pre>
         * Scalar Field Types
         * </pre>
         *
         * <code>optional .validate.FloatRules float = 1;</code>
         */
        public boolean hasFloat() {

            return typeCase_ == 1;
        }

        /**
         * <pre>
         * Scalar Field Types
         * </pre>
         *
         * <code>optional .validate.FloatRules float = 1;</code>
         */
        public Validate.FloatRules getFloat() {

            if (typeCase_ == 1) {
                return (Validate.FloatRules) type_;
            }
            return Validate.FloatRules.getDefaultInstance();
        }

        /**
         * <pre>
         * Scalar Field Types
         * </pre>
         *
         * <code>optional .validate.FloatRules float = 1;</code>
         */
        public Validate.FloatRulesOrBuilder getFloatOrBuilder() {

            if (typeCase_ == 1) {
                return (Validate.FloatRules) type_;
            }
            return Validate.FloatRules.getDefaultInstance();
        }

        public static final int DOUBLE_FIELD_NUMBER = 2;

        /**
         * <code>optional .validate.DoubleRules double = 2;</code>
         */
        public boolean hasDouble() {

            return typeCase_ == 2;
        }

        /**
         * <code>optional .validate.DoubleRules double = 2;</code>
         */
        public Validate.DoubleRules getDouble() {

            if (typeCase_ == 2) {
                return (Validate.DoubleRules) type_;
            }
            return Validate.DoubleRules.getDefaultInstance();
        }

        /**
         * <code>optional .validate.DoubleRules double = 2;</code>
         */
        public Validate.DoubleRulesOrBuilder getDoubleOrBuilder() {

            if (typeCase_ == 2) {
                return (Validate.DoubleRules) type_;
            }
            return Validate.DoubleRules.getDefaultInstance();
        }

        public static final int INT32_FIELD_NUMBER = 3;

        /**
         * <code>optional .validate.Int32Rules int32 = 3;</code>
         */
        public boolean hasInt32() {

            return typeCase_ == 3;
        }

        /**
         * <code>optional .validate.Int32Rules int32 = 3;</code>
         */
        public Validate.Int32Rules getInt32() {

            if (typeCase_ == 3) {
                return (Validate.Int32Rules) type_;
            }
            return Validate.Int32Rules.getDefaultInstance();
        }

        /**
         * <code>optional .validate.Int32Rules int32 = 3;</code>
         */
        public Validate.Int32RulesOrBuilder getInt32OrBuilder() {

            if (typeCase_ == 3) {
                return (Validate.Int32Rules) type_;
            }
            return Validate.Int32Rules.getDefaultInstance();
        }

        public static final int INT64_FIELD_NUMBER = 4;

        /**
         * <code>optional .validate.Int64Rules int64 = 4;</code>
         */
        public boolean hasInt64() {

            return typeCase_ == 4;
        }

        /**
         * <code>optional .validate.Int64Rules int64 = 4;</code>
         */
        public Validate.Int64Rules getInt64() {

            if (typeCase_ == 4) {
                return (Validate.Int64Rules) type_;
            }
            return Validate.Int64Rules.getDefaultInstance();
        }

        /**
         * <code>optional .validate.Int64Rules int64 = 4;</code>
         */
        public Validate.Int64RulesOrBuilder getInt64OrBuilder() {

            if (typeCase_ == 4) {
                return (Validate.Int64Rules) type_;
            }
            return Validate.Int64Rules.getDefaultInstance();
        }

        public static final int UINT32_FIELD_NUMBER = 5;

        /**
         * <code>optional .validate.UInt32Rules uint32 = 5;</code>
         */
        public boolean hasUint32() {

            return typeCase_ == 5;
        }

        /**
         * <code>optional .validate.UInt32Rules uint32 = 5;</code>
         */
        public Validate.UInt32Rules getUint32() {

            if (typeCase_ == 5) {
                return (Validate.UInt32Rules) type_;
            }
            return Validate.UInt32Rules.getDefaultInstance();
        }

        /**
         * <code>optional .validate.UInt32Rules uint32 = 5;</code>
         */
        public Validate.UInt32RulesOrBuilder getUint32OrBuilder() {

            if (typeCase_ == 5) {
                return (Validate.UInt32Rules) type_;
            }
            return Validate.UInt32Rules.getDefaultInstance();
        }

        public static final int UINT64_FIELD_NUMBER = 6;

        /**
         * <code>optional .validate.UInt64Rules uint64 = 6;</code>
         */
        public boolean hasUint64() {

            return typeCase_ == 6;
        }

        /**
         * <code>optional .validate.UInt64Rules uint64 = 6;</code>
         */
        public Validate.UInt64Rules getUint64() {

            if (typeCase_ == 6) {
                return (Validate.UInt64Rules) type_;
            }
            return Validate.UInt64Rules.getDefaultInstance();
        }

        /**
         * <code>optional .validate.UInt64Rules uint64 = 6;</code>
         */
        public Validate.UInt64RulesOrBuilder getUint64OrBuilder() {

            if (typeCase_ == 6) {
                return (Validate.UInt64Rules) type_;
            }
            return Validate.UInt64Rules.getDefaultInstance();
        }

        public static final int SINT32_FIELD_NUMBER = 7;

        /**
         * <code>optional .validate.SInt32Rules sint32 = 7;</code>
         */
        public boolean hasSint32() {

            return typeCase_ == 7;
        }

        /**
         * <code>optional .validate.SInt32Rules sint32 = 7;</code>
         */
        public Validate.SInt32Rules getSint32() {

            if (typeCase_ == 7) {
                return (Validate.SInt32Rules) type_;
            }
            return Validate.SInt32Rules.getDefaultInstance();
        }

        /**
         * <code>optional .validate.SInt32Rules sint32 = 7;</code>
         */
        public Validate.SInt32RulesOrBuilder getSint32OrBuilder() {

            if (typeCase_ == 7) {
                return (Validate.SInt32Rules) type_;
            }
            return Validate.SInt32Rules.getDefaultInstance();
        }

        public static final int SINT64_FIELD_NUMBER = 8;

        /**
         * <code>optional .validate.SInt64Rules sint64 = 8;</code>
         */
        public boolean hasSint64() {

            return typeCase_ == 8;
        }

        /**
         * <code>optional .validate.SInt64Rules sint64 = 8;</code>
         */
        public Validate.SInt64Rules getSint64() {

            if (typeCase_ == 8) {
                return (Validate.SInt64Rules) type_;
            }
            return Validate.SInt64Rules.getDefaultInstance();
        }

        /**
         * <code>optional .validate.SInt64Rules sint64 = 8;</code>
         */
        public Validate.SInt64RulesOrBuilder getSint64OrBuilder() {

            if (typeCase_ == 8) {
                return (Validate.SInt64Rules) type_;
            }
            return Validate.SInt64Rules.getDefaultInstance();
        }

        public static final int FIXED32_FIELD_NUMBER = 9;

        /**
         * <code>optional .validate.Fixed32Rules fixed32 = 9;</code>
         */
        public boolean hasFixed32() {

            return typeCase_ == 9;
        }

        /**
         * <code>optional .validate.Fixed32Rules fixed32 = 9;</code>
         */
        public Validate.Fixed32Rules getFixed32() {

            if (typeCase_ == 9) {
                return (Validate.Fixed32Rules) type_;
            }
            return Validate.Fixed32Rules.getDefaultInstance();
        }

        /**
         * <code>optional .validate.Fixed32Rules fixed32 = 9;</code>
         */
        public Validate.Fixed32RulesOrBuilder getFixed32OrBuilder() {

            if (typeCase_ == 9) {
                return (Validate.Fixed32Rules) type_;
            }
            return Validate.Fixed32Rules.getDefaultInstance();
        }

        public static final int FIXED64_FIELD_NUMBER = 10;

        /**
         * <code>optional .validate.Fixed64Rules fixed64 = 10;</code>
         */
        public boolean hasFixed64() {

            return typeCase_ == 10;
        }

        /**
         * <code>optional .validate.Fixed64Rules fixed64 = 10;</code>
         */
        public Validate.Fixed64Rules getFixed64() {

            if (typeCase_ == 10) {
                return (Validate.Fixed64Rules) type_;
            }
            return Validate.Fixed64Rules.getDefaultInstance();
        }

        /**
         * <code>optional .validate.Fixed64Rules fixed64 = 10;</code>
         */
        public Validate.Fixed64RulesOrBuilder getFixed64OrBuilder() {

            if (typeCase_ == 10) {
                return (Validate.Fixed64Rules) type_;
            }
            return Validate.Fixed64Rules.getDefaultInstance();
        }

        public static final int SFIXED32_FIELD_NUMBER = 11;

        /**
         * <code>optional .validate.SFixed32Rules sfixed32 = 11;</code>
         */
        public boolean hasSfixed32() {

            return typeCase_ == 11;
        }

        /**
         * <code>optional .validate.SFixed32Rules sfixed32 = 11;</code>
         */
        public Validate.SFixed32Rules getSfixed32() {

            if (typeCase_ == 11) {
                return (Validate.SFixed32Rules) type_;
            }
            return Validate.SFixed32Rules.getDefaultInstance();
        }

        /**
         * <code>optional .validate.SFixed32Rules sfixed32 = 11;</code>
         */
        public Validate.SFixed32RulesOrBuilder getSfixed32OrBuilder() {

            if (typeCase_ == 11) {
                return (Validate.SFixed32Rules) type_;
            }
            return Validate.SFixed32Rules.getDefaultInstance();
        }

        public static final int SFIXED64_FIELD_NUMBER = 12;

        /**
         * <code>optional .validate.SFixed64Rules sfixed64 = 12;</code>
         */
        public boolean hasSfixed64() {

            return typeCase_ == 12;
        }

        /**
         * <code>optional .validate.SFixed64Rules sfixed64 = 12;</code>
         */
        public Validate.SFixed64Rules getSfixed64() {

            if (typeCase_ == 12) {
                return (Validate.SFixed64Rules) type_;
            }
            return Validate.SFixed64Rules.getDefaultInstance();
        }

        /**
         * <code>optional .validate.SFixed64Rules sfixed64 = 12;</code>
         */
        public Validate.SFixed64RulesOrBuilder getSfixed64OrBuilder() {

            if (typeCase_ == 12) {
                return (Validate.SFixed64Rules) type_;
            }
            return Validate.SFixed64Rules.getDefaultInstance();
        }

        public static final int BOOL_FIELD_NUMBER = 13;

        /**
         * <code>optional .validate.BoolRules bool = 13;</code>
         */
        public boolean hasBool() {

            return typeCase_ == 13;
        }

        /**
         * <code>optional .validate.BoolRules bool = 13;</code>
         */
        public Validate.BoolRules getBool() {

            if (typeCase_ == 13) {
                return (Validate.BoolRules) type_;
            }
            return Validate.BoolRules.getDefaultInstance();
        }

        /**
         * <code>optional .validate.BoolRules bool = 13;</code>
         */
        public Validate.BoolRulesOrBuilder getBoolOrBuilder() {

            if (typeCase_ == 13) {
                return (Validate.BoolRules) type_;
            }
            return Validate.BoolRules.getDefaultInstance();
        }

        public static final int STRING_FIELD_NUMBER = 14;

        /**
         * <code>optional .validate.StringRules string = 14;</code>
         */
        public boolean hasString() {

            return typeCase_ == 14;
        }

        /**
         * <code>optional .validate.StringRules string = 14;</code>
         */
        public Validate.StringRules getString() {

            if (typeCase_ == 14) {
                return (Validate.StringRules) type_;
            }
            return Validate.StringRules.getDefaultInstance();
        }

        /**
         * <code>optional .validate.StringRules string = 14;</code>
         */
        public Validate.StringRulesOrBuilder getStringOrBuilder() {

            if (typeCase_ == 14) {
                return (Validate.StringRules) type_;
            }
            return Validate.StringRules.getDefaultInstance();
        }

        public static final int BYTES_FIELD_NUMBER = 15;

        /**
         * <code>optional .validate.BytesRules bytes = 15;</code>
         */
        public boolean hasBytes() {

            return typeCase_ == 15;
        }

        /**
         * <code>optional .validate.BytesRules bytes = 15;</code>
         */
        public Validate.BytesRules getBytes() {

            if (typeCase_ == 15) {
                return (Validate.BytesRules) type_;
            }
            return Validate.BytesRules.getDefaultInstance();
        }

        /**
         * <code>optional .validate.BytesRules bytes = 15;</code>
         */
        public Validate.BytesRulesOrBuilder getBytesOrBuilder() {

            if (typeCase_ == 15) {
                return (Validate.BytesRules) type_;
            }
            return Validate.BytesRules.getDefaultInstance();
        }

        public static final int ENUM_FIELD_NUMBER = 16;

        /**
         * <pre>
         * Complex Field Types
         * </pre>
         *
         * <code>optional .validate.EnumRules enum = 16;</code>
         */
        public boolean hasEnum() {

            return typeCase_ == 16;
        }

        /**
         * <pre>
         * Complex Field Types
         * </pre>
         *
         * <code>optional .validate.EnumRules enum = 16;</code>
         */
        public Validate.EnumRules getEnum() {

            if (typeCase_ == 16) {
                return (Validate.EnumRules) type_;
            }
            return Validate.EnumRules.getDefaultInstance();
        }

        /**
         * <pre>
         * Complex Field Types
         * </pre>
         *
         * <code>optional .validate.EnumRules enum = 16;</code>
         */
        public Validate.EnumRulesOrBuilder getEnumOrBuilder() {

            if (typeCase_ == 16) {
                return (Validate.EnumRules) type_;
            }
            return Validate.EnumRules.getDefaultInstance();
        }

        public static final int MESSAGE_FIELD_NUMBER = 17;

        /**
         * <code>optional .validate.MessageRules message = 17;</code>
         */
        public boolean hasMessage() {

            return typeCase_ == 17;
        }

        /**
         * <code>optional .validate.MessageRules message = 17;</code>
         */
        public Validate.MessageRules getMessage() {

            if (typeCase_ == 17) {
                return (Validate.MessageRules) type_;
            }
            return Validate.MessageRules.getDefaultInstance();
        }

        /**
         * <code>optional .validate.MessageRules message = 17;</code>
         */
        public Validate.MessageRulesOrBuilder getMessageOrBuilder() {

            if (typeCase_ == 17) {
                return (Validate.MessageRules) type_;
            }
            return Validate.MessageRules.getDefaultInstance();
        }

        public static final int REPEATED_FIELD_NUMBER = 18;

        /**
         * <code>optional .validate.RepeatedRules repeated = 18;</code>
         */
        public boolean hasRepeated() {

            return typeCase_ == 18;
        }

        /**
         * <code>optional .validate.RepeatedRules repeated = 18;</code>
         */
        public Validate.RepeatedRules getRepeated() {

            if (typeCase_ == 18) {
                return (Validate.RepeatedRules) type_;
            }
            return Validate.RepeatedRules.getDefaultInstance();
        }

        /**
         * <code>optional .validate.RepeatedRules repeated = 18;</code>
         */
        public Validate.RepeatedRulesOrBuilder getRepeatedOrBuilder() {

            if (typeCase_ == 18) {
                return (Validate.RepeatedRules) type_;
            }
            return Validate.RepeatedRules.getDefaultInstance();
        }

        public static final int MAP_FIELD_NUMBER = 19;

        /**
         * <code>optional .validate.MapRules map = 19;</code>
         */
        public boolean hasMap() {

            return typeCase_ == 19;
        }

        /**
         * <code>optional .validate.MapRules map = 19;</code>
         */
        public Validate.MapRules getMap() {

            if (typeCase_ == 19) {
                return (Validate.MapRules) type_;
            }
            return Validate.MapRules.getDefaultInstance();
        }

        /**
         * <code>optional .validate.MapRules map = 19;</code>
         */
        public Validate.MapRulesOrBuilder getMapOrBuilder() {

            if (typeCase_ == 19) {
                return (Validate.MapRules) type_;
            }
            return Validate.MapRules.getDefaultInstance();
        }

        public static final int ANY_FIELD_NUMBER = 20;

        /**
         * <pre>
         * Well-Known Field Types
         * </pre>
         *
         * <code>optional .validate.AnyRules any = 20;</code>
         */
        public boolean hasAny() {

            return typeCase_ == 20;
        }

        /**
         * <pre>
         * Well-Known Field Types
         * </pre>
         *
         * <code>optional .validate.AnyRules any = 20;</code>
         */
        public Validate.AnyRules getAny() {

            if (typeCase_ == 20) {
                return (Validate.AnyRules) type_;
            }
            return Validate.AnyRules.getDefaultInstance();
        }

        /**
         * <pre>
         * Well-Known Field Types
         * </pre>
         *
         * <code>optional .validate.AnyRules any = 20;</code>
         */
        public Validate.AnyRulesOrBuilder getAnyOrBuilder() {

            if (typeCase_ == 20) {
                return (Validate.AnyRules) type_;
            }
            return Validate.AnyRules.getDefaultInstance();
        }

        public static final int DURATION_FIELD_NUMBER = 21;

        /**
         * <code>optional .validate.DurationRules duration = 21;</code>
         */
        public boolean hasDuration() {

            return typeCase_ == 21;
        }

        /**
         * <code>optional .validate.DurationRules duration = 21;</code>
         */
        public Validate.DurationRules getDuration() {

            if (typeCase_ == 21) {
                return (Validate.DurationRules) type_;
            }
            return Validate.DurationRules.getDefaultInstance();
        }

        /**
         * <code>optional .validate.DurationRules duration = 21;</code>
         */
        public Validate.DurationRulesOrBuilder getDurationOrBuilder() {

            if (typeCase_ == 21) {
                return (Validate.DurationRules) type_;
            }
            return Validate.DurationRules.getDefaultInstance();
        }

        public static final int TIMESTAMP_FIELD_NUMBER = 22;

        /**
         * <code>optional .validate.TimestampRules timestamp = 22;</code>
         */
        public boolean hasTimestamp() {

            return typeCase_ == 22;
        }

        /**
         * <code>optional .validate.TimestampRules timestamp = 22;</code>
         */
        public Validate.TimestampRules getTimestamp() {

            if (typeCase_ == 22) {
                return (Validate.TimestampRules) type_;
            }
            return Validate.TimestampRules.getDefaultInstance();
        }

        /**
         * <code>optional .validate.TimestampRules timestamp = 22;</code>
         */
        public Validate.TimestampRulesOrBuilder getTimestampOrBuilder() {

            if (typeCase_ == 22) {
                return (Validate.TimestampRules) type_;
            }
            return Validate.TimestampRules.getDefaultInstance();
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {

            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {

            if (typeCase_ == 1) {
                output.writeMessage(1, (Validate.FloatRules) type_);
            }
            if (typeCase_ == 2) {
                output.writeMessage(2, (Validate.DoubleRules) type_);
            }
            if (typeCase_ == 3) {
                output.writeMessage(3, (Validate.Int32Rules) type_);
            }
            if (typeCase_ == 4) {
                output.writeMessage(4, (Validate.Int64Rules) type_);
            }
            if (typeCase_ == 5) {
                output.writeMessage(5, (Validate.UInt32Rules) type_);
            }
            if (typeCase_ == 6) {
                output.writeMessage(6, (Validate.UInt64Rules) type_);
            }
            if (typeCase_ == 7) {
                output.writeMessage(7, (Validate.SInt32Rules) type_);
            }
            if (typeCase_ == 8) {
                output.writeMessage(8, (Validate.SInt64Rules) type_);
            }
            if (typeCase_ == 9) {
                output.writeMessage(9, (Validate.Fixed32Rules) type_);
            }
            if (typeCase_ == 10) {
                output.writeMessage(10, (Validate.Fixed64Rules) type_);
            }
            if (typeCase_ == 11) {
                output.writeMessage(11, (Validate.SFixed32Rules) type_);
            }
            if (typeCase_ == 12) {
                output.writeMessage(12, (Validate.SFixed64Rules) type_);
            }
            if (typeCase_ == 13) {
                output.writeMessage(13, (Validate.BoolRules) type_);
            }
            if (typeCase_ == 14) {
                output.writeMessage(14, (Validate.StringRules) type_);
            }
            if (typeCase_ == 15) {
                output.writeMessage(15, (Validate.BytesRules) type_);
            }
            if (typeCase_ == 16) {
                output.writeMessage(16, (Validate.EnumRules) type_);
            }
            if (typeCase_ == 17) {
                output.writeMessage(17, (Validate.MessageRules) type_);
            }
            if (typeCase_ == 18) {
                output.writeMessage(18, (Validate.RepeatedRules) type_);
            }
            if (typeCase_ == 19) {
                output.writeMessage(19, (Validate.MapRules) type_);
            }
            if (typeCase_ == 20) {
                output.writeMessage(20, (Validate.AnyRules) type_);
            }
            if (typeCase_ == 21) {
                output.writeMessage(21, (Validate.DurationRules) type_);
            }
            if (typeCase_ == 22) {
                output.writeMessage(22, (Validate.TimestampRules) type_);
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {

            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (typeCase_ == 1) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, (Validate.FloatRules) type_);
            }
            if (typeCase_ == 2) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, (Validate.DoubleRules) type_);
            }
            if (typeCase_ == 3) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(3, (Validate.Int32Rules) type_);
            }
            if (typeCase_ == 4) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(4, (Validate.Int64Rules) type_);
            }
            if (typeCase_ == 5) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(5, (Validate.UInt32Rules) type_);
            }
            if (typeCase_ == 6) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(6, (Validate.UInt64Rules) type_);
            }
            if (typeCase_ == 7) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(7, (Validate.SInt32Rules) type_);
            }
            if (typeCase_ == 8) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(8, (Validate.SInt64Rules) type_);
            }
            if (typeCase_ == 9) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(9, (Validate.Fixed32Rules) type_);
            }
            if (typeCase_ == 10) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(10, (Validate.Fixed64Rules) type_);
            }
            if (typeCase_ == 11) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(11, (Validate.SFixed32Rules) type_);
            }
            if (typeCase_ == 12) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(12, (Validate.SFixed64Rules) type_);
            }
            if (typeCase_ == 13) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(13, (Validate.BoolRules) type_);
            }
            if (typeCase_ == 14) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(14, (Validate.StringRules) type_);
            }
            if (typeCase_ == 15) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(15, (Validate.BytesRules) type_);
            }
            if (typeCase_ == 16) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(16, (Validate.EnumRules) type_);
            }
            if (typeCase_ == 17) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(17, (Validate.MessageRules) type_);
            }
            if (typeCase_ == 18) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(18, (Validate.RepeatedRules) type_);
            }
            if (typeCase_ == 19) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(19, (Validate.MapRules) type_);
            }
            if (typeCase_ == 20) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(20, (Validate.AnyRules) type_);
            }
            if (typeCase_ == 21) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(21, (Validate.DurationRules) type_);
            }
            if (typeCase_ == 22) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(22, (Validate.TimestampRules) type_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {

            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Validate.FieldRules)) {
                return super.equals(obj);
            }
            Validate.FieldRules other = (Validate.FieldRules) obj;

            boolean result = true;
            result = result && getTypeCase().equals(
                    other.getTypeCase());
            if (!result) return false;
            switch (typeCase_) {
                case 1:
                    result = result && getFloat()
                            .equals(other.getFloat());
                    break;
                case 2:
                    result = result && getDouble()
                            .equals(other.getDouble());
                    break;
                case 3:
                    result = result && getInt32()
                            .equals(other.getInt32());
                    break;
                case 4:
                    result = result && getInt64()
                            .equals(other.getInt64());
                    break;
                case 5:
                    result = result && getUint32()
                            .equals(other.getUint32());
                    break;
                case 6:
                    result = result && getUint64()
                            .equals(other.getUint64());
                    break;
                case 7:
                    result = result && getSint32()
                            .equals(other.getSint32());
                    break;
                case 8:
                    result = result && getSint64()
                            .equals(other.getSint64());
                    break;
                case 9:
                    result = result && getFixed32()
                            .equals(other.getFixed32());
                    break;
                case 10:
                    result = result && getFixed64()
                            .equals(other.getFixed64());
                    break;
                case 11:
                    result = result && getSfixed32()
                            .equals(other.getSfixed32());
                    break;
                case 12:
                    result = result && getSfixed64()
                            .equals(other.getSfixed64());
                    break;
                case 13:
                    result = result && getBool()
                            .equals(other.getBool());
                    break;
                case 14:
                    result = result && getString()
                            .equals(other.getString());
                    break;
                case 15:
                    result = result && getBytes()
                            .equals(other.getBytes());
                    break;
                case 16:
                    result = result && getEnum()
                            .equals(other.getEnum());
                    break;
                case 17:
                    result = result && getMessage()
                            .equals(other.getMessage());
                    break;
                case 18:
                    result = result && getRepeated()
                            .equals(other.getRepeated());
                    break;
                case 19:
                    result = result && getMap()
                            .equals(other.getMap());
                    break;
                case 20:
                    result = result && getAny()
                            .equals(other.getAny());
                    break;
                case 21:
                    result = result && getDuration()
                            .equals(other.getDuration());
                    break;
                case 22:
                    result = result && getTimestamp()
                            .equals(other.getTimestamp());
                    break;
                case 0:
                default:
            }
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {

            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            switch (typeCase_) {
                case 1:
                    hash = (37 * hash) + FLOAT_FIELD_NUMBER;
                    hash = (53 * hash) + getFloat().hashCode();
                    break;
                case 2:
                    hash = (37 * hash) + DOUBLE_FIELD_NUMBER;
                    hash = (53 * hash) + getDouble().hashCode();
                    break;
                case 3:
                    hash = (37 * hash) + INT32_FIELD_NUMBER;
                    hash = (53 * hash) + getInt32().hashCode();
                    break;
                case 4:
                    hash = (37 * hash) + INT64_FIELD_NUMBER;
                    hash = (53 * hash) + getInt64().hashCode();
                    break;
                case 5:
                    hash = (37 * hash) + UINT32_FIELD_NUMBER;
                    hash = (53 * hash) + getUint32().hashCode();
                    break;
                case 6:
                    hash = (37 * hash) + UINT64_FIELD_NUMBER;
                    hash = (53 * hash) + getUint64().hashCode();
                    break;
                case 7:
                    hash = (37 * hash) + SINT32_FIELD_NUMBER;
                    hash = (53 * hash) + getSint32().hashCode();
                    break;
                case 8:
                    hash = (37 * hash) + SINT64_FIELD_NUMBER;
                    hash = (53 * hash) + getSint64().hashCode();
                    break;
                case 9:
                    hash = (37 * hash) + FIXED32_FIELD_NUMBER;
                    hash = (53 * hash) + getFixed32().hashCode();
                    break;
                case 10:
                    hash = (37 * hash) + FIXED64_FIELD_NUMBER;
                    hash = (53 * hash) + getFixed64().hashCode();
                    break;
                case 11:
                    hash = (37 * hash) + SFIXED32_FIELD_NUMBER;
                    hash = (53 * hash) + getSfixed32().hashCode();
                    break;
                case 12:
                    hash = (37 * hash) + SFIXED64_FIELD_NUMBER;
                    hash = (53 * hash) + getSfixed64().hashCode();
                    break;
                case 13:
                    hash = (37 * hash) + BOOL_FIELD_NUMBER;
                    hash = (53 * hash) + getBool().hashCode();
                    break;
                case 14:
                    hash = (37 * hash) + STRING_FIELD_NUMBER;
                    hash = (53 * hash) + getString().hashCode();
                    break;
                case 15:
                    hash = (37 * hash) + BYTES_FIELD_NUMBER;
                    hash = (53 * hash) + getBytes().hashCode();
                    break;
                case 16:
                    hash = (37 * hash) + ENUM_FIELD_NUMBER;
                    hash = (53 * hash) + getEnum().hashCode();
                    break;
                case 17:
                    hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
                    hash = (53 * hash) + getMessage().hashCode();
                    break;
                case 18:
                    hash = (37 * hash) + REPEATED_FIELD_NUMBER;
                    hash = (53 * hash) + getRepeated().hashCode();
                    break;
                case 19:
                    hash = (37 * hash) + MAP_FIELD_NUMBER;
                    hash = (53 * hash) + getMap().hashCode();
                    break;
                case 20:
                    hash = (37 * hash) + ANY_FIELD_NUMBER;
                    hash = (53 * hash) + getAny().hashCode();
                    break;
                case 21:
                    hash = (37 * hash) + DURATION_FIELD_NUMBER;
                    hash = (53 * hash) + getDuration().hashCode();
                    break;
                case 22:
                    hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
                    hash = (53 * hash) + getTimestamp().hashCode();
                    break;
                case 0:
                default:
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static Validate.FieldRules parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.FieldRules parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.FieldRules parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.FieldRules parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.FieldRules parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.FieldRules parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.FieldRules parseFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.FieldRules parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.FieldRules parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Validate.FieldRules parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.FieldRules parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.FieldRules parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {

            return newBuilder();
        }

        public static Builder newBuilder() {

            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(Validate.FieldRules prototype) {

            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {

            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * FieldRules encapsulates the rules for each type of field. Depending on the
         * field, the correct set should be used to ensure proper validations.
         * </pre>
         * <p>
         * Protobuf type {@code validate.FieldRules}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:validate.FieldRules)
                Validate.FieldRulesOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return Validate.internal_static_validate_FieldRules_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return Validate.internal_static_validate_FieldRules_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Validate.FieldRules.class, Validate.FieldRules.Builder.class);
            }

            // Construct using validate.Validate.FieldRules.newBuilder()
            private Builder() {

                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {

                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @java.lang.Override
            public Builder clear() {

                super.clear();
                typeCase_ = 0;
                type_ = null;
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {

                return Validate.internal_static_validate_FieldRules_descriptor;
            }

            @java.lang.Override
            public Validate.FieldRules getDefaultInstanceForType() {

                return Validate.FieldRules.getDefaultInstance();
            }

            @java.lang.Override
            public Validate.FieldRules build() {

                Validate.FieldRules result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public Validate.FieldRules buildPartial() {

                Validate.FieldRules result = new Validate.FieldRules(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (typeCase_ == 1) {
                    if (floatBuilder_ == null) {
                        result.type_ = type_;
                    } else {
                        result.type_ = floatBuilder_.build();
                    }
                }
                if (typeCase_ == 2) {
                    if (doubleBuilder_ == null) {
                        result.type_ = type_;
                    } else {
                        result.type_ = doubleBuilder_.build();
                    }
                }
                if (typeCase_ == 3) {
                    if (int32Builder_ == null) {
                        result.type_ = type_;
                    } else {
                        result.type_ = int32Builder_.build();
                    }
                }
                if (typeCase_ == 4) {
                    if (int64Builder_ == null) {
                        result.type_ = type_;
                    } else {
                        result.type_ = int64Builder_.build();
                    }
                }
                if (typeCase_ == 5) {
                    if (uint32Builder_ == null) {
                        result.type_ = type_;
                    } else {
                        result.type_ = uint32Builder_.build();
                    }
                }
                if (typeCase_ == 6) {
                    if (uint64Builder_ == null) {
                        result.type_ = type_;
                    } else {
                        result.type_ = uint64Builder_.build();
                    }
                }
                if (typeCase_ == 7) {
                    if (sint32Builder_ == null) {
                        result.type_ = type_;
                    } else {
                        result.type_ = sint32Builder_.build();
                    }
                }
                if (typeCase_ == 8) {
                    if (sint64Builder_ == null) {
                        result.type_ = type_;
                    } else {
                        result.type_ = sint64Builder_.build();
                    }
                }
                if (typeCase_ == 9) {
                    if (fixed32Builder_ == null) {
                        result.type_ = type_;
                    } else {
                        result.type_ = fixed32Builder_.build();
                    }
                }
                if (typeCase_ == 10) {
                    if (fixed64Builder_ == null) {
                        result.type_ = type_;
                    } else {
                        result.type_ = fixed64Builder_.build();
                    }
                }
                if (typeCase_ == 11) {
                    if (sfixed32Builder_ == null) {
                        result.type_ = type_;
                    } else {
                        result.type_ = sfixed32Builder_.build();
                    }
                }
                if (typeCase_ == 12) {
                    if (sfixed64Builder_ == null) {
                        result.type_ = type_;
                    } else {
                        result.type_ = sfixed64Builder_.build();
                    }
                }
                if (typeCase_ == 13) {
                    if (boolBuilder_ == null) {
                        result.type_ = type_;
                    } else {
                        result.type_ = boolBuilder_.build();
                    }
                }
                if (typeCase_ == 14) {
                    if (stringBuilder_ == null) {
                        result.type_ = type_;
                    } else {
                        result.type_ = stringBuilder_.build();
                    }
                }
                if (typeCase_ == 15) {
                    if (bytesBuilder_ == null) {
                        result.type_ = type_;
                    } else {
                        result.type_ = bytesBuilder_.build();
                    }
                }
                if (typeCase_ == 16) {
                    if (enumBuilder_ == null) {
                        result.type_ = type_;
                    } else {
                        result.type_ = enumBuilder_.build();
                    }
                }
                if (typeCase_ == 17) {
                    if (messageBuilder_ == null) {
                        result.type_ = type_;
                    } else {
                        result.type_ = messageBuilder_.build();
                    }
                }
                if (typeCase_ == 18) {
                    if (repeatedBuilder_ == null) {
                        result.type_ = type_;
                    } else {
                        result.type_ = repeatedBuilder_.build();
                    }
                }
                if (typeCase_ == 19) {
                    if (mapBuilder_ == null) {
                        result.type_ = type_;
                    } else {
                        result.type_ = mapBuilder_.build();
                    }
                }
                if (typeCase_ == 20) {
                    if (anyBuilder_ == null) {
                        result.type_ = type_;
                    } else {
                        result.type_ = anyBuilder_.build();
                    }
                }
                if (typeCase_ == 21) {
                    if (durationBuilder_ == null) {
                        result.type_ = type_;
                    } else {
                        result.type_ = durationBuilder_.build();
                    }
                }
                if (typeCase_ == 22) {
                    if (timestampBuilder_ == null) {
                        result.type_ = type_;
                    } else {
                        result.type_ = timestampBuilder_.build();
                    }
                }
                result.bitField0_ = to_bitField0_;
                result.typeCase_ = typeCase_;
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {

                return (Builder) super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {

                return (Builder) super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                return (Builder) super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {

                return (Builder) super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {

                if (other instanceof Validate.FieldRules) {
                    return mergeFrom((Validate.FieldRules) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(Validate.FieldRules other) {

                if (other == Validate.FieldRules.getDefaultInstance()) return this;
                switch (other.getTypeCase()) {
                    case FLOAT: {
                        mergeFloat(other.getFloat());
                        break;
                    }
                    case DOUBLE: {
                        mergeDouble(other.getDouble());
                        break;
                    }
                    case INT32: {
                        mergeInt32(other.getInt32());
                        break;
                    }
                    case INT64: {
                        mergeInt64(other.getInt64());
                        break;
                    }
                    case UINT32: {
                        mergeUint32(other.getUint32());
                        break;
                    }
                    case UINT64: {
                        mergeUint64(other.getUint64());
                        break;
                    }
                    case SINT32: {
                        mergeSint32(other.getSint32());
                        break;
                    }
                    case SINT64: {
                        mergeSint64(other.getSint64());
                        break;
                    }
                    case FIXED32: {
                        mergeFixed32(other.getFixed32());
                        break;
                    }
                    case FIXED64: {
                        mergeFixed64(other.getFixed64());
                        break;
                    }
                    case SFIXED32: {
                        mergeSfixed32(other.getSfixed32());
                        break;
                    }
                    case SFIXED64: {
                        mergeSfixed64(other.getSfixed64());
                        break;
                    }
                    case BOOL: {
                        mergeBool(other.getBool());
                        break;
                    }
                    case STRING: {
                        mergeString(other.getString());
                        break;
                    }
                    case BYTES: {
                        mergeBytes(other.getBytes());
                        break;
                    }
                    case ENUM: {
                        mergeEnum(other.getEnum());
                        break;
                    }
                    case MESSAGE: {
                        mergeMessage(other.getMessage());
                        break;
                    }
                    case REPEATED: {
                        mergeRepeated(other.getRepeated());
                        break;
                    }
                    case MAP: {
                        mergeMap(other.getMap());
                        break;
                    }
                    case ANY: {
                        mergeAny(other.getAny());
                        break;
                    }
                    case DURATION: {
                        mergeDuration(other.getDuration());
                        break;
                    }
                    case TIMESTAMP: {
                        mergeTimestamp(other.getTimestamp());
                        break;
                    }
                    case TYPE_NOT_SET: {
                        break;
                    }
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {

                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                Validate.FieldRules parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (Validate.FieldRules) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int typeCase_ = 0;
            private java.lang.Object type_;

            public TypeCase
            getTypeCase() {

                return TypeCase.forNumber(
                        typeCase_);
            }

            public Builder clearType() {

                typeCase_ = 0;
                type_ = null;
                onChanged();
                return this;
            }

            private int bitField0_;

            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.FloatRules, Validate.FloatRules.Builder, Validate.FloatRulesOrBuilder> floatBuilder_;

            /**
             * <pre>
             * Scalar Field Types
             * </pre>
             *
             * <code>optional .validate.FloatRules float = 1;</code>
             */
            public boolean hasFloat() {

                return typeCase_ == 1;
            }

            /**
             * <pre>
             * Scalar Field Types
             * </pre>
             *
             * <code>optional .validate.FloatRules float = 1;</code>
             */
            public Validate.FloatRules getFloat() {

                if (floatBuilder_ == null) {
                    if (typeCase_ == 1) {
                        return (Validate.FloatRules) type_;
                    }
                    return Validate.FloatRules.getDefaultInstance();
                } else {
                    if (typeCase_ == 1) {
                        return floatBuilder_.getMessage();
                    }
                    return Validate.FloatRules.getDefaultInstance();
                }
            }

            /**
             * <pre>
             * Scalar Field Types
             * </pre>
             *
             * <code>optional .validate.FloatRules float = 1;</code>
             */
            public Builder setFloat(Validate.FloatRules value) {

                if (floatBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    type_ = value;
                    onChanged();
                } else {
                    floatBuilder_.setMessage(value);
                }
                typeCase_ = 1;
                return this;
            }

            /**
             * <pre>
             * Scalar Field Types
             * </pre>
             *
             * <code>optional .validate.FloatRules float = 1;</code>
             */
            public Builder setFloat(
                    Validate.FloatRules.Builder builderForValue) {

                if (floatBuilder_ == null) {
                    type_ = builderForValue.build();
                    onChanged();
                } else {
                    floatBuilder_.setMessage(builderForValue.build());
                }
                typeCase_ = 1;
                return this;
            }

            /**
             * <pre>
             * Scalar Field Types
             * </pre>
             *
             * <code>optional .validate.FloatRules float = 1;</code>
             */
            public Builder mergeFloat(Validate.FloatRules value) {

                if (floatBuilder_ == null) {
                    if (typeCase_ == 1 &&
                            type_ != Validate.FloatRules.getDefaultInstance()) {
                        type_ = Validate.FloatRules.newBuilder((Validate.FloatRules) type_)
                                .mergeFrom(value).buildPartial();
                    } else {
                        type_ = value;
                    }
                    onChanged();
                } else {
                    if (typeCase_ == 1) {
                        floatBuilder_.mergeFrom(value);
                    }
                    floatBuilder_.setMessage(value);
                }
                typeCase_ = 1;
                return this;
            }

            /**
             * <pre>
             * Scalar Field Types
             * </pre>
             *
             * <code>optional .validate.FloatRules float = 1;</code>
             */
            public Builder clearFloat() {

                if (floatBuilder_ == null) {
                    if (typeCase_ == 1) {
                        typeCase_ = 0;
                        type_ = null;
                        onChanged();
                    }
                } else {
                    if (typeCase_ == 1) {
                        typeCase_ = 0;
                        type_ = null;
                    }
                    floatBuilder_.clear();
                }
                return this;
            }

            /**
             * <pre>
             * Scalar Field Types
             * </pre>
             *
             * <code>optional .validate.FloatRules float = 1;</code>
             */
            public Validate.FloatRules.Builder getFloatBuilder() {

                return getFloatFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Scalar Field Types
             * </pre>
             *
             * <code>optional .validate.FloatRules float = 1;</code>
             */
            public Validate.FloatRulesOrBuilder getFloatOrBuilder() {

                if ((typeCase_ == 1) && (floatBuilder_ != null)) {
                    return floatBuilder_.getMessageOrBuilder();
                } else {
                    if (typeCase_ == 1) {
                        return (Validate.FloatRules) type_;
                    }
                    return Validate.FloatRules.getDefaultInstance();
                }
            }

            /**
             * <pre>
             * Scalar Field Types
             * </pre>
             *
             * <code>optional .validate.FloatRules float = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.FloatRules, Validate.FloatRules.Builder, Validate.FloatRulesOrBuilder>
            getFloatFieldBuilder() {

                if (floatBuilder_ == null) {
                    if (!(typeCase_ == 1)) {
                        type_ = Validate.FloatRules.getDefaultInstance();
                    }
                    floatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            Validate.FloatRules, Validate.FloatRules.Builder, Validate.FloatRulesOrBuilder>(
                            (Validate.FloatRules) type_,
                            getParentForChildren(),
                            isClean());
                    type_ = null;
                }
                typeCase_ = 1;
                onChanged();
                ;
                return floatBuilder_;
            }

            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.DoubleRules, Validate.DoubleRules.Builder, Validate.DoubleRulesOrBuilder> doubleBuilder_;

            /**
             * <code>optional .validate.DoubleRules double = 2;</code>
             */
            public boolean hasDouble() {

                return typeCase_ == 2;
            }

            /**
             * <code>optional .validate.DoubleRules double = 2;</code>
             */
            public Validate.DoubleRules getDouble() {

                if (doubleBuilder_ == null) {
                    if (typeCase_ == 2) {
                        return (Validate.DoubleRules) type_;
                    }
                    return Validate.DoubleRules.getDefaultInstance();
                } else {
                    if (typeCase_ == 2) {
                        return doubleBuilder_.getMessage();
                    }
                    return Validate.DoubleRules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.DoubleRules double = 2;</code>
             */
            public Builder setDouble(Validate.DoubleRules value) {

                if (doubleBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    type_ = value;
                    onChanged();
                } else {
                    doubleBuilder_.setMessage(value);
                }
                typeCase_ = 2;
                return this;
            }

            /**
             * <code>optional .validate.DoubleRules double = 2;</code>
             */
            public Builder setDouble(
                    Validate.DoubleRules.Builder builderForValue) {

                if (doubleBuilder_ == null) {
                    type_ = builderForValue.build();
                    onChanged();
                } else {
                    doubleBuilder_.setMessage(builderForValue.build());
                }
                typeCase_ = 2;
                return this;
            }

            /**
             * <code>optional .validate.DoubleRules double = 2;</code>
             */
            public Builder mergeDouble(Validate.DoubleRules value) {

                if (doubleBuilder_ == null) {
                    if (typeCase_ == 2 &&
                            type_ != Validate.DoubleRules.getDefaultInstance()) {
                        type_ = Validate.DoubleRules.newBuilder((Validate.DoubleRules) type_)
                                .mergeFrom(value).buildPartial();
                    } else {
                        type_ = value;
                    }
                    onChanged();
                } else {
                    if (typeCase_ == 2) {
                        doubleBuilder_.mergeFrom(value);
                    }
                    doubleBuilder_.setMessage(value);
                }
                typeCase_ = 2;
                return this;
            }

            /**
             * <code>optional .validate.DoubleRules double = 2;</code>
             */
            public Builder clearDouble() {

                if (doubleBuilder_ == null) {
                    if (typeCase_ == 2) {
                        typeCase_ = 0;
                        type_ = null;
                        onChanged();
                    }
                } else {
                    if (typeCase_ == 2) {
                        typeCase_ = 0;
                        type_ = null;
                    }
                    doubleBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>optional .validate.DoubleRules double = 2;</code>
             */
            public Validate.DoubleRules.Builder getDoubleBuilder() {

                return getDoubleFieldBuilder().getBuilder();
            }

            /**
             * <code>optional .validate.DoubleRules double = 2;</code>
             */
            public Validate.DoubleRulesOrBuilder getDoubleOrBuilder() {

                if ((typeCase_ == 2) && (doubleBuilder_ != null)) {
                    return doubleBuilder_.getMessageOrBuilder();
                } else {
                    if (typeCase_ == 2) {
                        return (Validate.DoubleRules) type_;
                    }
                    return Validate.DoubleRules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.DoubleRules double = 2;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.DoubleRules, Validate.DoubleRules.Builder, Validate.DoubleRulesOrBuilder>
            getDoubleFieldBuilder() {

                if (doubleBuilder_ == null) {
                    if (!(typeCase_ == 2)) {
                        type_ = Validate.DoubleRules.getDefaultInstance();
                    }
                    doubleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            Validate.DoubleRules, Validate.DoubleRules.Builder, Validate.DoubleRulesOrBuilder>(
                            (Validate.DoubleRules) type_,
                            getParentForChildren(),
                            isClean());
                    type_ = null;
                }
                typeCase_ = 2;
                onChanged();
                ;
                return doubleBuilder_;
            }

            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.Int32Rules, Validate.Int32Rules.Builder, Validate.Int32RulesOrBuilder> int32Builder_;

            /**
             * <code>optional .validate.Int32Rules int32 = 3;</code>
             */
            public boolean hasInt32() {

                return typeCase_ == 3;
            }

            /**
             * <code>optional .validate.Int32Rules int32 = 3;</code>
             */
            public Validate.Int32Rules getInt32() {

                if (int32Builder_ == null) {
                    if (typeCase_ == 3) {
                        return (Validate.Int32Rules) type_;
                    }
                    return Validate.Int32Rules.getDefaultInstance();
                } else {
                    if (typeCase_ == 3) {
                        return int32Builder_.getMessage();
                    }
                    return Validate.Int32Rules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.Int32Rules int32 = 3;</code>
             */
            public Builder setInt32(Validate.Int32Rules value) {

                if (int32Builder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    type_ = value;
                    onChanged();
                } else {
                    int32Builder_.setMessage(value);
                }
                typeCase_ = 3;
                return this;
            }

            /**
             * <code>optional .validate.Int32Rules int32 = 3;</code>
             */
            public Builder setInt32(
                    Validate.Int32Rules.Builder builderForValue) {

                if (int32Builder_ == null) {
                    type_ = builderForValue.build();
                    onChanged();
                } else {
                    int32Builder_.setMessage(builderForValue.build());
                }
                typeCase_ = 3;
                return this;
            }

            /**
             * <code>optional .validate.Int32Rules int32 = 3;</code>
             */
            public Builder mergeInt32(Validate.Int32Rules value) {

                if (int32Builder_ == null) {
                    if (typeCase_ == 3 &&
                            type_ != Validate.Int32Rules.getDefaultInstance()) {
                        type_ = Validate.Int32Rules.newBuilder((Validate.Int32Rules) type_)
                                .mergeFrom(value).buildPartial();
                    } else {
                        type_ = value;
                    }
                    onChanged();
                } else {
                    if (typeCase_ == 3) {
                        int32Builder_.mergeFrom(value);
                    }
                    int32Builder_.setMessage(value);
                }
                typeCase_ = 3;
                return this;
            }

            /**
             * <code>optional .validate.Int32Rules int32 = 3;</code>
             */
            public Builder clearInt32() {

                if (int32Builder_ == null) {
                    if (typeCase_ == 3) {
                        typeCase_ = 0;
                        type_ = null;
                        onChanged();
                    }
                } else {
                    if (typeCase_ == 3) {
                        typeCase_ = 0;
                        type_ = null;
                    }
                    int32Builder_.clear();
                }
                return this;
            }

            /**
             * <code>optional .validate.Int32Rules int32 = 3;</code>
             */
            public Validate.Int32Rules.Builder getInt32Builder() {

                return getInt32FieldBuilder().getBuilder();
            }

            /**
             * <code>optional .validate.Int32Rules int32 = 3;</code>
             */
            public Validate.Int32RulesOrBuilder getInt32OrBuilder() {

                if ((typeCase_ == 3) && (int32Builder_ != null)) {
                    return int32Builder_.getMessageOrBuilder();
                } else {
                    if (typeCase_ == 3) {
                        return (Validate.Int32Rules) type_;
                    }
                    return Validate.Int32Rules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.Int32Rules int32 = 3;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.Int32Rules, Validate.Int32Rules.Builder, Validate.Int32RulesOrBuilder>
            getInt32FieldBuilder() {

                if (int32Builder_ == null) {
                    if (!(typeCase_ == 3)) {
                        type_ = Validate.Int32Rules.getDefaultInstance();
                    }
                    int32Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            Validate.Int32Rules, Validate.Int32Rules.Builder, Validate.Int32RulesOrBuilder>(
                            (Validate.Int32Rules) type_,
                            getParentForChildren(),
                            isClean());
                    type_ = null;
                }
                typeCase_ = 3;
                onChanged();
                ;
                return int32Builder_;
            }

            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.Int64Rules, Validate.Int64Rules.Builder, Validate.Int64RulesOrBuilder> int64Builder_;

            /**
             * <code>optional .validate.Int64Rules int64 = 4;</code>
             */
            public boolean hasInt64() {

                return typeCase_ == 4;
            }

            /**
             * <code>optional .validate.Int64Rules int64 = 4;</code>
             */
            public Validate.Int64Rules getInt64() {

                if (int64Builder_ == null) {
                    if (typeCase_ == 4) {
                        return (Validate.Int64Rules) type_;
                    }
                    return Validate.Int64Rules.getDefaultInstance();
                } else {
                    if (typeCase_ == 4) {
                        return int64Builder_.getMessage();
                    }
                    return Validate.Int64Rules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.Int64Rules int64 = 4;</code>
             */
            public Builder setInt64(Validate.Int64Rules value) {

                if (int64Builder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    type_ = value;
                    onChanged();
                } else {
                    int64Builder_.setMessage(value);
                }
                typeCase_ = 4;
                return this;
            }

            /**
             * <code>optional .validate.Int64Rules int64 = 4;</code>
             */
            public Builder setInt64(
                    Validate.Int64Rules.Builder builderForValue) {

                if (int64Builder_ == null) {
                    type_ = builderForValue.build();
                    onChanged();
                } else {
                    int64Builder_.setMessage(builderForValue.build());
                }
                typeCase_ = 4;
                return this;
            }

            /**
             * <code>optional .validate.Int64Rules int64 = 4;</code>
             */
            public Builder mergeInt64(Validate.Int64Rules value) {

                if (int64Builder_ == null) {
                    if (typeCase_ == 4 &&
                            type_ != Validate.Int64Rules.getDefaultInstance()) {
                        type_ = Validate.Int64Rules.newBuilder((Validate.Int64Rules) type_)
                                .mergeFrom(value).buildPartial();
                    } else {
                        type_ = value;
                    }
                    onChanged();
                } else {
                    if (typeCase_ == 4) {
                        int64Builder_.mergeFrom(value);
                    }
                    int64Builder_.setMessage(value);
                }
                typeCase_ = 4;
                return this;
            }

            /**
             * <code>optional .validate.Int64Rules int64 = 4;</code>
             */
            public Builder clearInt64() {

                if (int64Builder_ == null) {
                    if (typeCase_ == 4) {
                        typeCase_ = 0;
                        type_ = null;
                        onChanged();
                    }
                } else {
                    if (typeCase_ == 4) {
                        typeCase_ = 0;
                        type_ = null;
                    }
                    int64Builder_.clear();
                }
                return this;
            }

            /**
             * <code>optional .validate.Int64Rules int64 = 4;</code>
             */
            public Validate.Int64Rules.Builder getInt64Builder() {

                return getInt64FieldBuilder().getBuilder();
            }

            /**
             * <code>optional .validate.Int64Rules int64 = 4;</code>
             */
            public Validate.Int64RulesOrBuilder getInt64OrBuilder() {

                if ((typeCase_ == 4) && (int64Builder_ != null)) {
                    return int64Builder_.getMessageOrBuilder();
                } else {
                    if (typeCase_ == 4) {
                        return (Validate.Int64Rules) type_;
                    }
                    return Validate.Int64Rules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.Int64Rules int64 = 4;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.Int64Rules, Validate.Int64Rules.Builder, Validate.Int64RulesOrBuilder>
            getInt64FieldBuilder() {

                if (int64Builder_ == null) {
                    if (!(typeCase_ == 4)) {
                        type_ = Validate.Int64Rules.getDefaultInstance();
                    }
                    int64Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            Validate.Int64Rules, Validate.Int64Rules.Builder, Validate.Int64RulesOrBuilder>(
                            (Validate.Int64Rules) type_,
                            getParentForChildren(),
                            isClean());
                    type_ = null;
                }
                typeCase_ = 4;
                onChanged();
                ;
                return int64Builder_;
            }

            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.UInt32Rules, Validate.UInt32Rules.Builder, Validate.UInt32RulesOrBuilder> uint32Builder_;

            /**
             * <code>optional .validate.UInt32Rules uint32 = 5;</code>
             */
            public boolean hasUint32() {

                return typeCase_ == 5;
            }

            /**
             * <code>optional .validate.UInt32Rules uint32 = 5;</code>
             */
            public Validate.UInt32Rules getUint32() {

                if (uint32Builder_ == null) {
                    if (typeCase_ == 5) {
                        return (Validate.UInt32Rules) type_;
                    }
                    return Validate.UInt32Rules.getDefaultInstance();
                } else {
                    if (typeCase_ == 5) {
                        return uint32Builder_.getMessage();
                    }
                    return Validate.UInt32Rules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.UInt32Rules uint32 = 5;</code>
             */
            public Builder setUint32(Validate.UInt32Rules value) {

                if (uint32Builder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    type_ = value;
                    onChanged();
                } else {
                    uint32Builder_.setMessage(value);
                }
                typeCase_ = 5;
                return this;
            }

            /**
             * <code>optional .validate.UInt32Rules uint32 = 5;</code>
             */
            public Builder setUint32(
                    Validate.UInt32Rules.Builder builderForValue) {

                if (uint32Builder_ == null) {
                    type_ = builderForValue.build();
                    onChanged();
                } else {
                    uint32Builder_.setMessage(builderForValue.build());
                }
                typeCase_ = 5;
                return this;
            }

            /**
             * <code>optional .validate.UInt32Rules uint32 = 5;</code>
             */
            public Builder mergeUint32(Validate.UInt32Rules value) {

                if (uint32Builder_ == null) {
                    if (typeCase_ == 5 &&
                            type_ != Validate.UInt32Rules.getDefaultInstance()) {
                        type_ = Validate.UInt32Rules.newBuilder((Validate.UInt32Rules) type_)
                                .mergeFrom(value).buildPartial();
                    } else {
                        type_ = value;
                    }
                    onChanged();
                } else {
                    if (typeCase_ == 5) {
                        uint32Builder_.mergeFrom(value);
                    }
                    uint32Builder_.setMessage(value);
                }
                typeCase_ = 5;
                return this;
            }

            /**
             * <code>optional .validate.UInt32Rules uint32 = 5;</code>
             */
            public Builder clearUint32() {

                if (uint32Builder_ == null) {
                    if (typeCase_ == 5) {
                        typeCase_ = 0;
                        type_ = null;
                        onChanged();
                    }
                } else {
                    if (typeCase_ == 5) {
                        typeCase_ = 0;
                        type_ = null;
                    }
                    uint32Builder_.clear();
                }
                return this;
            }

            /**
             * <code>optional .validate.UInt32Rules uint32 = 5;</code>
             */
            public Validate.UInt32Rules.Builder getUint32Builder() {

                return getUint32FieldBuilder().getBuilder();
            }

            /**
             * <code>optional .validate.UInt32Rules uint32 = 5;</code>
             */
            public Validate.UInt32RulesOrBuilder getUint32OrBuilder() {

                if ((typeCase_ == 5) && (uint32Builder_ != null)) {
                    return uint32Builder_.getMessageOrBuilder();
                } else {
                    if (typeCase_ == 5) {
                        return (Validate.UInt32Rules) type_;
                    }
                    return Validate.UInt32Rules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.UInt32Rules uint32 = 5;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.UInt32Rules, Validate.UInt32Rules.Builder, Validate.UInt32RulesOrBuilder>
            getUint32FieldBuilder() {

                if (uint32Builder_ == null) {
                    if (!(typeCase_ == 5)) {
                        type_ = Validate.UInt32Rules.getDefaultInstance();
                    }
                    uint32Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            Validate.UInt32Rules, Validate.UInt32Rules.Builder, Validate.UInt32RulesOrBuilder>(
                            (Validate.UInt32Rules) type_,
                            getParentForChildren(),
                            isClean());
                    type_ = null;
                }
                typeCase_ = 5;
                onChanged();
                ;
                return uint32Builder_;
            }

            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.UInt64Rules, Validate.UInt64Rules.Builder, Validate.UInt64RulesOrBuilder> uint64Builder_;

            /**
             * <code>optional .validate.UInt64Rules uint64 = 6;</code>
             */
            public boolean hasUint64() {

                return typeCase_ == 6;
            }

            /**
             * <code>optional .validate.UInt64Rules uint64 = 6;</code>
             */
            public Validate.UInt64Rules getUint64() {

                if (uint64Builder_ == null) {
                    if (typeCase_ == 6) {
                        return (Validate.UInt64Rules) type_;
                    }
                    return Validate.UInt64Rules.getDefaultInstance();
                } else {
                    if (typeCase_ == 6) {
                        return uint64Builder_.getMessage();
                    }
                    return Validate.UInt64Rules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.UInt64Rules uint64 = 6;</code>
             */
            public Builder setUint64(Validate.UInt64Rules value) {

                if (uint64Builder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    type_ = value;
                    onChanged();
                } else {
                    uint64Builder_.setMessage(value);
                }
                typeCase_ = 6;
                return this;
            }

            /**
             * <code>optional .validate.UInt64Rules uint64 = 6;</code>
             */
            public Builder setUint64(
                    Validate.UInt64Rules.Builder builderForValue) {

                if (uint64Builder_ == null) {
                    type_ = builderForValue.build();
                    onChanged();
                } else {
                    uint64Builder_.setMessage(builderForValue.build());
                }
                typeCase_ = 6;
                return this;
            }

            /**
             * <code>optional .validate.UInt64Rules uint64 = 6;</code>
             */
            public Builder mergeUint64(Validate.UInt64Rules value) {

                if (uint64Builder_ == null) {
                    if (typeCase_ == 6 &&
                            type_ != Validate.UInt64Rules.getDefaultInstance()) {
                        type_ = Validate.UInt64Rules.newBuilder((Validate.UInt64Rules) type_)
                                .mergeFrom(value).buildPartial();
                    } else {
                        type_ = value;
                    }
                    onChanged();
                } else {
                    if (typeCase_ == 6) {
                        uint64Builder_.mergeFrom(value);
                    }
                    uint64Builder_.setMessage(value);
                }
                typeCase_ = 6;
                return this;
            }

            /**
             * <code>optional .validate.UInt64Rules uint64 = 6;</code>
             */
            public Builder clearUint64() {

                if (uint64Builder_ == null) {
                    if (typeCase_ == 6) {
                        typeCase_ = 0;
                        type_ = null;
                        onChanged();
                    }
                } else {
                    if (typeCase_ == 6) {
                        typeCase_ = 0;
                        type_ = null;
                    }
                    uint64Builder_.clear();
                }
                return this;
            }

            /**
             * <code>optional .validate.UInt64Rules uint64 = 6;</code>
             */
            public Validate.UInt64Rules.Builder getUint64Builder() {

                return getUint64FieldBuilder().getBuilder();
            }

            /**
             * <code>optional .validate.UInt64Rules uint64 = 6;</code>
             */
            public Validate.UInt64RulesOrBuilder getUint64OrBuilder() {

                if ((typeCase_ == 6) && (uint64Builder_ != null)) {
                    return uint64Builder_.getMessageOrBuilder();
                } else {
                    if (typeCase_ == 6) {
                        return (Validate.UInt64Rules) type_;
                    }
                    return Validate.UInt64Rules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.UInt64Rules uint64 = 6;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.UInt64Rules, Validate.UInt64Rules.Builder, Validate.UInt64RulesOrBuilder>
            getUint64FieldBuilder() {

                if (uint64Builder_ == null) {
                    if (!(typeCase_ == 6)) {
                        type_ = Validate.UInt64Rules.getDefaultInstance();
                    }
                    uint64Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            Validate.UInt64Rules, Validate.UInt64Rules.Builder, Validate.UInt64RulesOrBuilder>(
                            (Validate.UInt64Rules) type_,
                            getParentForChildren(),
                            isClean());
                    type_ = null;
                }
                typeCase_ = 6;
                onChanged();
                ;
                return uint64Builder_;
            }

            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.SInt32Rules, Validate.SInt32Rules.Builder, Validate.SInt32RulesOrBuilder> sint32Builder_;

            /**
             * <code>optional .validate.SInt32Rules sint32 = 7;</code>
             */
            public boolean hasSint32() {

                return typeCase_ == 7;
            }

            /**
             * <code>optional .validate.SInt32Rules sint32 = 7;</code>
             */
            public Validate.SInt32Rules getSint32() {

                if (sint32Builder_ == null) {
                    if (typeCase_ == 7) {
                        return (Validate.SInt32Rules) type_;
                    }
                    return Validate.SInt32Rules.getDefaultInstance();
                } else {
                    if (typeCase_ == 7) {
                        return sint32Builder_.getMessage();
                    }
                    return Validate.SInt32Rules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.SInt32Rules sint32 = 7;</code>
             */
            public Builder setSint32(Validate.SInt32Rules value) {

                if (sint32Builder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    type_ = value;
                    onChanged();
                } else {
                    sint32Builder_.setMessage(value);
                }
                typeCase_ = 7;
                return this;
            }

            /**
             * <code>optional .validate.SInt32Rules sint32 = 7;</code>
             */
            public Builder setSint32(
                    Validate.SInt32Rules.Builder builderForValue) {

                if (sint32Builder_ == null) {
                    type_ = builderForValue.build();
                    onChanged();
                } else {
                    sint32Builder_.setMessage(builderForValue.build());
                }
                typeCase_ = 7;
                return this;
            }

            /**
             * <code>optional .validate.SInt32Rules sint32 = 7;</code>
             */
            public Builder mergeSint32(Validate.SInt32Rules value) {

                if (sint32Builder_ == null) {
                    if (typeCase_ == 7 &&
                            type_ != Validate.SInt32Rules.getDefaultInstance()) {
                        type_ = Validate.SInt32Rules.newBuilder((Validate.SInt32Rules) type_)
                                .mergeFrom(value).buildPartial();
                    } else {
                        type_ = value;
                    }
                    onChanged();
                } else {
                    if (typeCase_ == 7) {
                        sint32Builder_.mergeFrom(value);
                    }
                    sint32Builder_.setMessage(value);
                }
                typeCase_ = 7;
                return this;
            }

            /**
             * <code>optional .validate.SInt32Rules sint32 = 7;</code>
             */
            public Builder clearSint32() {

                if (sint32Builder_ == null) {
                    if (typeCase_ == 7) {
                        typeCase_ = 0;
                        type_ = null;
                        onChanged();
                    }
                } else {
                    if (typeCase_ == 7) {
                        typeCase_ = 0;
                        type_ = null;
                    }
                    sint32Builder_.clear();
                }
                return this;
            }

            /**
             * <code>optional .validate.SInt32Rules sint32 = 7;</code>
             */
            public Validate.SInt32Rules.Builder getSint32Builder() {

                return getSint32FieldBuilder().getBuilder();
            }

            /**
             * <code>optional .validate.SInt32Rules sint32 = 7;</code>
             */
            public Validate.SInt32RulesOrBuilder getSint32OrBuilder() {

                if ((typeCase_ == 7) && (sint32Builder_ != null)) {
                    return sint32Builder_.getMessageOrBuilder();
                } else {
                    if (typeCase_ == 7) {
                        return (Validate.SInt32Rules) type_;
                    }
                    return Validate.SInt32Rules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.SInt32Rules sint32 = 7;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.SInt32Rules, Validate.SInt32Rules.Builder, Validate.SInt32RulesOrBuilder>
            getSint32FieldBuilder() {

                if (sint32Builder_ == null) {
                    if (!(typeCase_ == 7)) {
                        type_ = Validate.SInt32Rules.getDefaultInstance();
                    }
                    sint32Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            Validate.SInt32Rules, Validate.SInt32Rules.Builder, Validate.SInt32RulesOrBuilder>(
                            (Validate.SInt32Rules) type_,
                            getParentForChildren(),
                            isClean());
                    type_ = null;
                }
                typeCase_ = 7;
                onChanged();
                ;
                return sint32Builder_;
            }

            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.SInt64Rules, Validate.SInt64Rules.Builder, Validate.SInt64RulesOrBuilder> sint64Builder_;

            /**
             * <code>optional .validate.SInt64Rules sint64 = 8;</code>
             */
            public boolean hasSint64() {

                return typeCase_ == 8;
            }

            /**
             * <code>optional .validate.SInt64Rules sint64 = 8;</code>
             */
            public Validate.SInt64Rules getSint64() {

                if (sint64Builder_ == null) {
                    if (typeCase_ == 8) {
                        return (Validate.SInt64Rules) type_;
                    }
                    return Validate.SInt64Rules.getDefaultInstance();
                } else {
                    if (typeCase_ == 8) {
                        return sint64Builder_.getMessage();
                    }
                    return Validate.SInt64Rules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.SInt64Rules sint64 = 8;</code>
             */
            public Builder setSint64(Validate.SInt64Rules value) {

                if (sint64Builder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    type_ = value;
                    onChanged();
                } else {
                    sint64Builder_.setMessage(value);
                }
                typeCase_ = 8;
                return this;
            }

            /**
             * <code>optional .validate.SInt64Rules sint64 = 8;</code>
             */
            public Builder setSint64(
                    Validate.SInt64Rules.Builder builderForValue) {

                if (sint64Builder_ == null) {
                    type_ = builderForValue.build();
                    onChanged();
                } else {
                    sint64Builder_.setMessage(builderForValue.build());
                }
                typeCase_ = 8;
                return this;
            }

            /**
             * <code>optional .validate.SInt64Rules sint64 = 8;</code>
             */
            public Builder mergeSint64(Validate.SInt64Rules value) {

                if (sint64Builder_ == null) {
                    if (typeCase_ == 8 &&
                            type_ != Validate.SInt64Rules.getDefaultInstance()) {
                        type_ = Validate.SInt64Rules.newBuilder((Validate.SInt64Rules) type_)
                                .mergeFrom(value).buildPartial();
                    } else {
                        type_ = value;
                    }
                    onChanged();
                } else {
                    if (typeCase_ == 8) {
                        sint64Builder_.mergeFrom(value);
                    }
                    sint64Builder_.setMessage(value);
                }
                typeCase_ = 8;
                return this;
            }

            /**
             * <code>optional .validate.SInt64Rules sint64 = 8;</code>
             */
            public Builder clearSint64() {

                if (sint64Builder_ == null) {
                    if (typeCase_ == 8) {
                        typeCase_ = 0;
                        type_ = null;
                        onChanged();
                    }
                } else {
                    if (typeCase_ == 8) {
                        typeCase_ = 0;
                        type_ = null;
                    }
                    sint64Builder_.clear();
                }
                return this;
            }

            /**
             * <code>optional .validate.SInt64Rules sint64 = 8;</code>
             */
            public Validate.SInt64Rules.Builder getSint64Builder() {

                return getSint64FieldBuilder().getBuilder();
            }

            /**
             * <code>optional .validate.SInt64Rules sint64 = 8;</code>
             */
            public Validate.SInt64RulesOrBuilder getSint64OrBuilder() {

                if ((typeCase_ == 8) && (sint64Builder_ != null)) {
                    return sint64Builder_.getMessageOrBuilder();
                } else {
                    if (typeCase_ == 8) {
                        return (Validate.SInt64Rules) type_;
                    }
                    return Validate.SInt64Rules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.SInt64Rules sint64 = 8;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.SInt64Rules, Validate.SInt64Rules.Builder, Validate.SInt64RulesOrBuilder>
            getSint64FieldBuilder() {

                if (sint64Builder_ == null) {
                    if (!(typeCase_ == 8)) {
                        type_ = Validate.SInt64Rules.getDefaultInstance();
                    }
                    sint64Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            Validate.SInt64Rules, Validate.SInt64Rules.Builder, Validate.SInt64RulesOrBuilder>(
                            (Validate.SInt64Rules) type_,
                            getParentForChildren(),
                            isClean());
                    type_ = null;
                }
                typeCase_ = 8;
                onChanged();
                ;
                return sint64Builder_;
            }

            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.Fixed32Rules, Validate.Fixed32Rules.Builder, Validate.Fixed32RulesOrBuilder> fixed32Builder_;

            /**
             * <code>optional .validate.Fixed32Rules fixed32 = 9;</code>
             */
            public boolean hasFixed32() {

                return typeCase_ == 9;
            }

            /**
             * <code>optional .validate.Fixed32Rules fixed32 = 9;</code>
             */
            public Validate.Fixed32Rules getFixed32() {

                if (fixed32Builder_ == null) {
                    if (typeCase_ == 9) {
                        return (Validate.Fixed32Rules) type_;
                    }
                    return Validate.Fixed32Rules.getDefaultInstance();
                } else {
                    if (typeCase_ == 9) {
                        return fixed32Builder_.getMessage();
                    }
                    return Validate.Fixed32Rules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.Fixed32Rules fixed32 = 9;</code>
             */
            public Builder setFixed32(Validate.Fixed32Rules value) {

                if (fixed32Builder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    type_ = value;
                    onChanged();
                } else {
                    fixed32Builder_.setMessage(value);
                }
                typeCase_ = 9;
                return this;
            }

            /**
             * <code>optional .validate.Fixed32Rules fixed32 = 9;</code>
             */
            public Builder setFixed32(
                    Validate.Fixed32Rules.Builder builderForValue) {

                if (fixed32Builder_ == null) {
                    type_ = builderForValue.build();
                    onChanged();
                } else {
                    fixed32Builder_.setMessage(builderForValue.build());
                }
                typeCase_ = 9;
                return this;
            }

            /**
             * <code>optional .validate.Fixed32Rules fixed32 = 9;</code>
             */
            public Builder mergeFixed32(Validate.Fixed32Rules value) {

                if (fixed32Builder_ == null) {
                    if (typeCase_ == 9 &&
                            type_ != Validate.Fixed32Rules.getDefaultInstance()) {
                        type_ = Validate.Fixed32Rules.newBuilder((Validate.Fixed32Rules) type_)
                                .mergeFrom(value).buildPartial();
                    } else {
                        type_ = value;
                    }
                    onChanged();
                } else {
                    if (typeCase_ == 9) {
                        fixed32Builder_.mergeFrom(value);
                    }
                    fixed32Builder_.setMessage(value);
                }
                typeCase_ = 9;
                return this;
            }

            /**
             * <code>optional .validate.Fixed32Rules fixed32 = 9;</code>
             */
            public Builder clearFixed32() {

                if (fixed32Builder_ == null) {
                    if (typeCase_ == 9) {
                        typeCase_ = 0;
                        type_ = null;
                        onChanged();
                    }
                } else {
                    if (typeCase_ == 9) {
                        typeCase_ = 0;
                        type_ = null;
                    }
                    fixed32Builder_.clear();
                }
                return this;
            }

            /**
             * <code>optional .validate.Fixed32Rules fixed32 = 9;</code>
             */
            public Validate.Fixed32Rules.Builder getFixed32Builder() {

                return getFixed32FieldBuilder().getBuilder();
            }

            /**
             * <code>optional .validate.Fixed32Rules fixed32 = 9;</code>
             */
            public Validate.Fixed32RulesOrBuilder getFixed32OrBuilder() {

                if ((typeCase_ == 9) && (fixed32Builder_ != null)) {
                    return fixed32Builder_.getMessageOrBuilder();
                } else {
                    if (typeCase_ == 9) {
                        return (Validate.Fixed32Rules) type_;
                    }
                    return Validate.Fixed32Rules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.Fixed32Rules fixed32 = 9;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.Fixed32Rules, Validate.Fixed32Rules.Builder, Validate.Fixed32RulesOrBuilder>
            getFixed32FieldBuilder() {

                if (fixed32Builder_ == null) {
                    if (!(typeCase_ == 9)) {
                        type_ = Validate.Fixed32Rules.getDefaultInstance();
                    }
                    fixed32Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            Validate.Fixed32Rules, Validate.Fixed32Rules.Builder, Validate.Fixed32RulesOrBuilder>(
                            (Validate.Fixed32Rules) type_,
                            getParentForChildren(),
                            isClean());
                    type_ = null;
                }
                typeCase_ = 9;
                onChanged();
                ;
                return fixed32Builder_;
            }

            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.Fixed64Rules, Validate.Fixed64Rules.Builder, Validate.Fixed64RulesOrBuilder> fixed64Builder_;

            /**
             * <code>optional .validate.Fixed64Rules fixed64 = 10;</code>
             */
            public boolean hasFixed64() {

                return typeCase_ == 10;
            }

            /**
             * <code>optional .validate.Fixed64Rules fixed64 = 10;</code>
             */
            public Validate.Fixed64Rules getFixed64() {

                if (fixed64Builder_ == null) {
                    if (typeCase_ == 10) {
                        return (Validate.Fixed64Rules) type_;
                    }
                    return Validate.Fixed64Rules.getDefaultInstance();
                } else {
                    if (typeCase_ == 10) {
                        return fixed64Builder_.getMessage();
                    }
                    return Validate.Fixed64Rules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.Fixed64Rules fixed64 = 10;</code>
             */
            public Builder setFixed64(Validate.Fixed64Rules value) {

                if (fixed64Builder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    type_ = value;
                    onChanged();
                } else {
                    fixed64Builder_.setMessage(value);
                }
                typeCase_ = 10;
                return this;
            }

            /**
             * <code>optional .validate.Fixed64Rules fixed64 = 10;</code>
             */
            public Builder setFixed64(
                    Validate.Fixed64Rules.Builder builderForValue) {

                if (fixed64Builder_ == null) {
                    type_ = builderForValue.build();
                    onChanged();
                } else {
                    fixed64Builder_.setMessage(builderForValue.build());
                }
                typeCase_ = 10;
                return this;
            }

            /**
             * <code>optional .validate.Fixed64Rules fixed64 = 10;</code>
             */
            public Builder mergeFixed64(Validate.Fixed64Rules value) {

                if (fixed64Builder_ == null) {
                    if (typeCase_ == 10 &&
                            type_ != Validate.Fixed64Rules.getDefaultInstance()) {
                        type_ = Validate.Fixed64Rules.newBuilder((Validate.Fixed64Rules) type_)
                                .mergeFrom(value).buildPartial();
                    } else {
                        type_ = value;
                    }
                    onChanged();
                } else {
                    if (typeCase_ == 10) {
                        fixed64Builder_.mergeFrom(value);
                    }
                    fixed64Builder_.setMessage(value);
                }
                typeCase_ = 10;
                return this;
            }

            /**
             * <code>optional .validate.Fixed64Rules fixed64 = 10;</code>
             */
            public Builder clearFixed64() {

                if (fixed64Builder_ == null) {
                    if (typeCase_ == 10) {
                        typeCase_ = 0;
                        type_ = null;
                        onChanged();
                    }
                } else {
                    if (typeCase_ == 10) {
                        typeCase_ = 0;
                        type_ = null;
                    }
                    fixed64Builder_.clear();
                }
                return this;
            }

            /**
             * <code>optional .validate.Fixed64Rules fixed64 = 10;</code>
             */
            public Validate.Fixed64Rules.Builder getFixed64Builder() {

                return getFixed64FieldBuilder().getBuilder();
            }

            /**
             * <code>optional .validate.Fixed64Rules fixed64 = 10;</code>
             */
            public Validate.Fixed64RulesOrBuilder getFixed64OrBuilder() {

                if ((typeCase_ == 10) && (fixed64Builder_ != null)) {
                    return fixed64Builder_.getMessageOrBuilder();
                } else {
                    if (typeCase_ == 10) {
                        return (Validate.Fixed64Rules) type_;
                    }
                    return Validate.Fixed64Rules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.Fixed64Rules fixed64 = 10;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.Fixed64Rules, Validate.Fixed64Rules.Builder, Validate.Fixed64RulesOrBuilder>
            getFixed64FieldBuilder() {

                if (fixed64Builder_ == null) {
                    if (!(typeCase_ == 10)) {
                        type_ = Validate.Fixed64Rules.getDefaultInstance();
                    }
                    fixed64Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            Validate.Fixed64Rules, Validate.Fixed64Rules.Builder, Validate.Fixed64RulesOrBuilder>(
                            (Validate.Fixed64Rules) type_,
                            getParentForChildren(),
                            isClean());
                    type_ = null;
                }
                typeCase_ = 10;
                onChanged();
                ;
                return fixed64Builder_;
            }

            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.SFixed32Rules, Validate.SFixed32Rules.Builder, Validate.SFixed32RulesOrBuilder> sfixed32Builder_;

            /**
             * <code>optional .validate.SFixed32Rules sfixed32 = 11;</code>
             */
            public boolean hasSfixed32() {

                return typeCase_ == 11;
            }

            /**
             * <code>optional .validate.SFixed32Rules sfixed32 = 11;</code>
             */
            public Validate.SFixed32Rules getSfixed32() {

                if (sfixed32Builder_ == null) {
                    if (typeCase_ == 11) {
                        return (Validate.SFixed32Rules) type_;
                    }
                    return Validate.SFixed32Rules.getDefaultInstance();
                } else {
                    if (typeCase_ == 11) {
                        return sfixed32Builder_.getMessage();
                    }
                    return Validate.SFixed32Rules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.SFixed32Rules sfixed32 = 11;</code>
             */
            public Builder setSfixed32(Validate.SFixed32Rules value) {

                if (sfixed32Builder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    type_ = value;
                    onChanged();
                } else {
                    sfixed32Builder_.setMessage(value);
                }
                typeCase_ = 11;
                return this;
            }

            /**
             * <code>optional .validate.SFixed32Rules sfixed32 = 11;</code>
             */
            public Builder setSfixed32(
                    Validate.SFixed32Rules.Builder builderForValue) {

                if (sfixed32Builder_ == null) {
                    type_ = builderForValue.build();
                    onChanged();
                } else {
                    sfixed32Builder_.setMessage(builderForValue.build());
                }
                typeCase_ = 11;
                return this;
            }

            /**
             * <code>optional .validate.SFixed32Rules sfixed32 = 11;</code>
             */
            public Builder mergeSfixed32(Validate.SFixed32Rules value) {

                if (sfixed32Builder_ == null) {
                    if (typeCase_ == 11 &&
                            type_ != Validate.SFixed32Rules.getDefaultInstance()) {
                        type_ = Validate.SFixed32Rules.newBuilder((Validate.SFixed32Rules) type_)
                                .mergeFrom(value).buildPartial();
                    } else {
                        type_ = value;
                    }
                    onChanged();
                } else {
                    if (typeCase_ == 11) {
                        sfixed32Builder_.mergeFrom(value);
                    }
                    sfixed32Builder_.setMessage(value);
                }
                typeCase_ = 11;
                return this;
            }

            /**
             * <code>optional .validate.SFixed32Rules sfixed32 = 11;</code>
             */
            public Builder clearSfixed32() {

                if (sfixed32Builder_ == null) {
                    if (typeCase_ == 11) {
                        typeCase_ = 0;
                        type_ = null;
                        onChanged();
                    }
                } else {
                    if (typeCase_ == 11) {
                        typeCase_ = 0;
                        type_ = null;
                    }
                    sfixed32Builder_.clear();
                }
                return this;
            }

            /**
             * <code>optional .validate.SFixed32Rules sfixed32 = 11;</code>
             */
            public Validate.SFixed32Rules.Builder getSfixed32Builder() {

                return getSfixed32FieldBuilder().getBuilder();
            }

            /**
             * <code>optional .validate.SFixed32Rules sfixed32 = 11;</code>
             */
            public Validate.SFixed32RulesOrBuilder getSfixed32OrBuilder() {

                if ((typeCase_ == 11) && (sfixed32Builder_ != null)) {
                    return sfixed32Builder_.getMessageOrBuilder();
                } else {
                    if (typeCase_ == 11) {
                        return (Validate.SFixed32Rules) type_;
                    }
                    return Validate.SFixed32Rules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.SFixed32Rules sfixed32 = 11;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.SFixed32Rules, Validate.SFixed32Rules.Builder, Validate.SFixed32RulesOrBuilder>
            getSfixed32FieldBuilder() {

                if (sfixed32Builder_ == null) {
                    if (!(typeCase_ == 11)) {
                        type_ = Validate.SFixed32Rules.getDefaultInstance();
                    }
                    sfixed32Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            Validate.SFixed32Rules, Validate.SFixed32Rules.Builder, Validate.SFixed32RulesOrBuilder>(
                            (Validate.SFixed32Rules) type_,
                            getParentForChildren(),
                            isClean());
                    type_ = null;
                }
                typeCase_ = 11;
                onChanged();
                ;
                return sfixed32Builder_;
            }

            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.SFixed64Rules, Validate.SFixed64Rules.Builder, Validate.SFixed64RulesOrBuilder> sfixed64Builder_;

            /**
             * <code>optional .validate.SFixed64Rules sfixed64 = 12;</code>
             */
            public boolean hasSfixed64() {

                return typeCase_ == 12;
            }

            /**
             * <code>optional .validate.SFixed64Rules sfixed64 = 12;</code>
             */
            public Validate.SFixed64Rules getSfixed64() {

                if (sfixed64Builder_ == null) {
                    if (typeCase_ == 12) {
                        return (Validate.SFixed64Rules) type_;
                    }
                    return Validate.SFixed64Rules.getDefaultInstance();
                } else {
                    if (typeCase_ == 12) {
                        return sfixed64Builder_.getMessage();
                    }
                    return Validate.SFixed64Rules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.SFixed64Rules sfixed64 = 12;</code>
             */
            public Builder setSfixed64(Validate.SFixed64Rules value) {

                if (sfixed64Builder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    type_ = value;
                    onChanged();
                } else {
                    sfixed64Builder_.setMessage(value);
                }
                typeCase_ = 12;
                return this;
            }

            /**
             * <code>optional .validate.SFixed64Rules sfixed64 = 12;</code>
             */
            public Builder setSfixed64(
                    Validate.SFixed64Rules.Builder builderForValue) {

                if (sfixed64Builder_ == null) {
                    type_ = builderForValue.build();
                    onChanged();
                } else {
                    sfixed64Builder_.setMessage(builderForValue.build());
                }
                typeCase_ = 12;
                return this;
            }

            /**
             * <code>optional .validate.SFixed64Rules sfixed64 = 12;</code>
             */
            public Builder mergeSfixed64(Validate.SFixed64Rules value) {

                if (sfixed64Builder_ == null) {
                    if (typeCase_ == 12 &&
                            type_ != Validate.SFixed64Rules.getDefaultInstance()) {
                        type_ = Validate.SFixed64Rules.newBuilder((Validate.SFixed64Rules) type_)
                                .mergeFrom(value).buildPartial();
                    } else {
                        type_ = value;
                    }
                    onChanged();
                } else {
                    if (typeCase_ == 12) {
                        sfixed64Builder_.mergeFrom(value);
                    }
                    sfixed64Builder_.setMessage(value);
                }
                typeCase_ = 12;
                return this;
            }

            /**
             * <code>optional .validate.SFixed64Rules sfixed64 = 12;</code>
             */
            public Builder clearSfixed64() {

                if (sfixed64Builder_ == null) {
                    if (typeCase_ == 12) {
                        typeCase_ = 0;
                        type_ = null;
                        onChanged();
                    }
                } else {
                    if (typeCase_ == 12) {
                        typeCase_ = 0;
                        type_ = null;
                    }
                    sfixed64Builder_.clear();
                }
                return this;
            }

            /**
             * <code>optional .validate.SFixed64Rules sfixed64 = 12;</code>
             */
            public Validate.SFixed64Rules.Builder getSfixed64Builder() {

                return getSfixed64FieldBuilder().getBuilder();
            }

            /**
             * <code>optional .validate.SFixed64Rules sfixed64 = 12;</code>
             */
            public Validate.SFixed64RulesOrBuilder getSfixed64OrBuilder() {

                if ((typeCase_ == 12) && (sfixed64Builder_ != null)) {
                    return sfixed64Builder_.getMessageOrBuilder();
                } else {
                    if (typeCase_ == 12) {
                        return (Validate.SFixed64Rules) type_;
                    }
                    return Validate.SFixed64Rules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.SFixed64Rules sfixed64 = 12;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.SFixed64Rules, Validate.SFixed64Rules.Builder, Validate.SFixed64RulesOrBuilder>
            getSfixed64FieldBuilder() {

                if (sfixed64Builder_ == null) {
                    if (!(typeCase_ == 12)) {
                        type_ = Validate.SFixed64Rules.getDefaultInstance();
                    }
                    sfixed64Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            Validate.SFixed64Rules, Validate.SFixed64Rules.Builder, Validate.SFixed64RulesOrBuilder>(
                            (Validate.SFixed64Rules) type_,
                            getParentForChildren(),
                            isClean());
                    type_ = null;
                }
                typeCase_ = 12;
                onChanged();
                ;
                return sfixed64Builder_;
            }

            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.BoolRules, Validate.BoolRules.Builder, Validate.BoolRulesOrBuilder> boolBuilder_;

            /**
             * <code>optional .validate.BoolRules bool = 13;</code>
             */
            public boolean hasBool() {

                return typeCase_ == 13;
            }

            /**
             * <code>optional .validate.BoolRules bool = 13;</code>
             */
            public Validate.BoolRules getBool() {

                if (boolBuilder_ == null) {
                    if (typeCase_ == 13) {
                        return (Validate.BoolRules) type_;
                    }
                    return Validate.BoolRules.getDefaultInstance();
                } else {
                    if (typeCase_ == 13) {
                        return boolBuilder_.getMessage();
                    }
                    return Validate.BoolRules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.BoolRules bool = 13;</code>
             */
            public Builder setBool(Validate.BoolRules value) {

                if (boolBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    type_ = value;
                    onChanged();
                } else {
                    boolBuilder_.setMessage(value);
                }
                typeCase_ = 13;
                return this;
            }

            /**
             * <code>optional .validate.BoolRules bool = 13;</code>
             */
            public Builder setBool(
                    Validate.BoolRules.Builder builderForValue) {

                if (boolBuilder_ == null) {
                    type_ = builderForValue.build();
                    onChanged();
                } else {
                    boolBuilder_.setMessage(builderForValue.build());
                }
                typeCase_ = 13;
                return this;
            }

            /**
             * <code>optional .validate.BoolRules bool = 13;</code>
             */
            public Builder mergeBool(Validate.BoolRules value) {

                if (boolBuilder_ == null) {
                    if (typeCase_ == 13 &&
                            type_ != Validate.BoolRules.getDefaultInstance()) {
                        type_ = Validate.BoolRules.newBuilder((Validate.BoolRules) type_)
                                .mergeFrom(value).buildPartial();
                    } else {
                        type_ = value;
                    }
                    onChanged();
                } else {
                    if (typeCase_ == 13) {
                        boolBuilder_.mergeFrom(value);
                    }
                    boolBuilder_.setMessage(value);
                }
                typeCase_ = 13;
                return this;
            }

            /**
             * <code>optional .validate.BoolRules bool = 13;</code>
             */
            public Builder clearBool() {

                if (boolBuilder_ == null) {
                    if (typeCase_ == 13) {
                        typeCase_ = 0;
                        type_ = null;
                        onChanged();
                    }
                } else {
                    if (typeCase_ == 13) {
                        typeCase_ = 0;
                        type_ = null;
                    }
                    boolBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>optional .validate.BoolRules bool = 13;</code>
             */
            public Validate.BoolRules.Builder getBoolBuilder() {

                return getBoolFieldBuilder().getBuilder();
            }

            /**
             * <code>optional .validate.BoolRules bool = 13;</code>
             */
            public Validate.BoolRulesOrBuilder getBoolOrBuilder() {

                if ((typeCase_ == 13) && (boolBuilder_ != null)) {
                    return boolBuilder_.getMessageOrBuilder();
                } else {
                    if (typeCase_ == 13) {
                        return (Validate.BoolRules) type_;
                    }
                    return Validate.BoolRules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.BoolRules bool = 13;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.BoolRules, Validate.BoolRules.Builder, Validate.BoolRulesOrBuilder>
            getBoolFieldBuilder() {

                if (boolBuilder_ == null) {
                    if (!(typeCase_ == 13)) {
                        type_ = Validate.BoolRules.getDefaultInstance();
                    }
                    boolBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            Validate.BoolRules, Validate.BoolRules.Builder, Validate.BoolRulesOrBuilder>(
                            (Validate.BoolRules) type_,
                            getParentForChildren(),
                            isClean());
                    type_ = null;
                }
                typeCase_ = 13;
                onChanged();
                ;
                return boolBuilder_;
            }

            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.StringRules, Validate.StringRules.Builder, Validate.StringRulesOrBuilder> stringBuilder_;

            /**
             * <code>optional .validate.StringRules string = 14;</code>
             */
            public boolean hasString() {

                return typeCase_ == 14;
            }

            /**
             * <code>optional .validate.StringRules string = 14;</code>
             */
            public Validate.StringRules getString() {

                if (stringBuilder_ == null) {
                    if (typeCase_ == 14) {
                        return (Validate.StringRules) type_;
                    }
                    return Validate.StringRules.getDefaultInstance();
                } else {
                    if (typeCase_ == 14) {
                        return stringBuilder_.getMessage();
                    }
                    return Validate.StringRules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.StringRules string = 14;</code>
             */
            public Builder setString(Validate.StringRules value) {

                if (stringBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    type_ = value;
                    onChanged();
                } else {
                    stringBuilder_.setMessage(value);
                }
                typeCase_ = 14;
                return this;
            }

            /**
             * <code>optional .validate.StringRules string = 14;</code>
             */
            public Builder setString(
                    Validate.StringRules.Builder builderForValue) {

                if (stringBuilder_ == null) {
                    type_ = builderForValue.build();
                    onChanged();
                } else {
                    stringBuilder_.setMessage(builderForValue.build());
                }
                typeCase_ = 14;
                return this;
            }

            /**
             * <code>optional .validate.StringRules string = 14;</code>
             */
            public Builder mergeString(Validate.StringRules value) {

                if (stringBuilder_ == null) {
                    if (typeCase_ == 14 &&
                            type_ != Validate.StringRules.getDefaultInstance()) {
                        type_ = Validate.StringRules.newBuilder((Validate.StringRules) type_)
                                .mergeFrom(value).buildPartial();
                    } else {
                        type_ = value;
                    }
                    onChanged();
                } else {
                    if (typeCase_ == 14) {
                        stringBuilder_.mergeFrom(value);
                    }
                    stringBuilder_.setMessage(value);
                }
                typeCase_ = 14;
                return this;
            }

            /**
             * <code>optional .validate.StringRules string = 14;</code>
             */
            public Builder clearString() {

                if (stringBuilder_ == null) {
                    if (typeCase_ == 14) {
                        typeCase_ = 0;
                        type_ = null;
                        onChanged();
                    }
                } else {
                    if (typeCase_ == 14) {
                        typeCase_ = 0;
                        type_ = null;
                    }
                    stringBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>optional .validate.StringRules string = 14;</code>
             */
            public Validate.StringRules.Builder getStringBuilder() {

                return getStringFieldBuilder().getBuilder();
            }

            /**
             * <code>optional .validate.StringRules string = 14;</code>
             */
            public Validate.StringRulesOrBuilder getStringOrBuilder() {

                if ((typeCase_ == 14) && (stringBuilder_ != null)) {
                    return stringBuilder_.getMessageOrBuilder();
                } else {
                    if (typeCase_ == 14) {
                        return (Validate.StringRules) type_;
                    }
                    return Validate.StringRules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.StringRules string = 14;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.StringRules, Validate.StringRules.Builder, Validate.StringRulesOrBuilder>
            getStringFieldBuilder() {

                if (stringBuilder_ == null) {
                    if (!(typeCase_ == 14)) {
                        type_ = Validate.StringRules.getDefaultInstance();
                    }
                    stringBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            Validate.StringRules, Validate.StringRules.Builder, Validate.StringRulesOrBuilder>(
                            (Validate.StringRules) type_,
                            getParentForChildren(),
                            isClean());
                    type_ = null;
                }
                typeCase_ = 14;
                onChanged();
                ;
                return stringBuilder_;
            }

            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.BytesRules, Validate.BytesRules.Builder, Validate.BytesRulesOrBuilder> bytesBuilder_;

            /**
             * <code>optional .validate.BytesRules bytes = 15;</code>
             */
            public boolean hasBytes() {

                return typeCase_ == 15;
            }

            /**
             * <code>optional .validate.BytesRules bytes = 15;</code>
             */
            public Validate.BytesRules getBytes() {

                if (bytesBuilder_ == null) {
                    if (typeCase_ == 15) {
                        return (Validate.BytesRules) type_;
                    }
                    return Validate.BytesRules.getDefaultInstance();
                } else {
                    if (typeCase_ == 15) {
                        return bytesBuilder_.getMessage();
                    }
                    return Validate.BytesRules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.BytesRules bytes = 15;</code>
             */
            public Builder setBytes(Validate.BytesRules value) {

                if (bytesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    type_ = value;
                    onChanged();
                } else {
                    bytesBuilder_.setMessage(value);
                }
                typeCase_ = 15;
                return this;
            }

            /**
             * <code>optional .validate.BytesRules bytes = 15;</code>
             */
            public Builder setBytes(
                    Validate.BytesRules.Builder builderForValue) {

                if (bytesBuilder_ == null) {
                    type_ = builderForValue.build();
                    onChanged();
                } else {
                    bytesBuilder_.setMessage(builderForValue.build());
                }
                typeCase_ = 15;
                return this;
            }

            /**
             * <code>optional .validate.BytesRules bytes = 15;</code>
             */
            public Builder mergeBytes(Validate.BytesRules value) {

                if (bytesBuilder_ == null) {
                    if (typeCase_ == 15 &&
                            type_ != Validate.BytesRules.getDefaultInstance()) {
                        type_ = Validate.BytesRules.newBuilder((Validate.BytesRules) type_)
                                .mergeFrom(value).buildPartial();
                    } else {
                        type_ = value;
                    }
                    onChanged();
                } else {
                    if (typeCase_ == 15) {
                        bytesBuilder_.mergeFrom(value);
                    }
                    bytesBuilder_.setMessage(value);
                }
                typeCase_ = 15;
                return this;
            }

            /**
             * <code>optional .validate.BytesRules bytes = 15;</code>
             */
            public Builder clearBytes() {

                if (bytesBuilder_ == null) {
                    if (typeCase_ == 15) {
                        typeCase_ = 0;
                        type_ = null;
                        onChanged();
                    }
                } else {
                    if (typeCase_ == 15) {
                        typeCase_ = 0;
                        type_ = null;
                    }
                    bytesBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>optional .validate.BytesRules bytes = 15;</code>
             */
            public Validate.BytesRules.Builder getBytesBuilder() {

                return getBytesFieldBuilder().getBuilder();
            }

            /**
             * <code>optional .validate.BytesRules bytes = 15;</code>
             */
            public Validate.BytesRulesOrBuilder getBytesOrBuilder() {

                if ((typeCase_ == 15) && (bytesBuilder_ != null)) {
                    return bytesBuilder_.getMessageOrBuilder();
                } else {
                    if (typeCase_ == 15) {
                        return (Validate.BytesRules) type_;
                    }
                    return Validate.BytesRules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.BytesRules bytes = 15;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.BytesRules, Validate.BytesRules.Builder, Validate.BytesRulesOrBuilder>
            getBytesFieldBuilder() {

                if (bytesBuilder_ == null) {
                    if (!(typeCase_ == 15)) {
                        type_ = Validate.BytesRules.getDefaultInstance();
                    }
                    bytesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            Validate.BytesRules, Validate.BytesRules.Builder, Validate.BytesRulesOrBuilder>(
                            (Validate.BytesRules) type_,
                            getParentForChildren(),
                            isClean());
                    type_ = null;
                }
                typeCase_ = 15;
                onChanged();
                ;
                return bytesBuilder_;
            }

            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.EnumRules, Validate.EnumRules.Builder, Validate.EnumRulesOrBuilder> enumBuilder_;

            /**
             * <pre>
             * Complex Field Types
             * </pre>
             *
             * <code>optional .validate.EnumRules enum = 16;</code>
             */
            public boolean hasEnum() {

                return typeCase_ == 16;
            }

            /**
             * <pre>
             * Complex Field Types
             * </pre>
             *
             * <code>optional .validate.EnumRules enum = 16;</code>
             */
            public Validate.EnumRules getEnum() {

                if (enumBuilder_ == null) {
                    if (typeCase_ == 16) {
                        return (Validate.EnumRules) type_;
                    }
                    return Validate.EnumRules.getDefaultInstance();
                } else {
                    if (typeCase_ == 16) {
                        return enumBuilder_.getMessage();
                    }
                    return Validate.EnumRules.getDefaultInstance();
                }
            }

            /**
             * <pre>
             * Complex Field Types
             * </pre>
             *
             * <code>optional .validate.EnumRules enum = 16;</code>
             */
            public Builder setEnum(Validate.EnumRules value) {

                if (enumBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    type_ = value;
                    onChanged();
                } else {
                    enumBuilder_.setMessage(value);
                }
                typeCase_ = 16;
                return this;
            }

            /**
             * <pre>
             * Complex Field Types
             * </pre>
             *
             * <code>optional .validate.EnumRules enum = 16;</code>
             */
            public Builder setEnum(
                    Validate.EnumRules.Builder builderForValue) {

                if (enumBuilder_ == null) {
                    type_ = builderForValue.build();
                    onChanged();
                } else {
                    enumBuilder_.setMessage(builderForValue.build());
                }
                typeCase_ = 16;
                return this;
            }

            /**
             * <pre>
             * Complex Field Types
             * </pre>
             *
             * <code>optional .validate.EnumRules enum = 16;</code>
             */
            public Builder mergeEnum(Validate.EnumRules value) {

                if (enumBuilder_ == null) {
                    if (typeCase_ == 16 &&
                            type_ != Validate.EnumRules.getDefaultInstance()) {
                        type_ = Validate.EnumRules.newBuilder((Validate.EnumRules) type_)
                                .mergeFrom(value).buildPartial();
                    } else {
                        type_ = value;
                    }
                    onChanged();
                } else {
                    if (typeCase_ == 16) {
                        enumBuilder_.mergeFrom(value);
                    }
                    enumBuilder_.setMessage(value);
                }
                typeCase_ = 16;
                return this;
            }

            /**
             * <pre>
             * Complex Field Types
             * </pre>
             *
             * <code>optional .validate.EnumRules enum = 16;</code>
             */
            public Builder clearEnum() {

                if (enumBuilder_ == null) {
                    if (typeCase_ == 16) {
                        typeCase_ = 0;
                        type_ = null;
                        onChanged();
                    }
                } else {
                    if (typeCase_ == 16) {
                        typeCase_ = 0;
                        type_ = null;
                    }
                    enumBuilder_.clear();
                }
                return this;
            }

            /**
             * <pre>
             * Complex Field Types
             * </pre>
             *
             * <code>optional .validate.EnumRules enum = 16;</code>
             */
            public Validate.EnumRules.Builder getEnumBuilder() {

                return getEnumFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Complex Field Types
             * </pre>
             *
             * <code>optional .validate.EnumRules enum = 16;</code>
             */
            public Validate.EnumRulesOrBuilder getEnumOrBuilder() {

                if ((typeCase_ == 16) && (enumBuilder_ != null)) {
                    return enumBuilder_.getMessageOrBuilder();
                } else {
                    if (typeCase_ == 16) {
                        return (Validate.EnumRules) type_;
                    }
                    return Validate.EnumRules.getDefaultInstance();
                }
            }

            /**
             * <pre>
             * Complex Field Types
             * </pre>
             *
             * <code>optional .validate.EnumRules enum = 16;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.EnumRules, Validate.EnumRules.Builder, Validate.EnumRulesOrBuilder>
            getEnumFieldBuilder() {

                if (enumBuilder_ == null) {
                    if (!(typeCase_ == 16)) {
                        type_ = Validate.EnumRules.getDefaultInstance();
                    }
                    enumBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            Validate.EnumRules, Validate.EnumRules.Builder, Validate.EnumRulesOrBuilder>(
                            (Validate.EnumRules) type_,
                            getParentForChildren(),
                            isClean());
                    type_ = null;
                }
                typeCase_ = 16;
                onChanged();
                ;
                return enumBuilder_;
            }

            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.MessageRules, Validate.MessageRules.Builder, Validate.MessageRulesOrBuilder> messageBuilder_;

            /**
             * <code>optional .validate.MessageRules message = 17;</code>
             */
            public boolean hasMessage() {

                return typeCase_ == 17;
            }

            /**
             * <code>optional .validate.MessageRules message = 17;</code>
             */
            public Validate.MessageRules getMessage() {

                if (messageBuilder_ == null) {
                    if (typeCase_ == 17) {
                        return (Validate.MessageRules) type_;
                    }
                    return Validate.MessageRules.getDefaultInstance();
                } else {
                    if (typeCase_ == 17) {
                        return messageBuilder_.getMessage();
                    }
                    return Validate.MessageRules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.MessageRules message = 17;</code>
             */
            public Builder setMessage(Validate.MessageRules value) {

                if (messageBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    type_ = value;
                    onChanged();
                } else {
                    messageBuilder_.setMessage(value);
                }
                typeCase_ = 17;
                return this;
            }

            /**
             * <code>optional .validate.MessageRules message = 17;</code>
             */
            public Builder setMessage(
                    Validate.MessageRules.Builder builderForValue) {

                if (messageBuilder_ == null) {
                    type_ = builderForValue.build();
                    onChanged();
                } else {
                    messageBuilder_.setMessage(builderForValue.build());
                }
                typeCase_ = 17;
                return this;
            }

            /**
             * <code>optional .validate.MessageRules message = 17;</code>
             */
            public Builder mergeMessage(Validate.MessageRules value) {

                if (messageBuilder_ == null) {
                    if (typeCase_ == 17 &&
                            type_ != Validate.MessageRules.getDefaultInstance()) {
                        type_ = Validate.MessageRules.newBuilder((Validate.MessageRules) type_)
                                .mergeFrom(value).buildPartial();
                    } else {
                        type_ = value;
                    }
                    onChanged();
                } else {
                    if (typeCase_ == 17) {
                        messageBuilder_.mergeFrom(value);
                    }
                    messageBuilder_.setMessage(value);
                }
                typeCase_ = 17;
                return this;
            }

            /**
             * <code>optional .validate.MessageRules message = 17;</code>
             */
            public Builder clearMessage() {

                if (messageBuilder_ == null) {
                    if (typeCase_ == 17) {
                        typeCase_ = 0;
                        type_ = null;
                        onChanged();
                    }
                } else {
                    if (typeCase_ == 17) {
                        typeCase_ = 0;
                        type_ = null;
                    }
                    messageBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>optional .validate.MessageRules message = 17;</code>
             */
            public Validate.MessageRules.Builder getMessageBuilder() {

                return getMessageFieldBuilder().getBuilder();
            }

            /**
             * <code>optional .validate.MessageRules message = 17;</code>
             */
            public Validate.MessageRulesOrBuilder getMessageOrBuilder() {

                if ((typeCase_ == 17) && (messageBuilder_ != null)) {
                    return messageBuilder_.getMessageOrBuilder();
                } else {
                    if (typeCase_ == 17) {
                        return (Validate.MessageRules) type_;
                    }
                    return Validate.MessageRules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.MessageRules message = 17;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.MessageRules, Validate.MessageRules.Builder, Validate.MessageRulesOrBuilder>
            getMessageFieldBuilder() {

                if (messageBuilder_ == null) {
                    if (!(typeCase_ == 17)) {
                        type_ = Validate.MessageRules.getDefaultInstance();
                    }
                    messageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            Validate.MessageRules, Validate.MessageRules.Builder, Validate.MessageRulesOrBuilder>(
                            (Validate.MessageRules) type_,
                            getParentForChildren(),
                            isClean());
                    type_ = null;
                }
                typeCase_ = 17;
                onChanged();
                ;
                return messageBuilder_;
            }

            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.RepeatedRules, Validate.RepeatedRules.Builder, Validate.RepeatedRulesOrBuilder> repeatedBuilder_;

            /**
             * <code>optional .validate.RepeatedRules repeated = 18;</code>
             */
            public boolean hasRepeated() {

                return typeCase_ == 18;
            }

            /**
             * <code>optional .validate.RepeatedRules repeated = 18;</code>
             */
            public Validate.RepeatedRules getRepeated() {

                if (repeatedBuilder_ == null) {
                    if (typeCase_ == 18) {
                        return (Validate.RepeatedRules) type_;
                    }
                    return Validate.RepeatedRules.getDefaultInstance();
                } else {
                    if (typeCase_ == 18) {
                        return repeatedBuilder_.getMessage();
                    }
                    return Validate.RepeatedRules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.RepeatedRules repeated = 18;</code>
             */
            public Builder setRepeated(Validate.RepeatedRules value) {

                if (repeatedBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    type_ = value;
                    onChanged();
                } else {
                    repeatedBuilder_.setMessage(value);
                }
                typeCase_ = 18;
                return this;
            }

            /**
             * <code>optional .validate.RepeatedRules repeated = 18;</code>
             */
            public Builder setRepeated(
                    Validate.RepeatedRules.Builder builderForValue) {

                if (repeatedBuilder_ == null) {
                    type_ = builderForValue.build();
                    onChanged();
                } else {
                    repeatedBuilder_.setMessage(builderForValue.build());
                }
                typeCase_ = 18;
                return this;
            }

            /**
             * <code>optional .validate.RepeatedRules repeated = 18;</code>
             */
            public Builder mergeRepeated(Validate.RepeatedRules value) {

                if (repeatedBuilder_ == null) {
                    if (typeCase_ == 18 &&
                            type_ != Validate.RepeatedRules.getDefaultInstance()) {
                        type_ = Validate.RepeatedRules.newBuilder((Validate.RepeatedRules) type_)
                                .mergeFrom(value).buildPartial();
                    } else {
                        type_ = value;
                    }
                    onChanged();
                } else {
                    if (typeCase_ == 18) {
                        repeatedBuilder_.mergeFrom(value);
                    }
                    repeatedBuilder_.setMessage(value);
                }
                typeCase_ = 18;
                return this;
            }

            /**
             * <code>optional .validate.RepeatedRules repeated = 18;</code>
             */
            public Builder clearRepeated() {

                if (repeatedBuilder_ == null) {
                    if (typeCase_ == 18) {
                        typeCase_ = 0;
                        type_ = null;
                        onChanged();
                    }
                } else {
                    if (typeCase_ == 18) {
                        typeCase_ = 0;
                        type_ = null;
                    }
                    repeatedBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>optional .validate.RepeatedRules repeated = 18;</code>
             */
            public Validate.RepeatedRules.Builder getRepeatedBuilder() {

                return getRepeatedFieldBuilder().getBuilder();
            }

            /**
             * <code>optional .validate.RepeatedRules repeated = 18;</code>
             */
            public Validate.RepeatedRulesOrBuilder getRepeatedOrBuilder() {

                if ((typeCase_ == 18) && (repeatedBuilder_ != null)) {
                    return repeatedBuilder_.getMessageOrBuilder();
                } else {
                    if (typeCase_ == 18) {
                        return (Validate.RepeatedRules) type_;
                    }
                    return Validate.RepeatedRules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.RepeatedRules repeated = 18;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.RepeatedRules, Validate.RepeatedRules.Builder, Validate.RepeatedRulesOrBuilder>
            getRepeatedFieldBuilder() {

                if (repeatedBuilder_ == null) {
                    if (!(typeCase_ == 18)) {
                        type_ = Validate.RepeatedRules.getDefaultInstance();
                    }
                    repeatedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            Validate.RepeatedRules, Validate.RepeatedRules.Builder, Validate.RepeatedRulesOrBuilder>(
                            (Validate.RepeatedRules) type_,
                            getParentForChildren(),
                            isClean());
                    type_ = null;
                }
                typeCase_ = 18;
                onChanged();
                ;
                return repeatedBuilder_;
            }

            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.MapRules, Validate.MapRules.Builder, Validate.MapRulesOrBuilder> mapBuilder_;

            /**
             * <code>optional .validate.MapRules map = 19;</code>
             */
            public boolean hasMap() {

                return typeCase_ == 19;
            }

            /**
             * <code>optional .validate.MapRules map = 19;</code>
             */
            public Validate.MapRules getMap() {

                if (mapBuilder_ == null) {
                    if (typeCase_ == 19) {
                        return (Validate.MapRules) type_;
                    }
                    return Validate.MapRules.getDefaultInstance();
                } else {
                    if (typeCase_ == 19) {
                        return mapBuilder_.getMessage();
                    }
                    return Validate.MapRules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.MapRules map = 19;</code>
             */
            public Builder setMap(Validate.MapRules value) {

                if (mapBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    type_ = value;
                    onChanged();
                } else {
                    mapBuilder_.setMessage(value);
                }
                typeCase_ = 19;
                return this;
            }

            /**
             * <code>optional .validate.MapRules map = 19;</code>
             */
            public Builder setMap(
                    Validate.MapRules.Builder builderForValue) {

                if (mapBuilder_ == null) {
                    type_ = builderForValue.build();
                    onChanged();
                } else {
                    mapBuilder_.setMessage(builderForValue.build());
                }
                typeCase_ = 19;
                return this;
            }

            /**
             * <code>optional .validate.MapRules map = 19;</code>
             */
            public Builder mergeMap(Validate.MapRules value) {

                if (mapBuilder_ == null) {
                    if (typeCase_ == 19 &&
                            type_ != Validate.MapRules.getDefaultInstance()) {
                        type_ = Validate.MapRules.newBuilder((Validate.MapRules) type_)
                                .mergeFrom(value).buildPartial();
                    } else {
                        type_ = value;
                    }
                    onChanged();
                } else {
                    if (typeCase_ == 19) {
                        mapBuilder_.mergeFrom(value);
                    }
                    mapBuilder_.setMessage(value);
                }
                typeCase_ = 19;
                return this;
            }

            /**
             * <code>optional .validate.MapRules map = 19;</code>
             */
            public Builder clearMap() {

                if (mapBuilder_ == null) {
                    if (typeCase_ == 19) {
                        typeCase_ = 0;
                        type_ = null;
                        onChanged();
                    }
                } else {
                    if (typeCase_ == 19) {
                        typeCase_ = 0;
                        type_ = null;
                    }
                    mapBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>optional .validate.MapRules map = 19;</code>
             */
            public Validate.MapRules.Builder getMapBuilder() {

                return getMapFieldBuilder().getBuilder();
            }

            /**
             * <code>optional .validate.MapRules map = 19;</code>
             */
            public Validate.MapRulesOrBuilder getMapOrBuilder() {

                if ((typeCase_ == 19) && (mapBuilder_ != null)) {
                    return mapBuilder_.getMessageOrBuilder();
                } else {
                    if (typeCase_ == 19) {
                        return (Validate.MapRules) type_;
                    }
                    return Validate.MapRules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.MapRules map = 19;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.MapRules, Validate.MapRules.Builder, Validate.MapRulesOrBuilder>
            getMapFieldBuilder() {

                if (mapBuilder_ == null) {
                    if (!(typeCase_ == 19)) {
                        type_ = Validate.MapRules.getDefaultInstance();
                    }
                    mapBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            Validate.MapRules, Validate.MapRules.Builder, Validate.MapRulesOrBuilder>(
                            (Validate.MapRules) type_,
                            getParentForChildren(),
                            isClean());
                    type_ = null;
                }
                typeCase_ = 19;
                onChanged();
                ;
                return mapBuilder_;
            }

            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.AnyRules, Validate.AnyRules.Builder, Validate.AnyRulesOrBuilder> anyBuilder_;

            /**
             * <pre>
             * Well-Known Field Types
             * </pre>
             *
             * <code>optional .validate.AnyRules any = 20;</code>
             */
            public boolean hasAny() {

                return typeCase_ == 20;
            }

            /**
             * <pre>
             * Well-Known Field Types
             * </pre>
             *
             * <code>optional .validate.AnyRules any = 20;</code>
             */
            public Validate.AnyRules getAny() {

                if (anyBuilder_ == null) {
                    if (typeCase_ == 20) {
                        return (Validate.AnyRules) type_;
                    }
                    return Validate.AnyRules.getDefaultInstance();
                } else {
                    if (typeCase_ == 20) {
                        return anyBuilder_.getMessage();
                    }
                    return Validate.AnyRules.getDefaultInstance();
                }
            }

            /**
             * <pre>
             * Well-Known Field Types
             * </pre>
             *
             * <code>optional .validate.AnyRules any = 20;</code>
             */
            public Builder setAny(Validate.AnyRules value) {

                if (anyBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    type_ = value;
                    onChanged();
                } else {
                    anyBuilder_.setMessage(value);
                }
                typeCase_ = 20;
                return this;
            }

            /**
             * <pre>
             * Well-Known Field Types
             * </pre>
             *
             * <code>optional .validate.AnyRules any = 20;</code>
             */
            public Builder setAny(
                    Validate.AnyRules.Builder builderForValue) {

                if (anyBuilder_ == null) {
                    type_ = builderForValue.build();
                    onChanged();
                } else {
                    anyBuilder_.setMessage(builderForValue.build());
                }
                typeCase_ = 20;
                return this;
            }

            /**
             * <pre>
             * Well-Known Field Types
             * </pre>
             *
             * <code>optional .validate.AnyRules any = 20;</code>
             */
            public Builder mergeAny(Validate.AnyRules value) {

                if (anyBuilder_ == null) {
                    if (typeCase_ == 20 &&
                            type_ != Validate.AnyRules.getDefaultInstance()) {
                        type_ = Validate.AnyRules.newBuilder((Validate.AnyRules) type_)
                                .mergeFrom(value).buildPartial();
                    } else {
                        type_ = value;
                    }
                    onChanged();
                } else {
                    if (typeCase_ == 20) {
                        anyBuilder_.mergeFrom(value);
                    }
                    anyBuilder_.setMessage(value);
                }
                typeCase_ = 20;
                return this;
            }

            /**
             * <pre>
             * Well-Known Field Types
             * </pre>
             *
             * <code>optional .validate.AnyRules any = 20;</code>
             */
            public Builder clearAny() {

                if (anyBuilder_ == null) {
                    if (typeCase_ == 20) {
                        typeCase_ = 0;
                        type_ = null;
                        onChanged();
                    }
                } else {
                    if (typeCase_ == 20) {
                        typeCase_ = 0;
                        type_ = null;
                    }
                    anyBuilder_.clear();
                }
                return this;
            }

            /**
             * <pre>
             * Well-Known Field Types
             * </pre>
             *
             * <code>optional .validate.AnyRules any = 20;</code>
             */
            public Validate.AnyRules.Builder getAnyBuilder() {

                return getAnyFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Well-Known Field Types
             * </pre>
             *
             * <code>optional .validate.AnyRules any = 20;</code>
             */
            public Validate.AnyRulesOrBuilder getAnyOrBuilder() {

                if ((typeCase_ == 20) && (anyBuilder_ != null)) {
                    return anyBuilder_.getMessageOrBuilder();
                } else {
                    if (typeCase_ == 20) {
                        return (Validate.AnyRules) type_;
                    }
                    return Validate.AnyRules.getDefaultInstance();
                }
            }

            /**
             * <pre>
             * Well-Known Field Types
             * </pre>
             *
             * <code>optional .validate.AnyRules any = 20;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.AnyRules, Validate.AnyRules.Builder, Validate.AnyRulesOrBuilder>
            getAnyFieldBuilder() {

                if (anyBuilder_ == null) {
                    if (!(typeCase_ == 20)) {
                        type_ = Validate.AnyRules.getDefaultInstance();
                    }
                    anyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            Validate.AnyRules, Validate.AnyRules.Builder, Validate.AnyRulesOrBuilder>(
                            (Validate.AnyRules) type_,
                            getParentForChildren(),
                            isClean());
                    type_ = null;
                }
                typeCase_ = 20;
                onChanged();
                ;
                return anyBuilder_;
            }

            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.DurationRules, Validate.DurationRules.Builder, Validate.DurationRulesOrBuilder> durationBuilder_;

            /**
             * <code>optional .validate.DurationRules duration = 21;</code>
             */
            public boolean hasDuration() {

                return typeCase_ == 21;
            }

            /**
             * <code>optional .validate.DurationRules duration = 21;</code>
             */
            public Validate.DurationRules getDuration() {

                if (durationBuilder_ == null) {
                    if (typeCase_ == 21) {
                        return (Validate.DurationRules) type_;
                    }
                    return Validate.DurationRules.getDefaultInstance();
                } else {
                    if (typeCase_ == 21) {
                        return durationBuilder_.getMessage();
                    }
                    return Validate.DurationRules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.DurationRules duration = 21;</code>
             */
            public Builder setDuration(Validate.DurationRules value) {

                if (durationBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    type_ = value;
                    onChanged();
                } else {
                    durationBuilder_.setMessage(value);
                }
                typeCase_ = 21;
                return this;
            }

            /**
             * <code>optional .validate.DurationRules duration = 21;</code>
             */
            public Builder setDuration(
                    Validate.DurationRules.Builder builderForValue) {

                if (durationBuilder_ == null) {
                    type_ = builderForValue.build();
                    onChanged();
                } else {
                    durationBuilder_.setMessage(builderForValue.build());
                }
                typeCase_ = 21;
                return this;
            }

            /**
             * <code>optional .validate.DurationRules duration = 21;</code>
             */
            public Builder mergeDuration(Validate.DurationRules value) {

                if (durationBuilder_ == null) {
                    if (typeCase_ == 21 &&
                            type_ != Validate.DurationRules.getDefaultInstance()) {
                        type_ = Validate.DurationRules.newBuilder((Validate.DurationRules) type_)
                                .mergeFrom(value).buildPartial();
                    } else {
                        type_ = value;
                    }
                    onChanged();
                } else {
                    if (typeCase_ == 21) {
                        durationBuilder_.mergeFrom(value);
                    }
                    durationBuilder_.setMessage(value);
                }
                typeCase_ = 21;
                return this;
            }

            /**
             * <code>optional .validate.DurationRules duration = 21;</code>
             */
            public Builder clearDuration() {

                if (durationBuilder_ == null) {
                    if (typeCase_ == 21) {
                        typeCase_ = 0;
                        type_ = null;
                        onChanged();
                    }
                } else {
                    if (typeCase_ == 21) {
                        typeCase_ = 0;
                        type_ = null;
                    }
                    durationBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>optional .validate.DurationRules duration = 21;</code>
             */
            public Validate.DurationRules.Builder getDurationBuilder() {

                return getDurationFieldBuilder().getBuilder();
            }

            /**
             * <code>optional .validate.DurationRules duration = 21;</code>
             */
            public Validate.DurationRulesOrBuilder getDurationOrBuilder() {

                if ((typeCase_ == 21) && (durationBuilder_ != null)) {
                    return durationBuilder_.getMessageOrBuilder();
                } else {
                    if (typeCase_ == 21) {
                        return (Validate.DurationRules) type_;
                    }
                    return Validate.DurationRules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.DurationRules duration = 21;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.DurationRules, Validate.DurationRules.Builder, Validate.DurationRulesOrBuilder>
            getDurationFieldBuilder() {

                if (durationBuilder_ == null) {
                    if (!(typeCase_ == 21)) {
                        type_ = Validate.DurationRules.getDefaultInstance();
                    }
                    durationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            Validate.DurationRules, Validate.DurationRules.Builder, Validate.DurationRulesOrBuilder>(
                            (Validate.DurationRules) type_,
                            getParentForChildren(),
                            isClean());
                    type_ = null;
                }
                typeCase_ = 21;
                onChanged();
                ;
                return durationBuilder_;
            }

            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.TimestampRules, Validate.TimestampRules.Builder, Validate.TimestampRulesOrBuilder> timestampBuilder_;

            /**
             * <code>optional .validate.TimestampRules timestamp = 22;</code>
             */
            public boolean hasTimestamp() {

                return typeCase_ == 22;
            }

            /**
             * <code>optional .validate.TimestampRules timestamp = 22;</code>
             */
            public Validate.TimestampRules getTimestamp() {

                if (timestampBuilder_ == null) {
                    if (typeCase_ == 22) {
                        return (Validate.TimestampRules) type_;
                    }
                    return Validate.TimestampRules.getDefaultInstance();
                } else {
                    if (typeCase_ == 22) {
                        return timestampBuilder_.getMessage();
                    }
                    return Validate.TimestampRules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.TimestampRules timestamp = 22;</code>
             */
            public Builder setTimestamp(Validate.TimestampRules value) {

                if (timestampBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    type_ = value;
                    onChanged();
                } else {
                    timestampBuilder_.setMessage(value);
                }
                typeCase_ = 22;
                return this;
            }

            /**
             * <code>optional .validate.TimestampRules timestamp = 22;</code>
             */
            public Builder setTimestamp(
                    Validate.TimestampRules.Builder builderForValue) {

                if (timestampBuilder_ == null) {
                    type_ = builderForValue.build();
                    onChanged();
                } else {
                    timestampBuilder_.setMessage(builderForValue.build());
                }
                typeCase_ = 22;
                return this;
            }

            /**
             * <code>optional .validate.TimestampRules timestamp = 22;</code>
             */
            public Builder mergeTimestamp(Validate.TimestampRules value) {

                if (timestampBuilder_ == null) {
                    if (typeCase_ == 22 &&
                            type_ != Validate.TimestampRules.getDefaultInstance()) {
                        type_ = Validate.TimestampRules.newBuilder((Validate.TimestampRules) type_)
                                .mergeFrom(value).buildPartial();
                    } else {
                        type_ = value;
                    }
                    onChanged();
                } else {
                    if (typeCase_ == 22) {
                        timestampBuilder_.mergeFrom(value);
                    }
                    timestampBuilder_.setMessage(value);
                }
                typeCase_ = 22;
                return this;
            }

            /**
             * <code>optional .validate.TimestampRules timestamp = 22;</code>
             */
            public Builder clearTimestamp() {

                if (timestampBuilder_ == null) {
                    if (typeCase_ == 22) {
                        typeCase_ = 0;
                        type_ = null;
                        onChanged();
                    }
                } else {
                    if (typeCase_ == 22) {
                        typeCase_ = 0;
                        type_ = null;
                    }
                    timestampBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>optional .validate.TimestampRules timestamp = 22;</code>
             */
            public Validate.TimestampRules.Builder getTimestampBuilder() {

                return getTimestampFieldBuilder().getBuilder();
            }

            /**
             * <code>optional .validate.TimestampRules timestamp = 22;</code>
             */
            public Validate.TimestampRulesOrBuilder getTimestampOrBuilder() {

                if ((typeCase_ == 22) && (timestampBuilder_ != null)) {
                    return timestampBuilder_.getMessageOrBuilder();
                } else {
                    if (typeCase_ == 22) {
                        return (Validate.TimestampRules) type_;
                    }
                    return Validate.TimestampRules.getDefaultInstance();
                }
            }

            /**
             * <code>optional .validate.TimestampRules timestamp = 22;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.TimestampRules, Validate.TimestampRules.Builder, Validate.TimestampRulesOrBuilder>
            getTimestampFieldBuilder() {

                if (timestampBuilder_ == null) {
                    if (!(typeCase_ == 22)) {
                        type_ = Validate.TimestampRules.getDefaultInstance();
                    }
                    timestampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            Validate.TimestampRules, Validate.TimestampRules.Builder, Validate.TimestampRulesOrBuilder>(
                            (Validate.TimestampRules) type_,
                            getParentForChildren(),
                            isClean());
                    type_ = null;
                }
                typeCase_ = 22;
                onChanged();
                ;
                return timestampBuilder_;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:validate.FieldRules)
        }

        // @@protoc_insertion_point(class_scope:validate.FieldRules)
        private static final Validate.FieldRules DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new Validate.FieldRules();
        }

        public static Validate.FieldRules getDefaultInstance() {

            return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated
        public static final com.google.protobuf.Parser<FieldRules>
                PARSER = new com.google.protobuf.AbstractParser<FieldRules>() {
            @java.lang.Override
            public FieldRules parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return new FieldRules(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<FieldRules> parser() {

            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<FieldRules> getParserForType() {

            return PARSER;
        }

        @java.lang.Override
        public Validate.FieldRules getDefaultInstanceForType() {

            return DEFAULT_INSTANCE;
        }

    }

    public interface FloatRulesOrBuilder extends
            // @@protoc_insertion_point(interface_extends:validate.FloatRules)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional float const = 1;</code>
         */
        boolean hasConst();

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional float const = 1;</code>
         */
        float getConst();

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional float lt = 2;</code>
         */
        boolean hasLt();

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional float lt = 2;</code>
         */
        float getLt();

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional float lte = 3;</code>
         */
        boolean hasLte();

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional float lte = 3;</code>
         */
        float getLte();

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional float gt = 4;</code>
         */
        boolean hasGt();

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional float gt = 4;</code>
         */
        float getGt();

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional float gte = 5;</code>
         */
        boolean hasGte();

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional float gte = 5;</code>
         */
        float getGte();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated float in = 6;</code>
         */
        java.util.List<java.lang.Float> getInList();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated float in = 6;</code>
         */
        int getInCount();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated float in = 6;</code>
         */
        float getIn(int index);

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated float not_in = 7;</code>
         */
        java.util.List<java.lang.Float> getNotInList();

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated float not_in = 7;</code>
         */
        int getNotInCount();

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated float not_in = 7;</code>
         */
        float getNotIn(int index);
    }

    /**
     * <pre>
     * FloatRules describes the constraints applied to `float` values
     * </pre>
     * <p>
     * Protobuf type {@code validate.FloatRules}
     */
    public static final class FloatRules extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:validate.FloatRules)
            FloatRulesOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use FloatRules.newBuilder() to construct.
        private FloatRules(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

            super(builder);
        }

        private FloatRules() {

            const_ = 0F;
            lt_ = 0F;
            lte_ = 0F;
            gt_ = 0F;
            gte_ = 0F;
            in_ = java.util.Collections.emptyList();
            notIn_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {

            return this.unknownFields;
        }

        private FloatRules(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 13: {
                            bitField0_ |= 0x00000001;
                            const_ = input.readFloat();
                            break;
                        }
                        case 21: {
                            bitField0_ |= 0x00000002;
                            lt_ = input.readFloat();
                            break;
                        }
                        case 29: {
                            bitField0_ |= 0x00000004;
                            lte_ = input.readFloat();
                            break;
                        }
                        case 37: {
                            bitField0_ |= 0x00000008;
                            gt_ = input.readFloat();
                            break;
                        }
                        case 45: {
                            bitField0_ |= 0x00000010;
                            gte_ = input.readFloat();
                            break;
                        }
                        case 53: {
                            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                                in_ = new java.util.ArrayList<java.lang.Float>();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            in_.add(input.readFloat());
                            break;
                        }
                        case 50: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                                in_ = new java.util.ArrayList<java.lang.Float>();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                in_.add(input.readFloat());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 61: {
                            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                                notIn_ = new java.util.ArrayList<java.lang.Float>();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            notIn_.add(input.readFloat());
                            break;
                        }
                        case 58: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                                notIn_ = new java.util.ArrayList<java.lang.Float>();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                notIn_.add(input.readFloat());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = java.util.Collections.unmodifiableList(in_);
                }
                if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = java.util.Collections.unmodifiableList(notIn_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {

            return Validate.internal_static_validate_FloatRules_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {

            return Validate.internal_static_validate_FloatRules_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Validate.FloatRules.class, Validate.FloatRules.Builder.class);
        }

        private int bitField0_;
        public static final int CONST_FIELD_NUMBER = 1;
        private float const_;

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional float const = 1;</code>
         */
        public boolean hasConst() {

            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional float const = 1;</code>
         */
        public float getConst() {

            return const_;
        }

        public static final int LT_FIELD_NUMBER = 2;
        private float lt_;

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional float lt = 2;</code>
         */
        public boolean hasLt() {

            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional float lt = 2;</code>
         */
        public float getLt() {

            return lt_;
        }

        public static final int LTE_FIELD_NUMBER = 3;
        private float lte_;

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional float lte = 3;</code>
         */
        public boolean hasLte() {

            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional float lte = 3;</code>
         */
        public float getLte() {

            return lte_;
        }

        public static final int GT_FIELD_NUMBER = 4;
        private float gt_;

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional float gt = 4;</code>
         */
        public boolean hasGt() {

            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional float gt = 4;</code>
         */
        public float getGt() {

            return gt_;
        }

        public static final int GTE_FIELD_NUMBER = 5;
        private float gte_;

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional float gte = 5;</code>
         */
        public boolean hasGte() {

            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional float gte = 5;</code>
         */
        public float getGte() {

            return gte_;
        }

        public static final int IN_FIELD_NUMBER = 6;
        private java.util.List<java.lang.Float> in_;

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated float in = 6;</code>
         */
        public java.util.List<java.lang.Float>
        getInList() {

            return in_;
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated float in = 6;</code>
         */
        public int getInCount() {

            return in_.size();
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated float in = 6;</code>
         */
        public float getIn(int index) {

            return in_.get(index);
        }

        public static final int NOT_IN_FIELD_NUMBER = 7;
        private java.util.List<java.lang.Float> notIn_;

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated float not_in = 7;</code>
         */
        public java.util.List<java.lang.Float>
        getNotInList() {

            return notIn_;
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated float not_in = 7;</code>
         */
        public int getNotInCount() {

            return notIn_.size();
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated float not_in = 7;</code>
         */
        public float getNotIn(int index) {

            return notIn_.get(index);
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {

            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {

            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeFloat(1, const_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeFloat(2, lt_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeFloat(3, lte_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeFloat(4, gt_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeFloat(5, gte_);
            }
            for (int i = 0; i < in_.size(); i++) {
                output.writeFloat(6, in_.get(i));
            }
            for (int i = 0; i < notIn_.size(); i++) {
                output.writeFloat(7, notIn_.get(i));
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {

            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFloatSize(1, const_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFloatSize(2, lt_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFloatSize(3, lte_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFloatSize(4, gt_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFloatSize(5, gte_);
            }
            {
                int dataSize = 0;
                dataSize = 4 * getInList().size();
                size += dataSize;
                size += 1 * getInList().size();
            }
            {
                int dataSize = 0;
                dataSize = 4 * getNotInList().size();
                size += dataSize;
                size += 1 * getNotInList().size();
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {

            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Validate.FloatRules)) {
                return super.equals(obj);
            }
            Validate.FloatRules other = (Validate.FloatRules) obj;

            boolean result = true;
            result = result && (hasConst() == other.hasConst());
            if (hasConst()) {
                result = result && (
                        java.lang.Float.floatToIntBits(getConst())
                                == java.lang.Float.floatToIntBits(
                                other.getConst()));
            }
            result = result && (hasLt() == other.hasLt());
            if (hasLt()) {
                result = result && (
                        java.lang.Float.floatToIntBits(getLt())
                                == java.lang.Float.floatToIntBits(
                                other.getLt()));
            }
            result = result && (hasLte() == other.hasLte());
            if (hasLte()) {
                result = result && (
                        java.lang.Float.floatToIntBits(getLte())
                                == java.lang.Float.floatToIntBits(
                                other.getLte()));
            }
            result = result && (hasGt() == other.hasGt());
            if (hasGt()) {
                result = result && (
                        java.lang.Float.floatToIntBits(getGt())
                                == java.lang.Float.floatToIntBits(
                                other.getGt()));
            }
            result = result && (hasGte() == other.hasGte());
            if (hasGte()) {
                result = result && (
                        java.lang.Float.floatToIntBits(getGte())
                                == java.lang.Float.floatToIntBits(
                                other.getGte()));
            }
            result = result && getInList()
                    .equals(other.getInList());
            result = result && getNotInList()
                    .equals(other.getNotInList());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {

            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasConst()) {
                hash = (37 * hash) + CONST_FIELD_NUMBER;
                hash = (53 * hash) + java.lang.Float.floatToIntBits(
                        getConst());
            }
            if (hasLt()) {
                hash = (37 * hash) + LT_FIELD_NUMBER;
                hash = (53 * hash) + java.lang.Float.floatToIntBits(
                        getLt());
            }
            if (hasLte()) {
                hash = (37 * hash) + LTE_FIELD_NUMBER;
                hash = (53 * hash) + java.lang.Float.floatToIntBits(
                        getLte());
            }
            if (hasGt()) {
                hash = (37 * hash) + GT_FIELD_NUMBER;
                hash = (53 * hash) + java.lang.Float.floatToIntBits(
                        getGt());
            }
            if (hasGte()) {
                hash = (37 * hash) + GTE_FIELD_NUMBER;
                hash = (53 * hash) + java.lang.Float.floatToIntBits(
                        getGte());
            }
            if (getInCount() > 0) {
                hash = (37 * hash) + IN_FIELD_NUMBER;
                hash = (53 * hash) + getInList().hashCode();
            }
            if (getNotInCount() > 0) {
                hash = (37 * hash) + NOT_IN_FIELD_NUMBER;
                hash = (53 * hash) + getNotInList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static Validate.FloatRules parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.FloatRules parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.FloatRules parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.FloatRules parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.FloatRules parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.FloatRules parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.FloatRules parseFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.FloatRules parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.FloatRules parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Validate.FloatRules parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.FloatRules parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.FloatRules parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {

            return newBuilder();
        }

        public static Builder newBuilder() {

            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(Validate.FloatRules prototype) {

            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {

            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * FloatRules describes the constraints applied to `float` values
         * </pre>
         * <p>
         * Protobuf type {@code validate.FloatRules}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:validate.FloatRules)
                Validate.FloatRulesOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return Validate.internal_static_validate_FloatRules_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return Validate.internal_static_validate_FloatRules_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Validate.FloatRules.class, Validate.FloatRules.Builder.class);
            }

            // Construct using validate.Validate.FloatRules.newBuilder()
            private Builder() {

                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {

                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @java.lang.Override
            public Builder clear() {

                super.clear();
                const_ = 0F;
                bitField0_ = (bitField0_ & ~0x00000001);
                lt_ = 0F;
                bitField0_ = (bitField0_ & ~0x00000002);
                lte_ = 0F;
                bitField0_ = (bitField0_ & ~0x00000004);
                gt_ = 0F;
                bitField0_ = (bitField0_ & ~0x00000008);
                gte_ = 0F;
                bitField0_ = (bitField0_ & ~0x00000010);
                in_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000020);
                notIn_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000040);
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {

                return Validate.internal_static_validate_FloatRules_descriptor;
            }

            @java.lang.Override
            public Validate.FloatRules getDefaultInstanceForType() {

                return Validate.FloatRules.getDefaultInstance();
            }

            @java.lang.Override
            public Validate.FloatRules build() {

                Validate.FloatRules result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public Validate.FloatRules buildPartial() {

                Validate.FloatRules result = new Validate.FloatRules(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.const_ = const_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.lt_ = lt_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.lte_ = lte_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.gt_ = gt_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.gte_ = gte_;
                if (((bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = java.util.Collections.unmodifiableList(in_);
                    bitField0_ = (bitField0_ & ~0x00000020);
                }
                result.in_ = in_;
                if (((bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = java.util.Collections.unmodifiableList(notIn_);
                    bitField0_ = (bitField0_ & ~0x00000040);
                }
                result.notIn_ = notIn_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {

                return (Builder) super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {

                return (Builder) super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                return (Builder) super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {

                return (Builder) super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {

                if (other instanceof Validate.FloatRules) {
                    return mergeFrom((Validate.FloatRules) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(Validate.FloatRules other) {

                if (other == Validate.FloatRules.getDefaultInstance()) return this;
                if (other.hasConst()) {
                    setConst(other.getConst());
                }
                if (other.hasLt()) {
                    setLt(other.getLt());
                }
                if (other.hasLte()) {
                    setLte(other.getLte());
                }
                if (other.hasGt()) {
                    setGt(other.getGt());
                }
                if (other.hasGte()) {
                    setGte(other.getGte());
                }
                if (!other.in_.isEmpty()) {
                    if (in_.isEmpty()) {
                        in_ = other.in_;
                        bitField0_ = (bitField0_ & ~0x00000020);
                    } else {
                        ensureInIsMutable();
                        in_.addAll(other.in_);
                    }
                    onChanged();
                }
                if (!other.notIn_.isEmpty()) {
                    if (notIn_.isEmpty()) {
                        notIn_ = other.notIn_;
                        bitField0_ = (bitField0_ & ~0x00000040);
                    } else {
                        ensureNotInIsMutable();
                        notIn_.addAll(other.notIn_);
                    }
                    onChanged();
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {

                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                Validate.FloatRules parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (Validate.FloatRules) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private float const_;

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional float const = 1;</code>
             */
            public boolean hasConst() {

                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional float const = 1;</code>
             */
            public float getConst() {

                return const_;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional float const = 1;</code>
             */
            public Builder setConst(float value) {

                bitField0_ |= 0x00000001;
                const_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional float const = 1;</code>
             */
            public Builder clearConst() {

                bitField0_ = (bitField0_ & ~0x00000001);
                const_ = 0F;
                onChanged();
                return this;
            }

            private float lt_;

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional float lt = 2;</code>
             */
            public boolean hasLt() {

                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional float lt = 2;</code>
             */
            public float getLt() {

                return lt_;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional float lt = 2;</code>
             */
            public Builder setLt(float value) {

                bitField0_ |= 0x00000002;
                lt_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional float lt = 2;</code>
             */
            public Builder clearLt() {

                bitField0_ = (bitField0_ & ~0x00000002);
                lt_ = 0F;
                onChanged();
                return this;
            }

            private float lte_;

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional float lte = 3;</code>
             */
            public boolean hasLte() {

                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional float lte = 3;</code>
             */
            public float getLte() {

                return lte_;
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional float lte = 3;</code>
             */
            public Builder setLte(float value) {

                bitField0_ |= 0x00000004;
                lte_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional float lte = 3;</code>
             */
            public Builder clearLte() {

                bitField0_ = (bitField0_ & ~0x00000004);
                lte_ = 0F;
                onChanged();
                return this;
            }

            private float gt_;

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional float gt = 4;</code>
             */
            public boolean hasGt() {

                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional float gt = 4;</code>
             */
            public float getGt() {

                return gt_;
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional float gt = 4;</code>
             */
            public Builder setGt(float value) {

                bitField0_ |= 0x00000008;
                gt_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional float gt = 4;</code>
             */
            public Builder clearGt() {

                bitField0_ = (bitField0_ & ~0x00000008);
                gt_ = 0F;
                onChanged();
                return this;
            }

            private float gte_;

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional float gte = 5;</code>
             */
            public boolean hasGte() {

                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional float gte = 5;</code>
             */
            public float getGte() {

                return gte_;
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional float gte = 5;</code>
             */
            public Builder setGte(float value) {

                bitField0_ |= 0x00000010;
                gte_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional float gte = 5;</code>
             */
            public Builder clearGte() {

                bitField0_ = (bitField0_ & ~0x00000010);
                gte_ = 0F;
                onChanged();
                return this;
            }

            private java.util.List<java.lang.Float> in_ = java.util.Collections.emptyList();

            private void ensureInIsMutable() {

                if (!((bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = new java.util.ArrayList<java.lang.Float>(in_);
                    bitField0_ |= 0x00000020;
                }
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated float in = 6;</code>
             */
            public java.util.List<java.lang.Float>
            getInList() {

                return java.util.Collections.unmodifiableList(in_);
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated float in = 6;</code>
             */
            public int getInCount() {

                return in_.size();
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated float in = 6;</code>
             */
            public float getIn(int index) {

                return in_.get(index);
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated float in = 6;</code>
             */
            public Builder setIn(
                    int index, float value) {

                ensureInIsMutable();
                in_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated float in = 6;</code>
             */
            public Builder addIn(float value) {

                ensureInIsMutable();
                in_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated float in = 6;</code>
             */
            public Builder addAllIn(
                    java.lang.Iterable<? extends java.lang.Float> values) {

                ensureInIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, in_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated float in = 6;</code>
             */
            public Builder clearIn() {

                in_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000020);
                onChanged();
                return this;
            }

            private java.util.List<java.lang.Float> notIn_ = java.util.Collections.emptyList();

            private void ensureNotInIsMutable() {

                if (!((bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = new java.util.ArrayList<java.lang.Float>(notIn_);
                    bitField0_ |= 0x00000040;
                }
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated float not_in = 7;</code>
             */
            public java.util.List<java.lang.Float>
            getNotInList() {

                return java.util.Collections.unmodifiableList(notIn_);
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated float not_in = 7;</code>
             */
            public int getNotInCount() {

                return notIn_.size();
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated float not_in = 7;</code>
             */
            public float getNotIn(int index) {

                return notIn_.get(index);
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated float not_in = 7;</code>
             */
            public Builder setNotIn(
                    int index, float value) {

                ensureNotInIsMutable();
                notIn_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated float not_in = 7;</code>
             */
            public Builder addNotIn(float value) {

                ensureNotInIsMutable();
                notIn_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated float not_in = 7;</code>
             */
            public Builder addAllNotIn(
                    java.lang.Iterable<? extends java.lang.Float> values) {

                ensureNotInIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, notIn_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated float not_in = 7;</code>
             */
            public Builder clearNotIn() {

                notIn_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000040);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:validate.FloatRules)
        }

        // @@protoc_insertion_point(class_scope:validate.FloatRules)
        private static final Validate.FloatRules DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new Validate.FloatRules();
        }

        public static Validate.FloatRules getDefaultInstance() {

            return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated
        public static final com.google.protobuf.Parser<FloatRules>
                PARSER = new com.google.protobuf.AbstractParser<FloatRules>() {
            @java.lang.Override
            public FloatRules parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return new FloatRules(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<FloatRules> parser() {

            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<FloatRules> getParserForType() {

            return PARSER;
        }

        @java.lang.Override
        public Validate.FloatRules getDefaultInstanceForType() {

            return DEFAULT_INSTANCE;
        }

    }

    public interface DoubleRulesOrBuilder extends
            // @@protoc_insertion_point(interface_extends:validate.DoubleRules)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional double const = 1;</code>
         */
        boolean hasConst();

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional double const = 1;</code>
         */
        double getConst();

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional double lt = 2;</code>
         */
        boolean hasLt();

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional double lt = 2;</code>
         */
        double getLt();

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional double lte = 3;</code>
         */
        boolean hasLte();

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional double lte = 3;</code>
         */
        double getLte();

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional double gt = 4;</code>
         */
        boolean hasGt();

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional double gt = 4;</code>
         */
        double getGt();

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional double gte = 5;</code>
         */
        boolean hasGte();

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional double gte = 5;</code>
         */
        double getGte();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated double in = 6;</code>
         */
        java.util.List<java.lang.Double> getInList();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated double in = 6;</code>
         */
        int getInCount();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated double in = 6;</code>
         */
        double getIn(int index);

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated double not_in = 7;</code>
         */
        java.util.List<java.lang.Double> getNotInList();

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated double not_in = 7;</code>
         */
        int getNotInCount();

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated double not_in = 7;</code>
         */
        double getNotIn(int index);
    }

    /**
     * <pre>
     * DoubleRules describes the constraints applied to `double` values
     * </pre>
     * <p>
     * Protobuf type {@code validate.DoubleRules}
     */
    public static final class DoubleRules extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:validate.DoubleRules)
            DoubleRulesOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use DoubleRules.newBuilder() to construct.
        private DoubleRules(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

            super(builder);
        }

        private DoubleRules() {

            const_ = 0D;
            lt_ = 0D;
            lte_ = 0D;
            gt_ = 0D;
            gte_ = 0D;
            in_ = java.util.Collections.emptyList();
            notIn_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {

            return this.unknownFields;
        }

        private DoubleRules(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 9: {
                            bitField0_ |= 0x00000001;
                            const_ = input.readDouble();
                            break;
                        }
                        case 17: {
                            bitField0_ |= 0x00000002;
                            lt_ = input.readDouble();
                            break;
                        }
                        case 25: {
                            bitField0_ |= 0x00000004;
                            lte_ = input.readDouble();
                            break;
                        }
                        case 33: {
                            bitField0_ |= 0x00000008;
                            gt_ = input.readDouble();
                            break;
                        }
                        case 41: {
                            bitField0_ |= 0x00000010;
                            gte_ = input.readDouble();
                            break;
                        }
                        case 49: {
                            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                                in_ = new java.util.ArrayList<java.lang.Double>();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            in_.add(input.readDouble());
                            break;
                        }
                        case 50: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                                in_ = new java.util.ArrayList<java.lang.Double>();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                in_.add(input.readDouble());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 57: {
                            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                                notIn_ = new java.util.ArrayList<java.lang.Double>();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            notIn_.add(input.readDouble());
                            break;
                        }
                        case 58: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                                notIn_ = new java.util.ArrayList<java.lang.Double>();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                notIn_.add(input.readDouble());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = java.util.Collections.unmodifiableList(in_);
                }
                if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = java.util.Collections.unmodifiableList(notIn_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {

            return Validate.internal_static_validate_DoubleRules_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {

            return Validate.internal_static_validate_DoubleRules_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Validate.DoubleRules.class, Validate.DoubleRules.Builder.class);
        }

        private int bitField0_;
        public static final int CONST_FIELD_NUMBER = 1;
        private double const_;

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional double const = 1;</code>
         */
        public boolean hasConst() {

            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional double const = 1;</code>
         */
        public double getConst() {

            return const_;
        }

        public static final int LT_FIELD_NUMBER = 2;
        private double lt_;

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional double lt = 2;</code>
         */
        public boolean hasLt() {

            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional double lt = 2;</code>
         */
        public double getLt() {

            return lt_;
        }

        public static final int LTE_FIELD_NUMBER = 3;
        private double lte_;

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional double lte = 3;</code>
         */
        public boolean hasLte() {

            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional double lte = 3;</code>
         */
        public double getLte() {

            return lte_;
        }

        public static final int GT_FIELD_NUMBER = 4;
        private double gt_;

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional double gt = 4;</code>
         */
        public boolean hasGt() {

            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional double gt = 4;</code>
         */
        public double getGt() {

            return gt_;
        }

        public static final int GTE_FIELD_NUMBER = 5;
        private double gte_;

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional double gte = 5;</code>
         */
        public boolean hasGte() {

            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional double gte = 5;</code>
         */
        public double getGte() {

            return gte_;
        }

        public static final int IN_FIELD_NUMBER = 6;
        private java.util.List<java.lang.Double> in_;

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated double in = 6;</code>
         */
        public java.util.List<java.lang.Double>
        getInList() {

            return in_;
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated double in = 6;</code>
         */
        public int getInCount() {

            return in_.size();
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated double in = 6;</code>
         */
        public double getIn(int index) {

            return in_.get(index);
        }

        public static final int NOT_IN_FIELD_NUMBER = 7;
        private java.util.List<java.lang.Double> notIn_;

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated double not_in = 7;</code>
         */
        public java.util.List<java.lang.Double>
        getNotInList() {

            return notIn_;
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated double not_in = 7;</code>
         */
        public int getNotInCount() {

            return notIn_.size();
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated double not_in = 7;</code>
         */
        public double getNotIn(int index) {

            return notIn_.get(index);
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {

            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {

            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeDouble(1, const_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeDouble(2, lt_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeDouble(3, lte_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeDouble(4, gt_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeDouble(5, gte_);
            }
            for (int i = 0; i < in_.size(); i++) {
                output.writeDouble(6, in_.get(i));
            }
            for (int i = 0; i < notIn_.size(); i++) {
                output.writeDouble(7, notIn_.get(i));
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {

            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeDoubleSize(1, const_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeDoubleSize(2, lt_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeDoubleSize(3, lte_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeDoubleSize(4, gt_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeDoubleSize(5, gte_);
            }
            {
                int dataSize = 0;
                dataSize = 8 * getInList().size();
                size += dataSize;
                size += 1 * getInList().size();
            }
            {
                int dataSize = 0;
                dataSize = 8 * getNotInList().size();
                size += dataSize;
                size += 1 * getNotInList().size();
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {

            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Validate.DoubleRules)) {
                return super.equals(obj);
            }
            Validate.DoubleRules other = (Validate.DoubleRules) obj;

            boolean result = true;
            result = result && (hasConst() == other.hasConst());
            if (hasConst()) {
                result = result && (
                        java.lang.Double.doubleToLongBits(getConst())
                                == java.lang.Double.doubleToLongBits(
                                other.getConst()));
            }
            result = result && (hasLt() == other.hasLt());
            if (hasLt()) {
                result = result && (
                        java.lang.Double.doubleToLongBits(getLt())
                                == java.lang.Double.doubleToLongBits(
                                other.getLt()));
            }
            result = result && (hasLte() == other.hasLte());
            if (hasLte()) {
                result = result && (
                        java.lang.Double.doubleToLongBits(getLte())
                                == java.lang.Double.doubleToLongBits(
                                other.getLte()));
            }
            result = result && (hasGt() == other.hasGt());
            if (hasGt()) {
                result = result && (
                        java.lang.Double.doubleToLongBits(getGt())
                                == java.lang.Double.doubleToLongBits(
                                other.getGt()));
            }
            result = result && (hasGte() == other.hasGte());
            if (hasGte()) {
                result = result && (
                        java.lang.Double.doubleToLongBits(getGte())
                                == java.lang.Double.doubleToLongBits(
                                other.getGte()));
            }
            result = result && getInList()
                    .equals(other.getInList());
            result = result && getNotInList()
                    .equals(other.getNotInList());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {

            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasConst()) {
                hash = (37 * hash) + CONST_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        java.lang.Double.doubleToLongBits(getConst()));
            }
            if (hasLt()) {
                hash = (37 * hash) + LT_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        java.lang.Double.doubleToLongBits(getLt()));
            }
            if (hasLte()) {
                hash = (37 * hash) + LTE_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        java.lang.Double.doubleToLongBits(getLte()));
            }
            if (hasGt()) {
                hash = (37 * hash) + GT_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        java.lang.Double.doubleToLongBits(getGt()));
            }
            if (hasGte()) {
                hash = (37 * hash) + GTE_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        java.lang.Double.doubleToLongBits(getGte()));
            }
            if (getInCount() > 0) {
                hash = (37 * hash) + IN_FIELD_NUMBER;
                hash = (53 * hash) + getInList().hashCode();
            }
            if (getNotInCount() > 0) {
                hash = (37 * hash) + NOT_IN_FIELD_NUMBER;
                hash = (53 * hash) + getNotInList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static Validate.DoubleRules parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.DoubleRules parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.DoubleRules parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.DoubleRules parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.DoubleRules parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.DoubleRules parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.DoubleRules parseFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.DoubleRules parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.DoubleRules parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Validate.DoubleRules parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.DoubleRules parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.DoubleRules parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {

            return newBuilder();
        }

        public static Builder newBuilder() {

            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(Validate.DoubleRules prototype) {

            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {

            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * DoubleRules describes the constraints applied to `double` values
         * </pre>
         * <p>
         * Protobuf type {@code validate.DoubleRules}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:validate.DoubleRules)
                Validate.DoubleRulesOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return Validate.internal_static_validate_DoubleRules_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return Validate.internal_static_validate_DoubleRules_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Validate.DoubleRules.class, Validate.DoubleRules.Builder.class);
            }

            // Construct using validate.Validate.DoubleRules.newBuilder()
            private Builder() {

                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {

                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @java.lang.Override
            public Builder clear() {

                super.clear();
                const_ = 0D;
                bitField0_ = (bitField0_ & ~0x00000001);
                lt_ = 0D;
                bitField0_ = (bitField0_ & ~0x00000002);
                lte_ = 0D;
                bitField0_ = (bitField0_ & ~0x00000004);
                gt_ = 0D;
                bitField0_ = (bitField0_ & ~0x00000008);
                gte_ = 0D;
                bitField0_ = (bitField0_ & ~0x00000010);
                in_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000020);
                notIn_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000040);
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {

                return Validate.internal_static_validate_DoubleRules_descriptor;
            }

            @java.lang.Override
            public Validate.DoubleRules getDefaultInstanceForType() {

                return Validate.DoubleRules.getDefaultInstance();
            }

            @java.lang.Override
            public Validate.DoubleRules build() {

                Validate.DoubleRules result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public Validate.DoubleRules buildPartial() {

                Validate.DoubleRules result = new Validate.DoubleRules(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.const_ = const_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.lt_ = lt_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.lte_ = lte_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.gt_ = gt_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.gte_ = gte_;
                if (((bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = java.util.Collections.unmodifiableList(in_);
                    bitField0_ = (bitField0_ & ~0x00000020);
                }
                result.in_ = in_;
                if (((bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = java.util.Collections.unmodifiableList(notIn_);
                    bitField0_ = (bitField0_ & ~0x00000040);
                }
                result.notIn_ = notIn_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {

                return (Builder) super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {

                return (Builder) super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                return (Builder) super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {

                return (Builder) super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {

                if (other instanceof Validate.DoubleRules) {
                    return mergeFrom((Validate.DoubleRules) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(Validate.DoubleRules other) {

                if (other == Validate.DoubleRules.getDefaultInstance()) return this;
                if (other.hasConst()) {
                    setConst(other.getConst());
                }
                if (other.hasLt()) {
                    setLt(other.getLt());
                }
                if (other.hasLte()) {
                    setLte(other.getLte());
                }
                if (other.hasGt()) {
                    setGt(other.getGt());
                }
                if (other.hasGte()) {
                    setGte(other.getGte());
                }
                if (!other.in_.isEmpty()) {
                    if (in_.isEmpty()) {
                        in_ = other.in_;
                        bitField0_ = (bitField0_ & ~0x00000020);
                    } else {
                        ensureInIsMutable();
                        in_.addAll(other.in_);
                    }
                    onChanged();
                }
                if (!other.notIn_.isEmpty()) {
                    if (notIn_.isEmpty()) {
                        notIn_ = other.notIn_;
                        bitField0_ = (bitField0_ & ~0x00000040);
                    } else {
                        ensureNotInIsMutable();
                        notIn_.addAll(other.notIn_);
                    }
                    onChanged();
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {

                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                Validate.DoubleRules parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (Validate.DoubleRules) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private double const_;

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional double const = 1;</code>
             */
            public boolean hasConst() {

                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional double const = 1;</code>
             */
            public double getConst() {

                return const_;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional double const = 1;</code>
             */
            public Builder setConst(double value) {

                bitField0_ |= 0x00000001;
                const_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional double const = 1;</code>
             */
            public Builder clearConst() {

                bitField0_ = (bitField0_ & ~0x00000001);
                const_ = 0D;
                onChanged();
                return this;
            }

            private double lt_;

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional double lt = 2;</code>
             */
            public boolean hasLt() {

                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional double lt = 2;</code>
             */
            public double getLt() {

                return lt_;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional double lt = 2;</code>
             */
            public Builder setLt(double value) {

                bitField0_ |= 0x00000002;
                lt_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional double lt = 2;</code>
             */
            public Builder clearLt() {

                bitField0_ = (bitField0_ & ~0x00000002);
                lt_ = 0D;
                onChanged();
                return this;
            }

            private double lte_;

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional double lte = 3;</code>
             */
            public boolean hasLte() {

                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional double lte = 3;</code>
             */
            public double getLte() {

                return lte_;
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional double lte = 3;</code>
             */
            public Builder setLte(double value) {

                bitField0_ |= 0x00000004;
                lte_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional double lte = 3;</code>
             */
            public Builder clearLte() {

                bitField0_ = (bitField0_ & ~0x00000004);
                lte_ = 0D;
                onChanged();
                return this;
            }

            private double gt_;

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional double gt = 4;</code>
             */
            public boolean hasGt() {

                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional double gt = 4;</code>
             */
            public double getGt() {

                return gt_;
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional double gt = 4;</code>
             */
            public Builder setGt(double value) {

                bitField0_ |= 0x00000008;
                gt_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional double gt = 4;</code>
             */
            public Builder clearGt() {

                bitField0_ = (bitField0_ & ~0x00000008);
                gt_ = 0D;
                onChanged();
                return this;
            }

            private double gte_;

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional double gte = 5;</code>
             */
            public boolean hasGte() {

                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional double gte = 5;</code>
             */
            public double getGte() {

                return gte_;
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional double gte = 5;</code>
             */
            public Builder setGte(double value) {

                bitField0_ |= 0x00000010;
                gte_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional double gte = 5;</code>
             */
            public Builder clearGte() {

                bitField0_ = (bitField0_ & ~0x00000010);
                gte_ = 0D;
                onChanged();
                return this;
            }

            private java.util.List<java.lang.Double> in_ = java.util.Collections.emptyList();

            private void ensureInIsMutable() {

                if (!((bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = new java.util.ArrayList<java.lang.Double>(in_);
                    bitField0_ |= 0x00000020;
                }
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated double in = 6;</code>
             */
            public java.util.List<java.lang.Double>
            getInList() {

                return java.util.Collections.unmodifiableList(in_);
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated double in = 6;</code>
             */
            public int getInCount() {

                return in_.size();
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated double in = 6;</code>
             */
            public double getIn(int index) {

                return in_.get(index);
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated double in = 6;</code>
             */
            public Builder setIn(
                    int index, double value) {

                ensureInIsMutable();
                in_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated double in = 6;</code>
             */
            public Builder addIn(double value) {

                ensureInIsMutable();
                in_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated double in = 6;</code>
             */
            public Builder addAllIn(
                    java.lang.Iterable<? extends java.lang.Double> values) {

                ensureInIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, in_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated double in = 6;</code>
             */
            public Builder clearIn() {

                in_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000020);
                onChanged();
                return this;
            }

            private java.util.List<java.lang.Double> notIn_ = java.util.Collections.emptyList();

            private void ensureNotInIsMutable() {

                if (!((bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = new java.util.ArrayList<java.lang.Double>(notIn_);
                    bitField0_ |= 0x00000040;
                }
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated double not_in = 7;</code>
             */
            public java.util.List<java.lang.Double>
            getNotInList() {

                return java.util.Collections.unmodifiableList(notIn_);
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated double not_in = 7;</code>
             */
            public int getNotInCount() {

                return notIn_.size();
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated double not_in = 7;</code>
             */
            public double getNotIn(int index) {

                return notIn_.get(index);
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated double not_in = 7;</code>
             */
            public Builder setNotIn(
                    int index, double value) {

                ensureNotInIsMutable();
                notIn_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated double not_in = 7;</code>
             */
            public Builder addNotIn(double value) {

                ensureNotInIsMutable();
                notIn_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated double not_in = 7;</code>
             */
            public Builder addAllNotIn(
                    java.lang.Iterable<? extends java.lang.Double> values) {

                ensureNotInIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, notIn_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated double not_in = 7;</code>
             */
            public Builder clearNotIn() {

                notIn_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000040);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:validate.DoubleRules)
        }

        // @@protoc_insertion_point(class_scope:validate.DoubleRules)
        private static final Validate.DoubleRules DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new Validate.DoubleRules();
        }

        public static Validate.DoubleRules getDefaultInstance() {

            return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated
        public static final com.google.protobuf.Parser<DoubleRules>
                PARSER = new com.google.protobuf.AbstractParser<DoubleRules>() {
            @java.lang.Override
            public DoubleRules parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return new DoubleRules(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<DoubleRules> parser() {

            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<DoubleRules> getParserForType() {

            return PARSER;
        }

        @java.lang.Override
        public Validate.DoubleRules getDefaultInstanceForType() {

            return DEFAULT_INSTANCE;
        }

    }

    public interface Int32RulesOrBuilder extends
            // @@protoc_insertion_point(interface_extends:validate.Int32Rules)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional int32 const = 1;</code>
         */
        boolean hasConst();

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional int32 const = 1;</code>
         */
        int getConst();

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional int32 lt = 2;</code>
         */
        boolean hasLt();

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional int32 lt = 2;</code>
         */
        int getLt();

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional int32 lte = 3;</code>
         */
        boolean hasLte();

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional int32 lte = 3;</code>
         */
        int getLte();

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional int32 gt = 4;</code>
         */
        boolean hasGt();

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional int32 gt = 4;</code>
         */
        int getGt();

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional int32 gte = 5;</code>
         */
        boolean hasGte();

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional int32 gte = 5;</code>
         */
        int getGte();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int32 in = 6;</code>
         */
        java.util.List<java.lang.Integer> getInList();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int32 in = 6;</code>
         */
        int getInCount();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int32 in = 6;</code>
         */
        int getIn(int index);

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int32 not_in = 7;</code>
         */
        java.util.List<java.lang.Integer> getNotInList();

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int32 not_in = 7;</code>
         */
        int getNotInCount();

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int32 not_in = 7;</code>
         */
        int getNotIn(int index);
    }

    /**
     * <pre>
     * Int32Rules describes the constraints applied to `int32` values
     * </pre>
     * <p>
     * Protobuf type {@code validate.Int32Rules}
     */
    public static final class Int32Rules extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:validate.Int32Rules)
            Int32RulesOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use Int32Rules.newBuilder() to construct.
        private Int32Rules(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

            super(builder);
        }

        private Int32Rules() {

            const_ = 0;
            lt_ = 0;
            lte_ = 0;
            gt_ = 0;
            gte_ = 0;
            in_ = java.util.Collections.emptyList();
            notIn_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {

            return this.unknownFields;
        }

        private Int32Rules(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8: {
                            bitField0_ |= 0x00000001;
                            const_ = input.readInt32();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            lt_ = input.readInt32();
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            lte_ = input.readInt32();
                            break;
                        }
                        case 32: {
                            bitField0_ |= 0x00000008;
                            gt_ = input.readInt32();
                            break;
                        }
                        case 40: {
                            bitField0_ |= 0x00000010;
                            gte_ = input.readInt32();
                            break;
                        }
                        case 48: {
                            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                                in_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            in_.add(input.readInt32());
                            break;
                        }
                        case 50: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                                in_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                in_.add(input.readInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 56: {
                            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                                notIn_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            notIn_.add(input.readInt32());
                            break;
                        }
                        case 58: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                                notIn_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                notIn_.add(input.readInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = java.util.Collections.unmodifiableList(in_);
                }
                if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = java.util.Collections.unmodifiableList(notIn_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {

            return Validate.internal_static_validate_Int32Rules_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {

            return Validate.internal_static_validate_Int32Rules_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Validate.Int32Rules.class, Validate.Int32Rules.Builder.class);
        }

        private int bitField0_;
        public static final int CONST_FIELD_NUMBER = 1;
        private int const_;

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional int32 const = 1;</code>
         */
        public boolean hasConst() {

            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional int32 const = 1;</code>
         */
        public int getConst() {

            return const_;
        }

        public static final int LT_FIELD_NUMBER = 2;
        private int lt_;

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional int32 lt = 2;</code>
         */
        public boolean hasLt() {

            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional int32 lt = 2;</code>
         */
        public int getLt() {

            return lt_;
        }

        public static final int LTE_FIELD_NUMBER = 3;
        private int lte_;

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional int32 lte = 3;</code>
         */
        public boolean hasLte() {

            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional int32 lte = 3;</code>
         */
        public int getLte() {

            return lte_;
        }

        public static final int GT_FIELD_NUMBER = 4;
        private int gt_;

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional int32 gt = 4;</code>
         */
        public boolean hasGt() {

            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional int32 gt = 4;</code>
         */
        public int getGt() {

            return gt_;
        }

        public static final int GTE_FIELD_NUMBER = 5;
        private int gte_;

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional int32 gte = 5;</code>
         */
        public boolean hasGte() {

            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional int32 gte = 5;</code>
         */
        public int getGte() {

            return gte_;
        }

        public static final int IN_FIELD_NUMBER = 6;
        private java.util.List<java.lang.Integer> in_;

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int32 in = 6;</code>
         */
        public java.util.List<java.lang.Integer>
        getInList() {

            return in_;
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int32 in = 6;</code>
         */
        public int getInCount() {

            return in_.size();
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int32 in = 6;</code>
         */
        public int getIn(int index) {

            return in_.get(index);
        }

        public static final int NOT_IN_FIELD_NUMBER = 7;
        private java.util.List<java.lang.Integer> notIn_;

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int32 not_in = 7;</code>
         */
        public java.util.List<java.lang.Integer>
        getNotInList() {

            return notIn_;
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int32 not_in = 7;</code>
         */
        public int getNotInCount() {

            return notIn_.size();
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int32 not_in = 7;</code>
         */
        public int getNotIn(int index) {

            return notIn_.get(index);
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {

            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {

            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeInt32(1, const_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeInt32(2, lt_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeInt32(3, lte_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeInt32(4, gt_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeInt32(5, gte_);
            }
            for (int i = 0; i < in_.size(); i++) {
                output.writeInt32(6, in_.get(i));
            }
            for (int i = 0; i < notIn_.size(); i++) {
                output.writeInt32(7, notIn_.get(i));
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {

            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(1, const_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(2, lt_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(3, lte_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(4, gt_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(5, gte_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < in_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(in_.get(i));
                }
                size += dataSize;
                size += 1 * getInList().size();
            }
            {
                int dataSize = 0;
                for (int i = 0; i < notIn_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(notIn_.get(i));
                }
                size += dataSize;
                size += 1 * getNotInList().size();
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {

            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Validate.Int32Rules)) {
                return super.equals(obj);
            }
            Validate.Int32Rules other = (Validate.Int32Rules) obj;

            boolean result = true;
            result = result && (hasConst() == other.hasConst());
            if (hasConst()) {
                result = result && (getConst()
                        == other.getConst());
            }
            result = result && (hasLt() == other.hasLt());
            if (hasLt()) {
                result = result && (getLt()
                        == other.getLt());
            }
            result = result && (hasLte() == other.hasLte());
            if (hasLte()) {
                result = result && (getLte()
                        == other.getLte());
            }
            result = result && (hasGt() == other.hasGt());
            if (hasGt()) {
                result = result && (getGt()
                        == other.getGt());
            }
            result = result && (hasGte() == other.hasGte());
            if (hasGte()) {
                result = result && (getGte()
                        == other.getGte());
            }
            result = result && getInList()
                    .equals(other.getInList());
            result = result && getNotInList()
                    .equals(other.getNotInList());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {

            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasConst()) {
                hash = (37 * hash) + CONST_FIELD_NUMBER;
                hash = (53 * hash) + getConst();
            }
            if (hasLt()) {
                hash = (37 * hash) + LT_FIELD_NUMBER;
                hash = (53 * hash) + getLt();
            }
            if (hasLte()) {
                hash = (37 * hash) + LTE_FIELD_NUMBER;
                hash = (53 * hash) + getLte();
            }
            if (hasGt()) {
                hash = (37 * hash) + GT_FIELD_NUMBER;
                hash = (53 * hash) + getGt();
            }
            if (hasGte()) {
                hash = (37 * hash) + GTE_FIELD_NUMBER;
                hash = (53 * hash) + getGte();
            }
            if (getInCount() > 0) {
                hash = (37 * hash) + IN_FIELD_NUMBER;
                hash = (53 * hash) + getInList().hashCode();
            }
            if (getNotInCount() > 0) {
                hash = (37 * hash) + NOT_IN_FIELD_NUMBER;
                hash = (53 * hash) + getNotInList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static Validate.Int32Rules parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.Int32Rules parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.Int32Rules parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.Int32Rules parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.Int32Rules parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.Int32Rules parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.Int32Rules parseFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.Int32Rules parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.Int32Rules parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Validate.Int32Rules parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.Int32Rules parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.Int32Rules parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {

            return newBuilder();
        }

        public static Builder newBuilder() {

            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(Validate.Int32Rules prototype) {

            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {

            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * Int32Rules describes the constraints applied to `int32` values
         * </pre>
         * <p>
         * Protobuf type {@code validate.Int32Rules}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:validate.Int32Rules)
                Validate.Int32RulesOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return Validate.internal_static_validate_Int32Rules_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return Validate.internal_static_validate_Int32Rules_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Validate.Int32Rules.class, Validate.Int32Rules.Builder.class);
            }

            // Construct using validate.Validate.Int32Rules.newBuilder()
            private Builder() {

                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {

                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @java.lang.Override
            public Builder clear() {

                super.clear();
                const_ = 0;
                bitField0_ = (bitField0_ & ~0x00000001);
                lt_ = 0;
                bitField0_ = (bitField0_ & ~0x00000002);
                lte_ = 0;
                bitField0_ = (bitField0_ & ~0x00000004);
                gt_ = 0;
                bitField0_ = (bitField0_ & ~0x00000008);
                gte_ = 0;
                bitField0_ = (bitField0_ & ~0x00000010);
                in_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000020);
                notIn_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000040);
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {

                return Validate.internal_static_validate_Int32Rules_descriptor;
            }

            @java.lang.Override
            public Validate.Int32Rules getDefaultInstanceForType() {

                return Validate.Int32Rules.getDefaultInstance();
            }

            @java.lang.Override
            public Validate.Int32Rules build() {

                Validate.Int32Rules result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public Validate.Int32Rules buildPartial() {

                Validate.Int32Rules result = new Validate.Int32Rules(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.const_ = const_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.lt_ = lt_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.lte_ = lte_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.gt_ = gt_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.gte_ = gte_;
                if (((bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = java.util.Collections.unmodifiableList(in_);
                    bitField0_ = (bitField0_ & ~0x00000020);
                }
                result.in_ = in_;
                if (((bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = java.util.Collections.unmodifiableList(notIn_);
                    bitField0_ = (bitField0_ & ~0x00000040);
                }
                result.notIn_ = notIn_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {

                return (Builder) super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {

                return (Builder) super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                return (Builder) super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {

                return (Builder) super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {

                if (other instanceof Validate.Int32Rules) {
                    return mergeFrom((Validate.Int32Rules) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(Validate.Int32Rules other) {

                if (other == Validate.Int32Rules.getDefaultInstance()) return this;
                if (other.hasConst()) {
                    setConst(other.getConst());
                }
                if (other.hasLt()) {
                    setLt(other.getLt());
                }
                if (other.hasLte()) {
                    setLte(other.getLte());
                }
                if (other.hasGt()) {
                    setGt(other.getGt());
                }
                if (other.hasGte()) {
                    setGte(other.getGte());
                }
                if (!other.in_.isEmpty()) {
                    if (in_.isEmpty()) {
                        in_ = other.in_;
                        bitField0_ = (bitField0_ & ~0x00000020);
                    } else {
                        ensureInIsMutable();
                        in_.addAll(other.in_);
                    }
                    onChanged();
                }
                if (!other.notIn_.isEmpty()) {
                    if (notIn_.isEmpty()) {
                        notIn_ = other.notIn_;
                        bitField0_ = (bitField0_ & ~0x00000040);
                    } else {
                        ensureNotInIsMutable();
                        notIn_.addAll(other.notIn_);
                    }
                    onChanged();
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {

                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                Validate.Int32Rules parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (Validate.Int32Rules) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private int const_;

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional int32 const = 1;</code>
             */
            public boolean hasConst() {

                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional int32 const = 1;</code>
             */
            public int getConst() {

                return const_;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional int32 const = 1;</code>
             */
            public Builder setConst(int value) {

                bitField0_ |= 0x00000001;
                const_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional int32 const = 1;</code>
             */
            public Builder clearConst() {

                bitField0_ = (bitField0_ & ~0x00000001);
                const_ = 0;
                onChanged();
                return this;
            }

            private int lt_;

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional int32 lt = 2;</code>
             */
            public boolean hasLt() {

                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional int32 lt = 2;</code>
             */
            public int getLt() {

                return lt_;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional int32 lt = 2;</code>
             */
            public Builder setLt(int value) {

                bitField0_ |= 0x00000002;
                lt_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional int32 lt = 2;</code>
             */
            public Builder clearLt() {

                bitField0_ = (bitField0_ & ~0x00000002);
                lt_ = 0;
                onChanged();
                return this;
            }

            private int lte_;

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional int32 lte = 3;</code>
             */
            public boolean hasLte() {

                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional int32 lte = 3;</code>
             */
            public int getLte() {

                return lte_;
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional int32 lte = 3;</code>
             */
            public Builder setLte(int value) {

                bitField0_ |= 0x00000004;
                lte_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional int32 lte = 3;</code>
             */
            public Builder clearLte() {

                bitField0_ = (bitField0_ & ~0x00000004);
                lte_ = 0;
                onChanged();
                return this;
            }

            private int gt_;

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional int32 gt = 4;</code>
             */
            public boolean hasGt() {

                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional int32 gt = 4;</code>
             */
            public int getGt() {

                return gt_;
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional int32 gt = 4;</code>
             */
            public Builder setGt(int value) {

                bitField0_ |= 0x00000008;
                gt_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional int32 gt = 4;</code>
             */
            public Builder clearGt() {

                bitField0_ = (bitField0_ & ~0x00000008);
                gt_ = 0;
                onChanged();
                return this;
            }

            private int gte_;

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional int32 gte = 5;</code>
             */
            public boolean hasGte() {

                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional int32 gte = 5;</code>
             */
            public int getGte() {

                return gte_;
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional int32 gte = 5;</code>
             */
            public Builder setGte(int value) {

                bitField0_ |= 0x00000010;
                gte_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional int32 gte = 5;</code>
             */
            public Builder clearGte() {

                bitField0_ = (bitField0_ & ~0x00000010);
                gte_ = 0;
                onChanged();
                return this;
            }

            private java.util.List<java.lang.Integer> in_ = java.util.Collections.emptyList();

            private void ensureInIsMutable() {

                if (!((bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = new java.util.ArrayList<java.lang.Integer>(in_);
                    bitField0_ |= 0x00000020;
                }
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int32 in = 6;</code>
             */
            public java.util.List<java.lang.Integer>
            getInList() {

                return java.util.Collections.unmodifiableList(in_);
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int32 in = 6;</code>
             */
            public int getInCount() {

                return in_.size();
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int32 in = 6;</code>
             */
            public int getIn(int index) {

                return in_.get(index);
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int32 in = 6;</code>
             */
            public Builder setIn(
                    int index, int value) {

                ensureInIsMutable();
                in_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int32 in = 6;</code>
             */
            public Builder addIn(int value) {

                ensureInIsMutable();
                in_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int32 in = 6;</code>
             */
            public Builder addAllIn(
                    java.lang.Iterable<? extends java.lang.Integer> values) {

                ensureInIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, in_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int32 in = 6;</code>
             */
            public Builder clearIn() {

                in_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000020);
                onChanged();
                return this;
            }

            private java.util.List<java.lang.Integer> notIn_ = java.util.Collections.emptyList();

            private void ensureNotInIsMutable() {

                if (!((bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = new java.util.ArrayList<java.lang.Integer>(notIn_);
                    bitField0_ |= 0x00000040;
                }
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int32 not_in = 7;</code>
             */
            public java.util.List<java.lang.Integer>
            getNotInList() {

                return java.util.Collections.unmodifiableList(notIn_);
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int32 not_in = 7;</code>
             */
            public int getNotInCount() {

                return notIn_.size();
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int32 not_in = 7;</code>
             */
            public int getNotIn(int index) {

                return notIn_.get(index);
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int32 not_in = 7;</code>
             */
            public Builder setNotIn(
                    int index, int value) {

                ensureNotInIsMutable();
                notIn_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int32 not_in = 7;</code>
             */
            public Builder addNotIn(int value) {

                ensureNotInIsMutable();
                notIn_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int32 not_in = 7;</code>
             */
            public Builder addAllNotIn(
                    java.lang.Iterable<? extends java.lang.Integer> values) {

                ensureNotInIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, notIn_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int32 not_in = 7;</code>
             */
            public Builder clearNotIn() {

                notIn_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000040);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:validate.Int32Rules)
        }

        // @@protoc_insertion_point(class_scope:validate.Int32Rules)
        private static final Validate.Int32Rules DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new Validate.Int32Rules();
        }

        public static Validate.Int32Rules getDefaultInstance() {

            return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated
        public static final com.google.protobuf.Parser<Int32Rules>
                PARSER = new com.google.protobuf.AbstractParser<Int32Rules>() {
            @java.lang.Override
            public Int32Rules parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return new Int32Rules(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<Int32Rules> parser() {

            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Int32Rules> getParserForType() {

            return PARSER;
        }

        @java.lang.Override
        public Validate.Int32Rules getDefaultInstanceForType() {

            return DEFAULT_INSTANCE;
        }

    }

    public interface Int64RulesOrBuilder extends
            // @@protoc_insertion_point(interface_extends:validate.Int64Rules)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional int64 const = 1;</code>
         */
        boolean hasConst();

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional int64 const = 1;</code>
         */
        long getConst();

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional int64 lt = 2;</code>
         */
        boolean hasLt();

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional int64 lt = 2;</code>
         */
        long getLt();

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional int64 lte = 3;</code>
         */
        boolean hasLte();

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional int64 lte = 3;</code>
         */
        long getLte();

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional int64 gt = 4;</code>
         */
        boolean hasGt();

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional int64 gt = 4;</code>
         */
        long getGt();

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional int64 gte = 5;</code>
         */
        boolean hasGte();

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional int64 gte = 5;</code>
         */
        long getGte();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int64 in = 6;</code>
         */
        java.util.List<java.lang.Long> getInList();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int64 in = 6;</code>
         */
        int getInCount();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int64 in = 6;</code>
         */
        long getIn(int index);

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int64 not_in = 7;</code>
         */
        java.util.List<java.lang.Long> getNotInList();

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int64 not_in = 7;</code>
         */
        int getNotInCount();

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int64 not_in = 7;</code>
         */
        long getNotIn(int index);
    }

    /**
     * <pre>
     * Int64Rules describes the constraints applied to `int64` values
     * </pre>
     * <p>
     * Protobuf type {@code validate.Int64Rules}
     */
    public static final class Int64Rules extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:validate.Int64Rules)
            Int64RulesOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use Int64Rules.newBuilder() to construct.
        private Int64Rules(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

            super(builder);
        }

        private Int64Rules() {

            const_ = 0L;
            lt_ = 0L;
            lte_ = 0L;
            gt_ = 0L;
            gte_ = 0L;
            in_ = java.util.Collections.emptyList();
            notIn_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {

            return this.unknownFields;
        }

        private Int64Rules(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8: {
                            bitField0_ |= 0x00000001;
                            const_ = input.readInt64();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            lt_ = input.readInt64();
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            lte_ = input.readInt64();
                            break;
                        }
                        case 32: {
                            bitField0_ |= 0x00000008;
                            gt_ = input.readInt64();
                            break;
                        }
                        case 40: {
                            bitField0_ |= 0x00000010;
                            gte_ = input.readInt64();
                            break;
                        }
                        case 48: {
                            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                                in_ = new java.util.ArrayList<java.lang.Long>();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            in_.add(input.readInt64());
                            break;
                        }
                        case 50: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                                in_ = new java.util.ArrayList<java.lang.Long>();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                in_.add(input.readInt64());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 56: {
                            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                                notIn_ = new java.util.ArrayList<java.lang.Long>();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            notIn_.add(input.readInt64());
                            break;
                        }
                        case 58: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                                notIn_ = new java.util.ArrayList<java.lang.Long>();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                notIn_.add(input.readInt64());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = java.util.Collections.unmodifiableList(in_);
                }
                if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = java.util.Collections.unmodifiableList(notIn_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {

            return Validate.internal_static_validate_Int64Rules_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {

            return Validate.internal_static_validate_Int64Rules_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Validate.Int64Rules.class, Validate.Int64Rules.Builder.class);
        }

        private int bitField0_;
        public static final int CONST_FIELD_NUMBER = 1;
        private long const_;

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional int64 const = 1;</code>
         */
        public boolean hasConst() {

            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional int64 const = 1;</code>
         */
        public long getConst() {

            return const_;
        }

        public static final int LT_FIELD_NUMBER = 2;
        private long lt_;

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional int64 lt = 2;</code>
         */
        public boolean hasLt() {

            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional int64 lt = 2;</code>
         */
        public long getLt() {

            return lt_;
        }

        public static final int LTE_FIELD_NUMBER = 3;
        private long lte_;

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional int64 lte = 3;</code>
         */
        public boolean hasLte() {

            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional int64 lte = 3;</code>
         */
        public long getLte() {

            return lte_;
        }

        public static final int GT_FIELD_NUMBER = 4;
        private long gt_;

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional int64 gt = 4;</code>
         */
        public boolean hasGt() {

            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional int64 gt = 4;</code>
         */
        public long getGt() {

            return gt_;
        }

        public static final int GTE_FIELD_NUMBER = 5;
        private long gte_;

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional int64 gte = 5;</code>
         */
        public boolean hasGte() {

            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional int64 gte = 5;</code>
         */
        public long getGte() {

            return gte_;
        }

        public static final int IN_FIELD_NUMBER = 6;
        private java.util.List<java.lang.Long> in_;

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int64 in = 6;</code>
         */
        public java.util.List<java.lang.Long>
        getInList() {

            return in_;
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int64 in = 6;</code>
         */
        public int getInCount() {

            return in_.size();
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int64 in = 6;</code>
         */
        public long getIn(int index) {

            return in_.get(index);
        }

        public static final int NOT_IN_FIELD_NUMBER = 7;
        private java.util.List<java.lang.Long> notIn_;

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int64 not_in = 7;</code>
         */
        public java.util.List<java.lang.Long>
        getNotInList() {

            return notIn_;
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int64 not_in = 7;</code>
         */
        public int getNotInCount() {

            return notIn_.size();
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int64 not_in = 7;</code>
         */
        public long getNotIn(int index) {

            return notIn_.get(index);
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {

            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {

            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeInt64(1, const_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeInt64(2, lt_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeInt64(3, lte_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeInt64(4, gt_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeInt64(5, gte_);
            }
            for (int i = 0; i < in_.size(); i++) {
                output.writeInt64(6, in_.get(i));
            }
            for (int i = 0; i < notIn_.size(); i++) {
                output.writeInt64(7, notIn_.get(i));
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {

            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(1, const_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(2, lt_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(3, lte_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(4, gt_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(5, gte_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < in_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt64SizeNoTag(in_.get(i));
                }
                size += dataSize;
                size += 1 * getInList().size();
            }
            {
                int dataSize = 0;
                for (int i = 0; i < notIn_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt64SizeNoTag(notIn_.get(i));
                }
                size += dataSize;
                size += 1 * getNotInList().size();
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {

            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Validate.Int64Rules)) {
                return super.equals(obj);
            }
            Validate.Int64Rules other = (Validate.Int64Rules) obj;

            boolean result = true;
            result = result && (hasConst() == other.hasConst());
            if (hasConst()) {
                result = result && (getConst()
                        == other.getConst());
            }
            result = result && (hasLt() == other.hasLt());
            if (hasLt()) {
                result = result && (getLt()
                        == other.getLt());
            }
            result = result && (hasLte() == other.hasLte());
            if (hasLte()) {
                result = result && (getLte()
                        == other.getLte());
            }
            result = result && (hasGt() == other.hasGt());
            if (hasGt()) {
                result = result && (getGt()
                        == other.getGt());
            }
            result = result && (hasGte() == other.hasGte());
            if (hasGte()) {
                result = result && (getGte()
                        == other.getGte());
            }
            result = result && getInList()
                    .equals(other.getInList());
            result = result && getNotInList()
                    .equals(other.getNotInList());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {

            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasConst()) {
                hash = (37 * hash) + CONST_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getConst());
            }
            if (hasLt()) {
                hash = (37 * hash) + LT_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getLt());
            }
            if (hasLte()) {
                hash = (37 * hash) + LTE_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getLte());
            }
            if (hasGt()) {
                hash = (37 * hash) + GT_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getGt());
            }
            if (hasGte()) {
                hash = (37 * hash) + GTE_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getGte());
            }
            if (getInCount() > 0) {
                hash = (37 * hash) + IN_FIELD_NUMBER;
                hash = (53 * hash) + getInList().hashCode();
            }
            if (getNotInCount() > 0) {
                hash = (37 * hash) + NOT_IN_FIELD_NUMBER;
                hash = (53 * hash) + getNotInList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static Validate.Int64Rules parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.Int64Rules parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.Int64Rules parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.Int64Rules parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.Int64Rules parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.Int64Rules parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.Int64Rules parseFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.Int64Rules parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.Int64Rules parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Validate.Int64Rules parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.Int64Rules parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.Int64Rules parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {

            return newBuilder();
        }

        public static Builder newBuilder() {

            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(Validate.Int64Rules prototype) {

            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {

            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * Int64Rules describes the constraints applied to `int64` values
         * </pre>
         * <p>
         * Protobuf type {@code validate.Int64Rules}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:validate.Int64Rules)
                Validate.Int64RulesOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return Validate.internal_static_validate_Int64Rules_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return Validate.internal_static_validate_Int64Rules_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Validate.Int64Rules.class, Validate.Int64Rules.Builder.class);
            }

            // Construct using validate.Validate.Int64Rules.newBuilder()
            private Builder() {

                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {

                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @java.lang.Override
            public Builder clear() {

                super.clear();
                const_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000001);
                lt_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000002);
                lte_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000004);
                gt_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000008);
                gte_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000010);
                in_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000020);
                notIn_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000040);
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {

                return Validate.internal_static_validate_Int64Rules_descriptor;
            }

            @java.lang.Override
            public Validate.Int64Rules getDefaultInstanceForType() {

                return Validate.Int64Rules.getDefaultInstance();
            }

            @java.lang.Override
            public Validate.Int64Rules build() {

                Validate.Int64Rules result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public Validate.Int64Rules buildPartial() {

                Validate.Int64Rules result = new Validate.Int64Rules(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.const_ = const_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.lt_ = lt_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.lte_ = lte_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.gt_ = gt_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.gte_ = gte_;
                if (((bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = java.util.Collections.unmodifiableList(in_);
                    bitField0_ = (bitField0_ & ~0x00000020);
                }
                result.in_ = in_;
                if (((bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = java.util.Collections.unmodifiableList(notIn_);
                    bitField0_ = (bitField0_ & ~0x00000040);
                }
                result.notIn_ = notIn_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {

                return (Builder) super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {

                return (Builder) super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                return (Builder) super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {

                return (Builder) super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {

                if (other instanceof Validate.Int64Rules) {
                    return mergeFrom((Validate.Int64Rules) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(Validate.Int64Rules other) {

                if (other == Validate.Int64Rules.getDefaultInstance()) return this;
                if (other.hasConst()) {
                    setConst(other.getConst());
                }
                if (other.hasLt()) {
                    setLt(other.getLt());
                }
                if (other.hasLte()) {
                    setLte(other.getLte());
                }
                if (other.hasGt()) {
                    setGt(other.getGt());
                }
                if (other.hasGte()) {
                    setGte(other.getGte());
                }
                if (!other.in_.isEmpty()) {
                    if (in_.isEmpty()) {
                        in_ = other.in_;
                        bitField0_ = (bitField0_ & ~0x00000020);
                    } else {
                        ensureInIsMutable();
                        in_.addAll(other.in_);
                    }
                    onChanged();
                }
                if (!other.notIn_.isEmpty()) {
                    if (notIn_.isEmpty()) {
                        notIn_ = other.notIn_;
                        bitField0_ = (bitField0_ & ~0x00000040);
                    } else {
                        ensureNotInIsMutable();
                        notIn_.addAll(other.notIn_);
                    }
                    onChanged();
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {

                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                Validate.Int64Rules parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (Validate.Int64Rules) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private long const_;

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional int64 const = 1;</code>
             */
            public boolean hasConst() {

                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional int64 const = 1;</code>
             */
            public long getConst() {

                return const_;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional int64 const = 1;</code>
             */
            public Builder setConst(long value) {

                bitField0_ |= 0x00000001;
                const_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional int64 const = 1;</code>
             */
            public Builder clearConst() {

                bitField0_ = (bitField0_ & ~0x00000001);
                const_ = 0L;
                onChanged();
                return this;
            }

            private long lt_;

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional int64 lt = 2;</code>
             */
            public boolean hasLt() {

                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional int64 lt = 2;</code>
             */
            public long getLt() {

                return lt_;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional int64 lt = 2;</code>
             */
            public Builder setLt(long value) {

                bitField0_ |= 0x00000002;
                lt_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional int64 lt = 2;</code>
             */
            public Builder clearLt() {

                bitField0_ = (bitField0_ & ~0x00000002);
                lt_ = 0L;
                onChanged();
                return this;
            }

            private long lte_;

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional int64 lte = 3;</code>
             */
            public boolean hasLte() {

                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional int64 lte = 3;</code>
             */
            public long getLte() {

                return lte_;
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional int64 lte = 3;</code>
             */
            public Builder setLte(long value) {

                bitField0_ |= 0x00000004;
                lte_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional int64 lte = 3;</code>
             */
            public Builder clearLte() {

                bitField0_ = (bitField0_ & ~0x00000004);
                lte_ = 0L;
                onChanged();
                return this;
            }

            private long gt_;

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional int64 gt = 4;</code>
             */
            public boolean hasGt() {

                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional int64 gt = 4;</code>
             */
            public long getGt() {

                return gt_;
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional int64 gt = 4;</code>
             */
            public Builder setGt(long value) {

                bitField0_ |= 0x00000008;
                gt_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional int64 gt = 4;</code>
             */
            public Builder clearGt() {

                bitField0_ = (bitField0_ & ~0x00000008);
                gt_ = 0L;
                onChanged();
                return this;
            }

            private long gte_;

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional int64 gte = 5;</code>
             */
            public boolean hasGte() {

                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional int64 gte = 5;</code>
             */
            public long getGte() {

                return gte_;
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional int64 gte = 5;</code>
             */
            public Builder setGte(long value) {

                bitField0_ |= 0x00000010;
                gte_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional int64 gte = 5;</code>
             */
            public Builder clearGte() {

                bitField0_ = (bitField0_ & ~0x00000010);
                gte_ = 0L;
                onChanged();
                return this;
            }

            private java.util.List<java.lang.Long> in_ = java.util.Collections.emptyList();

            private void ensureInIsMutable() {

                if (!((bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = new java.util.ArrayList<java.lang.Long>(in_);
                    bitField0_ |= 0x00000020;
                }
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int64 in = 6;</code>
             */
            public java.util.List<java.lang.Long>
            getInList() {

                return java.util.Collections.unmodifiableList(in_);
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int64 in = 6;</code>
             */
            public int getInCount() {

                return in_.size();
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int64 in = 6;</code>
             */
            public long getIn(int index) {

                return in_.get(index);
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int64 in = 6;</code>
             */
            public Builder setIn(
                    int index, long value) {

                ensureInIsMutable();
                in_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int64 in = 6;</code>
             */
            public Builder addIn(long value) {

                ensureInIsMutable();
                in_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int64 in = 6;</code>
             */
            public Builder addAllIn(
                    java.lang.Iterable<? extends java.lang.Long> values) {

                ensureInIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, in_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int64 in = 6;</code>
             */
            public Builder clearIn() {

                in_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000020);
                onChanged();
                return this;
            }

            private java.util.List<java.lang.Long> notIn_ = java.util.Collections.emptyList();

            private void ensureNotInIsMutable() {

                if (!((bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = new java.util.ArrayList<java.lang.Long>(notIn_);
                    bitField0_ |= 0x00000040;
                }
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int64 not_in = 7;</code>
             */
            public java.util.List<java.lang.Long>
            getNotInList() {

                return java.util.Collections.unmodifiableList(notIn_);
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int64 not_in = 7;</code>
             */
            public int getNotInCount() {

                return notIn_.size();
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int64 not_in = 7;</code>
             */
            public long getNotIn(int index) {

                return notIn_.get(index);
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int64 not_in = 7;</code>
             */
            public Builder setNotIn(
                    int index, long value) {

                ensureNotInIsMutable();
                notIn_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int64 not_in = 7;</code>
             */
            public Builder addNotIn(long value) {

                ensureNotInIsMutable();
                notIn_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int64 not_in = 7;</code>
             */
            public Builder addAllNotIn(
                    java.lang.Iterable<? extends java.lang.Long> values) {

                ensureNotInIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, notIn_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int64 not_in = 7;</code>
             */
            public Builder clearNotIn() {

                notIn_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000040);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:validate.Int64Rules)
        }

        // @@protoc_insertion_point(class_scope:validate.Int64Rules)
        private static final Validate.Int64Rules DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new Validate.Int64Rules();
        }

        public static Validate.Int64Rules getDefaultInstance() {

            return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated
        public static final com.google.protobuf.Parser<Int64Rules>
                PARSER = new com.google.protobuf.AbstractParser<Int64Rules>() {
            @java.lang.Override
            public Int64Rules parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return new Int64Rules(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<Int64Rules> parser() {

            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Int64Rules> getParserForType() {

            return PARSER;
        }

        @java.lang.Override
        public Validate.Int64Rules getDefaultInstanceForType() {

            return DEFAULT_INSTANCE;
        }

    }

    public interface UInt32RulesOrBuilder extends
            // @@protoc_insertion_point(interface_extends:validate.UInt32Rules)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional uint32 const = 1;</code>
         */
        boolean hasConst();

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional uint32 const = 1;</code>
         */
        int getConst();

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional uint32 lt = 2;</code>
         */
        boolean hasLt();

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional uint32 lt = 2;</code>
         */
        int getLt();

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional uint32 lte = 3;</code>
         */
        boolean hasLte();

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional uint32 lte = 3;</code>
         */
        int getLte();

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional uint32 gt = 4;</code>
         */
        boolean hasGt();

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional uint32 gt = 4;</code>
         */
        int getGt();

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional uint32 gte = 5;</code>
         */
        boolean hasGte();

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional uint32 gte = 5;</code>
         */
        int getGte();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated uint32 in = 6;</code>
         */
        java.util.List<java.lang.Integer> getInList();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated uint32 in = 6;</code>
         */
        int getInCount();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated uint32 in = 6;</code>
         */
        int getIn(int index);

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated uint32 not_in = 7;</code>
         */
        java.util.List<java.lang.Integer> getNotInList();

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated uint32 not_in = 7;</code>
         */
        int getNotInCount();

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated uint32 not_in = 7;</code>
         */
        int getNotIn(int index);
    }

    /**
     * <pre>
     * UInt32Rules describes the constraints applied to `uint32` values
     * </pre>
     * <p>
     * Protobuf type {@code validate.UInt32Rules}
     */
    public static final class UInt32Rules extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:validate.UInt32Rules)
            UInt32RulesOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use UInt32Rules.newBuilder() to construct.
        private UInt32Rules(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

            super(builder);
        }

        private UInt32Rules() {

            const_ = 0;
            lt_ = 0;
            lte_ = 0;
            gt_ = 0;
            gte_ = 0;
            in_ = java.util.Collections.emptyList();
            notIn_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {

            return this.unknownFields;
        }

        private UInt32Rules(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8: {
                            bitField0_ |= 0x00000001;
                            const_ = input.readUInt32();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            lt_ = input.readUInt32();
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            lte_ = input.readUInt32();
                            break;
                        }
                        case 32: {
                            bitField0_ |= 0x00000008;
                            gt_ = input.readUInt32();
                            break;
                        }
                        case 40: {
                            bitField0_ |= 0x00000010;
                            gte_ = input.readUInt32();
                            break;
                        }
                        case 48: {
                            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                                in_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            in_.add(input.readUInt32());
                            break;
                        }
                        case 50: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                                in_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                in_.add(input.readUInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 56: {
                            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                                notIn_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            notIn_.add(input.readUInt32());
                            break;
                        }
                        case 58: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                                notIn_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                notIn_.add(input.readUInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = java.util.Collections.unmodifiableList(in_);
                }
                if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = java.util.Collections.unmodifiableList(notIn_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {

            return Validate.internal_static_validate_UInt32Rules_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {

            return Validate.internal_static_validate_UInt32Rules_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Validate.UInt32Rules.class, Validate.UInt32Rules.Builder.class);
        }

        private int bitField0_;
        public static final int CONST_FIELD_NUMBER = 1;
        private int const_;

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional uint32 const = 1;</code>
         */
        public boolean hasConst() {

            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional uint32 const = 1;</code>
         */
        public int getConst() {

            return const_;
        }

        public static final int LT_FIELD_NUMBER = 2;
        private int lt_;

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional uint32 lt = 2;</code>
         */
        public boolean hasLt() {

            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional uint32 lt = 2;</code>
         */
        public int getLt() {

            return lt_;
        }

        public static final int LTE_FIELD_NUMBER = 3;
        private int lte_;

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional uint32 lte = 3;</code>
         */
        public boolean hasLte() {

            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional uint32 lte = 3;</code>
         */
        public int getLte() {

            return lte_;
        }

        public static final int GT_FIELD_NUMBER = 4;
        private int gt_;

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional uint32 gt = 4;</code>
         */
        public boolean hasGt() {

            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional uint32 gt = 4;</code>
         */
        public int getGt() {

            return gt_;
        }

        public static final int GTE_FIELD_NUMBER = 5;
        private int gte_;

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional uint32 gte = 5;</code>
         */
        public boolean hasGte() {

            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional uint32 gte = 5;</code>
         */
        public int getGte() {

            return gte_;
        }

        public static final int IN_FIELD_NUMBER = 6;
        private java.util.List<java.lang.Integer> in_;

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated uint32 in = 6;</code>
         */
        public java.util.List<java.lang.Integer>
        getInList() {

            return in_;
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated uint32 in = 6;</code>
         */
        public int getInCount() {

            return in_.size();
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated uint32 in = 6;</code>
         */
        public int getIn(int index) {

            return in_.get(index);
        }

        public static final int NOT_IN_FIELD_NUMBER = 7;
        private java.util.List<java.lang.Integer> notIn_;

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated uint32 not_in = 7;</code>
         */
        public java.util.List<java.lang.Integer>
        getNotInList() {

            return notIn_;
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated uint32 not_in = 7;</code>
         */
        public int getNotInCount() {

            return notIn_.size();
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated uint32 not_in = 7;</code>
         */
        public int getNotIn(int index) {

            return notIn_.get(index);
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {

            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {

            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeUInt32(1, const_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeUInt32(2, lt_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeUInt32(3, lte_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeUInt32(4, gt_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeUInt32(5, gte_);
            }
            for (int i = 0; i < in_.size(); i++) {
                output.writeUInt32(6, in_.get(i));
            }
            for (int i = 0; i < notIn_.size(); i++) {
                output.writeUInt32(7, notIn_.get(i));
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {

            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(1, const_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(2, lt_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(3, lte_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(4, gt_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(5, gte_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < in_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeUInt32SizeNoTag(in_.get(i));
                }
                size += dataSize;
                size += 1 * getInList().size();
            }
            {
                int dataSize = 0;
                for (int i = 0; i < notIn_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeUInt32SizeNoTag(notIn_.get(i));
                }
                size += dataSize;
                size += 1 * getNotInList().size();
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {

            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Validate.UInt32Rules)) {
                return super.equals(obj);
            }
            Validate.UInt32Rules other = (Validate.UInt32Rules) obj;

            boolean result = true;
            result = result && (hasConst() == other.hasConst());
            if (hasConst()) {
                result = result && (getConst()
                        == other.getConst());
            }
            result = result && (hasLt() == other.hasLt());
            if (hasLt()) {
                result = result && (getLt()
                        == other.getLt());
            }
            result = result && (hasLte() == other.hasLte());
            if (hasLte()) {
                result = result && (getLte()
                        == other.getLte());
            }
            result = result && (hasGt() == other.hasGt());
            if (hasGt()) {
                result = result && (getGt()
                        == other.getGt());
            }
            result = result && (hasGte() == other.hasGte());
            if (hasGte()) {
                result = result && (getGte()
                        == other.getGte());
            }
            result = result && getInList()
                    .equals(other.getInList());
            result = result && getNotInList()
                    .equals(other.getNotInList());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {

            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasConst()) {
                hash = (37 * hash) + CONST_FIELD_NUMBER;
                hash = (53 * hash) + getConst();
            }
            if (hasLt()) {
                hash = (37 * hash) + LT_FIELD_NUMBER;
                hash = (53 * hash) + getLt();
            }
            if (hasLte()) {
                hash = (37 * hash) + LTE_FIELD_NUMBER;
                hash = (53 * hash) + getLte();
            }
            if (hasGt()) {
                hash = (37 * hash) + GT_FIELD_NUMBER;
                hash = (53 * hash) + getGt();
            }
            if (hasGte()) {
                hash = (37 * hash) + GTE_FIELD_NUMBER;
                hash = (53 * hash) + getGte();
            }
            if (getInCount() > 0) {
                hash = (37 * hash) + IN_FIELD_NUMBER;
                hash = (53 * hash) + getInList().hashCode();
            }
            if (getNotInCount() > 0) {
                hash = (37 * hash) + NOT_IN_FIELD_NUMBER;
                hash = (53 * hash) + getNotInList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static Validate.UInt32Rules parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.UInt32Rules parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.UInt32Rules parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.UInt32Rules parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.UInt32Rules parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.UInt32Rules parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.UInt32Rules parseFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.UInt32Rules parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.UInt32Rules parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Validate.UInt32Rules parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.UInt32Rules parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.UInt32Rules parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {

            return newBuilder();
        }

        public static Builder newBuilder() {

            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(Validate.UInt32Rules prototype) {

            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {

            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * UInt32Rules describes the constraints applied to `uint32` values
         * </pre>
         * <p>
         * Protobuf type {@code validate.UInt32Rules}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:validate.UInt32Rules)
                Validate.UInt32RulesOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return Validate.internal_static_validate_UInt32Rules_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return Validate.internal_static_validate_UInt32Rules_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Validate.UInt32Rules.class, Validate.UInt32Rules.Builder.class);
            }

            // Construct using validate.Validate.UInt32Rules.newBuilder()
            private Builder() {

                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {

                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @java.lang.Override
            public Builder clear() {

                super.clear();
                const_ = 0;
                bitField0_ = (bitField0_ & ~0x00000001);
                lt_ = 0;
                bitField0_ = (bitField0_ & ~0x00000002);
                lte_ = 0;
                bitField0_ = (bitField0_ & ~0x00000004);
                gt_ = 0;
                bitField0_ = (bitField0_ & ~0x00000008);
                gte_ = 0;
                bitField0_ = (bitField0_ & ~0x00000010);
                in_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000020);
                notIn_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000040);
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {

                return Validate.internal_static_validate_UInt32Rules_descriptor;
            }

            @java.lang.Override
            public Validate.UInt32Rules getDefaultInstanceForType() {

                return Validate.UInt32Rules.getDefaultInstance();
            }

            @java.lang.Override
            public Validate.UInt32Rules build() {

                Validate.UInt32Rules result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public Validate.UInt32Rules buildPartial() {

                Validate.UInt32Rules result = new Validate.UInt32Rules(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.const_ = const_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.lt_ = lt_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.lte_ = lte_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.gt_ = gt_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.gte_ = gte_;
                if (((bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = java.util.Collections.unmodifiableList(in_);
                    bitField0_ = (bitField0_ & ~0x00000020);
                }
                result.in_ = in_;
                if (((bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = java.util.Collections.unmodifiableList(notIn_);
                    bitField0_ = (bitField0_ & ~0x00000040);
                }
                result.notIn_ = notIn_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {

                return (Builder) super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {

                return (Builder) super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                return (Builder) super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {

                return (Builder) super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {

                if (other instanceof Validate.UInt32Rules) {
                    return mergeFrom((Validate.UInt32Rules) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(Validate.UInt32Rules other) {

                if (other == Validate.UInt32Rules.getDefaultInstance()) return this;
                if (other.hasConst()) {
                    setConst(other.getConst());
                }
                if (other.hasLt()) {
                    setLt(other.getLt());
                }
                if (other.hasLte()) {
                    setLte(other.getLte());
                }
                if (other.hasGt()) {
                    setGt(other.getGt());
                }
                if (other.hasGte()) {
                    setGte(other.getGte());
                }
                if (!other.in_.isEmpty()) {
                    if (in_.isEmpty()) {
                        in_ = other.in_;
                        bitField0_ = (bitField0_ & ~0x00000020);
                    } else {
                        ensureInIsMutable();
                        in_.addAll(other.in_);
                    }
                    onChanged();
                }
                if (!other.notIn_.isEmpty()) {
                    if (notIn_.isEmpty()) {
                        notIn_ = other.notIn_;
                        bitField0_ = (bitField0_ & ~0x00000040);
                    } else {
                        ensureNotInIsMutable();
                        notIn_.addAll(other.notIn_);
                    }
                    onChanged();
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {

                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                Validate.UInt32Rules parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (Validate.UInt32Rules) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private int const_;

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional uint32 const = 1;</code>
             */
            public boolean hasConst() {

                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional uint32 const = 1;</code>
             */
            public int getConst() {

                return const_;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional uint32 const = 1;</code>
             */
            public Builder setConst(int value) {

                bitField0_ |= 0x00000001;
                const_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional uint32 const = 1;</code>
             */
            public Builder clearConst() {

                bitField0_ = (bitField0_ & ~0x00000001);
                const_ = 0;
                onChanged();
                return this;
            }

            private int lt_;

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional uint32 lt = 2;</code>
             */
            public boolean hasLt() {

                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional uint32 lt = 2;</code>
             */
            public int getLt() {

                return lt_;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional uint32 lt = 2;</code>
             */
            public Builder setLt(int value) {

                bitField0_ |= 0x00000002;
                lt_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional uint32 lt = 2;</code>
             */
            public Builder clearLt() {

                bitField0_ = (bitField0_ & ~0x00000002);
                lt_ = 0;
                onChanged();
                return this;
            }

            private int lte_;

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional uint32 lte = 3;</code>
             */
            public boolean hasLte() {

                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional uint32 lte = 3;</code>
             */
            public int getLte() {

                return lte_;
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional uint32 lte = 3;</code>
             */
            public Builder setLte(int value) {

                bitField0_ |= 0x00000004;
                lte_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional uint32 lte = 3;</code>
             */
            public Builder clearLte() {

                bitField0_ = (bitField0_ & ~0x00000004);
                lte_ = 0;
                onChanged();
                return this;
            }

            private int gt_;

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional uint32 gt = 4;</code>
             */
            public boolean hasGt() {

                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional uint32 gt = 4;</code>
             */
            public int getGt() {

                return gt_;
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional uint32 gt = 4;</code>
             */
            public Builder setGt(int value) {

                bitField0_ |= 0x00000008;
                gt_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional uint32 gt = 4;</code>
             */
            public Builder clearGt() {

                bitField0_ = (bitField0_ & ~0x00000008);
                gt_ = 0;
                onChanged();
                return this;
            }

            private int gte_;

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional uint32 gte = 5;</code>
             */
            public boolean hasGte() {

                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional uint32 gte = 5;</code>
             */
            public int getGte() {

                return gte_;
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional uint32 gte = 5;</code>
             */
            public Builder setGte(int value) {

                bitField0_ |= 0x00000010;
                gte_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional uint32 gte = 5;</code>
             */
            public Builder clearGte() {

                bitField0_ = (bitField0_ & ~0x00000010);
                gte_ = 0;
                onChanged();
                return this;
            }

            private java.util.List<java.lang.Integer> in_ = java.util.Collections.emptyList();

            private void ensureInIsMutable() {

                if (!((bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = new java.util.ArrayList<java.lang.Integer>(in_);
                    bitField0_ |= 0x00000020;
                }
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated uint32 in = 6;</code>
             */
            public java.util.List<java.lang.Integer>
            getInList() {

                return java.util.Collections.unmodifiableList(in_);
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated uint32 in = 6;</code>
             */
            public int getInCount() {

                return in_.size();
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated uint32 in = 6;</code>
             */
            public int getIn(int index) {

                return in_.get(index);
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated uint32 in = 6;</code>
             */
            public Builder setIn(
                    int index, int value) {

                ensureInIsMutable();
                in_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated uint32 in = 6;</code>
             */
            public Builder addIn(int value) {

                ensureInIsMutable();
                in_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated uint32 in = 6;</code>
             */
            public Builder addAllIn(
                    java.lang.Iterable<? extends java.lang.Integer> values) {

                ensureInIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, in_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated uint32 in = 6;</code>
             */
            public Builder clearIn() {

                in_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000020);
                onChanged();
                return this;
            }

            private java.util.List<java.lang.Integer> notIn_ = java.util.Collections.emptyList();

            private void ensureNotInIsMutable() {

                if (!((bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = new java.util.ArrayList<java.lang.Integer>(notIn_);
                    bitField0_ |= 0x00000040;
                }
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated uint32 not_in = 7;</code>
             */
            public java.util.List<java.lang.Integer>
            getNotInList() {

                return java.util.Collections.unmodifiableList(notIn_);
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated uint32 not_in = 7;</code>
             */
            public int getNotInCount() {

                return notIn_.size();
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated uint32 not_in = 7;</code>
             */
            public int getNotIn(int index) {

                return notIn_.get(index);
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated uint32 not_in = 7;</code>
             */
            public Builder setNotIn(
                    int index, int value) {

                ensureNotInIsMutable();
                notIn_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated uint32 not_in = 7;</code>
             */
            public Builder addNotIn(int value) {

                ensureNotInIsMutable();
                notIn_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated uint32 not_in = 7;</code>
             */
            public Builder addAllNotIn(
                    java.lang.Iterable<? extends java.lang.Integer> values) {

                ensureNotInIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, notIn_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated uint32 not_in = 7;</code>
             */
            public Builder clearNotIn() {

                notIn_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000040);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:validate.UInt32Rules)
        }

        // @@protoc_insertion_point(class_scope:validate.UInt32Rules)
        private static final Validate.UInt32Rules DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new Validate.UInt32Rules();
        }

        public static Validate.UInt32Rules getDefaultInstance() {

            return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated
        public static final com.google.protobuf.Parser<UInt32Rules>
                PARSER = new com.google.protobuf.AbstractParser<UInt32Rules>() {
            @java.lang.Override
            public UInt32Rules parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return new UInt32Rules(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<UInt32Rules> parser() {

            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<UInt32Rules> getParserForType() {

            return PARSER;
        }

        @java.lang.Override
        public Validate.UInt32Rules getDefaultInstanceForType() {

            return DEFAULT_INSTANCE;
        }

    }

    public interface UInt64RulesOrBuilder extends
            // @@protoc_insertion_point(interface_extends:validate.UInt64Rules)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional uint64 const = 1;</code>
         */
        boolean hasConst();

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional uint64 const = 1;</code>
         */
        long getConst();

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional uint64 lt = 2;</code>
         */
        boolean hasLt();

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional uint64 lt = 2;</code>
         */
        long getLt();

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional uint64 lte = 3;</code>
         */
        boolean hasLte();

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional uint64 lte = 3;</code>
         */
        long getLte();

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional uint64 gt = 4;</code>
         */
        boolean hasGt();

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional uint64 gt = 4;</code>
         */
        long getGt();

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional uint64 gte = 5;</code>
         */
        boolean hasGte();

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional uint64 gte = 5;</code>
         */
        long getGte();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated uint64 in = 6;</code>
         */
        java.util.List<java.lang.Long> getInList();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated uint64 in = 6;</code>
         */
        int getInCount();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated uint64 in = 6;</code>
         */
        long getIn(int index);

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated uint64 not_in = 7;</code>
         */
        java.util.List<java.lang.Long> getNotInList();

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated uint64 not_in = 7;</code>
         */
        int getNotInCount();

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated uint64 not_in = 7;</code>
         */
        long getNotIn(int index);
    }

    /**
     * <pre>
     * UInt64Rules describes the constraints applied to `uint64` values
     * </pre>
     * <p>
     * Protobuf type {@code validate.UInt64Rules}
     */
    public static final class UInt64Rules extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:validate.UInt64Rules)
            UInt64RulesOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use UInt64Rules.newBuilder() to construct.
        private UInt64Rules(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

            super(builder);
        }

        private UInt64Rules() {

            const_ = 0L;
            lt_ = 0L;
            lte_ = 0L;
            gt_ = 0L;
            gte_ = 0L;
            in_ = java.util.Collections.emptyList();
            notIn_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {

            return this.unknownFields;
        }

        private UInt64Rules(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8: {
                            bitField0_ |= 0x00000001;
                            const_ = input.readUInt64();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            lt_ = input.readUInt64();
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            lte_ = input.readUInt64();
                            break;
                        }
                        case 32: {
                            bitField0_ |= 0x00000008;
                            gt_ = input.readUInt64();
                            break;
                        }
                        case 40: {
                            bitField0_ |= 0x00000010;
                            gte_ = input.readUInt64();
                            break;
                        }
                        case 48: {
                            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                                in_ = new java.util.ArrayList<java.lang.Long>();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            in_.add(input.readUInt64());
                            break;
                        }
                        case 50: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                                in_ = new java.util.ArrayList<java.lang.Long>();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                in_.add(input.readUInt64());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 56: {
                            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                                notIn_ = new java.util.ArrayList<java.lang.Long>();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            notIn_.add(input.readUInt64());
                            break;
                        }
                        case 58: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                                notIn_ = new java.util.ArrayList<java.lang.Long>();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                notIn_.add(input.readUInt64());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = java.util.Collections.unmodifiableList(in_);
                }
                if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = java.util.Collections.unmodifiableList(notIn_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {

            return Validate.internal_static_validate_UInt64Rules_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {

            return Validate.internal_static_validate_UInt64Rules_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Validate.UInt64Rules.class, Validate.UInt64Rules.Builder.class);
        }

        private int bitField0_;
        public static final int CONST_FIELD_NUMBER = 1;
        private long const_;

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional uint64 const = 1;</code>
         */
        public boolean hasConst() {

            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional uint64 const = 1;</code>
         */
        public long getConst() {

            return const_;
        }

        public static final int LT_FIELD_NUMBER = 2;
        private long lt_;

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional uint64 lt = 2;</code>
         */
        public boolean hasLt() {

            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional uint64 lt = 2;</code>
         */
        public long getLt() {

            return lt_;
        }

        public static final int LTE_FIELD_NUMBER = 3;
        private long lte_;

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional uint64 lte = 3;</code>
         */
        public boolean hasLte() {

            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional uint64 lte = 3;</code>
         */
        public long getLte() {

            return lte_;
        }

        public static final int GT_FIELD_NUMBER = 4;
        private long gt_;

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional uint64 gt = 4;</code>
         */
        public boolean hasGt() {

            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional uint64 gt = 4;</code>
         */
        public long getGt() {

            return gt_;
        }

        public static final int GTE_FIELD_NUMBER = 5;
        private long gte_;

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional uint64 gte = 5;</code>
         */
        public boolean hasGte() {

            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional uint64 gte = 5;</code>
         */
        public long getGte() {

            return gte_;
        }

        public static final int IN_FIELD_NUMBER = 6;
        private java.util.List<java.lang.Long> in_;

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated uint64 in = 6;</code>
         */
        public java.util.List<java.lang.Long>
        getInList() {

            return in_;
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated uint64 in = 6;</code>
         */
        public int getInCount() {

            return in_.size();
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated uint64 in = 6;</code>
         */
        public long getIn(int index) {

            return in_.get(index);
        }

        public static final int NOT_IN_FIELD_NUMBER = 7;
        private java.util.List<java.lang.Long> notIn_;

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated uint64 not_in = 7;</code>
         */
        public java.util.List<java.lang.Long>
        getNotInList() {

            return notIn_;
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated uint64 not_in = 7;</code>
         */
        public int getNotInCount() {

            return notIn_.size();
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated uint64 not_in = 7;</code>
         */
        public long getNotIn(int index) {

            return notIn_.get(index);
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {

            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {

            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeUInt64(1, const_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeUInt64(2, lt_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeUInt64(3, lte_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeUInt64(4, gt_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeUInt64(5, gte_);
            }
            for (int i = 0; i < in_.size(); i++) {
                output.writeUInt64(6, in_.get(i));
            }
            for (int i = 0; i < notIn_.size(); i++) {
                output.writeUInt64(7, notIn_.get(i));
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {

            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(1, const_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(2, lt_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(3, lte_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(4, gt_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(5, gte_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < in_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeUInt64SizeNoTag(in_.get(i));
                }
                size += dataSize;
                size += 1 * getInList().size();
            }
            {
                int dataSize = 0;
                for (int i = 0; i < notIn_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeUInt64SizeNoTag(notIn_.get(i));
                }
                size += dataSize;
                size += 1 * getNotInList().size();
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {

            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Validate.UInt64Rules)) {
                return super.equals(obj);
            }
            Validate.UInt64Rules other = (Validate.UInt64Rules) obj;

            boolean result = true;
            result = result && (hasConst() == other.hasConst());
            if (hasConst()) {
                result = result && (getConst()
                        == other.getConst());
            }
            result = result && (hasLt() == other.hasLt());
            if (hasLt()) {
                result = result && (getLt()
                        == other.getLt());
            }
            result = result && (hasLte() == other.hasLte());
            if (hasLte()) {
                result = result && (getLte()
                        == other.getLte());
            }
            result = result && (hasGt() == other.hasGt());
            if (hasGt()) {
                result = result && (getGt()
                        == other.getGt());
            }
            result = result && (hasGte() == other.hasGte());
            if (hasGte()) {
                result = result && (getGte()
                        == other.getGte());
            }
            result = result && getInList()
                    .equals(other.getInList());
            result = result && getNotInList()
                    .equals(other.getNotInList());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {

            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasConst()) {
                hash = (37 * hash) + CONST_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getConst());
            }
            if (hasLt()) {
                hash = (37 * hash) + LT_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getLt());
            }
            if (hasLte()) {
                hash = (37 * hash) + LTE_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getLte());
            }
            if (hasGt()) {
                hash = (37 * hash) + GT_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getGt());
            }
            if (hasGte()) {
                hash = (37 * hash) + GTE_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getGte());
            }
            if (getInCount() > 0) {
                hash = (37 * hash) + IN_FIELD_NUMBER;
                hash = (53 * hash) + getInList().hashCode();
            }
            if (getNotInCount() > 0) {
                hash = (37 * hash) + NOT_IN_FIELD_NUMBER;
                hash = (53 * hash) + getNotInList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static Validate.UInt64Rules parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.UInt64Rules parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.UInt64Rules parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.UInt64Rules parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.UInt64Rules parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.UInt64Rules parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.UInt64Rules parseFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.UInt64Rules parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.UInt64Rules parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Validate.UInt64Rules parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.UInt64Rules parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.UInt64Rules parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {

            return newBuilder();
        }

        public static Builder newBuilder() {

            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(Validate.UInt64Rules prototype) {

            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {

            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * UInt64Rules describes the constraints applied to `uint64` values
         * </pre>
         * <p>
         * Protobuf type {@code validate.UInt64Rules}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:validate.UInt64Rules)
                Validate.UInt64RulesOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return Validate.internal_static_validate_UInt64Rules_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return Validate.internal_static_validate_UInt64Rules_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Validate.UInt64Rules.class, Validate.UInt64Rules.Builder.class);
            }

            // Construct using validate.Validate.UInt64Rules.newBuilder()
            private Builder() {

                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {

                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @java.lang.Override
            public Builder clear() {

                super.clear();
                const_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000001);
                lt_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000002);
                lte_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000004);
                gt_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000008);
                gte_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000010);
                in_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000020);
                notIn_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000040);
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {

                return Validate.internal_static_validate_UInt64Rules_descriptor;
            }

            @java.lang.Override
            public Validate.UInt64Rules getDefaultInstanceForType() {

                return Validate.UInt64Rules.getDefaultInstance();
            }

            @java.lang.Override
            public Validate.UInt64Rules build() {

                Validate.UInt64Rules result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public Validate.UInt64Rules buildPartial() {

                Validate.UInt64Rules result = new Validate.UInt64Rules(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.const_ = const_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.lt_ = lt_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.lte_ = lte_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.gt_ = gt_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.gte_ = gte_;
                if (((bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = java.util.Collections.unmodifiableList(in_);
                    bitField0_ = (bitField0_ & ~0x00000020);
                }
                result.in_ = in_;
                if (((bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = java.util.Collections.unmodifiableList(notIn_);
                    bitField0_ = (bitField0_ & ~0x00000040);
                }
                result.notIn_ = notIn_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {

                return (Builder) super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {

                return (Builder) super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                return (Builder) super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {

                return (Builder) super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {

                if (other instanceof Validate.UInt64Rules) {
                    return mergeFrom((Validate.UInt64Rules) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(Validate.UInt64Rules other) {

                if (other == Validate.UInt64Rules.getDefaultInstance()) return this;
                if (other.hasConst()) {
                    setConst(other.getConst());
                }
                if (other.hasLt()) {
                    setLt(other.getLt());
                }
                if (other.hasLte()) {
                    setLte(other.getLte());
                }
                if (other.hasGt()) {
                    setGt(other.getGt());
                }
                if (other.hasGte()) {
                    setGte(other.getGte());
                }
                if (!other.in_.isEmpty()) {
                    if (in_.isEmpty()) {
                        in_ = other.in_;
                        bitField0_ = (bitField0_ & ~0x00000020);
                    } else {
                        ensureInIsMutable();
                        in_.addAll(other.in_);
                    }
                    onChanged();
                }
                if (!other.notIn_.isEmpty()) {
                    if (notIn_.isEmpty()) {
                        notIn_ = other.notIn_;
                        bitField0_ = (bitField0_ & ~0x00000040);
                    } else {
                        ensureNotInIsMutable();
                        notIn_.addAll(other.notIn_);
                    }
                    onChanged();
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {

                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                Validate.UInt64Rules parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (Validate.UInt64Rules) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private long const_;

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional uint64 const = 1;</code>
             */
            public boolean hasConst() {

                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional uint64 const = 1;</code>
             */
            public long getConst() {

                return const_;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional uint64 const = 1;</code>
             */
            public Builder setConst(long value) {

                bitField0_ |= 0x00000001;
                const_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional uint64 const = 1;</code>
             */
            public Builder clearConst() {

                bitField0_ = (bitField0_ & ~0x00000001);
                const_ = 0L;
                onChanged();
                return this;
            }

            private long lt_;

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional uint64 lt = 2;</code>
             */
            public boolean hasLt() {

                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional uint64 lt = 2;</code>
             */
            public long getLt() {

                return lt_;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional uint64 lt = 2;</code>
             */
            public Builder setLt(long value) {

                bitField0_ |= 0x00000002;
                lt_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional uint64 lt = 2;</code>
             */
            public Builder clearLt() {

                bitField0_ = (bitField0_ & ~0x00000002);
                lt_ = 0L;
                onChanged();
                return this;
            }

            private long lte_;

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional uint64 lte = 3;</code>
             */
            public boolean hasLte() {

                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional uint64 lte = 3;</code>
             */
            public long getLte() {

                return lte_;
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional uint64 lte = 3;</code>
             */
            public Builder setLte(long value) {

                bitField0_ |= 0x00000004;
                lte_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional uint64 lte = 3;</code>
             */
            public Builder clearLte() {

                bitField0_ = (bitField0_ & ~0x00000004);
                lte_ = 0L;
                onChanged();
                return this;
            }

            private long gt_;

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional uint64 gt = 4;</code>
             */
            public boolean hasGt() {

                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional uint64 gt = 4;</code>
             */
            public long getGt() {

                return gt_;
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional uint64 gt = 4;</code>
             */
            public Builder setGt(long value) {

                bitField0_ |= 0x00000008;
                gt_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional uint64 gt = 4;</code>
             */
            public Builder clearGt() {

                bitField0_ = (bitField0_ & ~0x00000008);
                gt_ = 0L;
                onChanged();
                return this;
            }

            private long gte_;

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional uint64 gte = 5;</code>
             */
            public boolean hasGte() {

                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional uint64 gte = 5;</code>
             */
            public long getGte() {

                return gte_;
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional uint64 gte = 5;</code>
             */
            public Builder setGte(long value) {

                bitField0_ |= 0x00000010;
                gte_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional uint64 gte = 5;</code>
             */
            public Builder clearGte() {

                bitField0_ = (bitField0_ & ~0x00000010);
                gte_ = 0L;
                onChanged();
                return this;
            }

            private java.util.List<java.lang.Long> in_ = java.util.Collections.emptyList();

            private void ensureInIsMutable() {

                if (!((bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = new java.util.ArrayList<java.lang.Long>(in_);
                    bitField0_ |= 0x00000020;
                }
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated uint64 in = 6;</code>
             */
            public java.util.List<java.lang.Long>
            getInList() {

                return java.util.Collections.unmodifiableList(in_);
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated uint64 in = 6;</code>
             */
            public int getInCount() {

                return in_.size();
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated uint64 in = 6;</code>
             */
            public long getIn(int index) {

                return in_.get(index);
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated uint64 in = 6;</code>
             */
            public Builder setIn(
                    int index, long value) {

                ensureInIsMutable();
                in_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated uint64 in = 6;</code>
             */
            public Builder addIn(long value) {

                ensureInIsMutable();
                in_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated uint64 in = 6;</code>
             */
            public Builder addAllIn(
                    java.lang.Iterable<? extends java.lang.Long> values) {

                ensureInIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, in_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated uint64 in = 6;</code>
             */
            public Builder clearIn() {

                in_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000020);
                onChanged();
                return this;
            }

            private java.util.List<java.lang.Long> notIn_ = java.util.Collections.emptyList();

            private void ensureNotInIsMutable() {

                if (!((bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = new java.util.ArrayList<java.lang.Long>(notIn_);
                    bitField0_ |= 0x00000040;
                }
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated uint64 not_in = 7;</code>
             */
            public java.util.List<java.lang.Long>
            getNotInList() {

                return java.util.Collections.unmodifiableList(notIn_);
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated uint64 not_in = 7;</code>
             */
            public int getNotInCount() {

                return notIn_.size();
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated uint64 not_in = 7;</code>
             */
            public long getNotIn(int index) {

                return notIn_.get(index);
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated uint64 not_in = 7;</code>
             */
            public Builder setNotIn(
                    int index, long value) {

                ensureNotInIsMutable();
                notIn_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated uint64 not_in = 7;</code>
             */
            public Builder addNotIn(long value) {

                ensureNotInIsMutable();
                notIn_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated uint64 not_in = 7;</code>
             */
            public Builder addAllNotIn(
                    java.lang.Iterable<? extends java.lang.Long> values) {

                ensureNotInIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, notIn_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated uint64 not_in = 7;</code>
             */
            public Builder clearNotIn() {

                notIn_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000040);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:validate.UInt64Rules)
        }

        // @@protoc_insertion_point(class_scope:validate.UInt64Rules)
        private static final Validate.UInt64Rules DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new Validate.UInt64Rules();
        }

        public static Validate.UInt64Rules getDefaultInstance() {

            return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated
        public static final com.google.protobuf.Parser<UInt64Rules>
                PARSER = new com.google.protobuf.AbstractParser<UInt64Rules>() {
            @java.lang.Override
            public UInt64Rules parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return new UInt64Rules(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<UInt64Rules> parser() {

            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<UInt64Rules> getParserForType() {

            return PARSER;
        }

        @java.lang.Override
        public Validate.UInt64Rules getDefaultInstanceForType() {

            return DEFAULT_INSTANCE;
        }

    }

    public interface SInt32RulesOrBuilder extends
            // @@protoc_insertion_point(interface_extends:validate.SInt32Rules)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional sint32 const = 1;</code>
         */
        boolean hasConst();

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional sint32 const = 1;</code>
         */
        int getConst();

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional sint32 lt = 2;</code>
         */
        boolean hasLt();

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional sint32 lt = 2;</code>
         */
        int getLt();

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional sint32 lte = 3;</code>
         */
        boolean hasLte();

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional sint32 lte = 3;</code>
         */
        int getLte();

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional sint32 gt = 4;</code>
         */
        boolean hasGt();

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional sint32 gt = 4;</code>
         */
        int getGt();

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional sint32 gte = 5;</code>
         */
        boolean hasGte();

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional sint32 gte = 5;</code>
         */
        int getGte();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sint32 in = 6;</code>
         */
        java.util.List<java.lang.Integer> getInList();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sint32 in = 6;</code>
         */
        int getInCount();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sint32 in = 6;</code>
         */
        int getIn(int index);

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sint32 not_in = 7;</code>
         */
        java.util.List<java.lang.Integer> getNotInList();

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sint32 not_in = 7;</code>
         */
        int getNotInCount();

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sint32 not_in = 7;</code>
         */
        int getNotIn(int index);
    }

    /**
     * <pre>
     * SInt32Rules describes the constraints applied to `sint32` values
     * </pre>
     * <p>
     * Protobuf type {@code validate.SInt32Rules}
     */
    public static final class SInt32Rules extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:validate.SInt32Rules)
            SInt32RulesOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use SInt32Rules.newBuilder() to construct.
        private SInt32Rules(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

            super(builder);
        }

        private SInt32Rules() {

            const_ = 0;
            lt_ = 0;
            lte_ = 0;
            gt_ = 0;
            gte_ = 0;
            in_ = java.util.Collections.emptyList();
            notIn_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {

            return this.unknownFields;
        }

        private SInt32Rules(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8: {
                            bitField0_ |= 0x00000001;
                            const_ = input.readSInt32();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            lt_ = input.readSInt32();
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            lte_ = input.readSInt32();
                            break;
                        }
                        case 32: {
                            bitField0_ |= 0x00000008;
                            gt_ = input.readSInt32();
                            break;
                        }
                        case 40: {
                            bitField0_ |= 0x00000010;
                            gte_ = input.readSInt32();
                            break;
                        }
                        case 48: {
                            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                                in_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            in_.add(input.readSInt32());
                            break;
                        }
                        case 50: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                                in_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                in_.add(input.readSInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 56: {
                            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                                notIn_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            notIn_.add(input.readSInt32());
                            break;
                        }
                        case 58: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                                notIn_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                notIn_.add(input.readSInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = java.util.Collections.unmodifiableList(in_);
                }
                if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = java.util.Collections.unmodifiableList(notIn_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {

            return Validate.internal_static_validate_SInt32Rules_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {

            return Validate.internal_static_validate_SInt32Rules_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Validate.SInt32Rules.class, Validate.SInt32Rules.Builder.class);
        }

        private int bitField0_;
        public static final int CONST_FIELD_NUMBER = 1;
        private int const_;

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional sint32 const = 1;</code>
         */
        public boolean hasConst() {

            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional sint32 const = 1;</code>
         */
        public int getConst() {

            return const_;
        }

        public static final int LT_FIELD_NUMBER = 2;
        private int lt_;

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional sint32 lt = 2;</code>
         */
        public boolean hasLt() {

            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional sint32 lt = 2;</code>
         */
        public int getLt() {

            return lt_;
        }

        public static final int LTE_FIELD_NUMBER = 3;
        private int lte_;

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional sint32 lte = 3;</code>
         */
        public boolean hasLte() {

            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional sint32 lte = 3;</code>
         */
        public int getLte() {

            return lte_;
        }

        public static final int GT_FIELD_NUMBER = 4;
        private int gt_;

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional sint32 gt = 4;</code>
         */
        public boolean hasGt() {

            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional sint32 gt = 4;</code>
         */
        public int getGt() {

            return gt_;
        }

        public static final int GTE_FIELD_NUMBER = 5;
        private int gte_;

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional sint32 gte = 5;</code>
         */
        public boolean hasGte() {

            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional sint32 gte = 5;</code>
         */
        public int getGte() {

            return gte_;
        }

        public static final int IN_FIELD_NUMBER = 6;
        private java.util.List<java.lang.Integer> in_;

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sint32 in = 6;</code>
         */
        public java.util.List<java.lang.Integer>
        getInList() {

            return in_;
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sint32 in = 6;</code>
         */
        public int getInCount() {

            return in_.size();
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sint32 in = 6;</code>
         */
        public int getIn(int index) {

            return in_.get(index);
        }

        public static final int NOT_IN_FIELD_NUMBER = 7;
        private java.util.List<java.lang.Integer> notIn_;

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sint32 not_in = 7;</code>
         */
        public java.util.List<java.lang.Integer>
        getNotInList() {

            return notIn_;
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sint32 not_in = 7;</code>
         */
        public int getNotInCount() {

            return notIn_.size();
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sint32 not_in = 7;</code>
         */
        public int getNotIn(int index) {

            return notIn_.get(index);
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {

            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {

            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeSInt32(1, const_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeSInt32(2, lt_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeSInt32(3, lte_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeSInt32(4, gt_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeSInt32(5, gte_);
            }
            for (int i = 0; i < in_.size(); i++) {
                output.writeSInt32(6, in_.get(i));
            }
            for (int i = 0; i < notIn_.size(); i++) {
                output.writeSInt32(7, notIn_.get(i));
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {

            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSInt32Size(1, const_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSInt32Size(2, lt_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSInt32Size(3, lte_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSInt32Size(4, gt_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSInt32Size(5, gte_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < in_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeSInt32SizeNoTag(in_.get(i));
                }
                size += dataSize;
                size += 1 * getInList().size();
            }
            {
                int dataSize = 0;
                for (int i = 0; i < notIn_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeSInt32SizeNoTag(notIn_.get(i));
                }
                size += dataSize;
                size += 1 * getNotInList().size();
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {

            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Validate.SInt32Rules)) {
                return super.equals(obj);
            }
            Validate.SInt32Rules other = (Validate.SInt32Rules) obj;

            boolean result = true;
            result = result && (hasConst() == other.hasConst());
            if (hasConst()) {
                result = result && (getConst()
                        == other.getConst());
            }
            result = result && (hasLt() == other.hasLt());
            if (hasLt()) {
                result = result && (getLt()
                        == other.getLt());
            }
            result = result && (hasLte() == other.hasLte());
            if (hasLte()) {
                result = result && (getLte()
                        == other.getLte());
            }
            result = result && (hasGt() == other.hasGt());
            if (hasGt()) {
                result = result && (getGt()
                        == other.getGt());
            }
            result = result && (hasGte() == other.hasGte());
            if (hasGte()) {
                result = result && (getGte()
                        == other.getGte());
            }
            result = result && getInList()
                    .equals(other.getInList());
            result = result && getNotInList()
                    .equals(other.getNotInList());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {

            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasConst()) {
                hash = (37 * hash) + CONST_FIELD_NUMBER;
                hash = (53 * hash) + getConst();
            }
            if (hasLt()) {
                hash = (37 * hash) + LT_FIELD_NUMBER;
                hash = (53 * hash) + getLt();
            }
            if (hasLte()) {
                hash = (37 * hash) + LTE_FIELD_NUMBER;
                hash = (53 * hash) + getLte();
            }
            if (hasGt()) {
                hash = (37 * hash) + GT_FIELD_NUMBER;
                hash = (53 * hash) + getGt();
            }
            if (hasGte()) {
                hash = (37 * hash) + GTE_FIELD_NUMBER;
                hash = (53 * hash) + getGte();
            }
            if (getInCount() > 0) {
                hash = (37 * hash) + IN_FIELD_NUMBER;
                hash = (53 * hash) + getInList().hashCode();
            }
            if (getNotInCount() > 0) {
                hash = (37 * hash) + NOT_IN_FIELD_NUMBER;
                hash = (53 * hash) + getNotInList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static Validate.SInt32Rules parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.SInt32Rules parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.SInt32Rules parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.SInt32Rules parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.SInt32Rules parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.SInt32Rules parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.SInt32Rules parseFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.SInt32Rules parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.SInt32Rules parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Validate.SInt32Rules parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.SInt32Rules parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.SInt32Rules parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {

            return newBuilder();
        }

        public static Builder newBuilder() {

            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(Validate.SInt32Rules prototype) {

            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {

            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * SInt32Rules describes the constraints applied to `sint32` values
         * </pre>
         * <p>
         * Protobuf type {@code validate.SInt32Rules}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:validate.SInt32Rules)
                Validate.SInt32RulesOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return Validate.internal_static_validate_SInt32Rules_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return Validate.internal_static_validate_SInt32Rules_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Validate.SInt32Rules.class, Validate.SInt32Rules.Builder.class);
            }

            // Construct using validate.Validate.SInt32Rules.newBuilder()
            private Builder() {

                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {

                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @java.lang.Override
            public Builder clear() {

                super.clear();
                const_ = 0;
                bitField0_ = (bitField0_ & ~0x00000001);
                lt_ = 0;
                bitField0_ = (bitField0_ & ~0x00000002);
                lte_ = 0;
                bitField0_ = (bitField0_ & ~0x00000004);
                gt_ = 0;
                bitField0_ = (bitField0_ & ~0x00000008);
                gte_ = 0;
                bitField0_ = (bitField0_ & ~0x00000010);
                in_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000020);
                notIn_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000040);
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {

                return Validate.internal_static_validate_SInt32Rules_descriptor;
            }

            @java.lang.Override
            public Validate.SInt32Rules getDefaultInstanceForType() {

                return Validate.SInt32Rules.getDefaultInstance();
            }

            @java.lang.Override
            public Validate.SInt32Rules build() {

                Validate.SInt32Rules result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public Validate.SInt32Rules buildPartial() {

                Validate.SInt32Rules result = new Validate.SInt32Rules(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.const_ = const_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.lt_ = lt_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.lte_ = lte_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.gt_ = gt_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.gte_ = gte_;
                if (((bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = java.util.Collections.unmodifiableList(in_);
                    bitField0_ = (bitField0_ & ~0x00000020);
                }
                result.in_ = in_;
                if (((bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = java.util.Collections.unmodifiableList(notIn_);
                    bitField0_ = (bitField0_ & ~0x00000040);
                }
                result.notIn_ = notIn_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {

                return (Builder) super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {

                return (Builder) super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                return (Builder) super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {

                return (Builder) super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {

                if (other instanceof Validate.SInt32Rules) {
                    return mergeFrom((Validate.SInt32Rules) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(Validate.SInt32Rules other) {

                if (other == Validate.SInt32Rules.getDefaultInstance()) return this;
                if (other.hasConst()) {
                    setConst(other.getConst());
                }
                if (other.hasLt()) {
                    setLt(other.getLt());
                }
                if (other.hasLte()) {
                    setLte(other.getLte());
                }
                if (other.hasGt()) {
                    setGt(other.getGt());
                }
                if (other.hasGte()) {
                    setGte(other.getGte());
                }
                if (!other.in_.isEmpty()) {
                    if (in_.isEmpty()) {
                        in_ = other.in_;
                        bitField0_ = (bitField0_ & ~0x00000020);
                    } else {
                        ensureInIsMutable();
                        in_.addAll(other.in_);
                    }
                    onChanged();
                }
                if (!other.notIn_.isEmpty()) {
                    if (notIn_.isEmpty()) {
                        notIn_ = other.notIn_;
                        bitField0_ = (bitField0_ & ~0x00000040);
                    } else {
                        ensureNotInIsMutable();
                        notIn_.addAll(other.notIn_);
                    }
                    onChanged();
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {

                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                Validate.SInt32Rules parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (Validate.SInt32Rules) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private int const_;

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional sint32 const = 1;</code>
             */
            public boolean hasConst() {

                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional sint32 const = 1;</code>
             */
            public int getConst() {

                return const_;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional sint32 const = 1;</code>
             */
            public Builder setConst(int value) {

                bitField0_ |= 0x00000001;
                const_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional sint32 const = 1;</code>
             */
            public Builder clearConst() {

                bitField0_ = (bitField0_ & ~0x00000001);
                const_ = 0;
                onChanged();
                return this;
            }

            private int lt_;

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional sint32 lt = 2;</code>
             */
            public boolean hasLt() {

                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional sint32 lt = 2;</code>
             */
            public int getLt() {

                return lt_;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional sint32 lt = 2;</code>
             */
            public Builder setLt(int value) {

                bitField0_ |= 0x00000002;
                lt_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional sint32 lt = 2;</code>
             */
            public Builder clearLt() {

                bitField0_ = (bitField0_ & ~0x00000002);
                lt_ = 0;
                onChanged();
                return this;
            }

            private int lte_;

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional sint32 lte = 3;</code>
             */
            public boolean hasLte() {

                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional sint32 lte = 3;</code>
             */
            public int getLte() {

                return lte_;
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional sint32 lte = 3;</code>
             */
            public Builder setLte(int value) {

                bitField0_ |= 0x00000004;
                lte_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional sint32 lte = 3;</code>
             */
            public Builder clearLte() {

                bitField0_ = (bitField0_ & ~0x00000004);
                lte_ = 0;
                onChanged();
                return this;
            }

            private int gt_;

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional sint32 gt = 4;</code>
             */
            public boolean hasGt() {

                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional sint32 gt = 4;</code>
             */
            public int getGt() {

                return gt_;
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional sint32 gt = 4;</code>
             */
            public Builder setGt(int value) {

                bitField0_ |= 0x00000008;
                gt_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional sint32 gt = 4;</code>
             */
            public Builder clearGt() {

                bitField0_ = (bitField0_ & ~0x00000008);
                gt_ = 0;
                onChanged();
                return this;
            }

            private int gte_;

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional sint32 gte = 5;</code>
             */
            public boolean hasGte() {

                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional sint32 gte = 5;</code>
             */
            public int getGte() {

                return gte_;
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional sint32 gte = 5;</code>
             */
            public Builder setGte(int value) {

                bitField0_ |= 0x00000010;
                gte_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional sint32 gte = 5;</code>
             */
            public Builder clearGte() {

                bitField0_ = (bitField0_ & ~0x00000010);
                gte_ = 0;
                onChanged();
                return this;
            }

            private java.util.List<java.lang.Integer> in_ = java.util.Collections.emptyList();

            private void ensureInIsMutable() {

                if (!((bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = new java.util.ArrayList<java.lang.Integer>(in_);
                    bitField0_ |= 0x00000020;
                }
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sint32 in = 6;</code>
             */
            public java.util.List<java.lang.Integer>
            getInList() {

                return java.util.Collections.unmodifiableList(in_);
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sint32 in = 6;</code>
             */
            public int getInCount() {

                return in_.size();
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sint32 in = 6;</code>
             */
            public int getIn(int index) {

                return in_.get(index);
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sint32 in = 6;</code>
             */
            public Builder setIn(
                    int index, int value) {

                ensureInIsMutable();
                in_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sint32 in = 6;</code>
             */
            public Builder addIn(int value) {

                ensureInIsMutable();
                in_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sint32 in = 6;</code>
             */
            public Builder addAllIn(
                    java.lang.Iterable<? extends java.lang.Integer> values) {

                ensureInIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, in_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sint32 in = 6;</code>
             */
            public Builder clearIn() {

                in_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000020);
                onChanged();
                return this;
            }

            private java.util.List<java.lang.Integer> notIn_ = java.util.Collections.emptyList();

            private void ensureNotInIsMutable() {

                if (!((bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = new java.util.ArrayList<java.lang.Integer>(notIn_);
                    bitField0_ |= 0x00000040;
                }
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sint32 not_in = 7;</code>
             */
            public java.util.List<java.lang.Integer>
            getNotInList() {

                return java.util.Collections.unmodifiableList(notIn_);
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sint32 not_in = 7;</code>
             */
            public int getNotInCount() {

                return notIn_.size();
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sint32 not_in = 7;</code>
             */
            public int getNotIn(int index) {

                return notIn_.get(index);
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sint32 not_in = 7;</code>
             */
            public Builder setNotIn(
                    int index, int value) {

                ensureNotInIsMutable();
                notIn_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sint32 not_in = 7;</code>
             */
            public Builder addNotIn(int value) {

                ensureNotInIsMutable();
                notIn_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sint32 not_in = 7;</code>
             */
            public Builder addAllNotIn(
                    java.lang.Iterable<? extends java.lang.Integer> values) {

                ensureNotInIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, notIn_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sint32 not_in = 7;</code>
             */
            public Builder clearNotIn() {

                notIn_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000040);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:validate.SInt32Rules)
        }

        // @@protoc_insertion_point(class_scope:validate.SInt32Rules)
        private static final Validate.SInt32Rules DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new Validate.SInt32Rules();
        }

        public static Validate.SInt32Rules getDefaultInstance() {

            return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated
        public static final com.google.protobuf.Parser<SInt32Rules>
                PARSER = new com.google.protobuf.AbstractParser<SInt32Rules>() {
            @java.lang.Override
            public SInt32Rules parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return new SInt32Rules(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<SInt32Rules> parser() {

            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<SInt32Rules> getParserForType() {

            return PARSER;
        }

        @java.lang.Override
        public Validate.SInt32Rules getDefaultInstanceForType() {

            return DEFAULT_INSTANCE;
        }

    }

    public interface SInt64RulesOrBuilder extends
            // @@protoc_insertion_point(interface_extends:validate.SInt64Rules)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional sint64 const = 1;</code>
         */
        boolean hasConst();

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional sint64 const = 1;</code>
         */
        long getConst();

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional sint64 lt = 2;</code>
         */
        boolean hasLt();

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional sint64 lt = 2;</code>
         */
        long getLt();

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional sint64 lte = 3;</code>
         */
        boolean hasLte();

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional sint64 lte = 3;</code>
         */
        long getLte();

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional sint64 gt = 4;</code>
         */
        boolean hasGt();

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional sint64 gt = 4;</code>
         */
        long getGt();

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional sint64 gte = 5;</code>
         */
        boolean hasGte();

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional sint64 gte = 5;</code>
         */
        long getGte();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sint64 in = 6;</code>
         */
        java.util.List<java.lang.Long> getInList();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sint64 in = 6;</code>
         */
        int getInCount();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sint64 in = 6;</code>
         */
        long getIn(int index);

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sint64 not_in = 7;</code>
         */
        java.util.List<java.lang.Long> getNotInList();

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sint64 not_in = 7;</code>
         */
        int getNotInCount();

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sint64 not_in = 7;</code>
         */
        long getNotIn(int index);
    }

    /**
     * <pre>
     * SInt64Rules describes the constraints applied to `sint64` values
     * </pre>
     * <p>
     * Protobuf type {@code validate.SInt64Rules}
     */
    public static final class SInt64Rules extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:validate.SInt64Rules)
            SInt64RulesOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use SInt64Rules.newBuilder() to construct.
        private SInt64Rules(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

            super(builder);
        }

        private SInt64Rules() {

            const_ = 0L;
            lt_ = 0L;
            lte_ = 0L;
            gt_ = 0L;
            gte_ = 0L;
            in_ = java.util.Collections.emptyList();
            notIn_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {

            return this.unknownFields;
        }

        private SInt64Rules(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8: {
                            bitField0_ |= 0x00000001;
                            const_ = input.readSInt64();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            lt_ = input.readSInt64();
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            lte_ = input.readSInt64();
                            break;
                        }
                        case 32: {
                            bitField0_ |= 0x00000008;
                            gt_ = input.readSInt64();
                            break;
                        }
                        case 40: {
                            bitField0_ |= 0x00000010;
                            gte_ = input.readSInt64();
                            break;
                        }
                        case 48: {
                            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                                in_ = new java.util.ArrayList<java.lang.Long>();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            in_.add(input.readSInt64());
                            break;
                        }
                        case 50: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                                in_ = new java.util.ArrayList<java.lang.Long>();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                in_.add(input.readSInt64());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 56: {
                            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                                notIn_ = new java.util.ArrayList<java.lang.Long>();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            notIn_.add(input.readSInt64());
                            break;
                        }
                        case 58: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                                notIn_ = new java.util.ArrayList<java.lang.Long>();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                notIn_.add(input.readSInt64());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = java.util.Collections.unmodifiableList(in_);
                }
                if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = java.util.Collections.unmodifiableList(notIn_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {

            return Validate.internal_static_validate_SInt64Rules_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {

            return Validate.internal_static_validate_SInt64Rules_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Validate.SInt64Rules.class, Validate.SInt64Rules.Builder.class);
        }

        private int bitField0_;
        public static final int CONST_FIELD_NUMBER = 1;
        private long const_;

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional sint64 const = 1;</code>
         */
        public boolean hasConst() {

            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional sint64 const = 1;</code>
         */
        public long getConst() {

            return const_;
        }

        public static final int LT_FIELD_NUMBER = 2;
        private long lt_;

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional sint64 lt = 2;</code>
         */
        public boolean hasLt() {

            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional sint64 lt = 2;</code>
         */
        public long getLt() {

            return lt_;
        }

        public static final int LTE_FIELD_NUMBER = 3;
        private long lte_;

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional sint64 lte = 3;</code>
         */
        public boolean hasLte() {

            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional sint64 lte = 3;</code>
         */
        public long getLte() {

            return lte_;
        }

        public static final int GT_FIELD_NUMBER = 4;
        private long gt_;

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional sint64 gt = 4;</code>
         */
        public boolean hasGt() {

            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional sint64 gt = 4;</code>
         */
        public long getGt() {

            return gt_;
        }

        public static final int GTE_FIELD_NUMBER = 5;
        private long gte_;

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional sint64 gte = 5;</code>
         */
        public boolean hasGte() {

            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional sint64 gte = 5;</code>
         */
        public long getGte() {

            return gte_;
        }

        public static final int IN_FIELD_NUMBER = 6;
        private java.util.List<java.lang.Long> in_;

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sint64 in = 6;</code>
         */
        public java.util.List<java.lang.Long>
        getInList() {

            return in_;
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sint64 in = 6;</code>
         */
        public int getInCount() {

            return in_.size();
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sint64 in = 6;</code>
         */
        public long getIn(int index) {

            return in_.get(index);
        }

        public static final int NOT_IN_FIELD_NUMBER = 7;
        private java.util.List<java.lang.Long> notIn_;

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sint64 not_in = 7;</code>
         */
        public java.util.List<java.lang.Long>
        getNotInList() {

            return notIn_;
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sint64 not_in = 7;</code>
         */
        public int getNotInCount() {

            return notIn_.size();
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sint64 not_in = 7;</code>
         */
        public long getNotIn(int index) {

            return notIn_.get(index);
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {

            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {

            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeSInt64(1, const_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeSInt64(2, lt_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeSInt64(3, lte_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeSInt64(4, gt_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeSInt64(5, gte_);
            }
            for (int i = 0; i < in_.size(); i++) {
                output.writeSInt64(6, in_.get(i));
            }
            for (int i = 0; i < notIn_.size(); i++) {
                output.writeSInt64(7, notIn_.get(i));
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {

            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSInt64Size(1, const_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSInt64Size(2, lt_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSInt64Size(3, lte_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSInt64Size(4, gt_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSInt64Size(5, gte_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < in_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeSInt64SizeNoTag(in_.get(i));
                }
                size += dataSize;
                size += 1 * getInList().size();
            }
            {
                int dataSize = 0;
                for (int i = 0; i < notIn_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeSInt64SizeNoTag(notIn_.get(i));
                }
                size += dataSize;
                size += 1 * getNotInList().size();
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {

            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Validate.SInt64Rules)) {
                return super.equals(obj);
            }
            Validate.SInt64Rules other = (Validate.SInt64Rules) obj;

            boolean result = true;
            result = result && (hasConst() == other.hasConst());
            if (hasConst()) {
                result = result && (getConst()
                        == other.getConst());
            }
            result = result && (hasLt() == other.hasLt());
            if (hasLt()) {
                result = result && (getLt()
                        == other.getLt());
            }
            result = result && (hasLte() == other.hasLte());
            if (hasLte()) {
                result = result && (getLte()
                        == other.getLte());
            }
            result = result && (hasGt() == other.hasGt());
            if (hasGt()) {
                result = result && (getGt()
                        == other.getGt());
            }
            result = result && (hasGte() == other.hasGte());
            if (hasGte()) {
                result = result && (getGte()
                        == other.getGte());
            }
            result = result && getInList()
                    .equals(other.getInList());
            result = result && getNotInList()
                    .equals(other.getNotInList());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {

            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasConst()) {
                hash = (37 * hash) + CONST_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getConst());
            }
            if (hasLt()) {
                hash = (37 * hash) + LT_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getLt());
            }
            if (hasLte()) {
                hash = (37 * hash) + LTE_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getLte());
            }
            if (hasGt()) {
                hash = (37 * hash) + GT_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getGt());
            }
            if (hasGte()) {
                hash = (37 * hash) + GTE_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getGte());
            }
            if (getInCount() > 0) {
                hash = (37 * hash) + IN_FIELD_NUMBER;
                hash = (53 * hash) + getInList().hashCode();
            }
            if (getNotInCount() > 0) {
                hash = (37 * hash) + NOT_IN_FIELD_NUMBER;
                hash = (53 * hash) + getNotInList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static Validate.SInt64Rules parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.SInt64Rules parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.SInt64Rules parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.SInt64Rules parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.SInt64Rules parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.SInt64Rules parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.SInt64Rules parseFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.SInt64Rules parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.SInt64Rules parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Validate.SInt64Rules parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.SInt64Rules parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.SInt64Rules parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {

            return newBuilder();
        }

        public static Builder newBuilder() {

            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(Validate.SInt64Rules prototype) {

            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {

            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * SInt64Rules describes the constraints applied to `sint64` values
         * </pre>
         * <p>
         * Protobuf type {@code validate.SInt64Rules}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:validate.SInt64Rules)
                Validate.SInt64RulesOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return Validate.internal_static_validate_SInt64Rules_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return Validate.internal_static_validate_SInt64Rules_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Validate.SInt64Rules.class, Validate.SInt64Rules.Builder.class);
            }

            // Construct using validate.Validate.SInt64Rules.newBuilder()
            private Builder() {

                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {

                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @java.lang.Override
            public Builder clear() {

                super.clear();
                const_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000001);
                lt_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000002);
                lte_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000004);
                gt_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000008);
                gte_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000010);
                in_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000020);
                notIn_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000040);
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {

                return Validate.internal_static_validate_SInt64Rules_descriptor;
            }

            @java.lang.Override
            public Validate.SInt64Rules getDefaultInstanceForType() {

                return Validate.SInt64Rules.getDefaultInstance();
            }

            @java.lang.Override
            public Validate.SInt64Rules build() {

                Validate.SInt64Rules result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public Validate.SInt64Rules buildPartial() {

                Validate.SInt64Rules result = new Validate.SInt64Rules(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.const_ = const_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.lt_ = lt_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.lte_ = lte_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.gt_ = gt_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.gte_ = gte_;
                if (((bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = java.util.Collections.unmodifiableList(in_);
                    bitField0_ = (bitField0_ & ~0x00000020);
                }
                result.in_ = in_;
                if (((bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = java.util.Collections.unmodifiableList(notIn_);
                    bitField0_ = (bitField0_ & ~0x00000040);
                }
                result.notIn_ = notIn_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {

                return (Builder) super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {

                return (Builder) super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                return (Builder) super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {

                return (Builder) super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {

                if (other instanceof Validate.SInt64Rules) {
                    return mergeFrom((Validate.SInt64Rules) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(Validate.SInt64Rules other) {

                if (other == Validate.SInt64Rules.getDefaultInstance()) return this;
                if (other.hasConst()) {
                    setConst(other.getConst());
                }
                if (other.hasLt()) {
                    setLt(other.getLt());
                }
                if (other.hasLte()) {
                    setLte(other.getLte());
                }
                if (other.hasGt()) {
                    setGt(other.getGt());
                }
                if (other.hasGte()) {
                    setGte(other.getGte());
                }
                if (!other.in_.isEmpty()) {
                    if (in_.isEmpty()) {
                        in_ = other.in_;
                        bitField0_ = (bitField0_ & ~0x00000020);
                    } else {
                        ensureInIsMutable();
                        in_.addAll(other.in_);
                    }
                    onChanged();
                }
                if (!other.notIn_.isEmpty()) {
                    if (notIn_.isEmpty()) {
                        notIn_ = other.notIn_;
                        bitField0_ = (bitField0_ & ~0x00000040);
                    } else {
                        ensureNotInIsMutable();
                        notIn_.addAll(other.notIn_);
                    }
                    onChanged();
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {

                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                Validate.SInt64Rules parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (Validate.SInt64Rules) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private long const_;

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional sint64 const = 1;</code>
             */
            public boolean hasConst() {

                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional sint64 const = 1;</code>
             */
            public long getConst() {

                return const_;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional sint64 const = 1;</code>
             */
            public Builder setConst(long value) {

                bitField0_ |= 0x00000001;
                const_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional sint64 const = 1;</code>
             */
            public Builder clearConst() {

                bitField0_ = (bitField0_ & ~0x00000001);
                const_ = 0L;
                onChanged();
                return this;
            }

            private long lt_;

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional sint64 lt = 2;</code>
             */
            public boolean hasLt() {

                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional sint64 lt = 2;</code>
             */
            public long getLt() {

                return lt_;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional sint64 lt = 2;</code>
             */
            public Builder setLt(long value) {

                bitField0_ |= 0x00000002;
                lt_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional sint64 lt = 2;</code>
             */
            public Builder clearLt() {

                bitField0_ = (bitField0_ & ~0x00000002);
                lt_ = 0L;
                onChanged();
                return this;
            }

            private long lte_;

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional sint64 lte = 3;</code>
             */
            public boolean hasLte() {

                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional sint64 lte = 3;</code>
             */
            public long getLte() {

                return lte_;
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional sint64 lte = 3;</code>
             */
            public Builder setLte(long value) {

                bitField0_ |= 0x00000004;
                lte_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional sint64 lte = 3;</code>
             */
            public Builder clearLte() {

                bitField0_ = (bitField0_ & ~0x00000004);
                lte_ = 0L;
                onChanged();
                return this;
            }

            private long gt_;

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional sint64 gt = 4;</code>
             */
            public boolean hasGt() {

                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional sint64 gt = 4;</code>
             */
            public long getGt() {

                return gt_;
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional sint64 gt = 4;</code>
             */
            public Builder setGt(long value) {

                bitField0_ |= 0x00000008;
                gt_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional sint64 gt = 4;</code>
             */
            public Builder clearGt() {

                bitField0_ = (bitField0_ & ~0x00000008);
                gt_ = 0L;
                onChanged();
                return this;
            }

            private long gte_;

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional sint64 gte = 5;</code>
             */
            public boolean hasGte() {

                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional sint64 gte = 5;</code>
             */
            public long getGte() {

                return gte_;
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional sint64 gte = 5;</code>
             */
            public Builder setGte(long value) {

                bitField0_ |= 0x00000010;
                gte_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional sint64 gte = 5;</code>
             */
            public Builder clearGte() {

                bitField0_ = (bitField0_ & ~0x00000010);
                gte_ = 0L;
                onChanged();
                return this;
            }

            private java.util.List<java.lang.Long> in_ = java.util.Collections.emptyList();

            private void ensureInIsMutable() {

                if (!((bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = new java.util.ArrayList<java.lang.Long>(in_);
                    bitField0_ |= 0x00000020;
                }
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sint64 in = 6;</code>
             */
            public java.util.List<java.lang.Long>
            getInList() {

                return java.util.Collections.unmodifiableList(in_);
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sint64 in = 6;</code>
             */
            public int getInCount() {

                return in_.size();
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sint64 in = 6;</code>
             */
            public long getIn(int index) {

                return in_.get(index);
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sint64 in = 6;</code>
             */
            public Builder setIn(
                    int index, long value) {

                ensureInIsMutable();
                in_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sint64 in = 6;</code>
             */
            public Builder addIn(long value) {

                ensureInIsMutable();
                in_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sint64 in = 6;</code>
             */
            public Builder addAllIn(
                    java.lang.Iterable<? extends java.lang.Long> values) {

                ensureInIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, in_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sint64 in = 6;</code>
             */
            public Builder clearIn() {

                in_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000020);
                onChanged();
                return this;
            }

            private java.util.List<java.lang.Long> notIn_ = java.util.Collections.emptyList();

            private void ensureNotInIsMutable() {

                if (!((bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = new java.util.ArrayList<java.lang.Long>(notIn_);
                    bitField0_ |= 0x00000040;
                }
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sint64 not_in = 7;</code>
             */
            public java.util.List<java.lang.Long>
            getNotInList() {

                return java.util.Collections.unmodifiableList(notIn_);
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sint64 not_in = 7;</code>
             */
            public int getNotInCount() {

                return notIn_.size();
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sint64 not_in = 7;</code>
             */
            public long getNotIn(int index) {

                return notIn_.get(index);
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sint64 not_in = 7;</code>
             */
            public Builder setNotIn(
                    int index, long value) {

                ensureNotInIsMutable();
                notIn_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sint64 not_in = 7;</code>
             */
            public Builder addNotIn(long value) {

                ensureNotInIsMutable();
                notIn_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sint64 not_in = 7;</code>
             */
            public Builder addAllNotIn(
                    java.lang.Iterable<? extends java.lang.Long> values) {

                ensureNotInIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, notIn_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sint64 not_in = 7;</code>
             */
            public Builder clearNotIn() {

                notIn_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000040);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:validate.SInt64Rules)
        }

        // @@protoc_insertion_point(class_scope:validate.SInt64Rules)
        private static final Validate.SInt64Rules DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new Validate.SInt64Rules();
        }

        public static Validate.SInt64Rules getDefaultInstance() {

            return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated
        public static final com.google.protobuf.Parser<SInt64Rules>
                PARSER = new com.google.protobuf.AbstractParser<SInt64Rules>() {
            @java.lang.Override
            public SInt64Rules parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return new SInt64Rules(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<SInt64Rules> parser() {

            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<SInt64Rules> getParserForType() {

            return PARSER;
        }

        @java.lang.Override
        public Validate.SInt64Rules getDefaultInstanceForType() {

            return DEFAULT_INSTANCE;
        }

    }

    public interface Fixed32RulesOrBuilder extends
            // @@protoc_insertion_point(interface_extends:validate.Fixed32Rules)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional fixed32 const = 1;</code>
         */
        boolean hasConst();

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional fixed32 const = 1;</code>
         */
        int getConst();

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional fixed32 lt = 2;</code>
         */
        boolean hasLt();

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional fixed32 lt = 2;</code>
         */
        int getLt();

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional fixed32 lte = 3;</code>
         */
        boolean hasLte();

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional fixed32 lte = 3;</code>
         */
        int getLte();

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional fixed32 gt = 4;</code>
         */
        boolean hasGt();

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional fixed32 gt = 4;</code>
         */
        int getGt();

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional fixed32 gte = 5;</code>
         */
        boolean hasGte();

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional fixed32 gte = 5;</code>
         */
        int getGte();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated fixed32 in = 6;</code>
         */
        java.util.List<java.lang.Integer> getInList();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated fixed32 in = 6;</code>
         */
        int getInCount();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated fixed32 in = 6;</code>
         */
        int getIn(int index);

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated fixed32 not_in = 7;</code>
         */
        java.util.List<java.lang.Integer> getNotInList();

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated fixed32 not_in = 7;</code>
         */
        int getNotInCount();

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated fixed32 not_in = 7;</code>
         */
        int getNotIn(int index);
    }

    /**
     * <pre>
     * Fixed32Rules describes the constraints applied to `fixed32` values
     * </pre>
     * <p>
     * Protobuf type {@code validate.Fixed32Rules}
     */
    public static final class Fixed32Rules extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:validate.Fixed32Rules)
            Fixed32RulesOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use Fixed32Rules.newBuilder() to construct.
        private Fixed32Rules(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

            super(builder);
        }

        private Fixed32Rules() {

            const_ = 0;
            lt_ = 0;
            lte_ = 0;
            gt_ = 0;
            gte_ = 0;
            in_ = java.util.Collections.emptyList();
            notIn_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {

            return this.unknownFields;
        }

        private Fixed32Rules(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 13: {
                            bitField0_ |= 0x00000001;
                            const_ = input.readFixed32();
                            break;
                        }
                        case 21: {
                            bitField0_ |= 0x00000002;
                            lt_ = input.readFixed32();
                            break;
                        }
                        case 29: {
                            bitField0_ |= 0x00000004;
                            lte_ = input.readFixed32();
                            break;
                        }
                        case 37: {
                            bitField0_ |= 0x00000008;
                            gt_ = input.readFixed32();
                            break;
                        }
                        case 45: {
                            bitField0_ |= 0x00000010;
                            gte_ = input.readFixed32();
                            break;
                        }
                        case 53: {
                            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                                in_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            in_.add(input.readFixed32());
                            break;
                        }
                        case 50: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                                in_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                in_.add(input.readFixed32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 61: {
                            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                                notIn_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            notIn_.add(input.readFixed32());
                            break;
                        }
                        case 58: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                                notIn_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                notIn_.add(input.readFixed32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = java.util.Collections.unmodifiableList(in_);
                }
                if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = java.util.Collections.unmodifiableList(notIn_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {

            return Validate.internal_static_validate_Fixed32Rules_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {

            return Validate.internal_static_validate_Fixed32Rules_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Validate.Fixed32Rules.class, Validate.Fixed32Rules.Builder.class);
        }

        private int bitField0_;
        public static final int CONST_FIELD_NUMBER = 1;
        private int const_;

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional fixed32 const = 1;</code>
         */
        public boolean hasConst() {

            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional fixed32 const = 1;</code>
         */
        public int getConst() {

            return const_;
        }

        public static final int LT_FIELD_NUMBER = 2;
        private int lt_;

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional fixed32 lt = 2;</code>
         */
        public boolean hasLt() {

            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional fixed32 lt = 2;</code>
         */
        public int getLt() {

            return lt_;
        }

        public static final int LTE_FIELD_NUMBER = 3;
        private int lte_;

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional fixed32 lte = 3;</code>
         */
        public boolean hasLte() {

            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional fixed32 lte = 3;</code>
         */
        public int getLte() {

            return lte_;
        }

        public static final int GT_FIELD_NUMBER = 4;
        private int gt_;

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional fixed32 gt = 4;</code>
         */
        public boolean hasGt() {

            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional fixed32 gt = 4;</code>
         */
        public int getGt() {

            return gt_;
        }

        public static final int GTE_FIELD_NUMBER = 5;
        private int gte_;

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional fixed32 gte = 5;</code>
         */
        public boolean hasGte() {

            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional fixed32 gte = 5;</code>
         */
        public int getGte() {

            return gte_;
        }

        public static final int IN_FIELD_NUMBER = 6;
        private java.util.List<java.lang.Integer> in_;

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated fixed32 in = 6;</code>
         */
        public java.util.List<java.lang.Integer>
        getInList() {

            return in_;
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated fixed32 in = 6;</code>
         */
        public int getInCount() {

            return in_.size();
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated fixed32 in = 6;</code>
         */
        public int getIn(int index) {

            return in_.get(index);
        }

        public static final int NOT_IN_FIELD_NUMBER = 7;
        private java.util.List<java.lang.Integer> notIn_;

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated fixed32 not_in = 7;</code>
         */
        public java.util.List<java.lang.Integer>
        getNotInList() {

            return notIn_;
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated fixed32 not_in = 7;</code>
         */
        public int getNotInCount() {

            return notIn_.size();
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated fixed32 not_in = 7;</code>
         */
        public int getNotIn(int index) {

            return notIn_.get(index);
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {

            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {

            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeFixed32(1, const_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeFixed32(2, lt_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeFixed32(3, lte_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeFixed32(4, gt_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeFixed32(5, gte_);
            }
            for (int i = 0; i < in_.size(); i++) {
                output.writeFixed32(6, in_.get(i));
            }
            for (int i = 0; i < notIn_.size(); i++) {
                output.writeFixed32(7, notIn_.get(i));
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {

            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, const_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, lt_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, lte_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(4, gt_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(5, gte_);
            }
            {
                int dataSize = 0;
                dataSize = 4 * getInList().size();
                size += dataSize;
                size += 1 * getInList().size();
            }
            {
                int dataSize = 0;
                dataSize = 4 * getNotInList().size();
                size += dataSize;
                size += 1 * getNotInList().size();
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {

            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Validate.Fixed32Rules)) {
                return super.equals(obj);
            }
            Validate.Fixed32Rules other = (Validate.Fixed32Rules) obj;

            boolean result = true;
            result = result && (hasConst() == other.hasConst());
            if (hasConst()) {
                result = result && (getConst()
                        == other.getConst());
            }
            result = result && (hasLt() == other.hasLt());
            if (hasLt()) {
                result = result && (getLt()
                        == other.getLt());
            }
            result = result && (hasLte() == other.hasLte());
            if (hasLte()) {
                result = result && (getLte()
                        == other.getLte());
            }
            result = result && (hasGt() == other.hasGt());
            if (hasGt()) {
                result = result && (getGt()
                        == other.getGt());
            }
            result = result && (hasGte() == other.hasGte());
            if (hasGte()) {
                result = result && (getGte()
                        == other.getGte());
            }
            result = result && getInList()
                    .equals(other.getInList());
            result = result && getNotInList()
                    .equals(other.getNotInList());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {

            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasConst()) {
                hash = (37 * hash) + CONST_FIELD_NUMBER;
                hash = (53 * hash) + getConst();
            }
            if (hasLt()) {
                hash = (37 * hash) + LT_FIELD_NUMBER;
                hash = (53 * hash) + getLt();
            }
            if (hasLte()) {
                hash = (37 * hash) + LTE_FIELD_NUMBER;
                hash = (53 * hash) + getLte();
            }
            if (hasGt()) {
                hash = (37 * hash) + GT_FIELD_NUMBER;
                hash = (53 * hash) + getGt();
            }
            if (hasGte()) {
                hash = (37 * hash) + GTE_FIELD_NUMBER;
                hash = (53 * hash) + getGte();
            }
            if (getInCount() > 0) {
                hash = (37 * hash) + IN_FIELD_NUMBER;
                hash = (53 * hash) + getInList().hashCode();
            }
            if (getNotInCount() > 0) {
                hash = (37 * hash) + NOT_IN_FIELD_NUMBER;
                hash = (53 * hash) + getNotInList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static Validate.Fixed32Rules parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.Fixed32Rules parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.Fixed32Rules parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.Fixed32Rules parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.Fixed32Rules parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.Fixed32Rules parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.Fixed32Rules parseFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.Fixed32Rules parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.Fixed32Rules parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Validate.Fixed32Rules parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.Fixed32Rules parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.Fixed32Rules parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {

            return newBuilder();
        }

        public static Builder newBuilder() {

            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(Validate.Fixed32Rules prototype) {

            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {

            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * Fixed32Rules describes the constraints applied to `fixed32` values
         * </pre>
         * <p>
         * Protobuf type {@code validate.Fixed32Rules}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:validate.Fixed32Rules)
                Validate.Fixed32RulesOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return Validate.internal_static_validate_Fixed32Rules_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return Validate.internal_static_validate_Fixed32Rules_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Validate.Fixed32Rules.class, Validate.Fixed32Rules.Builder.class);
            }

            // Construct using validate.Validate.Fixed32Rules.newBuilder()
            private Builder() {

                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {

                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @java.lang.Override
            public Builder clear() {

                super.clear();
                const_ = 0;
                bitField0_ = (bitField0_ & ~0x00000001);
                lt_ = 0;
                bitField0_ = (bitField0_ & ~0x00000002);
                lte_ = 0;
                bitField0_ = (bitField0_ & ~0x00000004);
                gt_ = 0;
                bitField0_ = (bitField0_ & ~0x00000008);
                gte_ = 0;
                bitField0_ = (bitField0_ & ~0x00000010);
                in_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000020);
                notIn_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000040);
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {

                return Validate.internal_static_validate_Fixed32Rules_descriptor;
            }

            @java.lang.Override
            public Validate.Fixed32Rules getDefaultInstanceForType() {

                return Validate.Fixed32Rules.getDefaultInstance();
            }

            @java.lang.Override
            public Validate.Fixed32Rules build() {

                Validate.Fixed32Rules result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public Validate.Fixed32Rules buildPartial() {

                Validate.Fixed32Rules result = new Validate.Fixed32Rules(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.const_ = const_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.lt_ = lt_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.lte_ = lte_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.gt_ = gt_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.gte_ = gte_;
                if (((bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = java.util.Collections.unmodifiableList(in_);
                    bitField0_ = (bitField0_ & ~0x00000020);
                }
                result.in_ = in_;
                if (((bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = java.util.Collections.unmodifiableList(notIn_);
                    bitField0_ = (bitField0_ & ~0x00000040);
                }
                result.notIn_ = notIn_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {

                return (Builder) super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {

                return (Builder) super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                return (Builder) super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {

                return (Builder) super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {

                if (other instanceof Validate.Fixed32Rules) {
                    return mergeFrom((Validate.Fixed32Rules) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(Validate.Fixed32Rules other) {

                if (other == Validate.Fixed32Rules.getDefaultInstance()) return this;
                if (other.hasConst()) {
                    setConst(other.getConst());
                }
                if (other.hasLt()) {
                    setLt(other.getLt());
                }
                if (other.hasLte()) {
                    setLte(other.getLte());
                }
                if (other.hasGt()) {
                    setGt(other.getGt());
                }
                if (other.hasGte()) {
                    setGte(other.getGte());
                }
                if (!other.in_.isEmpty()) {
                    if (in_.isEmpty()) {
                        in_ = other.in_;
                        bitField0_ = (bitField0_ & ~0x00000020);
                    } else {
                        ensureInIsMutable();
                        in_.addAll(other.in_);
                    }
                    onChanged();
                }
                if (!other.notIn_.isEmpty()) {
                    if (notIn_.isEmpty()) {
                        notIn_ = other.notIn_;
                        bitField0_ = (bitField0_ & ~0x00000040);
                    } else {
                        ensureNotInIsMutable();
                        notIn_.addAll(other.notIn_);
                    }
                    onChanged();
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {

                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                Validate.Fixed32Rules parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (Validate.Fixed32Rules) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private int const_;

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional fixed32 const = 1;</code>
             */
            public boolean hasConst() {

                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional fixed32 const = 1;</code>
             */
            public int getConst() {

                return const_;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional fixed32 const = 1;</code>
             */
            public Builder setConst(int value) {

                bitField0_ |= 0x00000001;
                const_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional fixed32 const = 1;</code>
             */
            public Builder clearConst() {

                bitField0_ = (bitField0_ & ~0x00000001);
                const_ = 0;
                onChanged();
                return this;
            }

            private int lt_;

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional fixed32 lt = 2;</code>
             */
            public boolean hasLt() {

                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional fixed32 lt = 2;</code>
             */
            public int getLt() {

                return lt_;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional fixed32 lt = 2;</code>
             */
            public Builder setLt(int value) {

                bitField0_ |= 0x00000002;
                lt_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional fixed32 lt = 2;</code>
             */
            public Builder clearLt() {

                bitField0_ = (bitField0_ & ~0x00000002);
                lt_ = 0;
                onChanged();
                return this;
            }

            private int lte_;

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional fixed32 lte = 3;</code>
             */
            public boolean hasLte() {

                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional fixed32 lte = 3;</code>
             */
            public int getLte() {

                return lte_;
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional fixed32 lte = 3;</code>
             */
            public Builder setLte(int value) {

                bitField0_ |= 0x00000004;
                lte_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional fixed32 lte = 3;</code>
             */
            public Builder clearLte() {

                bitField0_ = (bitField0_ & ~0x00000004);
                lte_ = 0;
                onChanged();
                return this;
            }

            private int gt_;

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional fixed32 gt = 4;</code>
             */
            public boolean hasGt() {

                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional fixed32 gt = 4;</code>
             */
            public int getGt() {

                return gt_;
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional fixed32 gt = 4;</code>
             */
            public Builder setGt(int value) {

                bitField0_ |= 0x00000008;
                gt_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional fixed32 gt = 4;</code>
             */
            public Builder clearGt() {

                bitField0_ = (bitField0_ & ~0x00000008);
                gt_ = 0;
                onChanged();
                return this;
            }

            private int gte_;

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional fixed32 gte = 5;</code>
             */
            public boolean hasGte() {

                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional fixed32 gte = 5;</code>
             */
            public int getGte() {

                return gte_;
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional fixed32 gte = 5;</code>
             */
            public Builder setGte(int value) {

                bitField0_ |= 0x00000010;
                gte_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional fixed32 gte = 5;</code>
             */
            public Builder clearGte() {

                bitField0_ = (bitField0_ & ~0x00000010);
                gte_ = 0;
                onChanged();
                return this;
            }

            private java.util.List<java.lang.Integer> in_ = java.util.Collections.emptyList();

            private void ensureInIsMutable() {

                if (!((bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = new java.util.ArrayList<java.lang.Integer>(in_);
                    bitField0_ |= 0x00000020;
                }
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated fixed32 in = 6;</code>
             */
            public java.util.List<java.lang.Integer>
            getInList() {

                return java.util.Collections.unmodifiableList(in_);
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated fixed32 in = 6;</code>
             */
            public int getInCount() {

                return in_.size();
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated fixed32 in = 6;</code>
             */
            public int getIn(int index) {

                return in_.get(index);
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated fixed32 in = 6;</code>
             */
            public Builder setIn(
                    int index, int value) {

                ensureInIsMutable();
                in_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated fixed32 in = 6;</code>
             */
            public Builder addIn(int value) {

                ensureInIsMutable();
                in_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated fixed32 in = 6;</code>
             */
            public Builder addAllIn(
                    java.lang.Iterable<? extends java.lang.Integer> values) {

                ensureInIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, in_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated fixed32 in = 6;</code>
             */
            public Builder clearIn() {

                in_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000020);
                onChanged();
                return this;
            }

            private java.util.List<java.lang.Integer> notIn_ = java.util.Collections.emptyList();

            private void ensureNotInIsMutable() {

                if (!((bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = new java.util.ArrayList<java.lang.Integer>(notIn_);
                    bitField0_ |= 0x00000040;
                }
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated fixed32 not_in = 7;</code>
             */
            public java.util.List<java.lang.Integer>
            getNotInList() {

                return java.util.Collections.unmodifiableList(notIn_);
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated fixed32 not_in = 7;</code>
             */
            public int getNotInCount() {

                return notIn_.size();
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated fixed32 not_in = 7;</code>
             */
            public int getNotIn(int index) {

                return notIn_.get(index);
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated fixed32 not_in = 7;</code>
             */
            public Builder setNotIn(
                    int index, int value) {

                ensureNotInIsMutable();
                notIn_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated fixed32 not_in = 7;</code>
             */
            public Builder addNotIn(int value) {

                ensureNotInIsMutable();
                notIn_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated fixed32 not_in = 7;</code>
             */
            public Builder addAllNotIn(
                    java.lang.Iterable<? extends java.lang.Integer> values) {

                ensureNotInIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, notIn_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated fixed32 not_in = 7;</code>
             */
            public Builder clearNotIn() {

                notIn_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000040);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:validate.Fixed32Rules)
        }

        // @@protoc_insertion_point(class_scope:validate.Fixed32Rules)
        private static final Validate.Fixed32Rules DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new Validate.Fixed32Rules();
        }

        public static Validate.Fixed32Rules getDefaultInstance() {

            return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated
        public static final com.google.protobuf.Parser<Fixed32Rules>
                PARSER = new com.google.protobuf.AbstractParser<Fixed32Rules>() {
            @java.lang.Override
            public Fixed32Rules parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return new Fixed32Rules(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<Fixed32Rules> parser() {

            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Fixed32Rules> getParserForType() {

            return PARSER;
        }

        @java.lang.Override
        public Validate.Fixed32Rules getDefaultInstanceForType() {

            return DEFAULT_INSTANCE;
        }

    }

    public interface Fixed64RulesOrBuilder extends
            // @@protoc_insertion_point(interface_extends:validate.Fixed64Rules)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional fixed64 const = 1;</code>
         */
        boolean hasConst();

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional fixed64 const = 1;</code>
         */
        long getConst();

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional fixed64 lt = 2;</code>
         */
        boolean hasLt();

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional fixed64 lt = 2;</code>
         */
        long getLt();

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional fixed64 lte = 3;</code>
         */
        boolean hasLte();

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional fixed64 lte = 3;</code>
         */
        long getLte();

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional fixed64 gt = 4;</code>
         */
        boolean hasGt();

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional fixed64 gt = 4;</code>
         */
        long getGt();

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional fixed64 gte = 5;</code>
         */
        boolean hasGte();

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional fixed64 gte = 5;</code>
         */
        long getGte();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated fixed64 in = 6;</code>
         */
        java.util.List<java.lang.Long> getInList();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated fixed64 in = 6;</code>
         */
        int getInCount();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated fixed64 in = 6;</code>
         */
        long getIn(int index);

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated fixed64 not_in = 7;</code>
         */
        java.util.List<java.lang.Long> getNotInList();

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated fixed64 not_in = 7;</code>
         */
        int getNotInCount();

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated fixed64 not_in = 7;</code>
         */
        long getNotIn(int index);
    }

    /**
     * <pre>
     * Fixed64Rules describes the constraints applied to `fixed64` values
     * </pre>
     * <p>
     * Protobuf type {@code validate.Fixed64Rules}
     */
    public static final class Fixed64Rules extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:validate.Fixed64Rules)
            Fixed64RulesOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use Fixed64Rules.newBuilder() to construct.
        private Fixed64Rules(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

            super(builder);
        }

        private Fixed64Rules() {

            const_ = 0L;
            lt_ = 0L;
            lte_ = 0L;
            gt_ = 0L;
            gte_ = 0L;
            in_ = java.util.Collections.emptyList();
            notIn_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {

            return this.unknownFields;
        }

        private Fixed64Rules(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 9: {
                            bitField0_ |= 0x00000001;
                            const_ = input.readFixed64();
                            break;
                        }
                        case 17: {
                            bitField0_ |= 0x00000002;
                            lt_ = input.readFixed64();
                            break;
                        }
                        case 25: {
                            bitField0_ |= 0x00000004;
                            lte_ = input.readFixed64();
                            break;
                        }
                        case 33: {
                            bitField0_ |= 0x00000008;
                            gt_ = input.readFixed64();
                            break;
                        }
                        case 41: {
                            bitField0_ |= 0x00000010;
                            gte_ = input.readFixed64();
                            break;
                        }
                        case 49: {
                            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                                in_ = new java.util.ArrayList<java.lang.Long>();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            in_.add(input.readFixed64());
                            break;
                        }
                        case 50: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                                in_ = new java.util.ArrayList<java.lang.Long>();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                in_.add(input.readFixed64());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 57: {
                            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                                notIn_ = new java.util.ArrayList<java.lang.Long>();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            notIn_.add(input.readFixed64());
                            break;
                        }
                        case 58: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                                notIn_ = new java.util.ArrayList<java.lang.Long>();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                notIn_.add(input.readFixed64());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = java.util.Collections.unmodifiableList(in_);
                }
                if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = java.util.Collections.unmodifiableList(notIn_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {

            return Validate.internal_static_validate_Fixed64Rules_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {

            return Validate.internal_static_validate_Fixed64Rules_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Validate.Fixed64Rules.class, Validate.Fixed64Rules.Builder.class);
        }

        private int bitField0_;
        public static final int CONST_FIELD_NUMBER = 1;
        private long const_;

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional fixed64 const = 1;</code>
         */
        public boolean hasConst() {

            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional fixed64 const = 1;</code>
         */
        public long getConst() {

            return const_;
        }

        public static final int LT_FIELD_NUMBER = 2;
        private long lt_;

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional fixed64 lt = 2;</code>
         */
        public boolean hasLt() {

            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional fixed64 lt = 2;</code>
         */
        public long getLt() {

            return lt_;
        }

        public static final int LTE_FIELD_NUMBER = 3;
        private long lte_;

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional fixed64 lte = 3;</code>
         */
        public boolean hasLte() {

            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional fixed64 lte = 3;</code>
         */
        public long getLte() {

            return lte_;
        }

        public static final int GT_FIELD_NUMBER = 4;
        private long gt_;

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional fixed64 gt = 4;</code>
         */
        public boolean hasGt() {

            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional fixed64 gt = 4;</code>
         */
        public long getGt() {

            return gt_;
        }

        public static final int GTE_FIELD_NUMBER = 5;
        private long gte_;

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional fixed64 gte = 5;</code>
         */
        public boolean hasGte() {

            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional fixed64 gte = 5;</code>
         */
        public long getGte() {

            return gte_;
        }

        public static final int IN_FIELD_NUMBER = 6;
        private java.util.List<java.lang.Long> in_;

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated fixed64 in = 6;</code>
         */
        public java.util.List<java.lang.Long>
        getInList() {

            return in_;
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated fixed64 in = 6;</code>
         */
        public int getInCount() {

            return in_.size();
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated fixed64 in = 6;</code>
         */
        public long getIn(int index) {

            return in_.get(index);
        }

        public static final int NOT_IN_FIELD_NUMBER = 7;
        private java.util.List<java.lang.Long> notIn_;

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated fixed64 not_in = 7;</code>
         */
        public java.util.List<java.lang.Long>
        getNotInList() {

            return notIn_;
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated fixed64 not_in = 7;</code>
         */
        public int getNotInCount() {

            return notIn_.size();
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated fixed64 not_in = 7;</code>
         */
        public long getNotIn(int index) {

            return notIn_.get(index);
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {

            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {

            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeFixed64(1, const_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeFixed64(2, lt_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeFixed64(3, lte_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeFixed64(4, gt_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeFixed64(5, gte_);
            }
            for (int i = 0; i < in_.size(); i++) {
                output.writeFixed64(6, in_.get(i));
            }
            for (int i = 0; i < notIn_.size(); i++) {
                output.writeFixed64(7, notIn_.get(i));
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {

            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed64Size(1, const_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed64Size(2, lt_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed64Size(3, lte_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed64Size(4, gt_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed64Size(5, gte_);
            }
            {
                int dataSize = 0;
                dataSize = 8 * getInList().size();
                size += dataSize;
                size += 1 * getInList().size();
            }
            {
                int dataSize = 0;
                dataSize = 8 * getNotInList().size();
                size += dataSize;
                size += 1 * getNotInList().size();
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {

            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Validate.Fixed64Rules)) {
                return super.equals(obj);
            }
            Validate.Fixed64Rules other = (Validate.Fixed64Rules) obj;

            boolean result = true;
            result = result && (hasConst() == other.hasConst());
            if (hasConst()) {
                result = result && (getConst()
                        == other.getConst());
            }
            result = result && (hasLt() == other.hasLt());
            if (hasLt()) {
                result = result && (getLt()
                        == other.getLt());
            }
            result = result && (hasLte() == other.hasLte());
            if (hasLte()) {
                result = result && (getLte()
                        == other.getLte());
            }
            result = result && (hasGt() == other.hasGt());
            if (hasGt()) {
                result = result && (getGt()
                        == other.getGt());
            }
            result = result && (hasGte() == other.hasGte());
            if (hasGte()) {
                result = result && (getGte()
                        == other.getGte());
            }
            result = result && getInList()
                    .equals(other.getInList());
            result = result && getNotInList()
                    .equals(other.getNotInList());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {

            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasConst()) {
                hash = (37 * hash) + CONST_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getConst());
            }
            if (hasLt()) {
                hash = (37 * hash) + LT_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getLt());
            }
            if (hasLte()) {
                hash = (37 * hash) + LTE_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getLte());
            }
            if (hasGt()) {
                hash = (37 * hash) + GT_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getGt());
            }
            if (hasGte()) {
                hash = (37 * hash) + GTE_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getGte());
            }
            if (getInCount() > 0) {
                hash = (37 * hash) + IN_FIELD_NUMBER;
                hash = (53 * hash) + getInList().hashCode();
            }
            if (getNotInCount() > 0) {
                hash = (37 * hash) + NOT_IN_FIELD_NUMBER;
                hash = (53 * hash) + getNotInList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static Validate.Fixed64Rules parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.Fixed64Rules parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.Fixed64Rules parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.Fixed64Rules parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.Fixed64Rules parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.Fixed64Rules parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.Fixed64Rules parseFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.Fixed64Rules parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.Fixed64Rules parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Validate.Fixed64Rules parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.Fixed64Rules parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.Fixed64Rules parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {

            return newBuilder();
        }

        public static Builder newBuilder() {

            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(Validate.Fixed64Rules prototype) {

            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {

            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * Fixed64Rules describes the constraints applied to `fixed64` values
         * </pre>
         * <p>
         * Protobuf type {@code validate.Fixed64Rules}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:validate.Fixed64Rules)
                Validate.Fixed64RulesOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return Validate.internal_static_validate_Fixed64Rules_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return Validate.internal_static_validate_Fixed64Rules_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Validate.Fixed64Rules.class, Validate.Fixed64Rules.Builder.class);
            }

            // Construct using validate.Validate.Fixed64Rules.newBuilder()
            private Builder() {

                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {

                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @java.lang.Override
            public Builder clear() {

                super.clear();
                const_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000001);
                lt_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000002);
                lte_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000004);
                gt_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000008);
                gte_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000010);
                in_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000020);
                notIn_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000040);
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {

                return Validate.internal_static_validate_Fixed64Rules_descriptor;
            }

            @java.lang.Override
            public Validate.Fixed64Rules getDefaultInstanceForType() {

                return Validate.Fixed64Rules.getDefaultInstance();
            }

            @java.lang.Override
            public Validate.Fixed64Rules build() {

                Validate.Fixed64Rules result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public Validate.Fixed64Rules buildPartial() {

                Validate.Fixed64Rules result = new Validate.Fixed64Rules(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.const_ = const_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.lt_ = lt_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.lte_ = lte_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.gt_ = gt_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.gte_ = gte_;
                if (((bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = java.util.Collections.unmodifiableList(in_);
                    bitField0_ = (bitField0_ & ~0x00000020);
                }
                result.in_ = in_;
                if (((bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = java.util.Collections.unmodifiableList(notIn_);
                    bitField0_ = (bitField0_ & ~0x00000040);
                }
                result.notIn_ = notIn_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {

                return (Builder) super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {

                return (Builder) super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                return (Builder) super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {

                return (Builder) super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {

                if (other instanceof Validate.Fixed64Rules) {
                    return mergeFrom((Validate.Fixed64Rules) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(Validate.Fixed64Rules other) {

                if (other == Validate.Fixed64Rules.getDefaultInstance()) return this;
                if (other.hasConst()) {
                    setConst(other.getConst());
                }
                if (other.hasLt()) {
                    setLt(other.getLt());
                }
                if (other.hasLte()) {
                    setLte(other.getLte());
                }
                if (other.hasGt()) {
                    setGt(other.getGt());
                }
                if (other.hasGte()) {
                    setGte(other.getGte());
                }
                if (!other.in_.isEmpty()) {
                    if (in_.isEmpty()) {
                        in_ = other.in_;
                        bitField0_ = (bitField0_ & ~0x00000020);
                    } else {
                        ensureInIsMutable();
                        in_.addAll(other.in_);
                    }
                    onChanged();
                }
                if (!other.notIn_.isEmpty()) {
                    if (notIn_.isEmpty()) {
                        notIn_ = other.notIn_;
                        bitField0_ = (bitField0_ & ~0x00000040);
                    } else {
                        ensureNotInIsMutable();
                        notIn_.addAll(other.notIn_);
                    }
                    onChanged();
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {

                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                Validate.Fixed64Rules parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (Validate.Fixed64Rules) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private long const_;

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional fixed64 const = 1;</code>
             */
            public boolean hasConst() {

                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional fixed64 const = 1;</code>
             */
            public long getConst() {

                return const_;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional fixed64 const = 1;</code>
             */
            public Builder setConst(long value) {

                bitField0_ |= 0x00000001;
                const_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional fixed64 const = 1;</code>
             */
            public Builder clearConst() {

                bitField0_ = (bitField0_ & ~0x00000001);
                const_ = 0L;
                onChanged();
                return this;
            }

            private long lt_;

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional fixed64 lt = 2;</code>
             */
            public boolean hasLt() {

                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional fixed64 lt = 2;</code>
             */
            public long getLt() {

                return lt_;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional fixed64 lt = 2;</code>
             */
            public Builder setLt(long value) {

                bitField0_ |= 0x00000002;
                lt_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional fixed64 lt = 2;</code>
             */
            public Builder clearLt() {

                bitField0_ = (bitField0_ & ~0x00000002);
                lt_ = 0L;
                onChanged();
                return this;
            }

            private long lte_;

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional fixed64 lte = 3;</code>
             */
            public boolean hasLte() {

                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional fixed64 lte = 3;</code>
             */
            public long getLte() {

                return lte_;
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional fixed64 lte = 3;</code>
             */
            public Builder setLte(long value) {

                bitField0_ |= 0x00000004;
                lte_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional fixed64 lte = 3;</code>
             */
            public Builder clearLte() {

                bitField0_ = (bitField0_ & ~0x00000004);
                lte_ = 0L;
                onChanged();
                return this;
            }

            private long gt_;

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional fixed64 gt = 4;</code>
             */
            public boolean hasGt() {

                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional fixed64 gt = 4;</code>
             */
            public long getGt() {

                return gt_;
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional fixed64 gt = 4;</code>
             */
            public Builder setGt(long value) {

                bitField0_ |= 0x00000008;
                gt_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional fixed64 gt = 4;</code>
             */
            public Builder clearGt() {

                bitField0_ = (bitField0_ & ~0x00000008);
                gt_ = 0L;
                onChanged();
                return this;
            }

            private long gte_;

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional fixed64 gte = 5;</code>
             */
            public boolean hasGte() {

                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional fixed64 gte = 5;</code>
             */
            public long getGte() {

                return gte_;
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional fixed64 gte = 5;</code>
             */
            public Builder setGte(long value) {

                bitField0_ |= 0x00000010;
                gte_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional fixed64 gte = 5;</code>
             */
            public Builder clearGte() {

                bitField0_ = (bitField0_ & ~0x00000010);
                gte_ = 0L;
                onChanged();
                return this;
            }

            private java.util.List<java.lang.Long> in_ = java.util.Collections.emptyList();

            private void ensureInIsMutable() {

                if (!((bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = new java.util.ArrayList<java.lang.Long>(in_);
                    bitField0_ |= 0x00000020;
                }
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated fixed64 in = 6;</code>
             */
            public java.util.List<java.lang.Long>
            getInList() {

                return java.util.Collections.unmodifiableList(in_);
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated fixed64 in = 6;</code>
             */
            public int getInCount() {

                return in_.size();
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated fixed64 in = 6;</code>
             */
            public long getIn(int index) {

                return in_.get(index);
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated fixed64 in = 6;</code>
             */
            public Builder setIn(
                    int index, long value) {

                ensureInIsMutable();
                in_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated fixed64 in = 6;</code>
             */
            public Builder addIn(long value) {

                ensureInIsMutable();
                in_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated fixed64 in = 6;</code>
             */
            public Builder addAllIn(
                    java.lang.Iterable<? extends java.lang.Long> values) {

                ensureInIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, in_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated fixed64 in = 6;</code>
             */
            public Builder clearIn() {

                in_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000020);
                onChanged();
                return this;
            }

            private java.util.List<java.lang.Long> notIn_ = java.util.Collections.emptyList();

            private void ensureNotInIsMutable() {

                if (!((bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = new java.util.ArrayList<java.lang.Long>(notIn_);
                    bitField0_ |= 0x00000040;
                }
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated fixed64 not_in = 7;</code>
             */
            public java.util.List<java.lang.Long>
            getNotInList() {

                return java.util.Collections.unmodifiableList(notIn_);
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated fixed64 not_in = 7;</code>
             */
            public int getNotInCount() {

                return notIn_.size();
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated fixed64 not_in = 7;</code>
             */
            public long getNotIn(int index) {

                return notIn_.get(index);
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated fixed64 not_in = 7;</code>
             */
            public Builder setNotIn(
                    int index, long value) {

                ensureNotInIsMutable();
                notIn_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated fixed64 not_in = 7;</code>
             */
            public Builder addNotIn(long value) {

                ensureNotInIsMutable();
                notIn_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated fixed64 not_in = 7;</code>
             */
            public Builder addAllNotIn(
                    java.lang.Iterable<? extends java.lang.Long> values) {

                ensureNotInIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, notIn_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated fixed64 not_in = 7;</code>
             */
            public Builder clearNotIn() {

                notIn_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000040);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:validate.Fixed64Rules)
        }

        // @@protoc_insertion_point(class_scope:validate.Fixed64Rules)
        private static final Validate.Fixed64Rules DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new Validate.Fixed64Rules();
        }

        public static Validate.Fixed64Rules getDefaultInstance() {

            return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated
        public static final com.google.protobuf.Parser<Fixed64Rules>
                PARSER = new com.google.protobuf.AbstractParser<Fixed64Rules>() {
            @java.lang.Override
            public Fixed64Rules parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return new Fixed64Rules(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<Fixed64Rules> parser() {

            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Fixed64Rules> getParserForType() {

            return PARSER;
        }

        @java.lang.Override
        public Validate.Fixed64Rules getDefaultInstanceForType() {

            return DEFAULT_INSTANCE;
        }

    }

    public interface SFixed32RulesOrBuilder extends
            // @@protoc_insertion_point(interface_extends:validate.SFixed32Rules)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional sfixed32 const = 1;</code>
         */
        boolean hasConst();

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional sfixed32 const = 1;</code>
         */
        int getConst();

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional sfixed32 lt = 2;</code>
         */
        boolean hasLt();

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional sfixed32 lt = 2;</code>
         */
        int getLt();

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional sfixed32 lte = 3;</code>
         */
        boolean hasLte();

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional sfixed32 lte = 3;</code>
         */
        int getLte();

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional sfixed32 gt = 4;</code>
         */
        boolean hasGt();

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional sfixed32 gt = 4;</code>
         */
        int getGt();

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional sfixed32 gte = 5;</code>
         */
        boolean hasGte();

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional sfixed32 gte = 5;</code>
         */
        int getGte();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sfixed32 in = 6;</code>
         */
        java.util.List<java.lang.Integer> getInList();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sfixed32 in = 6;</code>
         */
        int getInCount();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sfixed32 in = 6;</code>
         */
        int getIn(int index);

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sfixed32 not_in = 7;</code>
         */
        java.util.List<java.lang.Integer> getNotInList();

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sfixed32 not_in = 7;</code>
         */
        int getNotInCount();

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sfixed32 not_in = 7;</code>
         */
        int getNotIn(int index);
    }

    /**
     * <pre>
     * SFixed32Rules describes the constraints applied to `sfixed32` values
     * </pre>
     * <p>
     * Protobuf type {@code validate.SFixed32Rules}
     */
    public static final class SFixed32Rules extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:validate.SFixed32Rules)
            SFixed32RulesOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use SFixed32Rules.newBuilder() to construct.
        private SFixed32Rules(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

            super(builder);
        }

        private SFixed32Rules() {

            const_ = 0;
            lt_ = 0;
            lte_ = 0;
            gt_ = 0;
            gte_ = 0;
            in_ = java.util.Collections.emptyList();
            notIn_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {

            return this.unknownFields;
        }

        private SFixed32Rules(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 13: {
                            bitField0_ |= 0x00000001;
                            const_ = input.readSFixed32();
                            break;
                        }
                        case 21: {
                            bitField0_ |= 0x00000002;
                            lt_ = input.readSFixed32();
                            break;
                        }
                        case 29: {
                            bitField0_ |= 0x00000004;
                            lte_ = input.readSFixed32();
                            break;
                        }
                        case 37: {
                            bitField0_ |= 0x00000008;
                            gt_ = input.readSFixed32();
                            break;
                        }
                        case 45: {
                            bitField0_ |= 0x00000010;
                            gte_ = input.readSFixed32();
                            break;
                        }
                        case 53: {
                            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                                in_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            in_.add(input.readSFixed32());
                            break;
                        }
                        case 50: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                                in_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                in_.add(input.readSFixed32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 61: {
                            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                                notIn_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            notIn_.add(input.readSFixed32());
                            break;
                        }
                        case 58: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                                notIn_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                notIn_.add(input.readSFixed32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = java.util.Collections.unmodifiableList(in_);
                }
                if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = java.util.Collections.unmodifiableList(notIn_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {

            return Validate.internal_static_validate_SFixed32Rules_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {

            return Validate.internal_static_validate_SFixed32Rules_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Validate.SFixed32Rules.class, Validate.SFixed32Rules.Builder.class);
        }

        private int bitField0_;
        public static final int CONST_FIELD_NUMBER = 1;
        private int const_;

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional sfixed32 const = 1;</code>
         */
        public boolean hasConst() {

            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional sfixed32 const = 1;</code>
         */
        public int getConst() {

            return const_;
        }

        public static final int LT_FIELD_NUMBER = 2;
        private int lt_;

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional sfixed32 lt = 2;</code>
         */
        public boolean hasLt() {

            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional sfixed32 lt = 2;</code>
         */
        public int getLt() {

            return lt_;
        }

        public static final int LTE_FIELD_NUMBER = 3;
        private int lte_;

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional sfixed32 lte = 3;</code>
         */
        public boolean hasLte() {

            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional sfixed32 lte = 3;</code>
         */
        public int getLte() {

            return lte_;
        }

        public static final int GT_FIELD_NUMBER = 4;
        private int gt_;

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional sfixed32 gt = 4;</code>
         */
        public boolean hasGt() {

            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional sfixed32 gt = 4;</code>
         */
        public int getGt() {

            return gt_;
        }

        public static final int GTE_FIELD_NUMBER = 5;
        private int gte_;

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional sfixed32 gte = 5;</code>
         */
        public boolean hasGte() {

            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional sfixed32 gte = 5;</code>
         */
        public int getGte() {

            return gte_;
        }

        public static final int IN_FIELD_NUMBER = 6;
        private java.util.List<java.lang.Integer> in_;

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sfixed32 in = 6;</code>
         */
        public java.util.List<java.lang.Integer>
        getInList() {

            return in_;
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sfixed32 in = 6;</code>
         */
        public int getInCount() {

            return in_.size();
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sfixed32 in = 6;</code>
         */
        public int getIn(int index) {

            return in_.get(index);
        }

        public static final int NOT_IN_FIELD_NUMBER = 7;
        private java.util.List<java.lang.Integer> notIn_;

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sfixed32 not_in = 7;</code>
         */
        public java.util.List<java.lang.Integer>
        getNotInList() {

            return notIn_;
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sfixed32 not_in = 7;</code>
         */
        public int getNotInCount() {

            return notIn_.size();
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sfixed32 not_in = 7;</code>
         */
        public int getNotIn(int index) {

            return notIn_.get(index);
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {

            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {

            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeSFixed32(1, const_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeSFixed32(2, lt_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeSFixed32(3, lte_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeSFixed32(4, gt_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeSFixed32(5, gte_);
            }
            for (int i = 0; i < in_.size(); i++) {
                output.writeSFixed32(6, in_.get(i));
            }
            for (int i = 0; i < notIn_.size(); i++) {
                output.writeSFixed32(7, notIn_.get(i));
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {

            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSFixed32Size(1, const_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSFixed32Size(2, lt_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSFixed32Size(3, lte_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSFixed32Size(4, gt_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSFixed32Size(5, gte_);
            }
            {
                int dataSize = 0;
                dataSize = 4 * getInList().size();
                size += dataSize;
                size += 1 * getInList().size();
            }
            {
                int dataSize = 0;
                dataSize = 4 * getNotInList().size();
                size += dataSize;
                size += 1 * getNotInList().size();
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {

            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Validate.SFixed32Rules)) {
                return super.equals(obj);
            }
            Validate.SFixed32Rules other = (Validate.SFixed32Rules) obj;

            boolean result = true;
            result = result && (hasConst() == other.hasConst());
            if (hasConst()) {
                result = result && (getConst()
                        == other.getConst());
            }
            result = result && (hasLt() == other.hasLt());
            if (hasLt()) {
                result = result && (getLt()
                        == other.getLt());
            }
            result = result && (hasLte() == other.hasLte());
            if (hasLte()) {
                result = result && (getLte()
                        == other.getLte());
            }
            result = result && (hasGt() == other.hasGt());
            if (hasGt()) {
                result = result && (getGt()
                        == other.getGt());
            }
            result = result && (hasGte() == other.hasGte());
            if (hasGte()) {
                result = result && (getGte()
                        == other.getGte());
            }
            result = result && getInList()
                    .equals(other.getInList());
            result = result && getNotInList()
                    .equals(other.getNotInList());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {

            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasConst()) {
                hash = (37 * hash) + CONST_FIELD_NUMBER;
                hash = (53 * hash) + getConst();
            }
            if (hasLt()) {
                hash = (37 * hash) + LT_FIELD_NUMBER;
                hash = (53 * hash) + getLt();
            }
            if (hasLte()) {
                hash = (37 * hash) + LTE_FIELD_NUMBER;
                hash = (53 * hash) + getLte();
            }
            if (hasGt()) {
                hash = (37 * hash) + GT_FIELD_NUMBER;
                hash = (53 * hash) + getGt();
            }
            if (hasGte()) {
                hash = (37 * hash) + GTE_FIELD_NUMBER;
                hash = (53 * hash) + getGte();
            }
            if (getInCount() > 0) {
                hash = (37 * hash) + IN_FIELD_NUMBER;
                hash = (53 * hash) + getInList().hashCode();
            }
            if (getNotInCount() > 0) {
                hash = (37 * hash) + NOT_IN_FIELD_NUMBER;
                hash = (53 * hash) + getNotInList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static Validate.SFixed32Rules parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.SFixed32Rules parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.SFixed32Rules parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.SFixed32Rules parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.SFixed32Rules parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.SFixed32Rules parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.SFixed32Rules parseFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.SFixed32Rules parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.SFixed32Rules parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Validate.SFixed32Rules parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.SFixed32Rules parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.SFixed32Rules parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {

            return newBuilder();
        }

        public static Builder newBuilder() {

            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(Validate.SFixed32Rules prototype) {

            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {

            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * SFixed32Rules describes the constraints applied to `sfixed32` values
         * </pre>
         * <p>
         * Protobuf type {@code validate.SFixed32Rules}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:validate.SFixed32Rules)
                Validate.SFixed32RulesOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return Validate.internal_static_validate_SFixed32Rules_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return Validate.internal_static_validate_SFixed32Rules_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Validate.SFixed32Rules.class, Validate.SFixed32Rules.Builder.class);
            }

            // Construct using validate.Validate.SFixed32Rules.newBuilder()
            private Builder() {

                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {

                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @java.lang.Override
            public Builder clear() {

                super.clear();
                const_ = 0;
                bitField0_ = (bitField0_ & ~0x00000001);
                lt_ = 0;
                bitField0_ = (bitField0_ & ~0x00000002);
                lte_ = 0;
                bitField0_ = (bitField0_ & ~0x00000004);
                gt_ = 0;
                bitField0_ = (bitField0_ & ~0x00000008);
                gte_ = 0;
                bitField0_ = (bitField0_ & ~0x00000010);
                in_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000020);
                notIn_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000040);
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {

                return Validate.internal_static_validate_SFixed32Rules_descriptor;
            }

            @java.lang.Override
            public Validate.SFixed32Rules getDefaultInstanceForType() {

                return Validate.SFixed32Rules.getDefaultInstance();
            }

            @java.lang.Override
            public Validate.SFixed32Rules build() {

                Validate.SFixed32Rules result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public Validate.SFixed32Rules buildPartial() {

                Validate.SFixed32Rules result = new Validate.SFixed32Rules(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.const_ = const_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.lt_ = lt_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.lte_ = lte_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.gt_ = gt_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.gte_ = gte_;
                if (((bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = java.util.Collections.unmodifiableList(in_);
                    bitField0_ = (bitField0_ & ~0x00000020);
                }
                result.in_ = in_;
                if (((bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = java.util.Collections.unmodifiableList(notIn_);
                    bitField0_ = (bitField0_ & ~0x00000040);
                }
                result.notIn_ = notIn_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {

                return (Builder) super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {

                return (Builder) super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                return (Builder) super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {

                return (Builder) super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {

                if (other instanceof Validate.SFixed32Rules) {
                    return mergeFrom((Validate.SFixed32Rules) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(Validate.SFixed32Rules other) {

                if (other == Validate.SFixed32Rules.getDefaultInstance()) return this;
                if (other.hasConst()) {
                    setConst(other.getConst());
                }
                if (other.hasLt()) {
                    setLt(other.getLt());
                }
                if (other.hasLte()) {
                    setLte(other.getLte());
                }
                if (other.hasGt()) {
                    setGt(other.getGt());
                }
                if (other.hasGte()) {
                    setGte(other.getGte());
                }
                if (!other.in_.isEmpty()) {
                    if (in_.isEmpty()) {
                        in_ = other.in_;
                        bitField0_ = (bitField0_ & ~0x00000020);
                    } else {
                        ensureInIsMutable();
                        in_.addAll(other.in_);
                    }
                    onChanged();
                }
                if (!other.notIn_.isEmpty()) {
                    if (notIn_.isEmpty()) {
                        notIn_ = other.notIn_;
                        bitField0_ = (bitField0_ & ~0x00000040);
                    } else {
                        ensureNotInIsMutable();
                        notIn_.addAll(other.notIn_);
                    }
                    onChanged();
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {

                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                Validate.SFixed32Rules parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (Validate.SFixed32Rules) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private int const_;

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional sfixed32 const = 1;</code>
             */
            public boolean hasConst() {

                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional sfixed32 const = 1;</code>
             */
            public int getConst() {

                return const_;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional sfixed32 const = 1;</code>
             */
            public Builder setConst(int value) {

                bitField0_ |= 0x00000001;
                const_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional sfixed32 const = 1;</code>
             */
            public Builder clearConst() {

                bitField0_ = (bitField0_ & ~0x00000001);
                const_ = 0;
                onChanged();
                return this;
            }

            private int lt_;

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional sfixed32 lt = 2;</code>
             */
            public boolean hasLt() {

                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional sfixed32 lt = 2;</code>
             */
            public int getLt() {

                return lt_;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional sfixed32 lt = 2;</code>
             */
            public Builder setLt(int value) {

                bitField0_ |= 0x00000002;
                lt_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional sfixed32 lt = 2;</code>
             */
            public Builder clearLt() {

                bitField0_ = (bitField0_ & ~0x00000002);
                lt_ = 0;
                onChanged();
                return this;
            }

            private int lte_;

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional sfixed32 lte = 3;</code>
             */
            public boolean hasLte() {

                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional sfixed32 lte = 3;</code>
             */
            public int getLte() {

                return lte_;
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional sfixed32 lte = 3;</code>
             */
            public Builder setLte(int value) {

                bitField0_ |= 0x00000004;
                lte_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional sfixed32 lte = 3;</code>
             */
            public Builder clearLte() {

                bitField0_ = (bitField0_ & ~0x00000004);
                lte_ = 0;
                onChanged();
                return this;
            }

            private int gt_;

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional sfixed32 gt = 4;</code>
             */
            public boolean hasGt() {

                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional sfixed32 gt = 4;</code>
             */
            public int getGt() {

                return gt_;
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional sfixed32 gt = 4;</code>
             */
            public Builder setGt(int value) {

                bitField0_ |= 0x00000008;
                gt_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional sfixed32 gt = 4;</code>
             */
            public Builder clearGt() {

                bitField0_ = (bitField0_ & ~0x00000008);
                gt_ = 0;
                onChanged();
                return this;
            }

            private int gte_;

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional sfixed32 gte = 5;</code>
             */
            public boolean hasGte() {

                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional sfixed32 gte = 5;</code>
             */
            public int getGte() {

                return gte_;
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional sfixed32 gte = 5;</code>
             */
            public Builder setGte(int value) {

                bitField0_ |= 0x00000010;
                gte_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional sfixed32 gte = 5;</code>
             */
            public Builder clearGte() {

                bitField0_ = (bitField0_ & ~0x00000010);
                gte_ = 0;
                onChanged();
                return this;
            }

            private java.util.List<java.lang.Integer> in_ = java.util.Collections.emptyList();

            private void ensureInIsMutable() {

                if (!((bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = new java.util.ArrayList<java.lang.Integer>(in_);
                    bitField0_ |= 0x00000020;
                }
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sfixed32 in = 6;</code>
             */
            public java.util.List<java.lang.Integer>
            getInList() {

                return java.util.Collections.unmodifiableList(in_);
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sfixed32 in = 6;</code>
             */
            public int getInCount() {

                return in_.size();
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sfixed32 in = 6;</code>
             */
            public int getIn(int index) {

                return in_.get(index);
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sfixed32 in = 6;</code>
             */
            public Builder setIn(
                    int index, int value) {

                ensureInIsMutable();
                in_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sfixed32 in = 6;</code>
             */
            public Builder addIn(int value) {

                ensureInIsMutable();
                in_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sfixed32 in = 6;</code>
             */
            public Builder addAllIn(
                    java.lang.Iterable<? extends java.lang.Integer> values) {

                ensureInIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, in_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sfixed32 in = 6;</code>
             */
            public Builder clearIn() {

                in_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000020);
                onChanged();
                return this;
            }

            private java.util.List<java.lang.Integer> notIn_ = java.util.Collections.emptyList();

            private void ensureNotInIsMutable() {

                if (!((bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = new java.util.ArrayList<java.lang.Integer>(notIn_);
                    bitField0_ |= 0x00000040;
                }
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sfixed32 not_in = 7;</code>
             */
            public java.util.List<java.lang.Integer>
            getNotInList() {

                return java.util.Collections.unmodifiableList(notIn_);
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sfixed32 not_in = 7;</code>
             */
            public int getNotInCount() {

                return notIn_.size();
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sfixed32 not_in = 7;</code>
             */
            public int getNotIn(int index) {

                return notIn_.get(index);
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sfixed32 not_in = 7;</code>
             */
            public Builder setNotIn(
                    int index, int value) {

                ensureNotInIsMutable();
                notIn_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sfixed32 not_in = 7;</code>
             */
            public Builder addNotIn(int value) {

                ensureNotInIsMutable();
                notIn_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sfixed32 not_in = 7;</code>
             */
            public Builder addAllNotIn(
                    java.lang.Iterable<? extends java.lang.Integer> values) {

                ensureNotInIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, notIn_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sfixed32 not_in = 7;</code>
             */
            public Builder clearNotIn() {

                notIn_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000040);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:validate.SFixed32Rules)
        }

        // @@protoc_insertion_point(class_scope:validate.SFixed32Rules)
        private static final Validate.SFixed32Rules DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new Validate.SFixed32Rules();
        }

        public static Validate.SFixed32Rules getDefaultInstance() {

            return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated
        public static final com.google.protobuf.Parser<SFixed32Rules>
                PARSER = new com.google.protobuf.AbstractParser<SFixed32Rules>() {
            @java.lang.Override
            public SFixed32Rules parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return new SFixed32Rules(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<SFixed32Rules> parser() {

            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<SFixed32Rules> getParserForType() {

            return PARSER;
        }

        @java.lang.Override
        public Validate.SFixed32Rules getDefaultInstanceForType() {

            return DEFAULT_INSTANCE;
        }

    }

    public interface SFixed64RulesOrBuilder extends
            // @@protoc_insertion_point(interface_extends:validate.SFixed64Rules)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional sfixed64 const = 1;</code>
         */
        boolean hasConst();

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional sfixed64 const = 1;</code>
         */
        long getConst();

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional sfixed64 lt = 2;</code>
         */
        boolean hasLt();

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional sfixed64 lt = 2;</code>
         */
        long getLt();

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional sfixed64 lte = 3;</code>
         */
        boolean hasLte();

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional sfixed64 lte = 3;</code>
         */
        long getLte();

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional sfixed64 gt = 4;</code>
         */
        boolean hasGt();

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional sfixed64 gt = 4;</code>
         */
        long getGt();

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional sfixed64 gte = 5;</code>
         */
        boolean hasGte();

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional sfixed64 gte = 5;</code>
         */
        long getGte();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sfixed64 in = 6;</code>
         */
        java.util.List<java.lang.Long> getInList();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sfixed64 in = 6;</code>
         */
        int getInCount();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sfixed64 in = 6;</code>
         */
        long getIn(int index);

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sfixed64 not_in = 7;</code>
         */
        java.util.List<java.lang.Long> getNotInList();

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sfixed64 not_in = 7;</code>
         */
        int getNotInCount();

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sfixed64 not_in = 7;</code>
         */
        long getNotIn(int index);
    }

    /**
     * <pre>
     * SFixed64Rules describes the constraints applied to `sfixed64` values
     * </pre>
     * <p>
     * Protobuf type {@code validate.SFixed64Rules}
     */
    public static final class SFixed64Rules extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:validate.SFixed64Rules)
            SFixed64RulesOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use SFixed64Rules.newBuilder() to construct.
        private SFixed64Rules(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

            super(builder);
        }

        private SFixed64Rules() {

            const_ = 0L;
            lt_ = 0L;
            lte_ = 0L;
            gt_ = 0L;
            gte_ = 0L;
            in_ = java.util.Collections.emptyList();
            notIn_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {

            return this.unknownFields;
        }

        private SFixed64Rules(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 9: {
                            bitField0_ |= 0x00000001;
                            const_ = input.readSFixed64();
                            break;
                        }
                        case 17: {
                            bitField0_ |= 0x00000002;
                            lt_ = input.readSFixed64();
                            break;
                        }
                        case 25: {
                            bitField0_ |= 0x00000004;
                            lte_ = input.readSFixed64();
                            break;
                        }
                        case 33: {
                            bitField0_ |= 0x00000008;
                            gt_ = input.readSFixed64();
                            break;
                        }
                        case 41: {
                            bitField0_ |= 0x00000010;
                            gte_ = input.readSFixed64();
                            break;
                        }
                        case 49: {
                            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                                in_ = new java.util.ArrayList<java.lang.Long>();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            in_.add(input.readSFixed64());
                            break;
                        }
                        case 50: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                                in_ = new java.util.ArrayList<java.lang.Long>();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                in_.add(input.readSFixed64());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 57: {
                            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                                notIn_ = new java.util.ArrayList<java.lang.Long>();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            notIn_.add(input.readSFixed64());
                            break;
                        }
                        case 58: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                                notIn_ = new java.util.ArrayList<java.lang.Long>();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                notIn_.add(input.readSFixed64());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = java.util.Collections.unmodifiableList(in_);
                }
                if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = java.util.Collections.unmodifiableList(notIn_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {

            return Validate.internal_static_validate_SFixed64Rules_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {

            return Validate.internal_static_validate_SFixed64Rules_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Validate.SFixed64Rules.class, Validate.SFixed64Rules.Builder.class);
        }

        private int bitField0_;
        public static final int CONST_FIELD_NUMBER = 1;
        private long const_;

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional sfixed64 const = 1;</code>
         */
        public boolean hasConst() {

            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional sfixed64 const = 1;</code>
         */
        public long getConst() {

            return const_;
        }

        public static final int LT_FIELD_NUMBER = 2;
        private long lt_;

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional sfixed64 lt = 2;</code>
         */
        public boolean hasLt() {

            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional sfixed64 lt = 2;</code>
         */
        public long getLt() {

            return lt_;
        }

        public static final int LTE_FIELD_NUMBER = 3;
        private long lte_;

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional sfixed64 lte = 3;</code>
         */
        public boolean hasLte() {

            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <pre>
         * Lte specifies that this field must be less than or equal to the
         * specified value, inclusive
         * </pre>
         *
         * <code>optional sfixed64 lte = 3;</code>
         */
        public long getLte() {

            return lte_;
        }

        public static final int GT_FIELD_NUMBER = 4;
        private long gt_;

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional sfixed64 gt = 4;</code>
         */
        public boolean hasGt() {

            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
         * range is reversed.
         * </pre>
         *
         * <code>optional sfixed64 gt = 4;</code>
         */
        public long getGt() {

            return gt_;
        }

        public static final int GTE_FIELD_NUMBER = 5;
        private long gte_;

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional sfixed64 gte = 5;</code>
         */
        public boolean hasGte() {

            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <pre>
         * Gte specifies that this field must be greater than or equal to the
         * specified value, inclusive. If the value of Gte is larger than a
         * specified Lt or Lte, the range is reversed.
         * </pre>
         *
         * <code>optional sfixed64 gte = 5;</code>
         */
        public long getGte() {

            return gte_;
        }

        public static final int IN_FIELD_NUMBER = 6;
        private java.util.List<java.lang.Long> in_;

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sfixed64 in = 6;</code>
         */
        public java.util.List<java.lang.Long>
        getInList() {

            return in_;
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sfixed64 in = 6;</code>
         */
        public int getInCount() {

            return in_.size();
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sfixed64 in = 6;</code>
         */
        public long getIn(int index) {

            return in_.get(index);
        }

        public static final int NOT_IN_FIELD_NUMBER = 7;
        private java.util.List<java.lang.Long> notIn_;

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sfixed64 not_in = 7;</code>
         */
        public java.util.List<java.lang.Long>
        getNotInList() {

            return notIn_;
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sfixed64 not_in = 7;</code>
         */
        public int getNotInCount() {

            return notIn_.size();
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated sfixed64 not_in = 7;</code>
         */
        public long getNotIn(int index) {

            return notIn_.get(index);
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {

            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {

            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeSFixed64(1, const_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeSFixed64(2, lt_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeSFixed64(3, lte_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeSFixed64(4, gt_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeSFixed64(5, gte_);
            }
            for (int i = 0; i < in_.size(); i++) {
                output.writeSFixed64(6, in_.get(i));
            }
            for (int i = 0; i < notIn_.size(); i++) {
                output.writeSFixed64(7, notIn_.get(i));
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {

            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSFixed64Size(1, const_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSFixed64Size(2, lt_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSFixed64Size(3, lte_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSFixed64Size(4, gt_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSFixed64Size(5, gte_);
            }
            {
                int dataSize = 0;
                dataSize = 8 * getInList().size();
                size += dataSize;
                size += 1 * getInList().size();
            }
            {
                int dataSize = 0;
                dataSize = 8 * getNotInList().size();
                size += dataSize;
                size += 1 * getNotInList().size();
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {

            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Validate.SFixed64Rules)) {
                return super.equals(obj);
            }
            Validate.SFixed64Rules other = (Validate.SFixed64Rules) obj;

            boolean result = true;
            result = result && (hasConst() == other.hasConst());
            if (hasConst()) {
                result = result && (getConst()
                        == other.getConst());
            }
            result = result && (hasLt() == other.hasLt());
            if (hasLt()) {
                result = result && (getLt()
                        == other.getLt());
            }
            result = result && (hasLte() == other.hasLte());
            if (hasLte()) {
                result = result && (getLte()
                        == other.getLte());
            }
            result = result && (hasGt() == other.hasGt());
            if (hasGt()) {
                result = result && (getGt()
                        == other.getGt());
            }
            result = result && (hasGte() == other.hasGte());
            if (hasGte()) {
                result = result && (getGte()
                        == other.getGte());
            }
            result = result && getInList()
                    .equals(other.getInList());
            result = result && getNotInList()
                    .equals(other.getNotInList());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {

            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasConst()) {
                hash = (37 * hash) + CONST_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getConst());
            }
            if (hasLt()) {
                hash = (37 * hash) + LT_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getLt());
            }
            if (hasLte()) {
                hash = (37 * hash) + LTE_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getLte());
            }
            if (hasGt()) {
                hash = (37 * hash) + GT_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getGt());
            }
            if (hasGte()) {
                hash = (37 * hash) + GTE_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getGte());
            }
            if (getInCount() > 0) {
                hash = (37 * hash) + IN_FIELD_NUMBER;
                hash = (53 * hash) + getInList().hashCode();
            }
            if (getNotInCount() > 0) {
                hash = (37 * hash) + NOT_IN_FIELD_NUMBER;
                hash = (53 * hash) + getNotInList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static Validate.SFixed64Rules parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.SFixed64Rules parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.SFixed64Rules parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.SFixed64Rules parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.SFixed64Rules parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.SFixed64Rules parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.SFixed64Rules parseFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.SFixed64Rules parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.SFixed64Rules parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Validate.SFixed64Rules parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.SFixed64Rules parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.SFixed64Rules parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {

            return newBuilder();
        }

        public static Builder newBuilder() {

            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(Validate.SFixed64Rules prototype) {

            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {

            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * SFixed64Rules describes the constraints applied to `sfixed64` values
         * </pre>
         * <p>
         * Protobuf type {@code validate.SFixed64Rules}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:validate.SFixed64Rules)
                Validate.SFixed64RulesOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return Validate.internal_static_validate_SFixed64Rules_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return Validate.internal_static_validate_SFixed64Rules_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Validate.SFixed64Rules.class, Validate.SFixed64Rules.Builder.class);
            }

            // Construct using validate.Validate.SFixed64Rules.newBuilder()
            private Builder() {

                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {

                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @java.lang.Override
            public Builder clear() {

                super.clear();
                const_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000001);
                lt_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000002);
                lte_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000004);
                gt_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000008);
                gte_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000010);
                in_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000020);
                notIn_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000040);
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {

                return Validate.internal_static_validate_SFixed64Rules_descriptor;
            }

            @java.lang.Override
            public Validate.SFixed64Rules getDefaultInstanceForType() {

                return Validate.SFixed64Rules.getDefaultInstance();
            }

            @java.lang.Override
            public Validate.SFixed64Rules build() {

                Validate.SFixed64Rules result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public Validate.SFixed64Rules buildPartial() {

                Validate.SFixed64Rules result = new Validate.SFixed64Rules(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.const_ = const_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.lt_ = lt_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.lte_ = lte_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.gt_ = gt_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.gte_ = gte_;
                if (((bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = java.util.Collections.unmodifiableList(in_);
                    bitField0_ = (bitField0_ & ~0x00000020);
                }
                result.in_ = in_;
                if (((bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = java.util.Collections.unmodifiableList(notIn_);
                    bitField0_ = (bitField0_ & ~0x00000040);
                }
                result.notIn_ = notIn_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {

                return (Builder) super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {

                return (Builder) super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                return (Builder) super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {

                return (Builder) super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {

                if (other instanceof Validate.SFixed64Rules) {
                    return mergeFrom((Validate.SFixed64Rules) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(Validate.SFixed64Rules other) {

                if (other == Validate.SFixed64Rules.getDefaultInstance()) return this;
                if (other.hasConst()) {
                    setConst(other.getConst());
                }
                if (other.hasLt()) {
                    setLt(other.getLt());
                }
                if (other.hasLte()) {
                    setLte(other.getLte());
                }
                if (other.hasGt()) {
                    setGt(other.getGt());
                }
                if (other.hasGte()) {
                    setGte(other.getGte());
                }
                if (!other.in_.isEmpty()) {
                    if (in_.isEmpty()) {
                        in_ = other.in_;
                        bitField0_ = (bitField0_ & ~0x00000020);
                    } else {
                        ensureInIsMutable();
                        in_.addAll(other.in_);
                    }
                    onChanged();
                }
                if (!other.notIn_.isEmpty()) {
                    if (notIn_.isEmpty()) {
                        notIn_ = other.notIn_;
                        bitField0_ = (bitField0_ & ~0x00000040);
                    } else {
                        ensureNotInIsMutable();
                        notIn_.addAll(other.notIn_);
                    }
                    onChanged();
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {

                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                Validate.SFixed64Rules parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (Validate.SFixed64Rules) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private long const_;

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional sfixed64 const = 1;</code>
             */
            public boolean hasConst() {

                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional sfixed64 const = 1;</code>
             */
            public long getConst() {

                return const_;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional sfixed64 const = 1;</code>
             */
            public Builder setConst(long value) {

                bitField0_ |= 0x00000001;
                const_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional sfixed64 const = 1;</code>
             */
            public Builder clearConst() {

                bitField0_ = (bitField0_ & ~0x00000001);
                const_ = 0L;
                onChanged();
                return this;
            }

            private long lt_;

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional sfixed64 lt = 2;</code>
             */
            public boolean hasLt() {

                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional sfixed64 lt = 2;</code>
             */
            public long getLt() {

                return lt_;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional sfixed64 lt = 2;</code>
             */
            public Builder setLt(long value) {

                bitField0_ |= 0x00000002;
                lt_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional sfixed64 lt = 2;</code>
             */
            public Builder clearLt() {

                bitField0_ = (bitField0_ & ~0x00000002);
                lt_ = 0L;
                onChanged();
                return this;
            }

            private long lte_;

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional sfixed64 lte = 3;</code>
             */
            public boolean hasLte() {

                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional sfixed64 lte = 3;</code>
             */
            public long getLte() {

                return lte_;
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional sfixed64 lte = 3;</code>
             */
            public Builder setLte(long value) {

                bitField0_ |= 0x00000004;
                lte_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than or equal to the
             * specified value, inclusive
             * </pre>
             *
             * <code>optional sfixed64 lte = 3;</code>
             */
            public Builder clearLte() {

                bitField0_ = (bitField0_ & ~0x00000004);
                lte_ = 0L;
                onChanged();
                return this;
            }

            private long gt_;

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional sfixed64 gt = 4;</code>
             */
            public boolean hasGt() {

                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional sfixed64 gt = 4;</code>
             */
            public long getGt() {

                return gt_;
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional sfixed64 gt = 4;</code>
             */
            public Builder setGt(long value) {

                bitField0_ |= 0x00000008;
                gt_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive. If the value of Gt is larger than a specified Lt or Lte, the
             * range is reversed.
             * </pre>
             *
             * <code>optional sfixed64 gt = 4;</code>
             */
            public Builder clearGt() {

                bitField0_ = (bitField0_ & ~0x00000008);
                gt_ = 0L;
                onChanged();
                return this;
            }

            private long gte_;

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional sfixed64 gte = 5;</code>
             */
            public boolean hasGte() {

                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional sfixed64 gte = 5;</code>
             */
            public long getGte() {

                return gte_;
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional sfixed64 gte = 5;</code>
             */
            public Builder setGte(long value) {

                bitField0_ |= 0x00000010;
                gte_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than or equal to the
             * specified value, inclusive. If the value of Gte is larger than a
             * specified Lt or Lte, the range is reversed.
             * </pre>
             *
             * <code>optional sfixed64 gte = 5;</code>
             */
            public Builder clearGte() {

                bitField0_ = (bitField0_ & ~0x00000010);
                gte_ = 0L;
                onChanged();
                return this;
            }

            private java.util.List<java.lang.Long> in_ = java.util.Collections.emptyList();

            private void ensureInIsMutable() {

                if (!((bitField0_ & 0x00000020) == 0x00000020)) {
                    in_ = new java.util.ArrayList<java.lang.Long>(in_);
                    bitField0_ |= 0x00000020;
                }
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sfixed64 in = 6;</code>
             */
            public java.util.List<java.lang.Long>
            getInList() {

                return java.util.Collections.unmodifiableList(in_);
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sfixed64 in = 6;</code>
             */
            public int getInCount() {

                return in_.size();
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sfixed64 in = 6;</code>
             */
            public long getIn(int index) {

                return in_.get(index);
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sfixed64 in = 6;</code>
             */
            public Builder setIn(
                    int index, long value) {

                ensureInIsMutable();
                in_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sfixed64 in = 6;</code>
             */
            public Builder addIn(long value) {

                ensureInIsMutable();
                in_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sfixed64 in = 6;</code>
             */
            public Builder addAllIn(
                    java.lang.Iterable<? extends java.lang.Long> values) {

                ensureInIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, in_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sfixed64 in = 6;</code>
             */
            public Builder clearIn() {

                in_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000020);
                onChanged();
                return this;
            }

            private java.util.List<java.lang.Long> notIn_ = java.util.Collections.emptyList();

            private void ensureNotInIsMutable() {

                if (!((bitField0_ & 0x00000040) == 0x00000040)) {
                    notIn_ = new java.util.ArrayList<java.lang.Long>(notIn_);
                    bitField0_ |= 0x00000040;
                }
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sfixed64 not_in = 7;</code>
             */
            public java.util.List<java.lang.Long>
            getNotInList() {

                return java.util.Collections.unmodifiableList(notIn_);
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sfixed64 not_in = 7;</code>
             */
            public int getNotInCount() {

                return notIn_.size();
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sfixed64 not_in = 7;</code>
             */
            public long getNotIn(int index) {

                return notIn_.get(index);
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sfixed64 not_in = 7;</code>
             */
            public Builder setNotIn(
                    int index, long value) {

                ensureNotInIsMutable();
                notIn_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sfixed64 not_in = 7;</code>
             */
            public Builder addNotIn(long value) {

                ensureNotInIsMutable();
                notIn_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sfixed64 not_in = 7;</code>
             */
            public Builder addAllNotIn(
                    java.lang.Iterable<? extends java.lang.Long> values) {

                ensureNotInIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, notIn_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated sfixed64 not_in = 7;</code>
             */
            public Builder clearNotIn() {

                notIn_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000040);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:validate.SFixed64Rules)
        }

        // @@protoc_insertion_point(class_scope:validate.SFixed64Rules)
        private static final Validate.SFixed64Rules DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new Validate.SFixed64Rules();
        }

        public static Validate.SFixed64Rules getDefaultInstance() {

            return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated
        public static final com.google.protobuf.Parser<SFixed64Rules>
                PARSER = new com.google.protobuf.AbstractParser<SFixed64Rules>() {
            @java.lang.Override
            public SFixed64Rules parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return new SFixed64Rules(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<SFixed64Rules> parser() {

            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<SFixed64Rules> getParserForType() {

            return PARSER;
        }

        @java.lang.Override
        public Validate.SFixed64Rules getDefaultInstanceForType() {

            return DEFAULT_INSTANCE;
        }

    }

    public interface BoolRulesOrBuilder extends
            // @@protoc_insertion_point(interface_extends:validate.BoolRules)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional bool const = 1;</code>
         */
        boolean hasConst();

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional bool const = 1;</code>
         */
        boolean getConst();
    }

    /**
     * <pre>
     * BoolRules describes the constraints applied to `bool` values
     * </pre>
     * <p>
     * Protobuf type {@code validate.BoolRules}
     */
    public static final class BoolRules extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:validate.BoolRules)
            BoolRulesOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use BoolRules.newBuilder() to construct.
        private BoolRules(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

            super(builder);
        }

        private BoolRules() {

            const_ = false;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {

            return this.unknownFields;
        }

        private BoolRules(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8: {
                            bitField0_ |= 0x00000001;
                            const_ = input.readBool();
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {

            return Validate.internal_static_validate_BoolRules_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {

            return Validate.internal_static_validate_BoolRules_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Validate.BoolRules.class, Validate.BoolRules.Builder.class);
        }

        private int bitField0_;
        public static final int CONST_FIELD_NUMBER = 1;
        private boolean const_;

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional bool const = 1;</code>
         */
        public boolean hasConst() {

            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional bool const = 1;</code>
         */
        public boolean getConst() {

            return const_;
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {

            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {

            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeBool(1, const_);
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {

            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(1, const_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {

            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Validate.BoolRules)) {
                return super.equals(obj);
            }
            Validate.BoolRules other = (Validate.BoolRules) obj;

            boolean result = true;
            result = result && (hasConst() == other.hasConst());
            if (hasConst()) {
                result = result && (getConst()
                        == other.getConst());
            }
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {

            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasConst()) {
                hash = (37 * hash) + CONST_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                        getConst());
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static Validate.BoolRules parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.BoolRules parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.BoolRules parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.BoolRules parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.BoolRules parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.BoolRules parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.BoolRules parseFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.BoolRules parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.BoolRules parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Validate.BoolRules parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.BoolRules parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.BoolRules parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {

            return newBuilder();
        }

        public static Builder newBuilder() {

            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(Validate.BoolRules prototype) {

            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {

            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * BoolRules describes the constraints applied to `bool` values
         * </pre>
         * <p>
         * Protobuf type {@code validate.BoolRules}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:validate.BoolRules)
                Validate.BoolRulesOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return Validate.internal_static_validate_BoolRules_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return Validate.internal_static_validate_BoolRules_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Validate.BoolRules.class, Validate.BoolRules.Builder.class);
            }

            // Construct using validate.Validate.BoolRules.newBuilder()
            private Builder() {

                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {

                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @java.lang.Override
            public Builder clear() {

                super.clear();
                const_ = false;
                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {

                return Validate.internal_static_validate_BoolRules_descriptor;
            }

            @java.lang.Override
            public Validate.BoolRules getDefaultInstanceForType() {

                return Validate.BoolRules.getDefaultInstance();
            }

            @java.lang.Override
            public Validate.BoolRules build() {

                Validate.BoolRules result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public Validate.BoolRules buildPartial() {

                Validate.BoolRules result = new Validate.BoolRules(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.const_ = const_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {

                return (Builder) super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {

                return (Builder) super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                return (Builder) super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {

                return (Builder) super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {

                if (other instanceof Validate.BoolRules) {
                    return mergeFrom((Validate.BoolRules) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(Validate.BoolRules other) {

                if (other == Validate.BoolRules.getDefaultInstance()) return this;
                if (other.hasConst()) {
                    setConst(other.getConst());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {

                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                Validate.BoolRules parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (Validate.BoolRules) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private boolean const_;

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional bool const = 1;</code>
             */
            public boolean hasConst() {

                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional bool const = 1;</code>
             */
            public boolean getConst() {

                return const_;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional bool const = 1;</code>
             */
            public Builder setConst(boolean value) {

                bitField0_ |= 0x00000001;
                const_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional bool const = 1;</code>
             */
            public Builder clearConst() {

                bitField0_ = (bitField0_ & ~0x00000001);
                const_ = false;
                onChanged();
                return this;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:validate.BoolRules)
        }

        // @@protoc_insertion_point(class_scope:validate.BoolRules)
        private static final Validate.BoolRules DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new Validate.BoolRules();
        }

        public static Validate.BoolRules getDefaultInstance() {

            return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated
        public static final com.google.protobuf.Parser<BoolRules>
                PARSER = new com.google.protobuf.AbstractParser<BoolRules>() {
            @java.lang.Override
            public BoolRules parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return new BoolRules(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<BoolRules> parser() {

            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<BoolRules> getParserForType() {

            return PARSER;
        }

        @java.lang.Override
        public Validate.BoolRules getDefaultInstanceForType() {

            return DEFAULT_INSTANCE;
        }

    }

    public interface StringRulesOrBuilder extends
            // @@protoc_insertion_point(interface_extends:validate.StringRules)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional string const = 1;</code>
         */
        boolean hasConst();

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional string const = 1;</code>
         */
        java.lang.String getConst();

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional string const = 1;</code>
         */
        com.google.protobuf.ByteString
        getConstBytes();

        /**
         * <pre>
         * MinLen specifies that this field must be the specified number of
         * characters (Unicode code points) at a minimum. Note that the number of
         * characters may differ from the number of bytes in the string.
         * </pre>
         *
         * <code>optional uint64 min_len = 2;</code>
         */
        boolean hasMinLen();

        /**
         * <pre>
         * MinLen specifies that this field must be the specified number of
         * characters (Unicode code points) at a minimum. Note that the number of
         * characters may differ from the number of bytes in the string.
         * </pre>
         *
         * <code>optional uint64 min_len = 2;</code>
         */
        long getMinLen();

        /**
         * <pre>
         * MaxLen specifies that this field must be the specified number of
         * characters (Unicode code points) at a maximum. Note that the number of
         * characters may differ from the number of bytes in the string.
         * </pre>
         *
         * <code>optional uint64 max_len = 3;</code>
         */
        boolean hasMaxLen();

        /**
         * <pre>
         * MaxLen specifies that this field must be the specified number of
         * characters (Unicode code points) at a maximum. Note that the number of
         * characters may differ from the number of bytes in the string.
         * </pre>
         *
         * <code>optional uint64 max_len = 3;</code>
         */
        long getMaxLen();

        /**
         * <pre>
         * MinBytes specifies that this field must be the specified number of bytes
         * at a minimum
         * </pre>
         *
         * <code>optional uint64 min_bytes = 4;</code>
         */
        boolean hasMinBytes();

        /**
         * <pre>
         * MinBytes specifies that this field must be the specified number of bytes
         * at a minimum
         * </pre>
         *
         * <code>optional uint64 min_bytes = 4;</code>
         */
        long getMinBytes();

        /**
         * <pre>
         * MaxBytes specifies that this field must be the specified number of bytes
         * at a maximum
         * </pre>
         *
         * <code>optional uint64 max_bytes = 5;</code>
         */
        boolean hasMaxBytes();

        /**
         * <pre>
         * MaxBytes specifies that this field must be the specified number of bytes
         * at a maximum
         * </pre>
         *
         * <code>optional uint64 max_bytes = 5;</code>
         */
        long getMaxBytes();

        /**
         * <pre>
         * Pattern specifes that this field must match against the specified
         * regular expression (RE2 syntax). The included expression should elide
         * any delimiters.
         * </pre>
         *
         * <code>optional string pattern = 6;</code>
         */
        boolean hasPattern();

        /**
         * <pre>
         * Pattern specifes that this field must match against the specified
         * regular expression (RE2 syntax). The included expression should elide
         * any delimiters.
         * </pre>
         *
         * <code>optional string pattern = 6;</code>
         */
        java.lang.String getPattern();

        /**
         * <pre>
         * Pattern specifes that this field must match against the specified
         * regular expression (RE2 syntax). The included expression should elide
         * any delimiters.
         * </pre>
         *
         * <code>optional string pattern = 6;</code>
         */
        com.google.protobuf.ByteString
        getPatternBytes();

        /**
         * <pre>
         * Prefix specifies that this field must have the specified substring at
         * the beginning of the string.
         * </pre>
         *
         * <code>optional string prefix = 7;</code>
         */
        boolean hasPrefix();

        /**
         * <pre>
         * Prefix specifies that this field must have the specified substring at
         * the beginning of the string.
         * </pre>
         *
         * <code>optional string prefix = 7;</code>
         */
        java.lang.String getPrefix();

        /**
         * <pre>
         * Prefix specifies that this field must have the specified substring at
         * the beginning of the string.
         * </pre>
         *
         * <code>optional string prefix = 7;</code>
         */
        com.google.protobuf.ByteString
        getPrefixBytes();

        /**
         * <pre>
         * Suffix specifies that this field must have the specified substring at
         * the end of the string.
         * </pre>
         *
         * <code>optional string suffix = 8;</code>
         */
        boolean hasSuffix();

        /**
         * <pre>
         * Suffix specifies that this field must have the specified substring at
         * the end of the string.
         * </pre>
         *
         * <code>optional string suffix = 8;</code>
         */
        java.lang.String getSuffix();

        /**
         * <pre>
         * Suffix specifies that this field must have the specified substring at
         * the end of the string.
         * </pre>
         *
         * <code>optional string suffix = 8;</code>
         */
        com.google.protobuf.ByteString
        getSuffixBytes();

        /**
         * <pre>
         * Contains specifies that this field must have the specified substring
         * anywhere in the string.
         * </pre>
         *
         * <code>optional string contains = 9;</code>
         */
        boolean hasContains();

        /**
         * <pre>
         * Contains specifies that this field must have the specified substring
         * anywhere in the string.
         * </pre>
         *
         * <code>optional string contains = 9;</code>
         */
        java.lang.String getContains();

        /**
         * <pre>
         * Contains specifies that this field must have the specified substring
         * anywhere in the string.
         * </pre>
         *
         * <code>optional string contains = 9;</code>
         */
        com.google.protobuf.ByteString
        getContainsBytes();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated string in = 10;</code>
         */
        java.util.List<java.lang.String>
        getInList();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated string in = 10;</code>
         */
        int getInCount();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated string in = 10;</code>
         */
        java.lang.String getIn(int index);

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated string in = 10;</code>
         */
        com.google.protobuf.ByteString
        getInBytes(int index);

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated string not_in = 11;</code>
         */
        java.util.List<java.lang.String>
        getNotInList();

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated string not_in = 11;</code>
         */
        int getNotInCount();

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated string not_in = 11;</code>
         */
        java.lang.String getNotIn(int index);

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated string not_in = 11;</code>
         */
        com.google.protobuf.ByteString
        getNotInBytes(int index);

        /**
         * <pre>
         * Email specifies that the field must be a valid email address as
         * defined by RFC 5322
         * </pre>
         *
         * <code>optional bool email = 12;</code>
         */
        boolean hasEmail();

        /**
         * <pre>
         * Email specifies that the field must be a valid email address as
         * defined by RFC 5322
         * </pre>
         *
         * <code>optional bool email = 12;</code>
         */
        boolean getEmail();

        /**
         * <pre>
         * Hostname specifies that the field must be a valid hostname as
         * defined by RFC 1034. This constraint does not support
         * internationalized domain names (IDNs).
         * </pre>
         *
         * <code>optional bool hostname = 13;</code>
         */
        boolean hasHostname();

        /**
         * <pre>
         * Hostname specifies that the field must be a valid hostname as
         * defined by RFC 1034. This constraint does not support
         * internationalized domain names (IDNs).
         * </pre>
         *
         * <code>optional bool hostname = 13;</code>
         */
        boolean getHostname();

        /**
         * <pre>
         * Ip specifies that the field must be a valid IP (v4 or v6) address.
         * Valid IPv6 addresses should not include surrounding square brackets.
         * </pre>
         *
         * <code>optional bool ip = 14;</code>
         */
        boolean hasIp();

        /**
         * <pre>
         * Ip specifies that the field must be a valid IP (v4 or v6) address.
         * Valid IPv6 addresses should not include surrounding square brackets.
         * </pre>
         *
         * <code>optional bool ip = 14;</code>
         */
        boolean getIp();

        /**
         * <pre>
         * Ipv4 specifies that the field must be a valid IPv4 address.
         * </pre>
         *
         * <code>optional bool ipv4 = 15;</code>
         */
        boolean hasIpv4();

        /**
         * <pre>
         * Ipv4 specifies that the field must be a valid IPv4 address.
         * </pre>
         *
         * <code>optional bool ipv4 = 15;</code>
         */
        boolean getIpv4();

        /**
         * <pre>
         * Ipv6 specifies that the field must be a valid IPv6 address. Valid
         * IPv6 addresses should not include surrounding square brackets.
         * </pre>
         *
         * <code>optional bool ipv6 = 16;</code>
         */
        boolean hasIpv6();

        /**
         * <pre>
         * Ipv6 specifies that the field must be a valid IPv6 address. Valid
         * IPv6 addresses should not include surrounding square brackets.
         * </pre>
         *
         * <code>optional bool ipv6 = 16;</code>
         */
        boolean getIpv6();

        /**
         * <pre>
         * Uri specifies that the field must be a valid, absolute URI as defined
         * by RFC 3986
         * </pre>
         *
         * <code>optional bool uri = 17;</code>
         */
        boolean hasUri();

        /**
         * <pre>
         * Uri specifies that the field must be a valid, absolute URI as defined
         * by RFC 3986
         * </pre>
         *
         * <code>optional bool uri = 17;</code>
         */
        boolean getUri();

        /**
         * <pre>
         * UriRef specifies that the field must be a valid URI as defined by RFC
         * 3986 and may be relative or absolute.
         * </pre>
         *
         * <code>optional bool uri_ref = 18;</code>
         */
        boolean hasUriRef();

        /**
         * <pre>
         * UriRef specifies that the field must be a valid URI as defined by RFC
         * 3986 and may be relative or absolute.
         * </pre>
         *
         * <code>optional bool uri_ref = 18;</code>
         */
        boolean getUriRef();

        public Validate.StringRules.WellKnownCase getWellKnownCase();
    }

    /**
     * <pre>
     * StringRules describe the constraints applied to `string` values
     * </pre>
     * <p>
     * Protobuf type {@code validate.StringRules}
     */
    public static final class StringRules extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:validate.StringRules)
            StringRulesOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use StringRules.newBuilder() to construct.
        private StringRules(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

            super(builder);
        }

        private StringRules() {

            const_ = "";
            minLen_ = 0L;
            maxLen_ = 0L;
            minBytes_ = 0L;
            maxBytes_ = 0L;
            pattern_ = "";
            prefix_ = "";
            suffix_ = "";
            contains_ = "";
            in_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            notIn_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {

            return this.unknownFields;
        }

        private StringRules(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000001;
                            const_ = bs;
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            minLen_ = input.readUInt64();
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            maxLen_ = input.readUInt64();
                            break;
                        }
                        case 32: {
                            bitField0_ |= 0x00000008;
                            minBytes_ = input.readUInt64();
                            break;
                        }
                        case 40: {
                            bitField0_ |= 0x00000010;
                            maxBytes_ = input.readUInt64();
                            break;
                        }
                        case 50: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000020;
                            pattern_ = bs;
                            break;
                        }
                        case 58: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000040;
                            prefix_ = bs;
                            break;
                        }
                        case 66: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000080;
                            suffix_ = bs;
                            break;
                        }
                        case 74: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000100;
                            contains_ = bs;
                            break;
                        }
                        case 82: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                                in_ = new com.google.protobuf.LazyStringArrayList();
                                mutable_bitField0_ |= 0x00000200;
                            }
                            in_.add(bs);
                            break;
                        }
                        case 90: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                                notIn_ = new com.google.protobuf.LazyStringArrayList();
                                mutable_bitField0_ |= 0x00000400;
                            }
                            notIn_.add(bs);
                            break;
                        }
                        case 96: {
                            wellKnownCase_ = 12;
                            wellKnown_ = input.readBool();
                            break;
                        }
                        case 104: {
                            wellKnownCase_ = 13;
                            wellKnown_ = input.readBool();
                            break;
                        }
                        case 112: {
                            wellKnownCase_ = 14;
                            wellKnown_ = input.readBool();
                            break;
                        }
                        case 120: {
                            wellKnownCase_ = 15;
                            wellKnown_ = input.readBool();
                            break;
                        }
                        case 128: {
                            wellKnownCase_ = 16;
                            wellKnown_ = input.readBool();
                            break;
                        }
                        case 136: {
                            wellKnownCase_ = 17;
                            wellKnown_ = input.readBool();
                            break;
                        }
                        case 144: {
                            wellKnownCase_ = 18;
                            wellKnown_ = input.readBool();
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                    in_ = in_.getUnmodifiableView();
                }
                if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                    notIn_ = notIn_.getUnmodifiableView();
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {

            return Validate.internal_static_validate_StringRules_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {

            return Validate.internal_static_validate_StringRules_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Validate.StringRules.class, Validate.StringRules.Builder.class);
        }

        private int bitField0_;
        private int wellKnownCase_ = 0;
        private java.lang.Object wellKnown_;

        public enum WellKnownCase
                implements com.google.protobuf.Internal.EnumLite {
            EMAIL(12),
            HOSTNAME(13),
            IP(14),
            IPV4(15),
            IPV6(16),
            URI(17),
            URI_REF(18),
            WELLKNOWN_NOT_SET(0);
            private final int value;

            private WellKnownCase(int value) {

                this.value = value;
            }

            /**
             * @deprecated Use {@link #forNumber(int)} instead.
             */
            @java.lang.Deprecated
            public static WellKnownCase valueOf(int value) {

                return forNumber(value);
            }

            public static WellKnownCase forNumber(int value) {

                switch (value) {
                    case 12:
                        return EMAIL;
                    case 13:
                        return HOSTNAME;
                    case 14:
                        return IP;
                    case 15:
                        return IPV4;
                    case 16:
                        return IPV6;
                    case 17:
                        return URI;
                    case 18:
                        return URI_REF;
                    case 0:
                        return WELLKNOWN_NOT_SET;
                    default:
                        return null;
                }
            }

            public int getNumber() {

                return this.value;
            }
        }

        ;

        public WellKnownCase
        getWellKnownCase() {

            return WellKnownCase.forNumber(
                    wellKnownCase_);
        }

        public static final int CONST_FIELD_NUMBER = 1;
        private volatile java.lang.Object const_;

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional string const = 1;</code>
         */
        public boolean hasConst() {

            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional string const = 1;</code>
         */
        public java.lang.String getConst() {

            java.lang.Object ref = const_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    const_ = s;
                }
                return s;
            }
        }

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional string const = 1;</code>
         */
        public com.google.protobuf.ByteString
        getConstBytes() {

            java.lang.Object ref = const_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                const_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int MIN_LEN_FIELD_NUMBER = 2;
        private long minLen_;

        /**
         * <pre>
         * MinLen specifies that this field must be the specified number of
         * characters (Unicode code points) at a minimum. Note that the number of
         * characters may differ from the number of bytes in the string.
         * </pre>
         *
         * <code>optional uint64 min_len = 2;</code>
         */
        public boolean hasMinLen() {

            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <pre>
         * MinLen specifies that this field must be the specified number of
         * characters (Unicode code points) at a minimum. Note that the number of
         * characters may differ from the number of bytes in the string.
         * </pre>
         *
         * <code>optional uint64 min_len = 2;</code>
         */
        public long getMinLen() {

            return minLen_;
        }

        public static final int MAX_LEN_FIELD_NUMBER = 3;
        private long maxLen_;

        /**
         * <pre>
         * MaxLen specifies that this field must be the specified number of
         * characters (Unicode code points) at a maximum. Note that the number of
         * characters may differ from the number of bytes in the string.
         * </pre>
         *
         * <code>optional uint64 max_len = 3;</code>
         */
        public boolean hasMaxLen() {

            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <pre>
         * MaxLen specifies that this field must be the specified number of
         * characters (Unicode code points) at a maximum. Note that the number of
         * characters may differ from the number of bytes in the string.
         * </pre>
         *
         * <code>optional uint64 max_len = 3;</code>
         */
        public long getMaxLen() {

            return maxLen_;
        }

        public static final int MIN_BYTES_FIELD_NUMBER = 4;
        private long minBytes_;

        /**
         * <pre>
         * MinBytes specifies that this field must be the specified number of bytes
         * at a minimum
         * </pre>
         *
         * <code>optional uint64 min_bytes = 4;</code>
         */
        public boolean hasMinBytes() {

            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <pre>
         * MinBytes specifies that this field must be the specified number of bytes
         * at a minimum
         * </pre>
         *
         * <code>optional uint64 min_bytes = 4;</code>
         */
        public long getMinBytes() {

            return minBytes_;
        }

        public static final int MAX_BYTES_FIELD_NUMBER = 5;
        private long maxBytes_;

        /**
         * <pre>
         * MaxBytes specifies that this field must be the specified number of bytes
         * at a maximum
         * </pre>
         *
         * <code>optional uint64 max_bytes = 5;</code>
         */
        public boolean hasMaxBytes() {

            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <pre>
         * MaxBytes specifies that this field must be the specified number of bytes
         * at a maximum
         * </pre>
         *
         * <code>optional uint64 max_bytes = 5;</code>
         */
        public long getMaxBytes() {

            return maxBytes_;
        }

        public static final int PATTERN_FIELD_NUMBER = 6;
        private volatile java.lang.Object pattern_;

        /**
         * <pre>
         * Pattern specifes that this field must match against the specified
         * regular expression (RE2 syntax). The included expression should elide
         * any delimiters.
         * </pre>
         *
         * <code>optional string pattern = 6;</code>
         */
        public boolean hasPattern() {

            return ((bitField0_ & 0x00000020) == 0x00000020);
        }

        /**
         * <pre>
         * Pattern specifes that this field must match against the specified
         * regular expression (RE2 syntax). The included expression should elide
         * any delimiters.
         * </pre>
         *
         * <code>optional string pattern = 6;</code>
         */
        public java.lang.String getPattern() {

            java.lang.Object ref = pattern_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    pattern_ = s;
                }
                return s;
            }
        }

        /**
         * <pre>
         * Pattern specifes that this field must match against the specified
         * regular expression (RE2 syntax). The included expression should elide
         * any delimiters.
         * </pre>
         *
         * <code>optional string pattern = 6;</code>
         */
        public com.google.protobuf.ByteString
        getPatternBytes() {

            java.lang.Object ref = pattern_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                pattern_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int PREFIX_FIELD_NUMBER = 7;
        private volatile java.lang.Object prefix_;

        /**
         * <pre>
         * Prefix specifies that this field must have the specified substring at
         * the beginning of the string.
         * </pre>
         *
         * <code>optional string prefix = 7;</code>
         */
        public boolean hasPrefix() {

            return ((bitField0_ & 0x00000040) == 0x00000040);
        }

        /**
         * <pre>
         * Prefix specifies that this field must have the specified substring at
         * the beginning of the string.
         * </pre>
         *
         * <code>optional string prefix = 7;</code>
         */
        public java.lang.String getPrefix() {

            java.lang.Object ref = prefix_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    prefix_ = s;
                }
                return s;
            }
        }

        /**
         * <pre>
         * Prefix specifies that this field must have the specified substring at
         * the beginning of the string.
         * </pre>
         *
         * <code>optional string prefix = 7;</code>
         */
        public com.google.protobuf.ByteString
        getPrefixBytes() {

            java.lang.Object ref = prefix_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                prefix_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int SUFFIX_FIELD_NUMBER = 8;
        private volatile java.lang.Object suffix_;

        /**
         * <pre>
         * Suffix specifies that this field must have the specified substring at
         * the end of the string.
         * </pre>
         *
         * <code>optional string suffix = 8;</code>
         */
        public boolean hasSuffix() {

            return ((bitField0_ & 0x00000080) == 0x00000080);
        }

        /**
         * <pre>
         * Suffix specifies that this field must have the specified substring at
         * the end of the string.
         * </pre>
         *
         * <code>optional string suffix = 8;</code>
         */
        public java.lang.String getSuffix() {

            java.lang.Object ref = suffix_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    suffix_ = s;
                }
                return s;
            }
        }

        /**
         * <pre>
         * Suffix specifies that this field must have the specified substring at
         * the end of the string.
         * </pre>
         *
         * <code>optional string suffix = 8;</code>
         */
        public com.google.protobuf.ByteString
        getSuffixBytes() {

            java.lang.Object ref = suffix_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                suffix_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int CONTAINS_FIELD_NUMBER = 9;
        private volatile java.lang.Object contains_;

        /**
         * <pre>
         * Contains specifies that this field must have the specified substring
         * anywhere in the string.
         * </pre>
         *
         * <code>optional string contains = 9;</code>
         */
        public boolean hasContains() {

            return ((bitField0_ & 0x00000100) == 0x00000100);
        }

        /**
         * <pre>
         * Contains specifies that this field must have the specified substring
         * anywhere in the string.
         * </pre>
         *
         * <code>optional string contains = 9;</code>
         */
        public java.lang.String getContains() {

            java.lang.Object ref = contains_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    contains_ = s;
                }
                return s;
            }
        }

        /**
         * <pre>
         * Contains specifies that this field must have the specified substring
         * anywhere in the string.
         * </pre>
         *
         * <code>optional string contains = 9;</code>
         */
        public com.google.protobuf.ByteString
        getContainsBytes() {

            java.lang.Object ref = contains_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                contains_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int IN_FIELD_NUMBER = 10;
        private com.google.protobuf.LazyStringList in_;

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated string in = 10;</code>
         */
        public com.google.protobuf.ProtocolStringList
        getInList() {

            return in_;
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated string in = 10;</code>
         */
        public int getInCount() {

            return in_.size();
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated string in = 10;</code>
         */
        public java.lang.String getIn(int index) {

            return in_.get(index);
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated string in = 10;</code>
         */
        public com.google.protobuf.ByteString
        getInBytes(int index) {

            return in_.getByteString(index);
        }

        public static final int NOT_IN_FIELD_NUMBER = 11;
        private com.google.protobuf.LazyStringList notIn_;

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated string not_in = 11;</code>
         */
        public com.google.protobuf.ProtocolStringList
        getNotInList() {

            return notIn_;
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated string not_in = 11;</code>
         */
        public int getNotInCount() {

            return notIn_.size();
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated string not_in = 11;</code>
         */
        public java.lang.String getNotIn(int index) {

            return notIn_.get(index);
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated string not_in = 11;</code>
         */
        public com.google.protobuf.ByteString
        getNotInBytes(int index) {

            return notIn_.getByteString(index);
        }

        public static final int EMAIL_FIELD_NUMBER = 12;

        /**
         * <pre>
         * Email specifies that the field must be a valid email address as
         * defined by RFC 5322
         * </pre>
         *
         * <code>optional bool email = 12;</code>
         */
        public boolean hasEmail() {

            return wellKnownCase_ == 12;
        }

        /**
         * <pre>
         * Email specifies that the field must be a valid email address as
         * defined by RFC 5322
         * </pre>
         *
         * <code>optional bool email = 12;</code>
         */
        public boolean getEmail() {

            if (wellKnownCase_ == 12) {
                return (java.lang.Boolean) wellKnown_;
            }
            return false;
        }

        public static final int HOSTNAME_FIELD_NUMBER = 13;

        /**
         * <pre>
         * Hostname specifies that the field must be a valid hostname as
         * defined by RFC 1034. This constraint does not support
         * internationalized domain names (IDNs).
         * </pre>
         *
         * <code>optional bool hostname = 13;</code>
         */
        public boolean hasHostname() {

            return wellKnownCase_ == 13;
        }

        /**
         * <pre>
         * Hostname specifies that the field must be a valid hostname as
         * defined by RFC 1034. This constraint does not support
         * internationalized domain names (IDNs).
         * </pre>
         *
         * <code>optional bool hostname = 13;</code>
         */
        public boolean getHostname() {

            if (wellKnownCase_ == 13) {
                return (java.lang.Boolean) wellKnown_;
            }
            return false;
        }

        public static final int IP_FIELD_NUMBER = 14;

        /**
         * <pre>
         * Ip specifies that the field must be a valid IP (v4 or v6) address.
         * Valid IPv6 addresses should not include surrounding square brackets.
         * </pre>
         *
         * <code>optional bool ip = 14;</code>
         */
        public boolean hasIp() {

            return wellKnownCase_ == 14;
        }

        /**
         * <pre>
         * Ip specifies that the field must be a valid IP (v4 or v6) address.
         * Valid IPv6 addresses should not include surrounding square brackets.
         * </pre>
         *
         * <code>optional bool ip = 14;</code>
         */
        public boolean getIp() {

            if (wellKnownCase_ == 14) {
                return (java.lang.Boolean) wellKnown_;
            }
            return false;
        }

        public static final int IPV4_FIELD_NUMBER = 15;

        /**
         * <pre>
         * Ipv4 specifies that the field must be a valid IPv4 address.
         * </pre>
         *
         * <code>optional bool ipv4 = 15;</code>
         */
        public boolean hasIpv4() {

            return wellKnownCase_ == 15;
        }

        /**
         * <pre>
         * Ipv4 specifies that the field must be a valid IPv4 address.
         * </pre>
         *
         * <code>optional bool ipv4 = 15;</code>
         */
        public boolean getIpv4() {

            if (wellKnownCase_ == 15) {
                return (java.lang.Boolean) wellKnown_;
            }
            return false;
        }

        public static final int IPV6_FIELD_NUMBER = 16;

        /**
         * <pre>
         * Ipv6 specifies that the field must be a valid IPv6 address. Valid
         * IPv6 addresses should not include surrounding square brackets.
         * </pre>
         *
         * <code>optional bool ipv6 = 16;</code>
         */
        public boolean hasIpv6() {

            return wellKnownCase_ == 16;
        }

        /**
         * <pre>
         * Ipv6 specifies that the field must be a valid IPv6 address. Valid
         * IPv6 addresses should not include surrounding square brackets.
         * </pre>
         *
         * <code>optional bool ipv6 = 16;</code>
         */
        public boolean getIpv6() {

            if (wellKnownCase_ == 16) {
                return (java.lang.Boolean) wellKnown_;
            }
            return false;
        }

        public static final int URI_FIELD_NUMBER = 17;

        /**
         * <pre>
         * Uri specifies that the field must be a valid, absolute URI as defined
         * by RFC 3986
         * </pre>
         *
         * <code>optional bool uri = 17;</code>
         */
        public boolean hasUri() {

            return wellKnownCase_ == 17;
        }

        /**
         * <pre>
         * Uri specifies that the field must be a valid, absolute URI as defined
         * by RFC 3986
         * </pre>
         *
         * <code>optional bool uri = 17;</code>
         */
        public boolean getUri() {

            if (wellKnownCase_ == 17) {
                return (java.lang.Boolean) wellKnown_;
            }
            return false;
        }

        public static final int URI_REF_FIELD_NUMBER = 18;

        /**
         * <pre>
         * UriRef specifies that the field must be a valid URI as defined by RFC
         * 3986 and may be relative or absolute.
         * </pre>
         *
         * <code>optional bool uri_ref = 18;</code>
         */
        public boolean hasUriRef() {

            return wellKnownCase_ == 18;
        }

        /**
         * <pre>
         * UriRef specifies that the field must be a valid URI as defined by RFC
         * 3986 and may be relative or absolute.
         * </pre>
         *
         * <code>optional bool uri_ref = 18;</code>
         */
        public boolean getUriRef() {

            if (wellKnownCase_ == 18) {
                return (java.lang.Boolean) wellKnown_;
            }
            return false;
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {

            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {

            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, const_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeUInt64(2, minLen_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeUInt64(3, maxLen_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeUInt64(4, minBytes_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeUInt64(5, maxBytes_);
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 6, pattern_);
            }
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 7, prefix_);
            }
            if (((bitField0_ & 0x00000080) == 0x00000080)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 8, suffix_);
            }
            if (((bitField0_ & 0x00000100) == 0x00000100)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 9, contains_);
            }
            for (int i = 0; i < in_.size(); i++) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 10, in_.getRaw(i));
            }
            for (int i = 0; i < notIn_.size(); i++) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 11, notIn_.getRaw(i));
            }
            if (wellKnownCase_ == 12) {
                output.writeBool(
                        12, (boolean) ((java.lang.Boolean) wellKnown_));
            }
            if (wellKnownCase_ == 13) {
                output.writeBool(
                        13, (boolean) ((java.lang.Boolean) wellKnown_));
            }
            if (wellKnownCase_ == 14) {
                output.writeBool(
                        14, (boolean) ((java.lang.Boolean) wellKnown_));
            }
            if (wellKnownCase_ == 15) {
                output.writeBool(
                        15, (boolean) ((java.lang.Boolean) wellKnown_));
            }
            if (wellKnownCase_ == 16) {
                output.writeBool(
                        16, (boolean) ((java.lang.Boolean) wellKnown_));
            }
            if (wellKnownCase_ == 17) {
                output.writeBool(
                        17, (boolean) ((java.lang.Boolean) wellKnown_));
            }
            if (wellKnownCase_ == 18) {
                output.writeBool(
                        18, (boolean) ((java.lang.Boolean) wellKnown_));
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {

            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, const_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(2, minLen_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(3, maxLen_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(4, minBytes_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(5, maxBytes_);
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, pattern_);
            }
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, prefix_);
            }
            if (((bitField0_ & 0x00000080) == 0x00000080)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, suffix_);
            }
            if (((bitField0_ & 0x00000100) == 0x00000100)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, contains_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < in_.size(); i++) {
                    dataSize += computeStringSizeNoTag(in_.getRaw(i));
                }
                size += dataSize;
                size += 1 * getInList().size();
            }
            {
                int dataSize = 0;
                for (int i = 0; i < notIn_.size(); i++) {
                    dataSize += computeStringSizeNoTag(notIn_.getRaw(i));
                }
                size += dataSize;
                size += 1 * getNotInList().size();
            }
            if (wellKnownCase_ == 12) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(
                                12, (boolean) ((java.lang.Boolean) wellKnown_));
            }
            if (wellKnownCase_ == 13) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(
                                13, (boolean) ((java.lang.Boolean) wellKnown_));
            }
            if (wellKnownCase_ == 14) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(
                                14, (boolean) ((java.lang.Boolean) wellKnown_));
            }
            if (wellKnownCase_ == 15) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(
                                15, (boolean) ((java.lang.Boolean) wellKnown_));
            }
            if (wellKnownCase_ == 16) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(
                                16, (boolean) ((java.lang.Boolean) wellKnown_));
            }
            if (wellKnownCase_ == 17) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(
                                17, (boolean) ((java.lang.Boolean) wellKnown_));
            }
            if (wellKnownCase_ == 18) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(
                                18, (boolean) ((java.lang.Boolean) wellKnown_));
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {

            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Validate.StringRules)) {
                return super.equals(obj);
            }
            Validate.StringRules other = (Validate.StringRules) obj;

            boolean result = true;
            result = result && (hasConst() == other.hasConst());
            if (hasConst()) {
                result = result && getConst()
                        .equals(other.getConst());
            }
            result = result && (hasMinLen() == other.hasMinLen());
            if (hasMinLen()) {
                result = result && (getMinLen()
                        == other.getMinLen());
            }
            result = result && (hasMaxLen() == other.hasMaxLen());
            if (hasMaxLen()) {
                result = result && (getMaxLen()
                        == other.getMaxLen());
            }
            result = result && (hasMinBytes() == other.hasMinBytes());
            if (hasMinBytes()) {
                result = result && (getMinBytes()
                        == other.getMinBytes());
            }
            result = result && (hasMaxBytes() == other.hasMaxBytes());
            if (hasMaxBytes()) {
                result = result && (getMaxBytes()
                        == other.getMaxBytes());
            }
            result = result && (hasPattern() == other.hasPattern());
            if (hasPattern()) {
                result = result && getPattern()
                        .equals(other.getPattern());
            }
            result = result && (hasPrefix() == other.hasPrefix());
            if (hasPrefix()) {
                result = result && getPrefix()
                        .equals(other.getPrefix());
            }
            result = result && (hasSuffix() == other.hasSuffix());
            if (hasSuffix()) {
                result = result && getSuffix()
                        .equals(other.getSuffix());
            }
            result = result && (hasContains() == other.hasContains());
            if (hasContains()) {
                result = result && getContains()
                        .equals(other.getContains());
            }
            result = result && getInList()
                    .equals(other.getInList());
            result = result && getNotInList()
                    .equals(other.getNotInList());
            result = result && getWellKnownCase().equals(
                    other.getWellKnownCase());
            if (!result) return false;
            switch (wellKnownCase_) {
                case 12:
                    result = result && (getEmail()
                            == other.getEmail());
                    break;
                case 13:
                    result = result && (getHostname()
                            == other.getHostname());
                    break;
                case 14:
                    result = result && (getIp()
                            == other.getIp());
                    break;
                case 15:
                    result = result && (getIpv4()
                            == other.getIpv4());
                    break;
                case 16:
                    result = result && (getIpv6()
                            == other.getIpv6());
                    break;
                case 17:
                    result = result && (getUri()
                            == other.getUri());
                    break;
                case 18:
                    result = result && (getUriRef()
                            == other.getUriRef());
                    break;
                case 0:
                default:
            }
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {

            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasConst()) {
                hash = (37 * hash) + CONST_FIELD_NUMBER;
                hash = (53 * hash) + getConst().hashCode();
            }
            if (hasMinLen()) {
                hash = (37 * hash) + MIN_LEN_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getMinLen());
            }
            if (hasMaxLen()) {
                hash = (37 * hash) + MAX_LEN_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getMaxLen());
            }
            if (hasMinBytes()) {
                hash = (37 * hash) + MIN_BYTES_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getMinBytes());
            }
            if (hasMaxBytes()) {
                hash = (37 * hash) + MAX_BYTES_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getMaxBytes());
            }
            if (hasPattern()) {
                hash = (37 * hash) + PATTERN_FIELD_NUMBER;
                hash = (53 * hash) + getPattern().hashCode();
            }
            if (hasPrefix()) {
                hash = (37 * hash) + PREFIX_FIELD_NUMBER;
                hash = (53 * hash) + getPrefix().hashCode();
            }
            if (hasSuffix()) {
                hash = (37 * hash) + SUFFIX_FIELD_NUMBER;
                hash = (53 * hash) + getSuffix().hashCode();
            }
            if (hasContains()) {
                hash = (37 * hash) + CONTAINS_FIELD_NUMBER;
                hash = (53 * hash) + getContains().hashCode();
            }
            if (getInCount() > 0) {
                hash = (37 * hash) + IN_FIELD_NUMBER;
                hash = (53 * hash) + getInList().hashCode();
            }
            if (getNotInCount() > 0) {
                hash = (37 * hash) + NOT_IN_FIELD_NUMBER;
                hash = (53 * hash) + getNotInList().hashCode();
            }
            switch (wellKnownCase_) {
                case 12:
                    hash = (37 * hash) + EMAIL_FIELD_NUMBER;
                    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                            getEmail());
                    break;
                case 13:
                    hash = (37 * hash) + HOSTNAME_FIELD_NUMBER;
                    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                            getHostname());
                    break;
                case 14:
                    hash = (37 * hash) + IP_FIELD_NUMBER;
                    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                            getIp());
                    break;
                case 15:
                    hash = (37 * hash) + IPV4_FIELD_NUMBER;
                    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                            getIpv4());
                    break;
                case 16:
                    hash = (37 * hash) + IPV6_FIELD_NUMBER;
                    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                            getIpv6());
                    break;
                case 17:
                    hash = (37 * hash) + URI_FIELD_NUMBER;
                    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                            getUri());
                    break;
                case 18:
                    hash = (37 * hash) + URI_REF_FIELD_NUMBER;
                    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                            getUriRef());
                    break;
                case 0:
                default:
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static Validate.StringRules parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.StringRules parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.StringRules parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.StringRules parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.StringRules parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.StringRules parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.StringRules parseFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.StringRules parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.StringRules parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Validate.StringRules parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.StringRules parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.StringRules parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {

            return newBuilder();
        }

        public static Builder newBuilder() {

            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(Validate.StringRules prototype) {

            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {

            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * StringRules describe the constraints applied to `string` values
         * </pre>
         * <p>
         * Protobuf type {@code validate.StringRules}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:validate.StringRules)
                Validate.StringRulesOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return Validate.internal_static_validate_StringRules_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return Validate.internal_static_validate_StringRules_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Validate.StringRules.class, Validate.StringRules.Builder.class);
            }

            // Construct using validate.Validate.StringRules.newBuilder()
            private Builder() {

                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {

                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @java.lang.Override
            public Builder clear() {

                super.clear();
                const_ = "";
                bitField0_ = (bitField0_ & ~0x00000001);
                minLen_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000002);
                maxLen_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000004);
                minBytes_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000008);
                maxBytes_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000010);
                pattern_ = "";
                bitField0_ = (bitField0_ & ~0x00000020);
                prefix_ = "";
                bitField0_ = (bitField0_ & ~0x00000040);
                suffix_ = "";
                bitField0_ = (bitField0_ & ~0x00000080);
                contains_ = "";
                bitField0_ = (bitField0_ & ~0x00000100);
                in_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000200);
                notIn_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000400);
                wellKnownCase_ = 0;
                wellKnown_ = null;
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {

                return Validate.internal_static_validate_StringRules_descriptor;
            }

            @java.lang.Override
            public Validate.StringRules getDefaultInstanceForType() {

                return Validate.StringRules.getDefaultInstance();
            }

            @java.lang.Override
            public Validate.StringRules build() {

                Validate.StringRules result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public Validate.StringRules buildPartial() {

                Validate.StringRules result = new Validate.StringRules(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.const_ = const_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.minLen_ = minLen_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.maxLen_ = maxLen_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.minBytes_ = minBytes_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.maxBytes_ = maxBytes_;
                if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
                    to_bitField0_ |= 0x00000020;
                }
                result.pattern_ = pattern_;
                if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
                    to_bitField0_ |= 0x00000040;
                }
                result.prefix_ = prefix_;
                if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
                    to_bitField0_ |= 0x00000080;
                }
                result.suffix_ = suffix_;
                if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
                    to_bitField0_ |= 0x00000100;
                }
                result.contains_ = contains_;
                if (((bitField0_ & 0x00000200) == 0x00000200)) {
                    in_ = in_.getUnmodifiableView();
                    bitField0_ = (bitField0_ & ~0x00000200);
                }
                result.in_ = in_;
                if (((bitField0_ & 0x00000400) == 0x00000400)) {
                    notIn_ = notIn_.getUnmodifiableView();
                    bitField0_ = (bitField0_ & ~0x00000400);
                }
                result.notIn_ = notIn_;
                if (wellKnownCase_ == 12) {
                    result.wellKnown_ = wellKnown_;
                }
                if (wellKnownCase_ == 13) {
                    result.wellKnown_ = wellKnown_;
                }
                if (wellKnownCase_ == 14) {
                    result.wellKnown_ = wellKnown_;
                }
                if (wellKnownCase_ == 15) {
                    result.wellKnown_ = wellKnown_;
                }
                if (wellKnownCase_ == 16) {
                    result.wellKnown_ = wellKnown_;
                }
                if (wellKnownCase_ == 17) {
                    result.wellKnown_ = wellKnown_;
                }
                if (wellKnownCase_ == 18) {
                    result.wellKnown_ = wellKnown_;
                }
                result.bitField0_ = to_bitField0_;
                result.wellKnownCase_ = wellKnownCase_;
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {

                return (Builder) super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {

                return (Builder) super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                return (Builder) super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {

                return (Builder) super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {

                if (other instanceof Validate.StringRules) {
                    return mergeFrom((Validate.StringRules) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(Validate.StringRules other) {

                if (other == Validate.StringRules.getDefaultInstance()) return this;
                if (other.hasConst()) {
                    bitField0_ |= 0x00000001;
                    const_ = other.const_;
                    onChanged();
                }
                if (other.hasMinLen()) {
                    setMinLen(other.getMinLen());
                }
                if (other.hasMaxLen()) {
                    setMaxLen(other.getMaxLen());
                }
                if (other.hasMinBytes()) {
                    setMinBytes(other.getMinBytes());
                }
                if (other.hasMaxBytes()) {
                    setMaxBytes(other.getMaxBytes());
                }
                if (other.hasPattern()) {
                    bitField0_ |= 0x00000020;
                    pattern_ = other.pattern_;
                    onChanged();
                }
                if (other.hasPrefix()) {
                    bitField0_ |= 0x00000040;
                    prefix_ = other.prefix_;
                    onChanged();
                }
                if (other.hasSuffix()) {
                    bitField0_ |= 0x00000080;
                    suffix_ = other.suffix_;
                    onChanged();
                }
                if (other.hasContains()) {
                    bitField0_ |= 0x00000100;
                    contains_ = other.contains_;
                    onChanged();
                }
                if (!other.in_.isEmpty()) {
                    if (in_.isEmpty()) {
                        in_ = other.in_;
                        bitField0_ = (bitField0_ & ~0x00000200);
                    } else {
                        ensureInIsMutable();
                        in_.addAll(other.in_);
                    }
                    onChanged();
                }
                if (!other.notIn_.isEmpty()) {
                    if (notIn_.isEmpty()) {
                        notIn_ = other.notIn_;
                        bitField0_ = (bitField0_ & ~0x00000400);
                    } else {
                        ensureNotInIsMutable();
                        notIn_.addAll(other.notIn_);
                    }
                    onChanged();
                }
                switch (other.getWellKnownCase()) {
                    case EMAIL: {
                        setEmail(other.getEmail());
                        break;
                    }
                    case HOSTNAME: {
                        setHostname(other.getHostname());
                        break;
                    }
                    case IP: {
                        setIp(other.getIp());
                        break;
                    }
                    case IPV4: {
                        setIpv4(other.getIpv4());
                        break;
                    }
                    case IPV6: {
                        setIpv6(other.getIpv6());
                        break;
                    }
                    case URI: {
                        setUri(other.getUri());
                        break;
                    }
                    case URI_REF: {
                        setUriRef(other.getUriRef());
                        break;
                    }
                    case WELLKNOWN_NOT_SET: {
                        break;
                    }
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {

                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                Validate.StringRules parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (Validate.StringRules) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int wellKnownCase_ = 0;
            private java.lang.Object wellKnown_;

            public WellKnownCase
            getWellKnownCase() {

                return WellKnownCase.forNumber(
                        wellKnownCase_);
            }

            public Builder clearWellKnown() {

                wellKnownCase_ = 0;
                wellKnown_ = null;
                onChanged();
                return this;
            }

            private int bitField0_;

            private java.lang.Object const_ = "";

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional string const = 1;</code>
             */
            public boolean hasConst() {

                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional string const = 1;</code>
             */
            public java.lang.String getConst() {

                java.lang.Object ref = const_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        const_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional string const = 1;</code>
             */
            public com.google.protobuf.ByteString
            getConstBytes() {

                java.lang.Object ref = const_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    const_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional string const = 1;</code>
             */
            public Builder setConst(
                    java.lang.String value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                const_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional string const = 1;</code>
             */
            public Builder clearConst() {

                bitField0_ = (bitField0_ & ~0x00000001);
                const_ = getDefaultInstance().getConst();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional string const = 1;</code>
             */
            public Builder setConstBytes(
                    com.google.protobuf.ByteString value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                const_ = value;
                onChanged();
                return this;
            }

            private long minLen_;

            /**
             * <pre>
             * MinLen specifies that this field must be the specified number of
             * characters (Unicode code points) at a minimum. Note that the number of
             * characters may differ from the number of bytes in the string.
             * </pre>
             *
             * <code>optional uint64 min_len = 2;</code>
             */
            public boolean hasMinLen() {

                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <pre>
             * MinLen specifies that this field must be the specified number of
             * characters (Unicode code points) at a minimum. Note that the number of
             * characters may differ from the number of bytes in the string.
             * </pre>
             *
             * <code>optional uint64 min_len = 2;</code>
             */
            public long getMinLen() {

                return minLen_;
            }

            /**
             * <pre>
             * MinLen specifies that this field must be the specified number of
             * characters (Unicode code points) at a minimum. Note that the number of
             * characters may differ from the number of bytes in the string.
             * </pre>
             *
             * <code>optional uint64 min_len = 2;</code>
             */
            public Builder setMinLen(long value) {

                bitField0_ |= 0x00000002;
                minLen_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * MinLen specifies that this field must be the specified number of
             * characters (Unicode code points) at a minimum. Note that the number of
             * characters may differ from the number of bytes in the string.
             * </pre>
             *
             * <code>optional uint64 min_len = 2;</code>
             */
            public Builder clearMinLen() {

                bitField0_ = (bitField0_ & ~0x00000002);
                minLen_ = 0L;
                onChanged();
                return this;
            }

            private long maxLen_;

            /**
             * <pre>
             * MaxLen specifies that this field must be the specified number of
             * characters (Unicode code points) at a maximum. Note that the number of
             * characters may differ from the number of bytes in the string.
             * </pre>
             *
             * <code>optional uint64 max_len = 3;</code>
             */
            public boolean hasMaxLen() {

                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <pre>
             * MaxLen specifies that this field must be the specified number of
             * characters (Unicode code points) at a maximum. Note that the number of
             * characters may differ from the number of bytes in the string.
             * </pre>
             *
             * <code>optional uint64 max_len = 3;</code>
             */
            public long getMaxLen() {

                return maxLen_;
            }

            /**
             * <pre>
             * MaxLen specifies that this field must be the specified number of
             * characters (Unicode code points) at a maximum. Note that the number of
             * characters may differ from the number of bytes in the string.
             * </pre>
             *
             * <code>optional uint64 max_len = 3;</code>
             */
            public Builder setMaxLen(long value) {

                bitField0_ |= 0x00000004;
                maxLen_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * MaxLen specifies that this field must be the specified number of
             * characters (Unicode code points) at a maximum. Note that the number of
             * characters may differ from the number of bytes in the string.
             * </pre>
             *
             * <code>optional uint64 max_len = 3;</code>
             */
            public Builder clearMaxLen() {

                bitField0_ = (bitField0_ & ~0x00000004);
                maxLen_ = 0L;
                onChanged();
                return this;
            }

            private long minBytes_;

            /**
             * <pre>
             * MinBytes specifies that this field must be the specified number of bytes
             * at a minimum
             * </pre>
             *
             * <code>optional uint64 min_bytes = 4;</code>
             */
            public boolean hasMinBytes() {

                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <pre>
             * MinBytes specifies that this field must be the specified number of bytes
             * at a minimum
             * </pre>
             *
             * <code>optional uint64 min_bytes = 4;</code>
             */
            public long getMinBytes() {

                return minBytes_;
            }

            /**
             * <pre>
             * MinBytes specifies that this field must be the specified number of bytes
             * at a minimum
             * </pre>
             *
             * <code>optional uint64 min_bytes = 4;</code>
             */
            public Builder setMinBytes(long value) {

                bitField0_ |= 0x00000008;
                minBytes_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * MinBytes specifies that this field must be the specified number of bytes
             * at a minimum
             * </pre>
             *
             * <code>optional uint64 min_bytes = 4;</code>
             */
            public Builder clearMinBytes() {

                bitField0_ = (bitField0_ & ~0x00000008);
                minBytes_ = 0L;
                onChanged();
                return this;
            }

            private long maxBytes_;

            /**
             * <pre>
             * MaxBytes specifies that this field must be the specified number of bytes
             * at a maximum
             * </pre>
             *
             * <code>optional uint64 max_bytes = 5;</code>
             */
            public boolean hasMaxBytes() {

                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <pre>
             * MaxBytes specifies that this field must be the specified number of bytes
             * at a maximum
             * </pre>
             *
             * <code>optional uint64 max_bytes = 5;</code>
             */
            public long getMaxBytes() {

                return maxBytes_;
            }

            /**
             * <pre>
             * MaxBytes specifies that this field must be the specified number of bytes
             * at a maximum
             * </pre>
             *
             * <code>optional uint64 max_bytes = 5;</code>
             */
            public Builder setMaxBytes(long value) {

                bitField0_ |= 0x00000010;
                maxBytes_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * MaxBytes specifies that this field must be the specified number of bytes
             * at a maximum
             * </pre>
             *
             * <code>optional uint64 max_bytes = 5;</code>
             */
            public Builder clearMaxBytes() {

                bitField0_ = (bitField0_ & ~0x00000010);
                maxBytes_ = 0L;
                onChanged();
                return this;
            }

            private java.lang.Object pattern_ = "";

            /**
             * <pre>
             * Pattern specifes that this field must match against the specified
             * regular expression (RE2 syntax). The included expression should elide
             * any delimiters.
             * </pre>
             *
             * <code>optional string pattern = 6;</code>
             */
            public boolean hasPattern() {

                return ((bitField0_ & 0x00000020) == 0x00000020);
            }

            /**
             * <pre>
             * Pattern specifes that this field must match against the specified
             * regular expression (RE2 syntax). The included expression should elide
             * any delimiters.
             * </pre>
             *
             * <code>optional string pattern = 6;</code>
             */
            public java.lang.String getPattern() {

                java.lang.Object ref = pattern_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        pattern_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * Pattern specifes that this field must match against the specified
             * regular expression (RE2 syntax). The included expression should elide
             * any delimiters.
             * </pre>
             *
             * <code>optional string pattern = 6;</code>
             */
            public com.google.protobuf.ByteString
            getPatternBytes() {

                java.lang.Object ref = pattern_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    pattern_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * Pattern specifes that this field must match against the specified
             * regular expression (RE2 syntax). The included expression should elide
             * any delimiters.
             * </pre>
             *
             * <code>optional string pattern = 6;</code>
             */
            public Builder setPattern(
                    java.lang.String value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000020;
                pattern_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Pattern specifes that this field must match against the specified
             * regular expression (RE2 syntax). The included expression should elide
             * any delimiters.
             * </pre>
             *
             * <code>optional string pattern = 6;</code>
             */
            public Builder clearPattern() {

                bitField0_ = (bitField0_ & ~0x00000020);
                pattern_ = getDefaultInstance().getPattern();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Pattern specifes that this field must match against the specified
             * regular expression (RE2 syntax). The included expression should elide
             * any delimiters.
             * </pre>
             *
             * <code>optional string pattern = 6;</code>
             */
            public Builder setPatternBytes(
                    com.google.protobuf.ByteString value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000020;
                pattern_ = value;
                onChanged();
                return this;
            }

            private java.lang.Object prefix_ = "";

            /**
             * <pre>
             * Prefix specifies that this field must have the specified substring at
             * the beginning of the string.
             * </pre>
             *
             * <code>optional string prefix = 7;</code>
             */
            public boolean hasPrefix() {

                return ((bitField0_ & 0x00000040) == 0x00000040);
            }

            /**
             * <pre>
             * Prefix specifies that this field must have the specified substring at
             * the beginning of the string.
             * </pre>
             *
             * <code>optional string prefix = 7;</code>
             */
            public java.lang.String getPrefix() {

                java.lang.Object ref = prefix_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        prefix_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * Prefix specifies that this field must have the specified substring at
             * the beginning of the string.
             * </pre>
             *
             * <code>optional string prefix = 7;</code>
             */
            public com.google.protobuf.ByteString
            getPrefixBytes() {

                java.lang.Object ref = prefix_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    prefix_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * Prefix specifies that this field must have the specified substring at
             * the beginning of the string.
             * </pre>
             *
             * <code>optional string prefix = 7;</code>
             */
            public Builder setPrefix(
                    java.lang.String value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000040;
                prefix_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Prefix specifies that this field must have the specified substring at
             * the beginning of the string.
             * </pre>
             *
             * <code>optional string prefix = 7;</code>
             */
            public Builder clearPrefix() {

                bitField0_ = (bitField0_ & ~0x00000040);
                prefix_ = getDefaultInstance().getPrefix();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Prefix specifies that this field must have the specified substring at
             * the beginning of the string.
             * </pre>
             *
             * <code>optional string prefix = 7;</code>
             */
            public Builder setPrefixBytes(
                    com.google.protobuf.ByteString value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000040;
                prefix_ = value;
                onChanged();
                return this;
            }

            private java.lang.Object suffix_ = "";

            /**
             * <pre>
             * Suffix specifies that this field must have the specified substring at
             * the end of the string.
             * </pre>
             *
             * <code>optional string suffix = 8;</code>
             */
            public boolean hasSuffix() {

                return ((bitField0_ & 0x00000080) == 0x00000080);
            }

            /**
             * <pre>
             * Suffix specifies that this field must have the specified substring at
             * the end of the string.
             * </pre>
             *
             * <code>optional string suffix = 8;</code>
             */
            public java.lang.String getSuffix() {

                java.lang.Object ref = suffix_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        suffix_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * Suffix specifies that this field must have the specified substring at
             * the end of the string.
             * </pre>
             *
             * <code>optional string suffix = 8;</code>
             */
            public com.google.protobuf.ByteString
            getSuffixBytes() {

                java.lang.Object ref = suffix_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    suffix_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * Suffix specifies that this field must have the specified substring at
             * the end of the string.
             * </pre>
             *
             * <code>optional string suffix = 8;</code>
             */
            public Builder setSuffix(
                    java.lang.String value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000080;
                suffix_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Suffix specifies that this field must have the specified substring at
             * the end of the string.
             * </pre>
             *
             * <code>optional string suffix = 8;</code>
             */
            public Builder clearSuffix() {

                bitField0_ = (bitField0_ & ~0x00000080);
                suffix_ = getDefaultInstance().getSuffix();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Suffix specifies that this field must have the specified substring at
             * the end of the string.
             * </pre>
             *
             * <code>optional string suffix = 8;</code>
             */
            public Builder setSuffixBytes(
                    com.google.protobuf.ByteString value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000080;
                suffix_ = value;
                onChanged();
                return this;
            }

            private java.lang.Object contains_ = "";

            /**
             * <pre>
             * Contains specifies that this field must have the specified substring
             * anywhere in the string.
             * </pre>
             *
             * <code>optional string contains = 9;</code>
             */
            public boolean hasContains() {

                return ((bitField0_ & 0x00000100) == 0x00000100);
            }

            /**
             * <pre>
             * Contains specifies that this field must have the specified substring
             * anywhere in the string.
             * </pre>
             *
             * <code>optional string contains = 9;</code>
             */
            public java.lang.String getContains() {

                java.lang.Object ref = contains_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        contains_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * Contains specifies that this field must have the specified substring
             * anywhere in the string.
             * </pre>
             *
             * <code>optional string contains = 9;</code>
             */
            public com.google.protobuf.ByteString
            getContainsBytes() {

                java.lang.Object ref = contains_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    contains_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * Contains specifies that this field must have the specified substring
             * anywhere in the string.
             * </pre>
             *
             * <code>optional string contains = 9;</code>
             */
            public Builder setContains(
                    java.lang.String value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000100;
                contains_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Contains specifies that this field must have the specified substring
             * anywhere in the string.
             * </pre>
             *
             * <code>optional string contains = 9;</code>
             */
            public Builder clearContains() {

                bitField0_ = (bitField0_ & ~0x00000100);
                contains_ = getDefaultInstance().getContains();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Contains specifies that this field must have the specified substring
             * anywhere in the string.
             * </pre>
             *
             * <code>optional string contains = 9;</code>
             */
            public Builder setContainsBytes(
                    com.google.protobuf.ByteString value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000100;
                contains_ = value;
                onChanged();
                return this;
            }

            private com.google.protobuf.LazyStringList in_ = com.google.protobuf.LazyStringArrayList.EMPTY;

            private void ensureInIsMutable() {

                if (!((bitField0_ & 0x00000200) == 0x00000200)) {
                    in_ = new com.google.protobuf.LazyStringArrayList(in_);
                    bitField0_ |= 0x00000200;
                }
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated string in = 10;</code>
             */
            public com.google.protobuf.ProtocolStringList
            getInList() {

                return in_.getUnmodifiableView();
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated string in = 10;</code>
             */
            public int getInCount() {

                return in_.size();
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated string in = 10;</code>
             */
            public java.lang.String getIn(int index) {

                return in_.get(index);
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated string in = 10;</code>
             */
            public com.google.protobuf.ByteString
            getInBytes(int index) {

                return in_.getByteString(index);
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated string in = 10;</code>
             */
            public Builder setIn(
                    int index, java.lang.String value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                ensureInIsMutable();
                in_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated string in = 10;</code>
             */
            public Builder addIn(
                    java.lang.String value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                ensureInIsMutable();
                in_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated string in = 10;</code>
             */
            public Builder addAllIn(
                    java.lang.Iterable<java.lang.String> values) {

                ensureInIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, in_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated string in = 10;</code>
             */
            public Builder clearIn() {

                in_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000200);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated string in = 10;</code>
             */
            public Builder addInBytes(
                    com.google.protobuf.ByteString value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                ensureInIsMutable();
                in_.add(value);
                onChanged();
                return this;
            }

            private com.google.protobuf.LazyStringList notIn_ = com.google.protobuf.LazyStringArrayList.EMPTY;

            private void ensureNotInIsMutable() {

                if (!((bitField0_ & 0x00000400) == 0x00000400)) {
                    notIn_ = new com.google.protobuf.LazyStringArrayList(notIn_);
                    bitField0_ |= 0x00000400;
                }
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated string not_in = 11;</code>
             */
            public com.google.protobuf.ProtocolStringList
            getNotInList() {

                return notIn_.getUnmodifiableView();
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated string not_in = 11;</code>
             */
            public int getNotInCount() {

                return notIn_.size();
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated string not_in = 11;</code>
             */
            public java.lang.String getNotIn(int index) {

                return notIn_.get(index);
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated string not_in = 11;</code>
             */
            public com.google.protobuf.ByteString
            getNotInBytes(int index) {

                return notIn_.getByteString(index);
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated string not_in = 11;</code>
             */
            public Builder setNotIn(
                    int index, java.lang.String value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                ensureNotInIsMutable();
                notIn_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated string not_in = 11;</code>
             */
            public Builder addNotIn(
                    java.lang.String value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                ensureNotInIsMutable();
                notIn_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated string not_in = 11;</code>
             */
            public Builder addAllNotIn(
                    java.lang.Iterable<java.lang.String> values) {

                ensureNotInIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, notIn_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated string not_in = 11;</code>
             */
            public Builder clearNotIn() {

                notIn_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000400);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated string not_in = 11;</code>
             */
            public Builder addNotInBytes(
                    com.google.protobuf.ByteString value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                ensureNotInIsMutable();
                notIn_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Email specifies that the field must be a valid email address as
             * defined by RFC 5322
             * </pre>
             *
             * <code>optional bool email = 12;</code>
             */
            public boolean hasEmail() {

                return wellKnownCase_ == 12;
            }

            /**
             * <pre>
             * Email specifies that the field must be a valid email address as
             * defined by RFC 5322
             * </pre>
             *
             * <code>optional bool email = 12;</code>
             */
            public boolean getEmail() {

                if (wellKnownCase_ == 12) {
                    return (java.lang.Boolean) wellKnown_;
                }
                return false;
            }

            /**
             * <pre>
             * Email specifies that the field must be a valid email address as
             * defined by RFC 5322
             * </pre>
             *
             * <code>optional bool email = 12;</code>
             */
            public Builder setEmail(boolean value) {

                wellKnownCase_ = 12;
                wellKnown_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Email specifies that the field must be a valid email address as
             * defined by RFC 5322
             * </pre>
             *
             * <code>optional bool email = 12;</code>
             */
            public Builder clearEmail() {

                if (wellKnownCase_ == 12) {
                    wellKnownCase_ = 0;
                    wellKnown_ = null;
                    onChanged();
                }
                return this;
            }

            /**
             * <pre>
             * Hostname specifies that the field must be a valid hostname as
             * defined by RFC 1034. This constraint does not support
             * internationalized domain names (IDNs).
             * </pre>
             *
             * <code>optional bool hostname = 13;</code>
             */
            public boolean hasHostname() {

                return wellKnownCase_ == 13;
            }

            /**
             * <pre>
             * Hostname specifies that the field must be a valid hostname as
             * defined by RFC 1034. This constraint does not support
             * internationalized domain names (IDNs).
             * </pre>
             *
             * <code>optional bool hostname = 13;</code>
             */
            public boolean getHostname() {

                if (wellKnownCase_ == 13) {
                    return (java.lang.Boolean) wellKnown_;
                }
                return false;
            }

            /**
             * <pre>
             * Hostname specifies that the field must be a valid hostname as
             * defined by RFC 1034. This constraint does not support
             * internationalized domain names (IDNs).
             * </pre>
             *
             * <code>optional bool hostname = 13;</code>
             */
            public Builder setHostname(boolean value) {

                wellKnownCase_ = 13;
                wellKnown_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Hostname specifies that the field must be a valid hostname as
             * defined by RFC 1034. This constraint does not support
             * internationalized domain names (IDNs).
             * </pre>
             *
             * <code>optional bool hostname = 13;</code>
             */
            public Builder clearHostname() {

                if (wellKnownCase_ == 13) {
                    wellKnownCase_ = 0;
                    wellKnown_ = null;
                    onChanged();
                }
                return this;
            }

            /**
             * <pre>
             * Ip specifies that the field must be a valid IP (v4 or v6) address.
             * Valid IPv6 addresses should not include surrounding square brackets.
             * </pre>
             *
             * <code>optional bool ip = 14;</code>
             */
            public boolean hasIp() {

                return wellKnownCase_ == 14;
            }

            /**
             * <pre>
             * Ip specifies that the field must be a valid IP (v4 or v6) address.
             * Valid IPv6 addresses should not include surrounding square brackets.
             * </pre>
             *
             * <code>optional bool ip = 14;</code>
             */
            public boolean getIp() {

                if (wellKnownCase_ == 14) {
                    return (java.lang.Boolean) wellKnown_;
                }
                return false;
            }

            /**
             * <pre>
             * Ip specifies that the field must be a valid IP (v4 or v6) address.
             * Valid IPv6 addresses should not include surrounding square brackets.
             * </pre>
             *
             * <code>optional bool ip = 14;</code>
             */
            public Builder setIp(boolean value) {

                wellKnownCase_ = 14;
                wellKnown_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Ip specifies that the field must be a valid IP (v4 or v6) address.
             * Valid IPv6 addresses should not include surrounding square brackets.
             * </pre>
             *
             * <code>optional bool ip = 14;</code>
             */
            public Builder clearIp() {

                if (wellKnownCase_ == 14) {
                    wellKnownCase_ = 0;
                    wellKnown_ = null;
                    onChanged();
                }
                return this;
            }

            /**
             * <pre>
             * Ipv4 specifies that the field must be a valid IPv4 address.
             * </pre>
             *
             * <code>optional bool ipv4 = 15;</code>
             */
            public boolean hasIpv4() {

                return wellKnownCase_ == 15;
            }

            /**
             * <pre>
             * Ipv4 specifies that the field must be a valid IPv4 address.
             * </pre>
             *
             * <code>optional bool ipv4 = 15;</code>
             */
            public boolean getIpv4() {

                if (wellKnownCase_ == 15) {
                    return (java.lang.Boolean) wellKnown_;
                }
                return false;
            }

            /**
             * <pre>
             * Ipv4 specifies that the field must be a valid IPv4 address.
             * </pre>
             *
             * <code>optional bool ipv4 = 15;</code>
             */
            public Builder setIpv4(boolean value) {

                wellKnownCase_ = 15;
                wellKnown_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Ipv4 specifies that the field must be a valid IPv4 address.
             * </pre>
             *
             * <code>optional bool ipv4 = 15;</code>
             */
            public Builder clearIpv4() {

                if (wellKnownCase_ == 15) {
                    wellKnownCase_ = 0;
                    wellKnown_ = null;
                    onChanged();
                }
                return this;
            }

            /**
             * <pre>
             * Ipv6 specifies that the field must be a valid IPv6 address. Valid
             * IPv6 addresses should not include surrounding square brackets.
             * </pre>
             *
             * <code>optional bool ipv6 = 16;</code>
             */
            public boolean hasIpv6() {

                return wellKnownCase_ == 16;
            }

            /**
             * <pre>
             * Ipv6 specifies that the field must be a valid IPv6 address. Valid
             * IPv6 addresses should not include surrounding square brackets.
             * </pre>
             *
             * <code>optional bool ipv6 = 16;</code>
             */
            public boolean getIpv6() {

                if (wellKnownCase_ == 16) {
                    return (java.lang.Boolean) wellKnown_;
                }
                return false;
            }

            /**
             * <pre>
             * Ipv6 specifies that the field must be a valid IPv6 address. Valid
             * IPv6 addresses should not include surrounding square brackets.
             * </pre>
             *
             * <code>optional bool ipv6 = 16;</code>
             */
            public Builder setIpv6(boolean value) {

                wellKnownCase_ = 16;
                wellKnown_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Ipv6 specifies that the field must be a valid IPv6 address. Valid
             * IPv6 addresses should not include surrounding square brackets.
             * </pre>
             *
             * <code>optional bool ipv6 = 16;</code>
             */
            public Builder clearIpv6() {

                if (wellKnownCase_ == 16) {
                    wellKnownCase_ = 0;
                    wellKnown_ = null;
                    onChanged();
                }
                return this;
            }

            /**
             * <pre>
             * Uri specifies that the field must be a valid, absolute URI as defined
             * by RFC 3986
             * </pre>
             *
             * <code>optional bool uri = 17;</code>
             */
            public boolean hasUri() {

                return wellKnownCase_ == 17;
            }

            /**
             * <pre>
             * Uri specifies that the field must be a valid, absolute URI as defined
             * by RFC 3986
             * </pre>
             *
             * <code>optional bool uri = 17;</code>
             */
            public boolean getUri() {

                if (wellKnownCase_ == 17) {
                    return (java.lang.Boolean) wellKnown_;
                }
                return false;
            }

            /**
             * <pre>
             * Uri specifies that the field must be a valid, absolute URI as defined
             * by RFC 3986
             * </pre>
             *
             * <code>optional bool uri = 17;</code>
             */
            public Builder setUri(boolean value) {

                wellKnownCase_ = 17;
                wellKnown_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Uri specifies that the field must be a valid, absolute URI as defined
             * by RFC 3986
             * </pre>
             *
             * <code>optional bool uri = 17;</code>
             */
            public Builder clearUri() {

                if (wellKnownCase_ == 17) {
                    wellKnownCase_ = 0;
                    wellKnown_ = null;
                    onChanged();
                }
                return this;
            }

            /**
             * <pre>
             * UriRef specifies that the field must be a valid URI as defined by RFC
             * 3986 and may be relative or absolute.
             * </pre>
             *
             * <code>optional bool uri_ref = 18;</code>
             */
            public boolean hasUriRef() {

                return wellKnownCase_ == 18;
            }

            /**
             * <pre>
             * UriRef specifies that the field must be a valid URI as defined by RFC
             * 3986 and may be relative or absolute.
             * </pre>
             *
             * <code>optional bool uri_ref = 18;</code>
             */
            public boolean getUriRef() {

                if (wellKnownCase_ == 18) {
                    return (java.lang.Boolean) wellKnown_;
                }
                return false;
            }

            /**
             * <pre>
             * UriRef specifies that the field must be a valid URI as defined by RFC
             * 3986 and may be relative or absolute.
             * </pre>
             *
             * <code>optional bool uri_ref = 18;</code>
             */
            public Builder setUriRef(boolean value) {

                wellKnownCase_ = 18;
                wellKnown_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * UriRef specifies that the field must be a valid URI as defined by RFC
             * 3986 and may be relative or absolute.
             * </pre>
             *
             * <code>optional bool uri_ref = 18;</code>
             */
            public Builder clearUriRef() {

                if (wellKnownCase_ == 18) {
                    wellKnownCase_ = 0;
                    wellKnown_ = null;
                    onChanged();
                }
                return this;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:validate.StringRules)
        }

        // @@protoc_insertion_point(class_scope:validate.StringRules)
        private static final Validate.StringRules DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new Validate.StringRules();
        }

        public static Validate.StringRules getDefaultInstance() {

            return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated
        public static final com.google.protobuf.Parser<StringRules>
                PARSER = new com.google.protobuf.AbstractParser<StringRules>() {
            @java.lang.Override
            public StringRules parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return new StringRules(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<StringRules> parser() {

            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<StringRules> getParserForType() {

            return PARSER;
        }

        @java.lang.Override
        public Validate.StringRules getDefaultInstanceForType() {

            return DEFAULT_INSTANCE;
        }

    }

    public interface BytesRulesOrBuilder extends
            // @@protoc_insertion_point(interface_extends:validate.BytesRules)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional bytes const = 1;</code>
         */
        boolean hasConst();

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional bytes const = 1;</code>
         */
        com.google.protobuf.ByteString getConst();

        /**
         * <pre>
         * MinLen specifies that this field must be the specified number of bytes
         * at a minimum
         * </pre>
         *
         * <code>optional uint64 min_len = 2;</code>
         */
        boolean hasMinLen();

        /**
         * <pre>
         * MinLen specifies that this field must be the specified number of bytes
         * at a minimum
         * </pre>
         *
         * <code>optional uint64 min_len = 2;</code>
         */
        long getMinLen();

        /**
         * <pre>
         * MaxLen specifies that this field must be the specified number of bytes
         * at a maximum
         * </pre>
         *
         * <code>optional uint64 max_len = 3;</code>
         */
        boolean hasMaxLen();

        /**
         * <pre>
         * MaxLen specifies that this field must be the specified number of bytes
         * at a maximum
         * </pre>
         *
         * <code>optional uint64 max_len = 3;</code>
         */
        long getMaxLen();

        /**
         * <pre>
         * Pattern specifes that this field must match against the specified
         * regular expression (RE2 syntax). The included expression should elide
         * any delimiters.
         * </pre>
         *
         * <code>optional string pattern = 4;</code>
         */
        boolean hasPattern();

        /**
         * <pre>
         * Pattern specifes that this field must match against the specified
         * regular expression (RE2 syntax). The included expression should elide
         * any delimiters.
         * </pre>
         *
         * <code>optional string pattern = 4;</code>
         */
        java.lang.String getPattern();

        /**
         * <pre>
         * Pattern specifes that this field must match against the specified
         * regular expression (RE2 syntax). The included expression should elide
         * any delimiters.
         * </pre>
         *
         * <code>optional string pattern = 4;</code>
         */
        com.google.protobuf.ByteString
        getPatternBytes();

        /**
         * <pre>
         * Prefix specifies that this field must have the specified bytes at the
         * beginning of the string.
         * </pre>
         *
         * <code>optional bytes prefix = 5;</code>
         */
        boolean hasPrefix();

        /**
         * <pre>
         * Prefix specifies that this field must have the specified bytes at the
         * beginning of the string.
         * </pre>
         *
         * <code>optional bytes prefix = 5;</code>
         */
        com.google.protobuf.ByteString getPrefix();

        /**
         * <pre>
         * Suffix specifies that this field must have the specified bytes at the
         * end of the string.
         * </pre>
         *
         * <code>optional bytes suffix = 6;</code>
         */
        boolean hasSuffix();

        /**
         * <pre>
         * Suffix specifies that this field must have the specified bytes at the
         * end of the string.
         * </pre>
         *
         * <code>optional bytes suffix = 6;</code>
         */
        com.google.protobuf.ByteString getSuffix();

        /**
         * <pre>
         * Contains specifies that this field must have the specified bytes
         * anywhere in the string.
         * </pre>
         *
         * <code>optional bytes contains = 7;</code>
         */
        boolean hasContains();

        /**
         * <pre>
         * Contains specifies that this field must have the specified bytes
         * anywhere in the string.
         * </pre>
         *
         * <code>optional bytes contains = 7;</code>
         */
        com.google.protobuf.ByteString getContains();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated bytes in = 8;</code>
         */
        java.util.List<com.google.protobuf.ByteString> getInList();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated bytes in = 8;</code>
         */
        int getInCount();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated bytes in = 8;</code>
         */
        com.google.protobuf.ByteString getIn(int index);

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated bytes not_in = 9;</code>
         */
        java.util.List<com.google.protobuf.ByteString> getNotInList();

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated bytes not_in = 9;</code>
         */
        int getNotInCount();

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated bytes not_in = 9;</code>
         */
        com.google.protobuf.ByteString getNotIn(int index);

        /**
         * <pre>
         * Ip specifies that the field must be a valid IP (v4 or v6) address in
         * byte format
         * </pre>
         *
         * <code>optional bool ip = 10;</code>
         */
        boolean hasIp();

        /**
         * <pre>
         * Ip specifies that the field must be a valid IP (v4 or v6) address in
         * byte format
         * </pre>
         *
         * <code>optional bool ip = 10;</code>
         */
        boolean getIp();

        /**
         * <pre>
         * Ipv4 specifies that the field must be a valid IPv4 address in byte
         * format
         * </pre>
         *
         * <code>optional bool ipv4 = 11;</code>
         */
        boolean hasIpv4();

        /**
         * <pre>
         * Ipv4 specifies that the field must be a valid IPv4 address in byte
         * format
         * </pre>
         *
         * <code>optional bool ipv4 = 11;</code>
         */
        boolean getIpv4();

        /**
         * <pre>
         * Ipv6 specifies that the field must be a valid IPv6 address in byte
         * format
         * </pre>
         *
         * <code>optional bool ipv6 = 12;</code>
         */
        boolean hasIpv6();

        /**
         * <pre>
         * Ipv6 specifies that the field must be a valid IPv6 address in byte
         * format
         * </pre>
         *
         * <code>optional bool ipv6 = 12;</code>
         */
        boolean getIpv6();

        public Validate.BytesRules.WellKnownCase getWellKnownCase();
    }

    /**
     * <pre>
     * BytesRules describe the constraints applied to `bytes` values
     * </pre>
     * <p>
     * Protobuf type {@code validate.BytesRules}
     */
    public static final class BytesRules extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:validate.BytesRules)
            BytesRulesOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use BytesRules.newBuilder() to construct.
        private BytesRules(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

            super(builder);
        }

        private BytesRules() {

            const_ = com.google.protobuf.ByteString.EMPTY;
            minLen_ = 0L;
            maxLen_ = 0L;
            pattern_ = "";
            prefix_ = com.google.protobuf.ByteString.EMPTY;
            suffix_ = com.google.protobuf.ByteString.EMPTY;
            contains_ = com.google.protobuf.ByteString.EMPTY;
            in_ = java.util.Collections.emptyList();
            notIn_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {

            return this.unknownFields;
        }

        private BytesRules(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10: {
                            bitField0_ |= 0x00000001;
                            const_ = input.readBytes();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            minLen_ = input.readUInt64();
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            maxLen_ = input.readUInt64();
                            break;
                        }
                        case 34: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000008;
                            pattern_ = bs;
                            break;
                        }
                        case 42: {
                            bitField0_ |= 0x00000010;
                            prefix_ = input.readBytes();
                            break;
                        }
                        case 50: {
                            bitField0_ |= 0x00000020;
                            suffix_ = input.readBytes();
                            break;
                        }
                        case 58: {
                            bitField0_ |= 0x00000040;
                            contains_ = input.readBytes();
                            break;
                        }
                        case 66: {
                            if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                                in_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                                mutable_bitField0_ |= 0x00000080;
                            }
                            in_.add(input.readBytes());
                            break;
                        }
                        case 74: {
                            if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                                notIn_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                                mutable_bitField0_ |= 0x00000100;
                            }
                            notIn_.add(input.readBytes());
                            break;
                        }
                        case 80: {
                            wellKnownCase_ = 10;
                            wellKnown_ = input.readBool();
                            break;
                        }
                        case 88: {
                            wellKnownCase_ = 11;
                            wellKnown_ = input.readBool();
                            break;
                        }
                        case 96: {
                            wellKnownCase_ = 12;
                            wellKnown_ = input.readBool();
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                    in_ = java.util.Collections.unmodifiableList(in_);
                }
                if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                    notIn_ = java.util.Collections.unmodifiableList(notIn_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {

            return Validate.internal_static_validate_BytesRules_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {

            return Validate.internal_static_validate_BytesRules_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Validate.BytesRules.class, Validate.BytesRules.Builder.class);
        }

        private int bitField0_;
        private int wellKnownCase_ = 0;
        private java.lang.Object wellKnown_;

        public enum WellKnownCase
                implements com.google.protobuf.Internal.EnumLite {
            IP(10),
            IPV4(11),
            IPV6(12),
            WELLKNOWN_NOT_SET(0);
            private final int value;

            private WellKnownCase(int value) {

                this.value = value;
            }

            /**
             * @deprecated Use {@link #forNumber(int)} instead.
             */
            @java.lang.Deprecated
            public static WellKnownCase valueOf(int value) {

                return forNumber(value);
            }

            public static WellKnownCase forNumber(int value) {

                switch (value) {
                    case 10:
                        return IP;
                    case 11:
                        return IPV4;
                    case 12:
                        return IPV6;
                    case 0:
                        return WELLKNOWN_NOT_SET;
                    default:
                        return null;
                }
            }

            public int getNumber() {

                return this.value;
            }
        }

        ;

        public WellKnownCase
        getWellKnownCase() {

            return WellKnownCase.forNumber(
                    wellKnownCase_);
        }

        public static final int CONST_FIELD_NUMBER = 1;
        private com.google.protobuf.ByteString const_;

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional bytes const = 1;</code>
         */
        public boolean hasConst() {

            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional bytes const = 1;</code>
         */
        public com.google.protobuf.ByteString getConst() {

            return const_;
        }

        public static final int MIN_LEN_FIELD_NUMBER = 2;
        private long minLen_;

        /**
         * <pre>
         * MinLen specifies that this field must be the specified number of bytes
         * at a minimum
         * </pre>
         *
         * <code>optional uint64 min_len = 2;</code>
         */
        public boolean hasMinLen() {

            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <pre>
         * MinLen specifies that this field must be the specified number of bytes
         * at a minimum
         * </pre>
         *
         * <code>optional uint64 min_len = 2;</code>
         */
        public long getMinLen() {

            return minLen_;
        }

        public static final int MAX_LEN_FIELD_NUMBER = 3;
        private long maxLen_;

        /**
         * <pre>
         * MaxLen specifies that this field must be the specified number of bytes
         * at a maximum
         * </pre>
         *
         * <code>optional uint64 max_len = 3;</code>
         */
        public boolean hasMaxLen() {

            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <pre>
         * MaxLen specifies that this field must be the specified number of bytes
         * at a maximum
         * </pre>
         *
         * <code>optional uint64 max_len = 3;</code>
         */
        public long getMaxLen() {

            return maxLen_;
        }

        public static final int PATTERN_FIELD_NUMBER = 4;
        private volatile java.lang.Object pattern_;

        /**
         * <pre>
         * Pattern specifes that this field must match against the specified
         * regular expression (RE2 syntax). The included expression should elide
         * any delimiters.
         * </pre>
         *
         * <code>optional string pattern = 4;</code>
         */
        public boolean hasPattern() {

            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <pre>
         * Pattern specifes that this field must match against the specified
         * regular expression (RE2 syntax). The included expression should elide
         * any delimiters.
         * </pre>
         *
         * <code>optional string pattern = 4;</code>
         */
        public java.lang.String getPattern() {

            java.lang.Object ref = pattern_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    pattern_ = s;
                }
                return s;
            }
        }

        /**
         * <pre>
         * Pattern specifes that this field must match against the specified
         * regular expression (RE2 syntax). The included expression should elide
         * any delimiters.
         * </pre>
         *
         * <code>optional string pattern = 4;</code>
         */
        public com.google.protobuf.ByteString
        getPatternBytes() {

            java.lang.Object ref = pattern_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                pattern_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int PREFIX_FIELD_NUMBER = 5;
        private com.google.protobuf.ByteString prefix_;

        /**
         * <pre>
         * Prefix specifies that this field must have the specified bytes at the
         * beginning of the string.
         * </pre>
         *
         * <code>optional bytes prefix = 5;</code>
         */
        public boolean hasPrefix() {

            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <pre>
         * Prefix specifies that this field must have the specified bytes at the
         * beginning of the string.
         * </pre>
         *
         * <code>optional bytes prefix = 5;</code>
         */
        public com.google.protobuf.ByteString getPrefix() {

            return prefix_;
        }

        public static final int SUFFIX_FIELD_NUMBER = 6;
        private com.google.protobuf.ByteString suffix_;

        /**
         * <pre>
         * Suffix specifies that this field must have the specified bytes at the
         * end of the string.
         * </pre>
         *
         * <code>optional bytes suffix = 6;</code>
         */
        public boolean hasSuffix() {

            return ((bitField0_ & 0x00000020) == 0x00000020);
        }

        /**
         * <pre>
         * Suffix specifies that this field must have the specified bytes at the
         * end of the string.
         * </pre>
         *
         * <code>optional bytes suffix = 6;</code>
         */
        public com.google.protobuf.ByteString getSuffix() {

            return suffix_;
        }

        public static final int CONTAINS_FIELD_NUMBER = 7;
        private com.google.protobuf.ByteString contains_;

        /**
         * <pre>
         * Contains specifies that this field must have the specified bytes
         * anywhere in the string.
         * </pre>
         *
         * <code>optional bytes contains = 7;</code>
         */
        public boolean hasContains() {

            return ((bitField0_ & 0x00000040) == 0x00000040);
        }

        /**
         * <pre>
         * Contains specifies that this field must have the specified bytes
         * anywhere in the string.
         * </pre>
         *
         * <code>optional bytes contains = 7;</code>
         */
        public com.google.protobuf.ByteString getContains() {

            return contains_;
        }

        public static final int IN_FIELD_NUMBER = 8;
        private java.util.List<com.google.protobuf.ByteString> in_;

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated bytes in = 8;</code>
         */
        public java.util.List<com.google.protobuf.ByteString>
        getInList() {

            return in_;
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated bytes in = 8;</code>
         */
        public int getInCount() {

            return in_.size();
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated bytes in = 8;</code>
         */
        public com.google.protobuf.ByteString getIn(int index) {

            return in_.get(index);
        }

        public static final int NOT_IN_FIELD_NUMBER = 9;
        private java.util.List<com.google.protobuf.ByteString> notIn_;

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated bytes not_in = 9;</code>
         */
        public java.util.List<com.google.protobuf.ByteString>
        getNotInList() {

            return notIn_;
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated bytes not_in = 9;</code>
         */
        public int getNotInCount() {

            return notIn_.size();
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated bytes not_in = 9;</code>
         */
        public com.google.protobuf.ByteString getNotIn(int index) {

            return notIn_.get(index);
        }

        public static final int IP_FIELD_NUMBER = 10;

        /**
         * <pre>
         * Ip specifies that the field must be a valid IP (v4 or v6) address in
         * byte format
         * </pre>
         *
         * <code>optional bool ip = 10;</code>
         */
        public boolean hasIp() {

            return wellKnownCase_ == 10;
        }

        /**
         * <pre>
         * Ip specifies that the field must be a valid IP (v4 or v6) address in
         * byte format
         * </pre>
         *
         * <code>optional bool ip = 10;</code>
         */
        public boolean getIp() {

            if (wellKnownCase_ == 10) {
                return (java.lang.Boolean) wellKnown_;
            }
            return false;
        }

        public static final int IPV4_FIELD_NUMBER = 11;

        /**
         * <pre>
         * Ipv4 specifies that the field must be a valid IPv4 address in byte
         * format
         * </pre>
         *
         * <code>optional bool ipv4 = 11;</code>
         */
        public boolean hasIpv4() {

            return wellKnownCase_ == 11;
        }

        /**
         * <pre>
         * Ipv4 specifies that the field must be a valid IPv4 address in byte
         * format
         * </pre>
         *
         * <code>optional bool ipv4 = 11;</code>
         */
        public boolean getIpv4() {

            if (wellKnownCase_ == 11) {
                return (java.lang.Boolean) wellKnown_;
            }
            return false;
        }

        public static final int IPV6_FIELD_NUMBER = 12;

        /**
         * <pre>
         * Ipv6 specifies that the field must be a valid IPv6 address in byte
         * format
         * </pre>
         *
         * <code>optional bool ipv6 = 12;</code>
         */
        public boolean hasIpv6() {

            return wellKnownCase_ == 12;
        }

        /**
         * <pre>
         * Ipv6 specifies that the field must be a valid IPv6 address in byte
         * format
         * </pre>
         *
         * <code>optional bool ipv6 = 12;</code>
         */
        public boolean getIpv6() {

            if (wellKnownCase_ == 12) {
                return (java.lang.Boolean) wellKnown_;
            }
            return false;
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {

            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {

            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeBytes(1, const_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeUInt64(2, minLen_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeUInt64(3, maxLen_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 4, pattern_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeBytes(5, prefix_);
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                output.writeBytes(6, suffix_);
            }
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
                output.writeBytes(7, contains_);
            }
            for (int i = 0; i < in_.size(); i++) {
                output.writeBytes(8, in_.get(i));
            }
            for (int i = 0; i < notIn_.size(); i++) {
                output.writeBytes(9, notIn_.get(i));
            }
            if (wellKnownCase_ == 10) {
                output.writeBool(
                        10, (boolean) ((java.lang.Boolean) wellKnown_));
            }
            if (wellKnownCase_ == 11) {
                output.writeBool(
                        11, (boolean) ((java.lang.Boolean) wellKnown_));
            }
            if (wellKnownCase_ == 12) {
                output.writeBool(
                        12, (boolean) ((java.lang.Boolean) wellKnown_));
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {

            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(1, const_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(2, minLen_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(3, maxLen_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, pattern_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(5, prefix_);
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(6, suffix_);
            }
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(7, contains_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < in_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeBytesSizeNoTag(in_.get(i));
                }
                size += dataSize;
                size += 1 * getInList().size();
            }
            {
                int dataSize = 0;
                for (int i = 0; i < notIn_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeBytesSizeNoTag(notIn_.get(i));
                }
                size += dataSize;
                size += 1 * getNotInList().size();
            }
            if (wellKnownCase_ == 10) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(
                                10, (boolean) ((java.lang.Boolean) wellKnown_));
            }
            if (wellKnownCase_ == 11) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(
                                11, (boolean) ((java.lang.Boolean) wellKnown_));
            }
            if (wellKnownCase_ == 12) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(
                                12, (boolean) ((java.lang.Boolean) wellKnown_));
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {

            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Validate.BytesRules)) {
                return super.equals(obj);
            }
            Validate.BytesRules other = (Validate.BytesRules) obj;

            boolean result = true;
            result = result && (hasConst() == other.hasConst());
            if (hasConst()) {
                result = result && getConst()
                        .equals(other.getConst());
            }
            result = result && (hasMinLen() == other.hasMinLen());
            if (hasMinLen()) {
                result = result && (getMinLen()
                        == other.getMinLen());
            }
            result = result && (hasMaxLen() == other.hasMaxLen());
            if (hasMaxLen()) {
                result = result && (getMaxLen()
                        == other.getMaxLen());
            }
            result = result && (hasPattern() == other.hasPattern());
            if (hasPattern()) {
                result = result && getPattern()
                        .equals(other.getPattern());
            }
            result = result && (hasPrefix() == other.hasPrefix());
            if (hasPrefix()) {
                result = result && getPrefix()
                        .equals(other.getPrefix());
            }
            result = result && (hasSuffix() == other.hasSuffix());
            if (hasSuffix()) {
                result = result && getSuffix()
                        .equals(other.getSuffix());
            }
            result = result && (hasContains() == other.hasContains());
            if (hasContains()) {
                result = result && getContains()
                        .equals(other.getContains());
            }
            result = result && getInList()
                    .equals(other.getInList());
            result = result && getNotInList()
                    .equals(other.getNotInList());
            result = result && getWellKnownCase().equals(
                    other.getWellKnownCase());
            if (!result) return false;
            switch (wellKnownCase_) {
                case 10:
                    result = result && (getIp()
                            == other.getIp());
                    break;
                case 11:
                    result = result && (getIpv4()
                            == other.getIpv4());
                    break;
                case 12:
                    result = result && (getIpv6()
                            == other.getIpv6());
                    break;
                case 0:
                default:
            }
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {

            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasConst()) {
                hash = (37 * hash) + CONST_FIELD_NUMBER;
                hash = (53 * hash) + getConst().hashCode();
            }
            if (hasMinLen()) {
                hash = (37 * hash) + MIN_LEN_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getMinLen());
            }
            if (hasMaxLen()) {
                hash = (37 * hash) + MAX_LEN_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getMaxLen());
            }
            if (hasPattern()) {
                hash = (37 * hash) + PATTERN_FIELD_NUMBER;
                hash = (53 * hash) + getPattern().hashCode();
            }
            if (hasPrefix()) {
                hash = (37 * hash) + PREFIX_FIELD_NUMBER;
                hash = (53 * hash) + getPrefix().hashCode();
            }
            if (hasSuffix()) {
                hash = (37 * hash) + SUFFIX_FIELD_NUMBER;
                hash = (53 * hash) + getSuffix().hashCode();
            }
            if (hasContains()) {
                hash = (37 * hash) + CONTAINS_FIELD_NUMBER;
                hash = (53 * hash) + getContains().hashCode();
            }
            if (getInCount() > 0) {
                hash = (37 * hash) + IN_FIELD_NUMBER;
                hash = (53 * hash) + getInList().hashCode();
            }
            if (getNotInCount() > 0) {
                hash = (37 * hash) + NOT_IN_FIELD_NUMBER;
                hash = (53 * hash) + getNotInList().hashCode();
            }
            switch (wellKnownCase_) {
                case 10:
                    hash = (37 * hash) + IP_FIELD_NUMBER;
                    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                            getIp());
                    break;
                case 11:
                    hash = (37 * hash) + IPV4_FIELD_NUMBER;
                    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                            getIpv4());
                    break;
                case 12:
                    hash = (37 * hash) + IPV6_FIELD_NUMBER;
                    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                            getIpv6());
                    break;
                case 0:
                default:
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static Validate.BytesRules parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.BytesRules parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.BytesRules parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.BytesRules parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.BytesRules parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.BytesRules parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.BytesRules parseFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.BytesRules parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.BytesRules parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Validate.BytesRules parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.BytesRules parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.BytesRules parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {

            return newBuilder();
        }

        public static Builder newBuilder() {

            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(Validate.BytesRules prototype) {

            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {

            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * BytesRules describe the constraints applied to `bytes` values
         * </pre>
         * <p>
         * Protobuf type {@code validate.BytesRules}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:validate.BytesRules)
                Validate.BytesRulesOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return Validate.internal_static_validate_BytesRules_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return Validate.internal_static_validate_BytesRules_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Validate.BytesRules.class, Validate.BytesRules.Builder.class);
            }

            // Construct using validate.Validate.BytesRules.newBuilder()
            private Builder() {

                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {

                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @java.lang.Override
            public Builder clear() {

                super.clear();
                const_ = com.google.protobuf.ByteString.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000001);
                minLen_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000002);
                maxLen_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000004);
                pattern_ = "";
                bitField0_ = (bitField0_ & ~0x00000008);
                prefix_ = com.google.protobuf.ByteString.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000010);
                suffix_ = com.google.protobuf.ByteString.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000020);
                contains_ = com.google.protobuf.ByteString.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000040);
                in_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000080);
                notIn_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000100);
                wellKnownCase_ = 0;
                wellKnown_ = null;
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {

                return Validate.internal_static_validate_BytesRules_descriptor;
            }

            @java.lang.Override
            public Validate.BytesRules getDefaultInstanceForType() {

                return Validate.BytesRules.getDefaultInstance();
            }

            @java.lang.Override
            public Validate.BytesRules build() {

                Validate.BytesRules result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public Validate.BytesRules buildPartial() {

                Validate.BytesRules result = new Validate.BytesRules(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.const_ = const_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.minLen_ = minLen_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.maxLen_ = maxLen_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.pattern_ = pattern_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.prefix_ = prefix_;
                if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
                    to_bitField0_ |= 0x00000020;
                }
                result.suffix_ = suffix_;
                if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
                    to_bitField0_ |= 0x00000040;
                }
                result.contains_ = contains_;
                if (((bitField0_ & 0x00000080) == 0x00000080)) {
                    in_ = java.util.Collections.unmodifiableList(in_);
                    bitField0_ = (bitField0_ & ~0x00000080);
                }
                result.in_ = in_;
                if (((bitField0_ & 0x00000100) == 0x00000100)) {
                    notIn_ = java.util.Collections.unmodifiableList(notIn_);
                    bitField0_ = (bitField0_ & ~0x00000100);
                }
                result.notIn_ = notIn_;
                if (wellKnownCase_ == 10) {
                    result.wellKnown_ = wellKnown_;
                }
                if (wellKnownCase_ == 11) {
                    result.wellKnown_ = wellKnown_;
                }
                if (wellKnownCase_ == 12) {
                    result.wellKnown_ = wellKnown_;
                }
                result.bitField0_ = to_bitField0_;
                result.wellKnownCase_ = wellKnownCase_;
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {

                return (Builder) super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {

                return (Builder) super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                return (Builder) super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {

                return (Builder) super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {

                if (other instanceof Validate.BytesRules) {
                    return mergeFrom((Validate.BytesRules) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(Validate.BytesRules other) {

                if (other == Validate.BytesRules.getDefaultInstance()) return this;
                if (other.hasConst()) {
                    setConst(other.getConst());
                }
                if (other.hasMinLen()) {
                    setMinLen(other.getMinLen());
                }
                if (other.hasMaxLen()) {
                    setMaxLen(other.getMaxLen());
                }
                if (other.hasPattern()) {
                    bitField0_ |= 0x00000008;
                    pattern_ = other.pattern_;
                    onChanged();
                }
                if (other.hasPrefix()) {
                    setPrefix(other.getPrefix());
                }
                if (other.hasSuffix()) {
                    setSuffix(other.getSuffix());
                }
                if (other.hasContains()) {
                    setContains(other.getContains());
                }
                if (!other.in_.isEmpty()) {
                    if (in_.isEmpty()) {
                        in_ = other.in_;
                        bitField0_ = (bitField0_ & ~0x00000080);
                    } else {
                        ensureInIsMutable();
                        in_.addAll(other.in_);
                    }
                    onChanged();
                }
                if (!other.notIn_.isEmpty()) {
                    if (notIn_.isEmpty()) {
                        notIn_ = other.notIn_;
                        bitField0_ = (bitField0_ & ~0x00000100);
                    } else {
                        ensureNotInIsMutable();
                        notIn_.addAll(other.notIn_);
                    }
                    onChanged();
                }
                switch (other.getWellKnownCase()) {
                    case IP: {
                        setIp(other.getIp());
                        break;
                    }
                    case IPV4: {
                        setIpv4(other.getIpv4());
                        break;
                    }
                    case IPV6: {
                        setIpv6(other.getIpv6());
                        break;
                    }
                    case WELLKNOWN_NOT_SET: {
                        break;
                    }
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {

                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                Validate.BytesRules parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (Validate.BytesRules) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int wellKnownCase_ = 0;
            private java.lang.Object wellKnown_;

            public WellKnownCase
            getWellKnownCase() {

                return WellKnownCase.forNumber(
                        wellKnownCase_);
            }

            public Builder clearWellKnown() {

                wellKnownCase_ = 0;
                wellKnown_ = null;
                onChanged();
                return this;
            }

            private int bitField0_;

            private com.google.protobuf.ByteString const_ = com.google.protobuf.ByteString.EMPTY;

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional bytes const = 1;</code>
             */
            public boolean hasConst() {

                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional bytes const = 1;</code>
             */
            public com.google.protobuf.ByteString getConst() {

                return const_;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional bytes const = 1;</code>
             */
            public Builder setConst(com.google.protobuf.ByteString value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                const_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional bytes const = 1;</code>
             */
            public Builder clearConst() {

                bitField0_ = (bitField0_ & ~0x00000001);
                const_ = getDefaultInstance().getConst();
                onChanged();
                return this;
            }

            private long minLen_;

            /**
             * <pre>
             * MinLen specifies that this field must be the specified number of bytes
             * at a minimum
             * </pre>
             *
             * <code>optional uint64 min_len = 2;</code>
             */
            public boolean hasMinLen() {

                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <pre>
             * MinLen specifies that this field must be the specified number of bytes
             * at a minimum
             * </pre>
             *
             * <code>optional uint64 min_len = 2;</code>
             */
            public long getMinLen() {

                return minLen_;
            }

            /**
             * <pre>
             * MinLen specifies that this field must be the specified number of bytes
             * at a minimum
             * </pre>
             *
             * <code>optional uint64 min_len = 2;</code>
             */
            public Builder setMinLen(long value) {

                bitField0_ |= 0x00000002;
                minLen_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * MinLen specifies that this field must be the specified number of bytes
             * at a minimum
             * </pre>
             *
             * <code>optional uint64 min_len = 2;</code>
             */
            public Builder clearMinLen() {

                bitField0_ = (bitField0_ & ~0x00000002);
                minLen_ = 0L;
                onChanged();
                return this;
            }

            private long maxLen_;

            /**
             * <pre>
             * MaxLen specifies that this field must be the specified number of bytes
             * at a maximum
             * </pre>
             *
             * <code>optional uint64 max_len = 3;</code>
             */
            public boolean hasMaxLen() {

                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <pre>
             * MaxLen specifies that this field must be the specified number of bytes
             * at a maximum
             * </pre>
             *
             * <code>optional uint64 max_len = 3;</code>
             */
            public long getMaxLen() {

                return maxLen_;
            }

            /**
             * <pre>
             * MaxLen specifies that this field must be the specified number of bytes
             * at a maximum
             * </pre>
             *
             * <code>optional uint64 max_len = 3;</code>
             */
            public Builder setMaxLen(long value) {

                bitField0_ |= 0x00000004;
                maxLen_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * MaxLen specifies that this field must be the specified number of bytes
             * at a maximum
             * </pre>
             *
             * <code>optional uint64 max_len = 3;</code>
             */
            public Builder clearMaxLen() {

                bitField0_ = (bitField0_ & ~0x00000004);
                maxLen_ = 0L;
                onChanged();
                return this;
            }

            private java.lang.Object pattern_ = "";

            /**
             * <pre>
             * Pattern specifes that this field must match against the specified
             * regular expression (RE2 syntax). The included expression should elide
             * any delimiters.
             * </pre>
             *
             * <code>optional string pattern = 4;</code>
             */
            public boolean hasPattern() {

                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <pre>
             * Pattern specifes that this field must match against the specified
             * regular expression (RE2 syntax). The included expression should elide
             * any delimiters.
             * </pre>
             *
             * <code>optional string pattern = 4;</code>
             */
            public java.lang.String getPattern() {

                java.lang.Object ref = pattern_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        pattern_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * Pattern specifes that this field must match against the specified
             * regular expression (RE2 syntax). The included expression should elide
             * any delimiters.
             * </pre>
             *
             * <code>optional string pattern = 4;</code>
             */
            public com.google.protobuf.ByteString
            getPatternBytes() {

                java.lang.Object ref = pattern_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    pattern_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * Pattern specifes that this field must match against the specified
             * regular expression (RE2 syntax). The included expression should elide
             * any delimiters.
             * </pre>
             *
             * <code>optional string pattern = 4;</code>
             */
            public Builder setPattern(
                    java.lang.String value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000008;
                pattern_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Pattern specifes that this field must match against the specified
             * regular expression (RE2 syntax). The included expression should elide
             * any delimiters.
             * </pre>
             *
             * <code>optional string pattern = 4;</code>
             */
            public Builder clearPattern() {

                bitField0_ = (bitField0_ & ~0x00000008);
                pattern_ = getDefaultInstance().getPattern();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Pattern specifes that this field must match against the specified
             * regular expression (RE2 syntax). The included expression should elide
             * any delimiters.
             * </pre>
             *
             * <code>optional string pattern = 4;</code>
             */
            public Builder setPatternBytes(
                    com.google.protobuf.ByteString value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000008;
                pattern_ = value;
                onChanged();
                return this;
            }

            private com.google.protobuf.ByteString prefix_ = com.google.protobuf.ByteString.EMPTY;

            /**
             * <pre>
             * Prefix specifies that this field must have the specified bytes at the
             * beginning of the string.
             * </pre>
             *
             * <code>optional bytes prefix = 5;</code>
             */
            public boolean hasPrefix() {

                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <pre>
             * Prefix specifies that this field must have the specified bytes at the
             * beginning of the string.
             * </pre>
             *
             * <code>optional bytes prefix = 5;</code>
             */
            public com.google.protobuf.ByteString getPrefix() {

                return prefix_;
            }

            /**
             * <pre>
             * Prefix specifies that this field must have the specified bytes at the
             * beginning of the string.
             * </pre>
             *
             * <code>optional bytes prefix = 5;</code>
             */
            public Builder setPrefix(com.google.protobuf.ByteString value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000010;
                prefix_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Prefix specifies that this field must have the specified bytes at the
             * beginning of the string.
             * </pre>
             *
             * <code>optional bytes prefix = 5;</code>
             */
            public Builder clearPrefix() {

                bitField0_ = (bitField0_ & ~0x00000010);
                prefix_ = getDefaultInstance().getPrefix();
                onChanged();
                return this;
            }

            private com.google.protobuf.ByteString suffix_ = com.google.protobuf.ByteString.EMPTY;

            /**
             * <pre>
             * Suffix specifies that this field must have the specified bytes at the
             * end of the string.
             * </pre>
             *
             * <code>optional bytes suffix = 6;</code>
             */
            public boolean hasSuffix() {

                return ((bitField0_ & 0x00000020) == 0x00000020);
            }

            /**
             * <pre>
             * Suffix specifies that this field must have the specified bytes at the
             * end of the string.
             * </pre>
             *
             * <code>optional bytes suffix = 6;</code>
             */
            public com.google.protobuf.ByteString getSuffix() {

                return suffix_;
            }

            /**
             * <pre>
             * Suffix specifies that this field must have the specified bytes at the
             * end of the string.
             * </pre>
             *
             * <code>optional bytes suffix = 6;</code>
             */
            public Builder setSuffix(com.google.protobuf.ByteString value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000020;
                suffix_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Suffix specifies that this field must have the specified bytes at the
             * end of the string.
             * </pre>
             *
             * <code>optional bytes suffix = 6;</code>
             */
            public Builder clearSuffix() {

                bitField0_ = (bitField0_ & ~0x00000020);
                suffix_ = getDefaultInstance().getSuffix();
                onChanged();
                return this;
            }

            private com.google.protobuf.ByteString contains_ = com.google.protobuf.ByteString.EMPTY;

            /**
             * <pre>
             * Contains specifies that this field must have the specified bytes
             * anywhere in the string.
             * </pre>
             *
             * <code>optional bytes contains = 7;</code>
             */
            public boolean hasContains() {

                return ((bitField0_ & 0x00000040) == 0x00000040);
            }

            /**
             * <pre>
             * Contains specifies that this field must have the specified bytes
             * anywhere in the string.
             * </pre>
             *
             * <code>optional bytes contains = 7;</code>
             */
            public com.google.protobuf.ByteString getContains() {

                return contains_;
            }

            /**
             * <pre>
             * Contains specifies that this field must have the specified bytes
             * anywhere in the string.
             * </pre>
             *
             * <code>optional bytes contains = 7;</code>
             */
            public Builder setContains(com.google.protobuf.ByteString value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000040;
                contains_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Contains specifies that this field must have the specified bytes
             * anywhere in the string.
             * </pre>
             *
             * <code>optional bytes contains = 7;</code>
             */
            public Builder clearContains() {

                bitField0_ = (bitField0_ & ~0x00000040);
                contains_ = getDefaultInstance().getContains();
                onChanged();
                return this;
            }

            private java.util.List<com.google.protobuf.ByteString> in_ = java.util.Collections.emptyList();

            private void ensureInIsMutable() {

                if (!((bitField0_ & 0x00000080) == 0x00000080)) {
                    in_ = new java.util.ArrayList<com.google.protobuf.ByteString>(in_);
                    bitField0_ |= 0x00000080;
                }
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated bytes in = 8;</code>
             */
            public java.util.List<com.google.protobuf.ByteString>
            getInList() {

                return java.util.Collections.unmodifiableList(in_);
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated bytes in = 8;</code>
             */
            public int getInCount() {

                return in_.size();
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated bytes in = 8;</code>
             */
            public com.google.protobuf.ByteString getIn(int index) {

                return in_.get(index);
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated bytes in = 8;</code>
             */
            public Builder setIn(
                    int index, com.google.protobuf.ByteString value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                ensureInIsMutable();
                in_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated bytes in = 8;</code>
             */
            public Builder addIn(com.google.protobuf.ByteString value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                ensureInIsMutable();
                in_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated bytes in = 8;</code>
             */
            public Builder addAllIn(
                    java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {

                ensureInIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, in_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated bytes in = 8;</code>
             */
            public Builder clearIn() {

                in_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000080);
                onChanged();
                return this;
            }

            private java.util.List<com.google.protobuf.ByteString> notIn_ = java.util.Collections.emptyList();

            private void ensureNotInIsMutable() {

                if (!((bitField0_ & 0x00000100) == 0x00000100)) {
                    notIn_ = new java.util.ArrayList<com.google.protobuf.ByteString>(notIn_);
                    bitField0_ |= 0x00000100;
                }
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated bytes not_in = 9;</code>
             */
            public java.util.List<com.google.protobuf.ByteString>
            getNotInList() {

                return java.util.Collections.unmodifiableList(notIn_);
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated bytes not_in = 9;</code>
             */
            public int getNotInCount() {

                return notIn_.size();
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated bytes not_in = 9;</code>
             */
            public com.google.protobuf.ByteString getNotIn(int index) {

                return notIn_.get(index);
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated bytes not_in = 9;</code>
             */
            public Builder setNotIn(
                    int index, com.google.protobuf.ByteString value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                ensureNotInIsMutable();
                notIn_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated bytes not_in = 9;</code>
             */
            public Builder addNotIn(com.google.protobuf.ByteString value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                ensureNotInIsMutable();
                notIn_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated bytes not_in = 9;</code>
             */
            public Builder addAllNotIn(
                    java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {

                ensureNotInIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, notIn_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated bytes not_in = 9;</code>
             */
            public Builder clearNotIn() {

                notIn_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000100);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Ip specifies that the field must be a valid IP (v4 or v6) address in
             * byte format
             * </pre>
             *
             * <code>optional bool ip = 10;</code>
             */
            public boolean hasIp() {

                return wellKnownCase_ == 10;
            }

            /**
             * <pre>
             * Ip specifies that the field must be a valid IP (v4 or v6) address in
             * byte format
             * </pre>
             *
             * <code>optional bool ip = 10;</code>
             */
            public boolean getIp() {

                if (wellKnownCase_ == 10) {
                    return (java.lang.Boolean) wellKnown_;
                }
                return false;
            }

            /**
             * <pre>
             * Ip specifies that the field must be a valid IP (v4 or v6) address in
             * byte format
             * </pre>
             *
             * <code>optional bool ip = 10;</code>
             */
            public Builder setIp(boolean value) {

                wellKnownCase_ = 10;
                wellKnown_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Ip specifies that the field must be a valid IP (v4 or v6) address in
             * byte format
             * </pre>
             *
             * <code>optional bool ip = 10;</code>
             */
            public Builder clearIp() {

                if (wellKnownCase_ == 10) {
                    wellKnownCase_ = 0;
                    wellKnown_ = null;
                    onChanged();
                }
                return this;
            }

            /**
             * <pre>
             * Ipv4 specifies that the field must be a valid IPv4 address in byte
             * format
             * </pre>
             *
             * <code>optional bool ipv4 = 11;</code>
             */
            public boolean hasIpv4() {

                return wellKnownCase_ == 11;
            }

            /**
             * <pre>
             * Ipv4 specifies that the field must be a valid IPv4 address in byte
             * format
             * </pre>
             *
             * <code>optional bool ipv4 = 11;</code>
             */
            public boolean getIpv4() {

                if (wellKnownCase_ == 11) {
                    return (java.lang.Boolean) wellKnown_;
                }
                return false;
            }

            /**
             * <pre>
             * Ipv4 specifies that the field must be a valid IPv4 address in byte
             * format
             * </pre>
             *
             * <code>optional bool ipv4 = 11;</code>
             */
            public Builder setIpv4(boolean value) {

                wellKnownCase_ = 11;
                wellKnown_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Ipv4 specifies that the field must be a valid IPv4 address in byte
             * format
             * </pre>
             *
             * <code>optional bool ipv4 = 11;</code>
             */
            public Builder clearIpv4() {

                if (wellKnownCase_ == 11) {
                    wellKnownCase_ = 0;
                    wellKnown_ = null;
                    onChanged();
                }
                return this;
            }

            /**
             * <pre>
             * Ipv6 specifies that the field must be a valid IPv6 address in byte
             * format
             * </pre>
             *
             * <code>optional bool ipv6 = 12;</code>
             */
            public boolean hasIpv6() {

                return wellKnownCase_ == 12;
            }

            /**
             * <pre>
             * Ipv6 specifies that the field must be a valid IPv6 address in byte
             * format
             * </pre>
             *
             * <code>optional bool ipv6 = 12;</code>
             */
            public boolean getIpv6() {

                if (wellKnownCase_ == 12) {
                    return (java.lang.Boolean) wellKnown_;
                }
                return false;
            }

            /**
             * <pre>
             * Ipv6 specifies that the field must be a valid IPv6 address in byte
             * format
             * </pre>
             *
             * <code>optional bool ipv6 = 12;</code>
             */
            public Builder setIpv6(boolean value) {

                wellKnownCase_ = 12;
                wellKnown_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Ipv6 specifies that the field must be a valid IPv6 address in byte
             * format
             * </pre>
             *
             * <code>optional bool ipv6 = 12;</code>
             */
            public Builder clearIpv6() {

                if (wellKnownCase_ == 12) {
                    wellKnownCase_ = 0;
                    wellKnown_ = null;
                    onChanged();
                }
                return this;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:validate.BytesRules)
        }

        // @@protoc_insertion_point(class_scope:validate.BytesRules)
        private static final Validate.BytesRules DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new Validate.BytesRules();
        }

        public static Validate.BytesRules getDefaultInstance() {

            return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated
        public static final com.google.protobuf.Parser<BytesRules>
                PARSER = new com.google.protobuf.AbstractParser<BytesRules>() {
            @java.lang.Override
            public BytesRules parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return new BytesRules(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<BytesRules> parser() {

            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<BytesRules> getParserForType() {

            return PARSER;
        }

        @java.lang.Override
        public Validate.BytesRules getDefaultInstanceForType() {

            return DEFAULT_INSTANCE;
        }

    }

    public interface EnumRulesOrBuilder extends
            // @@protoc_insertion_point(interface_extends:validate.EnumRules)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional int32 const = 1;</code>
         */
        boolean hasConst();

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional int32 const = 1;</code>
         */
        int getConst();

        /**
         * <pre>
         * DefinedOnly specifies that this field must be only one of the defined
         * values for this enum, failing on any undefined value.
         * </pre>
         *
         * <code>optional bool defined_only = 2;</code>
         */
        boolean hasDefinedOnly();

        /**
         * <pre>
         * DefinedOnly specifies that this field must be only one of the defined
         * values for this enum, failing on any undefined value.
         * </pre>
         *
         * <code>optional bool defined_only = 2;</code>
         */
        boolean getDefinedOnly();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int32 in = 3;</code>
         */
        java.util.List<java.lang.Integer> getInList();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int32 in = 3;</code>
         */
        int getInCount();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int32 in = 3;</code>
         */
        int getIn(int index);

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int32 not_in = 4;</code>
         */
        java.util.List<java.lang.Integer> getNotInList();

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int32 not_in = 4;</code>
         */
        int getNotInCount();

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int32 not_in = 4;</code>
         */
        int getNotIn(int index);
    }

    /**
     * <pre>
     * EnumRules describe the constraints applied to enum values
     * </pre>
     * <p>
     * Protobuf type {@code validate.EnumRules}
     */
    public static final class EnumRules extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:validate.EnumRules)
            EnumRulesOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use EnumRules.newBuilder() to construct.
        private EnumRules(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

            super(builder);
        }

        private EnumRules() {

            const_ = 0;
            definedOnly_ = false;
            in_ = java.util.Collections.emptyList();
            notIn_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {

            return this.unknownFields;
        }

        private EnumRules(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8: {
                            bitField0_ |= 0x00000001;
                            const_ = input.readInt32();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            definedOnly_ = input.readBool();
                            break;
                        }
                        case 24: {
                            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                                in_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            in_.add(input.readInt32());
                            break;
                        }
                        case 26: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                                in_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                in_.add(input.readInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 32: {
                            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                                notIn_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000008;
                            }
                            notIn_.add(input.readInt32());
                            break;
                        }
                        case 34: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                                notIn_ = new java.util.ArrayList<java.lang.Integer>();
                                mutable_bitField0_ |= 0x00000008;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                notIn_.add(input.readInt32());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                    in_ = java.util.Collections.unmodifiableList(in_);
                }
                if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                    notIn_ = java.util.Collections.unmodifiableList(notIn_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {

            return Validate.internal_static_validate_EnumRules_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {

            return Validate.internal_static_validate_EnumRules_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Validate.EnumRules.class, Validate.EnumRules.Builder.class);
        }

        private int bitField0_;
        public static final int CONST_FIELD_NUMBER = 1;
        private int const_;

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional int32 const = 1;</code>
         */
        public boolean hasConst() {

            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional int32 const = 1;</code>
         */
        public int getConst() {

            return const_;
        }

        public static final int DEFINED_ONLY_FIELD_NUMBER = 2;
        private boolean definedOnly_;

        /**
         * <pre>
         * DefinedOnly specifies that this field must be only one of the defined
         * values for this enum, failing on any undefined value.
         * </pre>
         *
         * <code>optional bool defined_only = 2;</code>
         */
        public boolean hasDefinedOnly() {

            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <pre>
         * DefinedOnly specifies that this field must be only one of the defined
         * values for this enum, failing on any undefined value.
         * </pre>
         *
         * <code>optional bool defined_only = 2;</code>
         */
        public boolean getDefinedOnly() {

            return definedOnly_;
        }

        public static final int IN_FIELD_NUMBER = 3;
        private java.util.List<java.lang.Integer> in_;

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int32 in = 3;</code>
         */
        public java.util.List<java.lang.Integer>
        getInList() {

            return in_;
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int32 in = 3;</code>
         */
        public int getInCount() {

            return in_.size();
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int32 in = 3;</code>
         */
        public int getIn(int index) {

            return in_.get(index);
        }

        public static final int NOT_IN_FIELD_NUMBER = 4;
        private java.util.List<java.lang.Integer> notIn_;

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int32 not_in = 4;</code>
         */
        public java.util.List<java.lang.Integer>
        getNotInList() {

            return notIn_;
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int32 not_in = 4;</code>
         */
        public int getNotInCount() {

            return notIn_.size();
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated int32 not_in = 4;</code>
         */
        public int getNotIn(int index) {

            return notIn_.get(index);
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {

            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {

            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeInt32(1, const_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeBool(2, definedOnly_);
            }
            for (int i = 0; i < in_.size(); i++) {
                output.writeInt32(3, in_.get(i));
            }
            for (int i = 0; i < notIn_.size(); i++) {
                output.writeInt32(4, notIn_.get(i));
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {

            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(1, const_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(2, definedOnly_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < in_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(in_.get(i));
                }
                size += dataSize;
                size += 1 * getInList().size();
            }
            {
                int dataSize = 0;
                for (int i = 0; i < notIn_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeInt32SizeNoTag(notIn_.get(i));
                }
                size += dataSize;
                size += 1 * getNotInList().size();
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {

            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Validate.EnumRules)) {
                return super.equals(obj);
            }
            Validate.EnumRules other = (Validate.EnumRules) obj;

            boolean result = true;
            result = result && (hasConst() == other.hasConst());
            if (hasConst()) {
                result = result && (getConst()
                        == other.getConst());
            }
            result = result && (hasDefinedOnly() == other.hasDefinedOnly());
            if (hasDefinedOnly()) {
                result = result && (getDefinedOnly()
                        == other.getDefinedOnly());
            }
            result = result && getInList()
                    .equals(other.getInList());
            result = result && getNotInList()
                    .equals(other.getNotInList());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {

            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasConst()) {
                hash = (37 * hash) + CONST_FIELD_NUMBER;
                hash = (53 * hash) + getConst();
            }
            if (hasDefinedOnly()) {
                hash = (37 * hash) + DEFINED_ONLY_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                        getDefinedOnly());
            }
            if (getInCount() > 0) {
                hash = (37 * hash) + IN_FIELD_NUMBER;
                hash = (53 * hash) + getInList().hashCode();
            }
            if (getNotInCount() > 0) {
                hash = (37 * hash) + NOT_IN_FIELD_NUMBER;
                hash = (53 * hash) + getNotInList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static Validate.EnumRules parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.EnumRules parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.EnumRules parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.EnumRules parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.EnumRules parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.EnumRules parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.EnumRules parseFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.EnumRules parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.EnumRules parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Validate.EnumRules parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.EnumRules parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.EnumRules parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {

            return newBuilder();
        }

        public static Builder newBuilder() {

            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(Validate.EnumRules prototype) {

            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {

            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * EnumRules describe the constraints applied to enum values
         * </pre>
         * <p>
         * Protobuf type {@code validate.EnumRules}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:validate.EnumRules)
                Validate.EnumRulesOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return Validate.internal_static_validate_EnumRules_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return Validate.internal_static_validate_EnumRules_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Validate.EnumRules.class, Validate.EnumRules.Builder.class);
            }

            // Construct using validate.Validate.EnumRules.newBuilder()
            private Builder() {

                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {

                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @java.lang.Override
            public Builder clear() {

                super.clear();
                const_ = 0;
                bitField0_ = (bitField0_ & ~0x00000001);
                definedOnly_ = false;
                bitField0_ = (bitField0_ & ~0x00000002);
                in_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000004);
                notIn_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000008);
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {

                return Validate.internal_static_validate_EnumRules_descriptor;
            }

            @java.lang.Override
            public Validate.EnumRules getDefaultInstanceForType() {

                return Validate.EnumRules.getDefaultInstance();
            }

            @java.lang.Override
            public Validate.EnumRules build() {

                Validate.EnumRules result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public Validate.EnumRules buildPartial() {

                Validate.EnumRules result = new Validate.EnumRules(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.const_ = const_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.definedOnly_ = definedOnly_;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                    in_ = java.util.Collections.unmodifiableList(in_);
                    bitField0_ = (bitField0_ & ~0x00000004);
                }
                result.in_ = in_;
                if (((bitField0_ & 0x00000008) == 0x00000008)) {
                    notIn_ = java.util.Collections.unmodifiableList(notIn_);
                    bitField0_ = (bitField0_ & ~0x00000008);
                }
                result.notIn_ = notIn_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {

                return (Builder) super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {

                return (Builder) super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                return (Builder) super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {

                return (Builder) super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {

                if (other instanceof Validate.EnumRules) {
                    return mergeFrom((Validate.EnumRules) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(Validate.EnumRules other) {

                if (other == Validate.EnumRules.getDefaultInstance()) return this;
                if (other.hasConst()) {
                    setConst(other.getConst());
                }
                if (other.hasDefinedOnly()) {
                    setDefinedOnly(other.getDefinedOnly());
                }
                if (!other.in_.isEmpty()) {
                    if (in_.isEmpty()) {
                        in_ = other.in_;
                        bitField0_ = (bitField0_ & ~0x00000004);
                    } else {
                        ensureInIsMutable();
                        in_.addAll(other.in_);
                    }
                    onChanged();
                }
                if (!other.notIn_.isEmpty()) {
                    if (notIn_.isEmpty()) {
                        notIn_ = other.notIn_;
                        bitField0_ = (bitField0_ & ~0x00000008);
                    } else {
                        ensureNotInIsMutable();
                        notIn_.addAll(other.notIn_);
                    }
                    onChanged();
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {

                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                Validate.EnumRules parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (Validate.EnumRules) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private int const_;

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional int32 const = 1;</code>
             */
            public boolean hasConst() {

                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional int32 const = 1;</code>
             */
            public int getConst() {

                return const_;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional int32 const = 1;</code>
             */
            public Builder setConst(int value) {

                bitField0_ |= 0x00000001;
                const_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional int32 const = 1;</code>
             */
            public Builder clearConst() {

                bitField0_ = (bitField0_ & ~0x00000001);
                const_ = 0;
                onChanged();
                return this;
            }

            private boolean definedOnly_;

            /**
             * <pre>
             * DefinedOnly specifies that this field must be only one of the defined
             * values for this enum, failing on any undefined value.
             * </pre>
             *
             * <code>optional bool defined_only = 2;</code>
             */
            public boolean hasDefinedOnly() {

                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <pre>
             * DefinedOnly specifies that this field must be only one of the defined
             * values for this enum, failing on any undefined value.
             * </pre>
             *
             * <code>optional bool defined_only = 2;</code>
             */
            public boolean getDefinedOnly() {

                return definedOnly_;
            }

            /**
             * <pre>
             * DefinedOnly specifies that this field must be only one of the defined
             * values for this enum, failing on any undefined value.
             * </pre>
             *
             * <code>optional bool defined_only = 2;</code>
             */
            public Builder setDefinedOnly(boolean value) {

                bitField0_ |= 0x00000002;
                definedOnly_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * DefinedOnly specifies that this field must be only one of the defined
             * values for this enum, failing on any undefined value.
             * </pre>
             *
             * <code>optional bool defined_only = 2;</code>
             */
            public Builder clearDefinedOnly() {

                bitField0_ = (bitField0_ & ~0x00000002);
                definedOnly_ = false;
                onChanged();
                return this;
            }

            private java.util.List<java.lang.Integer> in_ = java.util.Collections.emptyList();

            private void ensureInIsMutable() {

                if (!((bitField0_ & 0x00000004) == 0x00000004)) {
                    in_ = new java.util.ArrayList<java.lang.Integer>(in_);
                    bitField0_ |= 0x00000004;
                }
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int32 in = 3;</code>
             */
            public java.util.List<java.lang.Integer>
            getInList() {

                return java.util.Collections.unmodifiableList(in_);
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int32 in = 3;</code>
             */
            public int getInCount() {

                return in_.size();
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int32 in = 3;</code>
             */
            public int getIn(int index) {

                return in_.get(index);
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int32 in = 3;</code>
             */
            public Builder setIn(
                    int index, int value) {

                ensureInIsMutable();
                in_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int32 in = 3;</code>
             */
            public Builder addIn(int value) {

                ensureInIsMutable();
                in_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int32 in = 3;</code>
             */
            public Builder addAllIn(
                    java.lang.Iterable<? extends java.lang.Integer> values) {

                ensureInIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, in_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int32 in = 3;</code>
             */
            public Builder clearIn() {

                in_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000004);
                onChanged();
                return this;
            }

            private java.util.List<java.lang.Integer> notIn_ = java.util.Collections.emptyList();

            private void ensureNotInIsMutable() {

                if (!((bitField0_ & 0x00000008) == 0x00000008)) {
                    notIn_ = new java.util.ArrayList<java.lang.Integer>(notIn_);
                    bitField0_ |= 0x00000008;
                }
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int32 not_in = 4;</code>
             */
            public java.util.List<java.lang.Integer>
            getNotInList() {

                return java.util.Collections.unmodifiableList(notIn_);
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int32 not_in = 4;</code>
             */
            public int getNotInCount() {

                return notIn_.size();
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int32 not_in = 4;</code>
             */
            public int getNotIn(int index) {

                return notIn_.get(index);
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int32 not_in = 4;</code>
             */
            public Builder setNotIn(
                    int index, int value) {

                ensureNotInIsMutable();
                notIn_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int32 not_in = 4;</code>
             */
            public Builder addNotIn(int value) {

                ensureNotInIsMutable();
                notIn_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int32 not_in = 4;</code>
             */
            public Builder addAllNotIn(
                    java.lang.Iterable<? extends java.lang.Integer> values) {

                ensureNotInIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, notIn_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated int32 not_in = 4;</code>
             */
            public Builder clearNotIn() {

                notIn_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000008);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:validate.EnumRules)
        }

        // @@protoc_insertion_point(class_scope:validate.EnumRules)
        private static final Validate.EnumRules DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new Validate.EnumRules();
        }

        public static Validate.EnumRules getDefaultInstance() {

            return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated
        public static final com.google.protobuf.Parser<EnumRules>
                PARSER = new com.google.protobuf.AbstractParser<EnumRules>() {
            @java.lang.Override
            public EnumRules parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return new EnumRules(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<EnumRules> parser() {

            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<EnumRules> getParserForType() {

            return PARSER;
        }

        @java.lang.Override
        public Validate.EnumRules getDefaultInstanceForType() {

            return DEFAULT_INSTANCE;
        }

    }

    public interface MessageRulesOrBuilder extends
            // @@protoc_insertion_point(interface_extends:validate.MessageRules)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Skip specifies that the validation rules of this field should not be
         * evaluated
         * </pre>
         *
         * <code>optional bool skip = 1;</code>
         */
        boolean hasSkip();

        /**
         * <pre>
         * Skip specifies that the validation rules of this field should not be
         * evaluated
         * </pre>
         *
         * <code>optional bool skip = 1;</code>
         */
        boolean getSkip();

        /**
         * <pre>
         * Required specifies that this field must be set
         * </pre>
         *
         * <code>optional bool required = 2;</code>
         */
        boolean hasRequired();

        /**
         * <pre>
         * Required specifies that this field must be set
         * </pre>
         *
         * <code>optional bool required = 2;</code>
         */
        boolean getRequired();
    }

    /**
     * <pre>
     * MessageRules describe the constraints applied to embedded message values.
     * For message-type fields, validation is performed recursively.
     * </pre>
     * <p>
     * Protobuf type {@code validate.MessageRules}
     */
    public static final class MessageRules extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:validate.MessageRules)
            MessageRulesOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use MessageRules.newBuilder() to construct.
        private MessageRules(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

            super(builder);
        }

        private MessageRules() {

            skip_ = false;
            required_ = false;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {

            return this.unknownFields;
        }

        private MessageRules(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8: {
                            bitField0_ |= 0x00000001;
                            skip_ = input.readBool();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            required_ = input.readBool();
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {

            return Validate.internal_static_validate_MessageRules_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {

            return Validate.internal_static_validate_MessageRules_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Validate.MessageRules.class, Validate.MessageRules.Builder.class);
        }

        private int bitField0_;
        public static final int SKIP_FIELD_NUMBER = 1;
        private boolean skip_;

        /**
         * <pre>
         * Skip specifies that the validation rules of this field should not be
         * evaluated
         * </pre>
         *
         * <code>optional bool skip = 1;</code>
         */
        public boolean hasSkip() {

            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <pre>
         * Skip specifies that the validation rules of this field should not be
         * evaluated
         * </pre>
         *
         * <code>optional bool skip = 1;</code>
         */
        public boolean getSkip() {

            return skip_;
        }

        public static final int REQUIRED_FIELD_NUMBER = 2;
        private boolean required_;

        /**
         * <pre>
         * Required specifies that this field must be set
         * </pre>
         *
         * <code>optional bool required = 2;</code>
         */
        public boolean hasRequired() {

            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <pre>
         * Required specifies that this field must be set
         * </pre>
         *
         * <code>optional bool required = 2;</code>
         */
        public boolean getRequired() {

            return required_;
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {

            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {

            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeBool(1, skip_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeBool(2, required_);
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {

            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(1, skip_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(2, required_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {

            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Validate.MessageRules)) {
                return super.equals(obj);
            }
            Validate.MessageRules other = (Validate.MessageRules) obj;

            boolean result = true;
            result = result && (hasSkip() == other.hasSkip());
            if (hasSkip()) {
                result = result && (getSkip()
                        == other.getSkip());
            }
            result = result && (hasRequired() == other.hasRequired());
            if (hasRequired()) {
                result = result && (getRequired()
                        == other.getRequired());
            }
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {

            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasSkip()) {
                hash = (37 * hash) + SKIP_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                        getSkip());
            }
            if (hasRequired()) {
                hash = (37 * hash) + REQUIRED_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                        getRequired());
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static Validate.MessageRules parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.MessageRules parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.MessageRules parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.MessageRules parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.MessageRules parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.MessageRules parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.MessageRules parseFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.MessageRules parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.MessageRules parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Validate.MessageRules parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.MessageRules parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.MessageRules parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {

            return newBuilder();
        }

        public static Builder newBuilder() {

            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(Validate.MessageRules prototype) {

            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {

            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * MessageRules describe the constraints applied to embedded message values.
         * For message-type fields, validation is performed recursively.
         * </pre>
         * <p>
         * Protobuf type {@code validate.MessageRules}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:validate.MessageRules)
                Validate.MessageRulesOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return Validate.internal_static_validate_MessageRules_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return Validate.internal_static_validate_MessageRules_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Validate.MessageRules.class, Validate.MessageRules.Builder.class);
            }

            // Construct using validate.Validate.MessageRules.newBuilder()
            private Builder() {

                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {

                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @java.lang.Override
            public Builder clear() {

                super.clear();
                skip_ = false;
                bitField0_ = (bitField0_ & ~0x00000001);
                required_ = false;
                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {

                return Validate.internal_static_validate_MessageRules_descriptor;
            }

            @java.lang.Override
            public Validate.MessageRules getDefaultInstanceForType() {

                return Validate.MessageRules.getDefaultInstance();
            }

            @java.lang.Override
            public Validate.MessageRules build() {

                Validate.MessageRules result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public Validate.MessageRules buildPartial() {

                Validate.MessageRules result = new Validate.MessageRules(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.skip_ = skip_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.required_ = required_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {

                return (Builder) super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {

                return (Builder) super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                return (Builder) super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {

                return (Builder) super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {

                if (other instanceof Validate.MessageRules) {
                    return mergeFrom((Validate.MessageRules) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(Validate.MessageRules other) {

                if (other == Validate.MessageRules.getDefaultInstance()) return this;
                if (other.hasSkip()) {
                    setSkip(other.getSkip());
                }
                if (other.hasRequired()) {
                    setRequired(other.getRequired());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {

                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                Validate.MessageRules parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (Validate.MessageRules) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private boolean skip_;

            /**
             * <pre>
             * Skip specifies that the validation rules of this field should not be
             * evaluated
             * </pre>
             *
             * <code>optional bool skip = 1;</code>
             */
            public boolean hasSkip() {

                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <pre>
             * Skip specifies that the validation rules of this field should not be
             * evaluated
             * </pre>
             *
             * <code>optional bool skip = 1;</code>
             */
            public boolean getSkip() {

                return skip_;
            }

            /**
             * <pre>
             * Skip specifies that the validation rules of this field should not be
             * evaluated
             * </pre>
             *
             * <code>optional bool skip = 1;</code>
             */
            public Builder setSkip(boolean value) {

                bitField0_ |= 0x00000001;
                skip_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Skip specifies that the validation rules of this field should not be
             * evaluated
             * </pre>
             *
             * <code>optional bool skip = 1;</code>
             */
            public Builder clearSkip() {

                bitField0_ = (bitField0_ & ~0x00000001);
                skip_ = false;
                onChanged();
                return this;
            }

            private boolean required_;

            /**
             * <pre>
             * Required specifies that this field must be set
             * </pre>
             *
             * <code>optional bool required = 2;</code>
             */
            public boolean hasRequired() {

                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <pre>
             * Required specifies that this field must be set
             * </pre>
             *
             * <code>optional bool required = 2;</code>
             */
            public boolean getRequired() {

                return required_;
            }

            /**
             * <pre>
             * Required specifies that this field must be set
             * </pre>
             *
             * <code>optional bool required = 2;</code>
             */
            public Builder setRequired(boolean value) {

                bitField0_ |= 0x00000002;
                required_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Required specifies that this field must be set
             * </pre>
             *
             * <code>optional bool required = 2;</code>
             */
            public Builder clearRequired() {

                bitField0_ = (bitField0_ & ~0x00000002);
                required_ = false;
                onChanged();
                return this;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:validate.MessageRules)
        }

        // @@protoc_insertion_point(class_scope:validate.MessageRules)
        private static final Validate.MessageRules DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new Validate.MessageRules();
        }

        public static Validate.MessageRules getDefaultInstance() {

            return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated
        public static final com.google.protobuf.Parser<MessageRules>
                PARSER = new com.google.protobuf.AbstractParser<MessageRules>() {
            @java.lang.Override
            public MessageRules parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return new MessageRules(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<MessageRules> parser() {

            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<MessageRules> getParserForType() {

            return PARSER;
        }

        @java.lang.Override
        public Validate.MessageRules getDefaultInstanceForType() {

            return DEFAULT_INSTANCE;
        }

    }

    public interface RepeatedRulesOrBuilder extends
            // @@protoc_insertion_point(interface_extends:validate.RepeatedRules)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * MinItems specifies that this field must have the specified number of
         * items at a minimum
         * </pre>
         *
         * <code>optional uint64 min_items = 1;</code>
         */
        boolean hasMinItems();

        /**
         * <pre>
         * MinItems specifies that this field must have the specified number of
         * items at a minimum
         * </pre>
         *
         * <code>optional uint64 min_items = 1;</code>
         */
        long getMinItems();

        /**
         * <pre>
         * MaxItems specifies that this field must have the specified number of
         * items at a maximum
         * </pre>
         *
         * <code>optional uint64 max_items = 2;</code>
         */
        boolean hasMaxItems();

        /**
         * <pre>
         * MaxItems specifies that this field must have the specified number of
         * items at a maximum
         * </pre>
         *
         * <code>optional uint64 max_items = 2;</code>
         */
        long getMaxItems();

        /**
         * <pre>
         * Unique specifies that all elements in this field must be unique. This
         * contraint is only applicable to scalar and enum types (messages are not
         * supported).
         * </pre>
         *
         * <code>optional bool unique = 3;</code>
         */
        boolean hasUnique();

        /**
         * <pre>
         * Unique specifies that all elements in this field must be unique. This
         * contraint is only applicable to scalar and enum types (messages are not
         * supported).
         * </pre>
         *
         * <code>optional bool unique = 3;</code>
         */
        boolean getUnique();

        /**
         * <pre>
         * Items specifies the contraints to be applied to each item in the field.
         * Repeated message fields will still execute validation against each item
         * unless skip is specified here.
         * </pre>
         *
         * <code>optional .validate.FieldRules items = 4;</code>
         */
        boolean hasItems();

        /**
         * <pre>
         * Items specifies the contraints to be applied to each item in the field.
         * Repeated message fields will still execute validation against each item
         * unless skip is specified here.
         * </pre>
         *
         * <code>optional .validate.FieldRules items = 4;</code>
         */
        Validate.FieldRules getItems();

        /**
         * <pre>
         * Items specifies the contraints to be applied to each item in the field.
         * Repeated message fields will still execute validation against each item
         * unless skip is specified here.
         * </pre>
         *
         * <code>optional .validate.FieldRules items = 4;</code>
         */
        Validate.FieldRulesOrBuilder getItemsOrBuilder();
    }

    /**
     * <pre>
     * RepeatedRules describe the constraints applied to `repeated` values
     * </pre>
     * <p>
     * Protobuf type {@code validate.RepeatedRules}
     */
    public static final class RepeatedRules extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:validate.RepeatedRules)
            RepeatedRulesOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use RepeatedRules.newBuilder() to construct.
        private RepeatedRules(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

            super(builder);
        }

        private RepeatedRules() {

            minItems_ = 0L;
            maxItems_ = 0L;
            unique_ = false;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {

            return this.unknownFields;
        }

        private RepeatedRules(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8: {
                            bitField0_ |= 0x00000001;
                            minItems_ = input.readUInt64();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            maxItems_ = input.readUInt64();
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            unique_ = input.readBool();
                            break;
                        }
                        case 34: {
                            Validate.FieldRules.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                                subBuilder = items_.toBuilder();
                            }
                            items_ = input.readMessage(Validate.FieldRules.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(items_);
                                items_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000008;
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {

            return Validate.internal_static_validate_RepeatedRules_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {

            return Validate.internal_static_validate_RepeatedRules_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Validate.RepeatedRules.class, Validate.RepeatedRules.Builder.class);
        }

        private int bitField0_;
        public static final int MIN_ITEMS_FIELD_NUMBER = 1;
        private long minItems_;

        /**
         * <pre>
         * MinItems specifies that this field must have the specified number of
         * items at a minimum
         * </pre>
         *
         * <code>optional uint64 min_items = 1;</code>
         */
        public boolean hasMinItems() {

            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <pre>
         * MinItems specifies that this field must have the specified number of
         * items at a minimum
         * </pre>
         *
         * <code>optional uint64 min_items = 1;</code>
         */
        public long getMinItems() {

            return minItems_;
        }

        public static final int MAX_ITEMS_FIELD_NUMBER = 2;
        private long maxItems_;

        /**
         * <pre>
         * MaxItems specifies that this field must have the specified number of
         * items at a maximum
         * </pre>
         *
         * <code>optional uint64 max_items = 2;</code>
         */
        public boolean hasMaxItems() {

            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <pre>
         * MaxItems specifies that this field must have the specified number of
         * items at a maximum
         * </pre>
         *
         * <code>optional uint64 max_items = 2;</code>
         */
        public long getMaxItems() {

            return maxItems_;
        }

        public static final int UNIQUE_FIELD_NUMBER = 3;
        private boolean unique_;

        /**
         * <pre>
         * Unique specifies that all elements in this field must be unique. This
         * contraint is only applicable to scalar and enum types (messages are not
         * supported).
         * </pre>
         *
         * <code>optional bool unique = 3;</code>
         */
        public boolean hasUnique() {

            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <pre>
         * Unique specifies that all elements in this field must be unique. This
         * contraint is only applicable to scalar and enum types (messages are not
         * supported).
         * </pre>
         *
         * <code>optional bool unique = 3;</code>
         */
        public boolean getUnique() {

            return unique_;
        }

        public static final int ITEMS_FIELD_NUMBER = 4;
        private Validate.FieldRules items_;

        /**
         * <pre>
         * Items specifies the contraints to be applied to each item in the field.
         * Repeated message fields will still execute validation against each item
         * unless skip is specified here.
         * </pre>
         *
         * <code>optional .validate.FieldRules items = 4;</code>
         */
        public boolean hasItems() {

            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <pre>
         * Items specifies the contraints to be applied to each item in the field.
         * Repeated message fields will still execute validation against each item
         * unless skip is specified here.
         * </pre>
         *
         * <code>optional .validate.FieldRules items = 4;</code>
         */
        public Validate.FieldRules getItems() {

            return items_ == null ? Validate.FieldRules.getDefaultInstance() : items_;
        }

        /**
         * <pre>
         * Items specifies the contraints to be applied to each item in the field.
         * Repeated message fields will still execute validation against each item
         * unless skip is specified here.
         * </pre>
         *
         * <code>optional .validate.FieldRules items = 4;</code>
         */
        public Validate.FieldRulesOrBuilder getItemsOrBuilder() {

            return items_ == null ? Validate.FieldRules.getDefaultInstance() : items_;
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {

            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {

            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeUInt64(1, minItems_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeUInt64(2, maxItems_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeBool(3, unique_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeMessage(4, getItems());
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {

            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(1, minItems_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(2, maxItems_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(3, unique_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(4, getItems());
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {

            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Validate.RepeatedRules)) {
                return super.equals(obj);
            }
            Validate.RepeatedRules other = (Validate.RepeatedRules) obj;

            boolean result = true;
            result = result && (hasMinItems() == other.hasMinItems());
            if (hasMinItems()) {
                result = result && (getMinItems()
                        == other.getMinItems());
            }
            result = result && (hasMaxItems() == other.hasMaxItems());
            if (hasMaxItems()) {
                result = result && (getMaxItems()
                        == other.getMaxItems());
            }
            result = result && (hasUnique() == other.hasUnique());
            if (hasUnique()) {
                result = result && (getUnique()
                        == other.getUnique());
            }
            result = result && (hasItems() == other.hasItems());
            if (hasItems()) {
                result = result && getItems()
                        .equals(other.getItems());
            }
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {

            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasMinItems()) {
                hash = (37 * hash) + MIN_ITEMS_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getMinItems());
            }
            if (hasMaxItems()) {
                hash = (37 * hash) + MAX_ITEMS_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getMaxItems());
            }
            if (hasUnique()) {
                hash = (37 * hash) + UNIQUE_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                        getUnique());
            }
            if (hasItems()) {
                hash = (37 * hash) + ITEMS_FIELD_NUMBER;
                hash = (53 * hash) + getItems().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static Validate.RepeatedRules parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.RepeatedRules parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.RepeatedRules parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.RepeatedRules parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.RepeatedRules parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.RepeatedRules parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.RepeatedRules parseFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.RepeatedRules parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.RepeatedRules parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Validate.RepeatedRules parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.RepeatedRules parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.RepeatedRules parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {

            return newBuilder();
        }

        public static Builder newBuilder() {

            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(Validate.RepeatedRules prototype) {

            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {

            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * RepeatedRules describe the constraints applied to `repeated` values
         * </pre>
         * <p>
         * Protobuf type {@code validate.RepeatedRules}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:validate.RepeatedRules)
                Validate.RepeatedRulesOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return Validate.internal_static_validate_RepeatedRules_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return Validate.internal_static_validate_RepeatedRules_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Validate.RepeatedRules.class, Validate.RepeatedRules.Builder.class);
            }

            // Construct using validate.Validate.RepeatedRules.newBuilder()
            private Builder() {

                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {

                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getItemsFieldBuilder();
                }
            }

            @java.lang.Override
            public Builder clear() {

                super.clear();
                minItems_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000001);
                maxItems_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000002);
                unique_ = false;
                bitField0_ = (bitField0_ & ~0x00000004);
                if (itemsBuilder_ == null) {
                    items_ = null;
                } else {
                    itemsBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000008);
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {

                return Validate.internal_static_validate_RepeatedRules_descriptor;
            }

            @java.lang.Override
            public Validate.RepeatedRules getDefaultInstanceForType() {

                return Validate.RepeatedRules.getDefaultInstance();
            }

            @java.lang.Override
            public Validate.RepeatedRules build() {

                Validate.RepeatedRules result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public Validate.RepeatedRules buildPartial() {

                Validate.RepeatedRules result = new Validate.RepeatedRules(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.minItems_ = minItems_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.maxItems_ = maxItems_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.unique_ = unique_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                if (itemsBuilder_ == null) {
                    result.items_ = items_;
                } else {
                    result.items_ = itemsBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {

                return (Builder) super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {

                return (Builder) super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                return (Builder) super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {

                return (Builder) super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {

                if (other instanceof Validate.RepeatedRules) {
                    return mergeFrom((Validate.RepeatedRules) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(Validate.RepeatedRules other) {

                if (other == Validate.RepeatedRules.getDefaultInstance()) return this;
                if (other.hasMinItems()) {
                    setMinItems(other.getMinItems());
                }
                if (other.hasMaxItems()) {
                    setMaxItems(other.getMaxItems());
                }
                if (other.hasUnique()) {
                    setUnique(other.getUnique());
                }
                if (other.hasItems()) {
                    mergeItems(other.getItems());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {

                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                Validate.RepeatedRules parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (Validate.RepeatedRules) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private long minItems_;

            /**
             * <pre>
             * MinItems specifies that this field must have the specified number of
             * items at a minimum
             * </pre>
             *
             * <code>optional uint64 min_items = 1;</code>
             */
            public boolean hasMinItems() {

                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <pre>
             * MinItems specifies that this field must have the specified number of
             * items at a minimum
             * </pre>
             *
             * <code>optional uint64 min_items = 1;</code>
             */
            public long getMinItems() {

                return minItems_;
            }

            /**
             * <pre>
             * MinItems specifies that this field must have the specified number of
             * items at a minimum
             * </pre>
             *
             * <code>optional uint64 min_items = 1;</code>
             */
            public Builder setMinItems(long value) {

                bitField0_ |= 0x00000001;
                minItems_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * MinItems specifies that this field must have the specified number of
             * items at a minimum
             * </pre>
             *
             * <code>optional uint64 min_items = 1;</code>
             */
            public Builder clearMinItems() {

                bitField0_ = (bitField0_ & ~0x00000001);
                minItems_ = 0L;
                onChanged();
                return this;
            }

            private long maxItems_;

            /**
             * <pre>
             * MaxItems specifies that this field must have the specified number of
             * items at a maximum
             * </pre>
             *
             * <code>optional uint64 max_items = 2;</code>
             */
            public boolean hasMaxItems() {

                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <pre>
             * MaxItems specifies that this field must have the specified number of
             * items at a maximum
             * </pre>
             *
             * <code>optional uint64 max_items = 2;</code>
             */
            public long getMaxItems() {

                return maxItems_;
            }

            /**
             * <pre>
             * MaxItems specifies that this field must have the specified number of
             * items at a maximum
             * </pre>
             *
             * <code>optional uint64 max_items = 2;</code>
             */
            public Builder setMaxItems(long value) {

                bitField0_ |= 0x00000002;
                maxItems_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * MaxItems specifies that this field must have the specified number of
             * items at a maximum
             * </pre>
             *
             * <code>optional uint64 max_items = 2;</code>
             */
            public Builder clearMaxItems() {

                bitField0_ = (bitField0_ & ~0x00000002);
                maxItems_ = 0L;
                onChanged();
                return this;
            }

            private boolean unique_;

            /**
             * <pre>
             * Unique specifies that all elements in this field must be unique. This
             * contraint is only applicable to scalar and enum types (messages are not
             * supported).
             * </pre>
             *
             * <code>optional bool unique = 3;</code>
             */
            public boolean hasUnique() {

                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <pre>
             * Unique specifies that all elements in this field must be unique. This
             * contraint is only applicable to scalar and enum types (messages are not
             * supported).
             * </pre>
             *
             * <code>optional bool unique = 3;</code>
             */
            public boolean getUnique() {

                return unique_;
            }

            /**
             * <pre>
             * Unique specifies that all elements in this field must be unique. This
             * contraint is only applicable to scalar and enum types (messages are not
             * supported).
             * </pre>
             *
             * <code>optional bool unique = 3;</code>
             */
            public Builder setUnique(boolean value) {

                bitField0_ |= 0x00000004;
                unique_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Unique specifies that all elements in this field must be unique. This
             * contraint is only applicable to scalar and enum types (messages are not
             * supported).
             * </pre>
             *
             * <code>optional bool unique = 3;</code>
             */
            public Builder clearUnique() {

                bitField0_ = (bitField0_ & ~0x00000004);
                unique_ = false;
                onChanged();
                return this;
            }

            private Validate.FieldRules items_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.FieldRules, Validate.FieldRules.Builder, Validate.FieldRulesOrBuilder> itemsBuilder_;

            /**
             * <pre>
             * Items specifies the contraints to be applied to each item in the field.
             * Repeated message fields will still execute validation against each item
             * unless skip is specified here.
             * </pre>
             *
             * <code>optional .validate.FieldRules items = 4;</code>
             */
            public boolean hasItems() {

                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <pre>
             * Items specifies the contraints to be applied to each item in the field.
             * Repeated message fields will still execute validation against each item
             * unless skip is specified here.
             * </pre>
             *
             * <code>optional .validate.FieldRules items = 4;</code>
             */
            public Validate.FieldRules getItems() {

                if (itemsBuilder_ == null) {
                    return items_ == null ? Validate.FieldRules.getDefaultInstance() : items_;
                } else {
                    return itemsBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Items specifies the contraints to be applied to each item in the field.
             * Repeated message fields will still execute validation against each item
             * unless skip is specified here.
             * </pre>
             *
             * <code>optional .validate.FieldRules items = 4;</code>
             */
            public Builder setItems(Validate.FieldRules value) {

                if (itemsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    items_ = value;
                    onChanged();
                } else {
                    itemsBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000008;
                return this;
            }

            /**
             * <pre>
             * Items specifies the contraints to be applied to each item in the field.
             * Repeated message fields will still execute validation against each item
             * unless skip is specified here.
             * </pre>
             *
             * <code>optional .validate.FieldRules items = 4;</code>
             */
            public Builder setItems(
                    Validate.FieldRules.Builder builderForValue) {

                if (itemsBuilder_ == null) {
                    items_ = builderForValue.build();
                    onChanged();
                } else {
                    itemsBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000008;
                return this;
            }

            /**
             * <pre>
             * Items specifies the contraints to be applied to each item in the field.
             * Repeated message fields will still execute validation against each item
             * unless skip is specified here.
             * </pre>
             *
             * <code>optional .validate.FieldRules items = 4;</code>
             */
            public Builder mergeItems(Validate.FieldRules value) {

                if (itemsBuilder_ == null) {
                    if (((bitField0_ & 0x00000008) == 0x00000008) &&
                            items_ != null &&
                            items_ != Validate.FieldRules.getDefaultInstance()) {
                        items_ =
                                Validate.FieldRules.newBuilder(items_).mergeFrom(value).buildPartial();
                    } else {
                        items_ = value;
                    }
                    onChanged();
                } else {
                    itemsBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000008;
                return this;
            }

            /**
             * <pre>
             * Items specifies the contraints to be applied to each item in the field.
             * Repeated message fields will still execute validation against each item
             * unless skip is specified here.
             * </pre>
             *
             * <code>optional .validate.FieldRules items = 4;</code>
             */
            public Builder clearItems() {

                if (itemsBuilder_ == null) {
                    items_ = null;
                    onChanged();
                } else {
                    itemsBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000008);
                return this;
            }

            /**
             * <pre>
             * Items specifies the contraints to be applied to each item in the field.
             * Repeated message fields will still execute validation against each item
             * unless skip is specified here.
             * </pre>
             *
             * <code>optional .validate.FieldRules items = 4;</code>
             */
            public Validate.FieldRules.Builder getItemsBuilder() {

                bitField0_ |= 0x00000008;
                onChanged();
                return getItemsFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Items specifies the contraints to be applied to each item in the field.
             * Repeated message fields will still execute validation against each item
             * unless skip is specified here.
             * </pre>
             *
             * <code>optional .validate.FieldRules items = 4;</code>
             */
            public Validate.FieldRulesOrBuilder getItemsOrBuilder() {

                if (itemsBuilder_ != null) {
                    return itemsBuilder_.getMessageOrBuilder();
                } else {
                    return items_ == null ?
                            Validate.FieldRules.getDefaultInstance() : items_;
                }
            }

            /**
             * <pre>
             * Items specifies the contraints to be applied to each item in the field.
             * Repeated message fields will still execute validation against each item
             * unless skip is specified here.
             * </pre>
             *
             * <code>optional .validate.FieldRules items = 4;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.FieldRules, Validate.FieldRules.Builder, Validate.FieldRulesOrBuilder>
            getItemsFieldBuilder() {

                if (itemsBuilder_ == null) {
                    itemsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            Validate.FieldRules, Validate.FieldRules.Builder, Validate.FieldRulesOrBuilder>(
                            getItems(),
                            getParentForChildren(),
                            isClean());
                    items_ = null;
                }
                return itemsBuilder_;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:validate.RepeatedRules)
        }

        // @@protoc_insertion_point(class_scope:validate.RepeatedRules)
        private static final Validate.RepeatedRules DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new Validate.RepeatedRules();
        }

        public static Validate.RepeatedRules getDefaultInstance() {

            return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated
        public static final com.google.protobuf.Parser<RepeatedRules>
                PARSER = new com.google.protobuf.AbstractParser<RepeatedRules>() {
            @java.lang.Override
            public RepeatedRules parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return new RepeatedRules(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<RepeatedRules> parser() {

            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<RepeatedRules> getParserForType() {

            return PARSER;
        }

        @java.lang.Override
        public Validate.RepeatedRules getDefaultInstanceForType() {

            return DEFAULT_INSTANCE;
        }

    }

    public interface MapRulesOrBuilder extends
            // @@protoc_insertion_point(interface_extends:validate.MapRules)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * MinPairs specifies that this field must have the specified number of
         * KVs at a minimum
         * </pre>
         *
         * <code>optional uint64 min_pairs = 1;</code>
         */
        boolean hasMinPairs();

        /**
         * <pre>
         * MinPairs specifies that this field must have the specified number of
         * KVs at a minimum
         * </pre>
         *
         * <code>optional uint64 min_pairs = 1;</code>
         */
        long getMinPairs();

        /**
         * <pre>
         * MaxPairs specifies that this field must have the specified number of
         * KVs at a maximum
         * </pre>
         *
         * <code>optional uint64 max_pairs = 2;</code>
         */
        boolean hasMaxPairs();

        /**
         * <pre>
         * MaxPairs specifies that this field must have the specified number of
         * KVs at a maximum
         * </pre>
         *
         * <code>optional uint64 max_pairs = 2;</code>
         */
        long getMaxPairs();

        /**
         * <pre>
         * NoSparse specifies values in this field cannot be unset. This only
         * applies to map's with message value types.
         * </pre>
         *
         * <code>optional bool no_sparse = 3;</code>
         */
        boolean hasNoSparse();

        /**
         * <pre>
         * NoSparse specifies values in this field cannot be unset. This only
         * applies to map's with message value types.
         * </pre>
         *
         * <code>optional bool no_sparse = 3;</code>
         */
        boolean getNoSparse();

        /**
         * <pre>
         * Keys specifies the constraints to be applied to each key in the field.
         * </pre>
         *
         * <code>optional .validate.FieldRules keys = 4;</code>
         */
        boolean hasKeys();

        /**
         * <pre>
         * Keys specifies the constraints to be applied to each key in the field.
         * </pre>
         *
         * <code>optional .validate.FieldRules keys = 4;</code>
         */
        Validate.FieldRules getKeys();

        /**
         * <pre>
         * Keys specifies the constraints to be applied to each key in the field.
         * </pre>
         *
         * <code>optional .validate.FieldRules keys = 4;</code>
         */
        Validate.FieldRulesOrBuilder getKeysOrBuilder();

        /**
         * <pre>
         * Values specifies the constraints to be applied to the value of each key
         * in the field. Message values will still have their validations evaluated
         * unless skip is specified here.
         * </pre>
         *
         * <code>optional .validate.FieldRules values = 5;</code>
         */
        boolean hasValues();

        /**
         * <pre>
         * Values specifies the constraints to be applied to the value of each key
         * in the field. Message values will still have their validations evaluated
         * unless skip is specified here.
         * </pre>
         *
         * <code>optional .validate.FieldRules values = 5;</code>
         */
        Validate.FieldRules getValues();

        /**
         * <pre>
         * Values specifies the constraints to be applied to the value of each key
         * in the field. Message values will still have their validations evaluated
         * unless skip is specified here.
         * </pre>
         *
         * <code>optional .validate.FieldRules values = 5;</code>
         */
        Validate.FieldRulesOrBuilder getValuesOrBuilder();
    }

    /**
     * <pre>
     * MapRules describe the constraints applied to `map` values
     * </pre>
     * <p>
     * Protobuf type {@code validate.MapRules}
     */
    public static final class MapRules extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:validate.MapRules)
            MapRulesOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use MapRules.newBuilder() to construct.
        private MapRules(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

            super(builder);
        }

        private MapRules() {

            minPairs_ = 0L;
            maxPairs_ = 0L;
            noSparse_ = false;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {

            return this.unknownFields;
        }

        private MapRules(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8: {
                            bitField0_ |= 0x00000001;
                            minPairs_ = input.readUInt64();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            maxPairs_ = input.readUInt64();
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            noSparse_ = input.readBool();
                            break;
                        }
                        case 34: {
                            Validate.FieldRules.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                                subBuilder = keys_.toBuilder();
                            }
                            keys_ = input.readMessage(Validate.FieldRules.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(keys_);
                                keys_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000008;
                            break;
                        }
                        case 42: {
                            Validate.FieldRules.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                                subBuilder = values_.toBuilder();
                            }
                            values_ = input.readMessage(Validate.FieldRules.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(values_);
                                values_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000010;
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {

            return Validate.internal_static_validate_MapRules_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {

            return Validate.internal_static_validate_MapRules_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Validate.MapRules.class, Validate.MapRules.Builder.class);
        }

        private int bitField0_;
        public static final int MIN_PAIRS_FIELD_NUMBER = 1;
        private long minPairs_;

        /**
         * <pre>
         * MinPairs specifies that this field must have the specified number of
         * KVs at a minimum
         * </pre>
         *
         * <code>optional uint64 min_pairs = 1;</code>
         */
        public boolean hasMinPairs() {

            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <pre>
         * MinPairs specifies that this field must have the specified number of
         * KVs at a minimum
         * </pre>
         *
         * <code>optional uint64 min_pairs = 1;</code>
         */
        public long getMinPairs() {

            return minPairs_;
        }

        public static final int MAX_PAIRS_FIELD_NUMBER = 2;
        private long maxPairs_;

        /**
         * <pre>
         * MaxPairs specifies that this field must have the specified number of
         * KVs at a maximum
         * </pre>
         *
         * <code>optional uint64 max_pairs = 2;</code>
         */
        public boolean hasMaxPairs() {

            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <pre>
         * MaxPairs specifies that this field must have the specified number of
         * KVs at a maximum
         * </pre>
         *
         * <code>optional uint64 max_pairs = 2;</code>
         */
        public long getMaxPairs() {

            return maxPairs_;
        }

        public static final int NO_SPARSE_FIELD_NUMBER = 3;
        private boolean noSparse_;

        /**
         * <pre>
         * NoSparse specifies values in this field cannot be unset. This only
         * applies to map's with message value types.
         * </pre>
         *
         * <code>optional bool no_sparse = 3;</code>
         */
        public boolean hasNoSparse() {

            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <pre>
         * NoSparse specifies values in this field cannot be unset. This only
         * applies to map's with message value types.
         * </pre>
         *
         * <code>optional bool no_sparse = 3;</code>
         */
        public boolean getNoSparse() {

            return noSparse_;
        }

        public static final int KEYS_FIELD_NUMBER = 4;
        private Validate.FieldRules keys_;

        /**
         * <pre>
         * Keys specifies the constraints to be applied to each key in the field.
         * </pre>
         *
         * <code>optional .validate.FieldRules keys = 4;</code>
         */
        public boolean hasKeys() {

            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <pre>
         * Keys specifies the constraints to be applied to each key in the field.
         * </pre>
         *
         * <code>optional .validate.FieldRules keys = 4;</code>
         */
        public Validate.FieldRules getKeys() {

            return keys_ == null ? Validate.FieldRules.getDefaultInstance() : keys_;
        }

        /**
         * <pre>
         * Keys specifies the constraints to be applied to each key in the field.
         * </pre>
         *
         * <code>optional .validate.FieldRules keys = 4;</code>
         */
        public Validate.FieldRulesOrBuilder getKeysOrBuilder() {

            return keys_ == null ? Validate.FieldRules.getDefaultInstance() : keys_;
        }

        public static final int VALUES_FIELD_NUMBER = 5;
        private Validate.FieldRules values_;

        /**
         * <pre>
         * Values specifies the constraints to be applied to the value of each key
         * in the field. Message values will still have their validations evaluated
         * unless skip is specified here.
         * </pre>
         *
         * <code>optional .validate.FieldRules values = 5;</code>
         */
        public boolean hasValues() {

            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <pre>
         * Values specifies the constraints to be applied to the value of each key
         * in the field. Message values will still have their validations evaluated
         * unless skip is specified here.
         * </pre>
         *
         * <code>optional .validate.FieldRules values = 5;</code>
         */
        public Validate.FieldRules getValues() {

            return values_ == null ? Validate.FieldRules.getDefaultInstance() : values_;
        }

        /**
         * <pre>
         * Values specifies the constraints to be applied to the value of each key
         * in the field. Message values will still have their validations evaluated
         * unless skip is specified here.
         * </pre>
         *
         * <code>optional .validate.FieldRules values = 5;</code>
         */
        public Validate.FieldRulesOrBuilder getValuesOrBuilder() {

            return values_ == null ? Validate.FieldRules.getDefaultInstance() : values_;
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {

            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {

            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeUInt64(1, minPairs_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeUInt64(2, maxPairs_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeBool(3, noSparse_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeMessage(4, getKeys());
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeMessage(5, getValues());
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {

            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(1, minPairs_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(2, maxPairs_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(3, noSparse_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(4, getKeys());
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(5, getValues());
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {

            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Validate.MapRules)) {
                return super.equals(obj);
            }
            Validate.MapRules other = (Validate.MapRules) obj;

            boolean result = true;
            result = result && (hasMinPairs() == other.hasMinPairs());
            if (hasMinPairs()) {
                result = result && (getMinPairs()
                        == other.getMinPairs());
            }
            result = result && (hasMaxPairs() == other.hasMaxPairs());
            if (hasMaxPairs()) {
                result = result && (getMaxPairs()
                        == other.getMaxPairs());
            }
            result = result && (hasNoSparse() == other.hasNoSparse());
            if (hasNoSparse()) {
                result = result && (getNoSparse()
                        == other.getNoSparse());
            }
            result = result && (hasKeys() == other.hasKeys());
            if (hasKeys()) {
                result = result && getKeys()
                        .equals(other.getKeys());
            }
            result = result && (hasValues() == other.hasValues());
            if (hasValues()) {
                result = result && getValues()
                        .equals(other.getValues());
            }
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {

            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasMinPairs()) {
                hash = (37 * hash) + MIN_PAIRS_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getMinPairs());
            }
            if (hasMaxPairs()) {
                hash = (37 * hash) + MAX_PAIRS_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getMaxPairs());
            }
            if (hasNoSparse()) {
                hash = (37 * hash) + NO_SPARSE_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                        getNoSparse());
            }
            if (hasKeys()) {
                hash = (37 * hash) + KEYS_FIELD_NUMBER;
                hash = (53 * hash) + getKeys().hashCode();
            }
            if (hasValues()) {
                hash = (37 * hash) + VALUES_FIELD_NUMBER;
                hash = (53 * hash) + getValues().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static Validate.MapRules parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.MapRules parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.MapRules parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.MapRules parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.MapRules parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.MapRules parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.MapRules parseFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.MapRules parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.MapRules parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Validate.MapRules parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.MapRules parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.MapRules parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {

            return newBuilder();
        }

        public static Builder newBuilder() {

            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(Validate.MapRules prototype) {

            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {

            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * MapRules describe the constraints applied to `map` values
         * </pre>
         * <p>
         * Protobuf type {@code validate.MapRules}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:validate.MapRules)
                Validate.MapRulesOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return Validate.internal_static_validate_MapRules_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return Validate.internal_static_validate_MapRules_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Validate.MapRules.class, Validate.MapRules.Builder.class);
            }

            // Construct using validate.Validate.MapRules.newBuilder()
            private Builder() {

                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {

                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getKeysFieldBuilder();
                    getValuesFieldBuilder();
                }
            }

            @java.lang.Override
            public Builder clear() {

                super.clear();
                minPairs_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000001);
                maxPairs_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000002);
                noSparse_ = false;
                bitField0_ = (bitField0_ & ~0x00000004);
                if (keysBuilder_ == null) {
                    keys_ = null;
                } else {
                    keysBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000008);
                if (valuesBuilder_ == null) {
                    values_ = null;
                } else {
                    valuesBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000010);
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {

                return Validate.internal_static_validate_MapRules_descriptor;
            }

            @java.lang.Override
            public Validate.MapRules getDefaultInstanceForType() {

                return Validate.MapRules.getDefaultInstance();
            }

            @java.lang.Override
            public Validate.MapRules build() {

                Validate.MapRules result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public Validate.MapRules buildPartial() {

                Validate.MapRules result = new Validate.MapRules(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.minPairs_ = minPairs_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.maxPairs_ = maxPairs_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.noSparse_ = noSparse_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                if (keysBuilder_ == null) {
                    result.keys_ = keys_;
                } else {
                    result.keys_ = keysBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                if (valuesBuilder_ == null) {
                    result.values_ = values_;
                } else {
                    result.values_ = valuesBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {

                return (Builder) super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {

                return (Builder) super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                return (Builder) super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {

                return (Builder) super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {

                if (other instanceof Validate.MapRules) {
                    return mergeFrom((Validate.MapRules) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(Validate.MapRules other) {

                if (other == Validate.MapRules.getDefaultInstance()) return this;
                if (other.hasMinPairs()) {
                    setMinPairs(other.getMinPairs());
                }
                if (other.hasMaxPairs()) {
                    setMaxPairs(other.getMaxPairs());
                }
                if (other.hasNoSparse()) {
                    setNoSparse(other.getNoSparse());
                }
                if (other.hasKeys()) {
                    mergeKeys(other.getKeys());
                }
                if (other.hasValues()) {
                    mergeValues(other.getValues());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {

                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                Validate.MapRules parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (Validate.MapRules) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private long minPairs_;

            /**
             * <pre>
             * MinPairs specifies that this field must have the specified number of
             * KVs at a minimum
             * </pre>
             *
             * <code>optional uint64 min_pairs = 1;</code>
             */
            public boolean hasMinPairs() {

                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <pre>
             * MinPairs specifies that this field must have the specified number of
             * KVs at a minimum
             * </pre>
             *
             * <code>optional uint64 min_pairs = 1;</code>
             */
            public long getMinPairs() {

                return minPairs_;
            }

            /**
             * <pre>
             * MinPairs specifies that this field must have the specified number of
             * KVs at a minimum
             * </pre>
             *
             * <code>optional uint64 min_pairs = 1;</code>
             */
            public Builder setMinPairs(long value) {

                bitField0_ |= 0x00000001;
                minPairs_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * MinPairs specifies that this field must have the specified number of
             * KVs at a minimum
             * </pre>
             *
             * <code>optional uint64 min_pairs = 1;</code>
             */
            public Builder clearMinPairs() {

                bitField0_ = (bitField0_ & ~0x00000001);
                minPairs_ = 0L;
                onChanged();
                return this;
            }

            private long maxPairs_;

            /**
             * <pre>
             * MaxPairs specifies that this field must have the specified number of
             * KVs at a maximum
             * </pre>
             *
             * <code>optional uint64 max_pairs = 2;</code>
             */
            public boolean hasMaxPairs() {

                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <pre>
             * MaxPairs specifies that this field must have the specified number of
             * KVs at a maximum
             * </pre>
             *
             * <code>optional uint64 max_pairs = 2;</code>
             */
            public long getMaxPairs() {

                return maxPairs_;
            }

            /**
             * <pre>
             * MaxPairs specifies that this field must have the specified number of
             * KVs at a maximum
             * </pre>
             *
             * <code>optional uint64 max_pairs = 2;</code>
             */
            public Builder setMaxPairs(long value) {

                bitField0_ |= 0x00000002;
                maxPairs_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * MaxPairs specifies that this field must have the specified number of
             * KVs at a maximum
             * </pre>
             *
             * <code>optional uint64 max_pairs = 2;</code>
             */
            public Builder clearMaxPairs() {

                bitField0_ = (bitField0_ & ~0x00000002);
                maxPairs_ = 0L;
                onChanged();
                return this;
            }

            private boolean noSparse_;

            /**
             * <pre>
             * NoSparse specifies values in this field cannot be unset. This only
             * applies to map's with message value types.
             * </pre>
             *
             * <code>optional bool no_sparse = 3;</code>
             */
            public boolean hasNoSparse() {

                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <pre>
             * NoSparse specifies values in this field cannot be unset. This only
             * applies to map's with message value types.
             * </pre>
             *
             * <code>optional bool no_sparse = 3;</code>
             */
            public boolean getNoSparse() {

                return noSparse_;
            }

            /**
             * <pre>
             * NoSparse specifies values in this field cannot be unset. This only
             * applies to map's with message value types.
             * </pre>
             *
             * <code>optional bool no_sparse = 3;</code>
             */
            public Builder setNoSparse(boolean value) {

                bitField0_ |= 0x00000004;
                noSparse_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NoSparse specifies values in this field cannot be unset. This only
             * applies to map's with message value types.
             * </pre>
             *
             * <code>optional bool no_sparse = 3;</code>
             */
            public Builder clearNoSparse() {

                bitField0_ = (bitField0_ & ~0x00000004);
                noSparse_ = false;
                onChanged();
                return this;
            }

            private Validate.FieldRules keys_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.FieldRules, Validate.FieldRules.Builder, Validate.FieldRulesOrBuilder> keysBuilder_;

            /**
             * <pre>
             * Keys specifies the constraints to be applied to each key in the field.
             * </pre>
             *
             * <code>optional .validate.FieldRules keys = 4;</code>
             */
            public boolean hasKeys() {

                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <pre>
             * Keys specifies the constraints to be applied to each key in the field.
             * </pre>
             *
             * <code>optional .validate.FieldRules keys = 4;</code>
             */
            public Validate.FieldRules getKeys() {

                if (keysBuilder_ == null) {
                    return keys_ == null ? Validate.FieldRules.getDefaultInstance() : keys_;
                } else {
                    return keysBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Keys specifies the constraints to be applied to each key in the field.
             * </pre>
             *
             * <code>optional .validate.FieldRules keys = 4;</code>
             */
            public Builder setKeys(Validate.FieldRules value) {

                if (keysBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    keys_ = value;
                    onChanged();
                } else {
                    keysBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000008;
                return this;
            }

            /**
             * <pre>
             * Keys specifies the constraints to be applied to each key in the field.
             * </pre>
             *
             * <code>optional .validate.FieldRules keys = 4;</code>
             */
            public Builder setKeys(
                    Validate.FieldRules.Builder builderForValue) {

                if (keysBuilder_ == null) {
                    keys_ = builderForValue.build();
                    onChanged();
                } else {
                    keysBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000008;
                return this;
            }

            /**
             * <pre>
             * Keys specifies the constraints to be applied to each key in the field.
             * </pre>
             *
             * <code>optional .validate.FieldRules keys = 4;</code>
             */
            public Builder mergeKeys(Validate.FieldRules value) {

                if (keysBuilder_ == null) {
                    if (((bitField0_ & 0x00000008) == 0x00000008) &&
                            keys_ != null &&
                            keys_ != Validate.FieldRules.getDefaultInstance()) {
                        keys_ =
                                Validate.FieldRules.newBuilder(keys_).mergeFrom(value).buildPartial();
                    } else {
                        keys_ = value;
                    }
                    onChanged();
                } else {
                    keysBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000008;
                return this;
            }

            /**
             * <pre>
             * Keys specifies the constraints to be applied to each key in the field.
             * </pre>
             *
             * <code>optional .validate.FieldRules keys = 4;</code>
             */
            public Builder clearKeys() {

                if (keysBuilder_ == null) {
                    keys_ = null;
                    onChanged();
                } else {
                    keysBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000008);
                return this;
            }

            /**
             * <pre>
             * Keys specifies the constraints to be applied to each key in the field.
             * </pre>
             *
             * <code>optional .validate.FieldRules keys = 4;</code>
             */
            public Validate.FieldRules.Builder getKeysBuilder() {

                bitField0_ |= 0x00000008;
                onChanged();
                return getKeysFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Keys specifies the constraints to be applied to each key in the field.
             * </pre>
             *
             * <code>optional .validate.FieldRules keys = 4;</code>
             */
            public Validate.FieldRulesOrBuilder getKeysOrBuilder() {

                if (keysBuilder_ != null) {
                    return keysBuilder_.getMessageOrBuilder();
                } else {
                    return keys_ == null ?
                            Validate.FieldRules.getDefaultInstance() : keys_;
                }
            }

            /**
             * <pre>
             * Keys specifies the constraints to be applied to each key in the field.
             * </pre>
             *
             * <code>optional .validate.FieldRules keys = 4;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.FieldRules, Validate.FieldRules.Builder, Validate.FieldRulesOrBuilder>
            getKeysFieldBuilder() {

                if (keysBuilder_ == null) {
                    keysBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            Validate.FieldRules, Validate.FieldRules.Builder, Validate.FieldRulesOrBuilder>(
                            getKeys(),
                            getParentForChildren(),
                            isClean());
                    keys_ = null;
                }
                return keysBuilder_;
            }

            private Validate.FieldRules values_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.FieldRules, Validate.FieldRules.Builder, Validate.FieldRulesOrBuilder> valuesBuilder_;

            /**
             * <pre>
             * Values specifies the constraints to be applied to the value of each key
             * in the field. Message values will still have their validations evaluated
             * unless skip is specified here.
             * </pre>
             *
             * <code>optional .validate.FieldRules values = 5;</code>
             */
            public boolean hasValues() {

                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <pre>
             * Values specifies the constraints to be applied to the value of each key
             * in the field. Message values will still have their validations evaluated
             * unless skip is specified here.
             * </pre>
             *
             * <code>optional .validate.FieldRules values = 5;</code>
             */
            public Validate.FieldRules getValues() {

                if (valuesBuilder_ == null) {
                    return values_ == null ? Validate.FieldRules.getDefaultInstance() : values_;
                } else {
                    return valuesBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Values specifies the constraints to be applied to the value of each key
             * in the field. Message values will still have their validations evaluated
             * unless skip is specified here.
             * </pre>
             *
             * <code>optional .validate.FieldRules values = 5;</code>
             */
            public Builder setValues(Validate.FieldRules value) {

                if (valuesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    values_ = value;
                    onChanged();
                } else {
                    valuesBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000010;
                return this;
            }

            /**
             * <pre>
             * Values specifies the constraints to be applied to the value of each key
             * in the field. Message values will still have their validations evaluated
             * unless skip is specified here.
             * </pre>
             *
             * <code>optional .validate.FieldRules values = 5;</code>
             */
            public Builder setValues(
                    Validate.FieldRules.Builder builderForValue) {

                if (valuesBuilder_ == null) {
                    values_ = builderForValue.build();
                    onChanged();
                } else {
                    valuesBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000010;
                return this;
            }

            /**
             * <pre>
             * Values specifies the constraints to be applied to the value of each key
             * in the field. Message values will still have their validations evaluated
             * unless skip is specified here.
             * </pre>
             *
             * <code>optional .validate.FieldRules values = 5;</code>
             */
            public Builder mergeValues(Validate.FieldRules value) {

                if (valuesBuilder_ == null) {
                    if (((bitField0_ & 0x00000010) == 0x00000010) &&
                            values_ != null &&
                            values_ != Validate.FieldRules.getDefaultInstance()) {
                        values_ =
                                Validate.FieldRules.newBuilder(values_).mergeFrom(value).buildPartial();
                    } else {
                        values_ = value;
                    }
                    onChanged();
                } else {
                    valuesBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000010;
                return this;
            }

            /**
             * <pre>
             * Values specifies the constraints to be applied to the value of each key
             * in the field. Message values will still have their validations evaluated
             * unless skip is specified here.
             * </pre>
             *
             * <code>optional .validate.FieldRules values = 5;</code>
             */
            public Builder clearValues() {

                if (valuesBuilder_ == null) {
                    values_ = null;
                    onChanged();
                } else {
                    valuesBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000010);
                return this;
            }

            /**
             * <pre>
             * Values specifies the constraints to be applied to the value of each key
             * in the field. Message values will still have their validations evaluated
             * unless skip is specified here.
             * </pre>
             *
             * <code>optional .validate.FieldRules values = 5;</code>
             */
            public Validate.FieldRules.Builder getValuesBuilder() {

                bitField0_ |= 0x00000010;
                onChanged();
                return getValuesFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Values specifies the constraints to be applied to the value of each key
             * in the field. Message values will still have their validations evaluated
             * unless skip is specified here.
             * </pre>
             *
             * <code>optional .validate.FieldRules values = 5;</code>
             */
            public Validate.FieldRulesOrBuilder getValuesOrBuilder() {

                if (valuesBuilder_ != null) {
                    return valuesBuilder_.getMessageOrBuilder();
                } else {
                    return values_ == null ?
                            Validate.FieldRules.getDefaultInstance() : values_;
                }
            }

            /**
             * <pre>
             * Values specifies the constraints to be applied to the value of each key
             * in the field. Message values will still have their validations evaluated
             * unless skip is specified here.
             * </pre>
             *
             * <code>optional .validate.FieldRules values = 5;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    Validate.FieldRules, Validate.FieldRules.Builder, Validate.FieldRulesOrBuilder>
            getValuesFieldBuilder() {

                if (valuesBuilder_ == null) {
                    valuesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            Validate.FieldRules, Validate.FieldRules.Builder, Validate.FieldRulesOrBuilder>(
                            getValues(),
                            getParentForChildren(),
                            isClean());
                    values_ = null;
                }
                return valuesBuilder_;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:validate.MapRules)
        }

        // @@protoc_insertion_point(class_scope:validate.MapRules)
        private static final Validate.MapRules DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new Validate.MapRules();
        }

        public static Validate.MapRules getDefaultInstance() {

            return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated
        public static final com.google.protobuf.Parser<MapRules>
                PARSER = new com.google.protobuf.AbstractParser<MapRules>() {
            @java.lang.Override
            public MapRules parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return new MapRules(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<MapRules> parser() {

            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<MapRules> getParserForType() {

            return PARSER;
        }

        @java.lang.Override
        public Validate.MapRules getDefaultInstanceForType() {

            return DEFAULT_INSTANCE;
        }

    }

    public interface AnyRulesOrBuilder extends
            // @@protoc_insertion_point(interface_extends:validate.AnyRules)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Required specifies that this field must be set
         * </pre>
         *
         * <code>optional bool required = 1;</code>
         */
        boolean hasRequired();

        /**
         * <pre>
         * Required specifies that this field must be set
         * </pre>
         *
         * <code>optional bool required = 1;</code>
         */
        boolean getRequired();

        /**
         * <pre>
         * In specifies that this field's `type_url` must be equal to one of the
         * specified values.
         * </pre>
         *
         * <code>repeated string in = 2;</code>
         */
        java.util.List<java.lang.String>
        getInList();

        /**
         * <pre>
         * In specifies that this field's `type_url` must be equal to one of the
         * specified values.
         * </pre>
         *
         * <code>repeated string in = 2;</code>
         */
        int getInCount();

        /**
         * <pre>
         * In specifies that this field's `type_url` must be equal to one of the
         * specified values.
         * </pre>
         *
         * <code>repeated string in = 2;</code>
         */
        java.lang.String getIn(int index);

        /**
         * <pre>
         * In specifies that this field's `type_url` must be equal to one of the
         * specified values.
         * </pre>
         *
         * <code>repeated string in = 2;</code>
         */
        com.google.protobuf.ByteString
        getInBytes(int index);

        /**
         * <pre>
         * NotIn specifies that this field's `type_url` must not be equal to any of
         * the specified values.
         * </pre>
         *
         * <code>repeated string not_in = 3;</code>
         */
        java.util.List<java.lang.String>
        getNotInList();

        /**
         * <pre>
         * NotIn specifies that this field's `type_url` must not be equal to any of
         * the specified values.
         * </pre>
         *
         * <code>repeated string not_in = 3;</code>
         */
        int getNotInCount();

        /**
         * <pre>
         * NotIn specifies that this field's `type_url` must not be equal to any of
         * the specified values.
         * </pre>
         *
         * <code>repeated string not_in = 3;</code>
         */
        java.lang.String getNotIn(int index);

        /**
         * <pre>
         * NotIn specifies that this field's `type_url` must not be equal to any of
         * the specified values.
         * </pre>
         *
         * <code>repeated string not_in = 3;</code>
         */
        com.google.protobuf.ByteString
        getNotInBytes(int index);
    }

    /**
     * <pre>
     * AnyRules describe constraints applied exclusively to the
     * `google.protobuf.Any` well-known type
     * </pre>
     * <p>
     * Protobuf type {@code validate.AnyRules}
     */
    public static final class AnyRules extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:validate.AnyRules)
            AnyRulesOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use AnyRules.newBuilder() to construct.
        private AnyRules(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

            super(builder);
        }

        private AnyRules() {

            required_ = false;
            in_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            notIn_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {

            return this.unknownFields;
        }

        private AnyRules(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8: {
                            bitField0_ |= 0x00000001;
                            required_ = input.readBool();
                            break;
                        }
                        case 18: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                                in_ = new com.google.protobuf.LazyStringArrayList();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            in_.add(bs);
                            break;
                        }
                        case 26: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                                notIn_ = new com.google.protobuf.LazyStringArrayList();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            notIn_.add(bs);
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    in_ = in_.getUnmodifiableView();
                }
                if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                    notIn_ = notIn_.getUnmodifiableView();
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {

            return Validate.internal_static_validate_AnyRules_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {

            return Validate.internal_static_validate_AnyRules_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Validate.AnyRules.class, Validate.AnyRules.Builder.class);
        }

        private int bitField0_;
        public static final int REQUIRED_FIELD_NUMBER = 1;
        private boolean required_;

        /**
         * <pre>
         * Required specifies that this field must be set
         * </pre>
         *
         * <code>optional bool required = 1;</code>
         */
        public boolean hasRequired() {

            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <pre>
         * Required specifies that this field must be set
         * </pre>
         *
         * <code>optional bool required = 1;</code>
         */
        public boolean getRequired() {

            return required_;
        }

        public static final int IN_FIELD_NUMBER = 2;
        private com.google.protobuf.LazyStringList in_;

        /**
         * <pre>
         * In specifies that this field's `type_url` must be equal to one of the
         * specified values.
         * </pre>
         *
         * <code>repeated string in = 2;</code>
         */
        public com.google.protobuf.ProtocolStringList
        getInList() {

            return in_;
        }

        /**
         * <pre>
         * In specifies that this field's `type_url` must be equal to one of the
         * specified values.
         * </pre>
         *
         * <code>repeated string in = 2;</code>
         */
        public int getInCount() {

            return in_.size();
        }

        /**
         * <pre>
         * In specifies that this field's `type_url` must be equal to one of the
         * specified values.
         * </pre>
         *
         * <code>repeated string in = 2;</code>
         */
        public java.lang.String getIn(int index) {

            return in_.get(index);
        }

        /**
         * <pre>
         * In specifies that this field's `type_url` must be equal to one of the
         * specified values.
         * </pre>
         *
         * <code>repeated string in = 2;</code>
         */
        public com.google.protobuf.ByteString
        getInBytes(int index) {

            return in_.getByteString(index);
        }

        public static final int NOT_IN_FIELD_NUMBER = 3;
        private com.google.protobuf.LazyStringList notIn_;

        /**
         * <pre>
         * NotIn specifies that this field's `type_url` must not be equal to any of
         * the specified values.
         * </pre>
         *
         * <code>repeated string not_in = 3;</code>
         */
        public com.google.protobuf.ProtocolStringList
        getNotInList() {

            return notIn_;
        }

        /**
         * <pre>
         * NotIn specifies that this field's `type_url` must not be equal to any of
         * the specified values.
         * </pre>
         *
         * <code>repeated string not_in = 3;</code>
         */
        public int getNotInCount() {

            return notIn_.size();
        }

        /**
         * <pre>
         * NotIn specifies that this field's `type_url` must not be equal to any of
         * the specified values.
         * </pre>
         *
         * <code>repeated string not_in = 3;</code>
         */
        public java.lang.String getNotIn(int index) {

            return notIn_.get(index);
        }

        /**
         * <pre>
         * NotIn specifies that this field's `type_url` must not be equal to any of
         * the specified values.
         * </pre>
         *
         * <code>repeated string not_in = 3;</code>
         */
        public com.google.protobuf.ByteString
        getNotInBytes(int index) {

            return notIn_.getByteString(index);
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {

            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {

            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeBool(1, required_);
            }
            for (int i = 0; i < in_.size(); i++) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 2, in_.getRaw(i));
            }
            for (int i = 0; i < notIn_.size(); i++) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 3, notIn_.getRaw(i));
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {

            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(1, required_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < in_.size(); i++) {
                    dataSize += computeStringSizeNoTag(in_.getRaw(i));
                }
                size += dataSize;
                size += 1 * getInList().size();
            }
            {
                int dataSize = 0;
                for (int i = 0; i < notIn_.size(); i++) {
                    dataSize += computeStringSizeNoTag(notIn_.getRaw(i));
                }
                size += dataSize;
                size += 1 * getNotInList().size();
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {

            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Validate.AnyRules)) {
                return super.equals(obj);
            }
            Validate.AnyRules other = (Validate.AnyRules) obj;

            boolean result = true;
            result = result && (hasRequired() == other.hasRequired());
            if (hasRequired()) {
                result = result && (getRequired()
                        == other.getRequired());
            }
            result = result && getInList()
                    .equals(other.getInList());
            result = result && getNotInList()
                    .equals(other.getNotInList());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {

            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasRequired()) {
                hash = (37 * hash) + REQUIRED_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                        getRequired());
            }
            if (getInCount() > 0) {
                hash = (37 * hash) + IN_FIELD_NUMBER;
                hash = (53 * hash) + getInList().hashCode();
            }
            if (getNotInCount() > 0) {
                hash = (37 * hash) + NOT_IN_FIELD_NUMBER;
                hash = (53 * hash) + getNotInList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static Validate.AnyRules parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.AnyRules parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.AnyRules parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.AnyRules parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.AnyRules parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.AnyRules parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.AnyRules parseFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.AnyRules parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.AnyRules parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Validate.AnyRules parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.AnyRules parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.AnyRules parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {

            return newBuilder();
        }

        public static Builder newBuilder() {

            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(Validate.AnyRules prototype) {

            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {

            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * AnyRules describe constraints applied exclusively to the
         * `google.protobuf.Any` well-known type
         * </pre>
         * <p>
         * Protobuf type {@code validate.AnyRules}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:validate.AnyRules)
                Validate.AnyRulesOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return Validate.internal_static_validate_AnyRules_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return Validate.internal_static_validate_AnyRules_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Validate.AnyRules.class, Validate.AnyRules.Builder.class);
            }

            // Construct using validate.Validate.AnyRules.newBuilder()
            private Builder() {

                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {

                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @java.lang.Override
            public Builder clear() {

                super.clear();
                required_ = false;
                bitField0_ = (bitField0_ & ~0x00000001);
                in_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000002);
                notIn_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000004);
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {

                return Validate.internal_static_validate_AnyRules_descriptor;
            }

            @java.lang.Override
            public Validate.AnyRules getDefaultInstanceForType() {

                return Validate.AnyRules.getDefaultInstance();
            }

            @java.lang.Override
            public Validate.AnyRules build() {

                Validate.AnyRules result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public Validate.AnyRules buildPartial() {

                Validate.AnyRules result = new Validate.AnyRules(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.required_ = required_;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    in_ = in_.getUnmodifiableView();
                    bitField0_ = (bitField0_ & ~0x00000002);
                }
                result.in_ = in_;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                    notIn_ = notIn_.getUnmodifiableView();
                    bitField0_ = (bitField0_ & ~0x00000004);
                }
                result.notIn_ = notIn_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {

                return (Builder) super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {

                return (Builder) super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                return (Builder) super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {

                return (Builder) super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {

                if (other instanceof Validate.AnyRules) {
                    return mergeFrom((Validate.AnyRules) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(Validate.AnyRules other) {

                if (other == Validate.AnyRules.getDefaultInstance()) return this;
                if (other.hasRequired()) {
                    setRequired(other.getRequired());
                }
                if (!other.in_.isEmpty()) {
                    if (in_.isEmpty()) {
                        in_ = other.in_;
                        bitField0_ = (bitField0_ & ~0x00000002);
                    } else {
                        ensureInIsMutable();
                        in_.addAll(other.in_);
                    }
                    onChanged();
                }
                if (!other.notIn_.isEmpty()) {
                    if (notIn_.isEmpty()) {
                        notIn_ = other.notIn_;
                        bitField0_ = (bitField0_ & ~0x00000004);
                    } else {
                        ensureNotInIsMutable();
                        notIn_.addAll(other.notIn_);
                    }
                    onChanged();
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {

                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                Validate.AnyRules parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (Validate.AnyRules) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private boolean required_;

            /**
             * <pre>
             * Required specifies that this field must be set
             * </pre>
             *
             * <code>optional bool required = 1;</code>
             */
            public boolean hasRequired() {

                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <pre>
             * Required specifies that this field must be set
             * </pre>
             *
             * <code>optional bool required = 1;</code>
             */
            public boolean getRequired() {

                return required_;
            }

            /**
             * <pre>
             * Required specifies that this field must be set
             * </pre>
             *
             * <code>optional bool required = 1;</code>
             */
            public Builder setRequired(boolean value) {

                bitField0_ |= 0x00000001;
                required_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Required specifies that this field must be set
             * </pre>
             *
             * <code>optional bool required = 1;</code>
             */
            public Builder clearRequired() {

                bitField0_ = (bitField0_ & ~0x00000001);
                required_ = false;
                onChanged();
                return this;
            }

            private com.google.protobuf.LazyStringList in_ = com.google.protobuf.LazyStringArrayList.EMPTY;

            private void ensureInIsMutable() {

                if (!((bitField0_ & 0x00000002) == 0x00000002)) {
                    in_ = new com.google.protobuf.LazyStringArrayList(in_);
                    bitField0_ |= 0x00000002;
                }
            }

            /**
             * <pre>
             * In specifies that this field's `type_url` must be equal to one of the
             * specified values.
             * </pre>
             *
             * <code>repeated string in = 2;</code>
             */
            public com.google.protobuf.ProtocolStringList
            getInList() {

                return in_.getUnmodifiableView();
            }

            /**
             * <pre>
             * In specifies that this field's `type_url` must be equal to one of the
             * specified values.
             * </pre>
             *
             * <code>repeated string in = 2;</code>
             */
            public int getInCount() {

                return in_.size();
            }

            /**
             * <pre>
             * In specifies that this field's `type_url` must be equal to one of the
             * specified values.
             * </pre>
             *
             * <code>repeated string in = 2;</code>
             */
            public java.lang.String getIn(int index) {

                return in_.get(index);
            }

            /**
             * <pre>
             * In specifies that this field's `type_url` must be equal to one of the
             * specified values.
             * </pre>
             *
             * <code>repeated string in = 2;</code>
             */
            public com.google.protobuf.ByteString
            getInBytes(int index) {

                return in_.getByteString(index);
            }

            /**
             * <pre>
             * In specifies that this field's `type_url` must be equal to one of the
             * specified values.
             * </pre>
             *
             * <code>repeated string in = 2;</code>
             */
            public Builder setIn(
                    int index, java.lang.String value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                ensureInIsMutable();
                in_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field's `type_url` must be equal to one of the
             * specified values.
             * </pre>
             *
             * <code>repeated string in = 2;</code>
             */
            public Builder addIn(
                    java.lang.String value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                ensureInIsMutable();
                in_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field's `type_url` must be equal to one of the
             * specified values.
             * </pre>
             *
             * <code>repeated string in = 2;</code>
             */
            public Builder addAllIn(
                    java.lang.Iterable<java.lang.String> values) {

                ensureInIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, in_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field's `type_url` must be equal to one of the
             * specified values.
             * </pre>
             *
             * <code>repeated string in = 2;</code>
             */
            public Builder clearIn() {

                in_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000002);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * In specifies that this field's `type_url` must be equal to one of the
             * specified values.
             * </pre>
             *
             * <code>repeated string in = 2;</code>
             */
            public Builder addInBytes(
                    com.google.protobuf.ByteString value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                ensureInIsMutable();
                in_.add(value);
                onChanged();
                return this;
            }

            private com.google.protobuf.LazyStringList notIn_ = com.google.protobuf.LazyStringArrayList.EMPTY;

            private void ensureNotInIsMutable() {

                if (!((bitField0_ & 0x00000004) == 0x00000004)) {
                    notIn_ = new com.google.protobuf.LazyStringArrayList(notIn_);
                    bitField0_ |= 0x00000004;
                }
            }

            /**
             * <pre>
             * NotIn specifies that this field's `type_url` must not be equal to any of
             * the specified values.
             * </pre>
             *
             * <code>repeated string not_in = 3;</code>
             */
            public com.google.protobuf.ProtocolStringList
            getNotInList() {

                return notIn_.getUnmodifiableView();
            }

            /**
             * <pre>
             * NotIn specifies that this field's `type_url` must not be equal to any of
             * the specified values.
             * </pre>
             *
             * <code>repeated string not_in = 3;</code>
             */
            public int getNotInCount() {

                return notIn_.size();
            }

            /**
             * <pre>
             * NotIn specifies that this field's `type_url` must not be equal to any of
             * the specified values.
             * </pre>
             *
             * <code>repeated string not_in = 3;</code>
             */
            public java.lang.String getNotIn(int index) {

                return notIn_.get(index);
            }

            /**
             * <pre>
             * NotIn specifies that this field's `type_url` must not be equal to any of
             * the specified values.
             * </pre>
             *
             * <code>repeated string not_in = 3;</code>
             */
            public com.google.protobuf.ByteString
            getNotInBytes(int index) {

                return notIn_.getByteString(index);
            }

            /**
             * <pre>
             * NotIn specifies that this field's `type_url` must not be equal to any of
             * the specified values.
             * </pre>
             *
             * <code>repeated string not_in = 3;</code>
             */
            public Builder setNotIn(
                    int index, java.lang.String value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                ensureNotInIsMutable();
                notIn_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field's `type_url` must not be equal to any of
             * the specified values.
             * </pre>
             *
             * <code>repeated string not_in = 3;</code>
             */
            public Builder addNotIn(
                    java.lang.String value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                ensureNotInIsMutable();
                notIn_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field's `type_url` must not be equal to any of
             * the specified values.
             * </pre>
             *
             * <code>repeated string not_in = 3;</code>
             */
            public Builder addAllNotIn(
                    java.lang.Iterable<java.lang.String> values) {

                ensureNotInIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, notIn_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field's `type_url` must not be equal to any of
             * the specified values.
             * </pre>
             *
             * <code>repeated string not_in = 3;</code>
             */
            public Builder clearNotIn() {

                notIn_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000004);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field's `type_url` must not be equal to any of
             * the specified values.
             * </pre>
             *
             * <code>repeated string not_in = 3;</code>
             */
            public Builder addNotInBytes(
                    com.google.protobuf.ByteString value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                ensureNotInIsMutable();
                notIn_.add(value);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:validate.AnyRules)
        }

        // @@protoc_insertion_point(class_scope:validate.AnyRules)
        private static final Validate.AnyRules DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new Validate.AnyRules();
        }

        public static Validate.AnyRules getDefaultInstance() {

            return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated
        public static final com.google.protobuf.Parser<AnyRules>
                PARSER = new com.google.protobuf.AbstractParser<AnyRules>() {
            @java.lang.Override
            public AnyRules parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return new AnyRules(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<AnyRules> parser() {

            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<AnyRules> getParserForType() {

            return PARSER;
        }

        @java.lang.Override
        public Validate.AnyRules getDefaultInstanceForType() {

            return DEFAULT_INSTANCE;
        }

    }

    public interface DurationRulesOrBuilder extends
            // @@protoc_insertion_point(interface_extends:validate.DurationRules)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Required specifies that this field must be set
         * </pre>
         *
         * <code>optional bool required = 1;</code>
         */
        boolean hasRequired();

        /**
         * <pre>
         * Required specifies that this field must be set
         * </pre>
         *
         * <code>optional bool required = 1;</code>
         */
        boolean getRequired();

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional .google.protobuf.Duration const = 2;</code>
         */
        boolean hasConst();

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional .google.protobuf.Duration const = 2;</code>
         */
        com.google.protobuf.Duration getConst();

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional .google.protobuf.Duration const = 2;</code>
         */
        com.google.protobuf.DurationOrBuilder getConstOrBuilder();

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Duration lt = 3;</code>
         */
        boolean hasLt();

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Duration lt = 3;</code>
         */
        com.google.protobuf.Duration getLt();

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Duration lt = 3;</code>
         */
        com.google.protobuf.DurationOrBuilder getLtOrBuilder();

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * inclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Duration lte = 4;</code>
         */
        boolean hasLte();

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * inclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Duration lte = 4;</code>
         */
        com.google.protobuf.Duration getLte();

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * inclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Duration lte = 4;</code>
         */
        com.google.protobuf.DurationOrBuilder getLteOrBuilder();

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Duration gt = 5;</code>
         */
        boolean hasGt();

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Duration gt = 5;</code>
         */
        com.google.protobuf.Duration getGt();

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Duration gt = 5;</code>
         */
        com.google.protobuf.DurationOrBuilder getGtOrBuilder();

        /**
         * <pre>
         * Gte specifies that this field must be greater than the specified value,
         * inclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Duration gte = 6;</code>
         */
        boolean hasGte();

        /**
         * <pre>
         * Gte specifies that this field must be greater than the specified value,
         * inclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Duration gte = 6;</code>
         */
        com.google.protobuf.Duration getGte();

        /**
         * <pre>
         * Gte specifies that this field must be greater than the specified value,
         * inclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Duration gte = 6;</code>
         */
        com.google.protobuf.DurationOrBuilder getGteOrBuilder();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated .google.protobuf.Duration in = 7;</code>
         */
        java.util.List<com.google.protobuf.Duration>
        getInList();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated .google.protobuf.Duration in = 7;</code>
         */
        com.google.protobuf.Duration getIn(int index);

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated .google.protobuf.Duration in = 7;</code>
         */
        int getInCount();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated .google.protobuf.Duration in = 7;</code>
         */
        java.util.List<? extends com.google.protobuf.DurationOrBuilder>
        getInOrBuilderList();

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated .google.protobuf.Duration in = 7;</code>
         */
        com.google.protobuf.DurationOrBuilder getInOrBuilder(
                int index);

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated .google.protobuf.Duration not_in = 8;</code>
         */
        java.util.List<com.google.protobuf.Duration>
        getNotInList();

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated .google.protobuf.Duration not_in = 8;</code>
         */
        com.google.protobuf.Duration getNotIn(int index);

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated .google.protobuf.Duration not_in = 8;</code>
         */
        int getNotInCount();

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated .google.protobuf.Duration not_in = 8;</code>
         */
        java.util.List<? extends com.google.protobuf.DurationOrBuilder>
        getNotInOrBuilderList();

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated .google.protobuf.Duration not_in = 8;</code>
         */
        com.google.protobuf.DurationOrBuilder getNotInOrBuilder(
                int index);
    }

    /**
     * <pre>
     * DurationRules describe the constraints applied exclusively to the
     * `google.protobuf.Duration` well-known type
     * </pre>
     * <p>
     * Protobuf type {@code validate.DurationRules}
     */
    public static final class DurationRules extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:validate.DurationRules)
            DurationRulesOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use DurationRules.newBuilder() to construct.
        private DurationRules(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

            super(builder);
        }

        private DurationRules() {

            required_ = false;
            in_ = java.util.Collections.emptyList();
            notIn_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {

            return this.unknownFields;
        }

        private DurationRules(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8: {
                            bitField0_ |= 0x00000001;
                            required_ = input.readBool();
                            break;
                        }
                        case 18: {
                            com.google.protobuf.Duration.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                                subBuilder = const_.toBuilder();
                            }
                            const_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(const_);
                                const_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000002;
                            break;
                        }
                        case 26: {
                            com.google.protobuf.Duration.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                                subBuilder = lt_.toBuilder();
                            }
                            lt_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(lt_);
                                lt_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000004;
                            break;
                        }
                        case 34: {
                            com.google.protobuf.Duration.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                                subBuilder = lte_.toBuilder();
                            }
                            lte_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(lte_);
                                lte_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000008;
                            break;
                        }
                        case 42: {
                            com.google.protobuf.Duration.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                                subBuilder = gt_.toBuilder();
                            }
                            gt_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(gt_);
                                gt_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000010;
                            break;
                        }
                        case 50: {
                            com.google.protobuf.Duration.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                                subBuilder = gte_.toBuilder();
                            }
                            gte_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(gte_);
                                gte_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000020;
                            break;
                        }
                        case 58: {
                            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                                in_ = new java.util.ArrayList<com.google.protobuf.Duration>();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            in_.add(
                                    input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry));
                            break;
                        }
                        case 66: {
                            if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                                notIn_ = new java.util.ArrayList<com.google.protobuf.Duration>();
                                mutable_bitField0_ |= 0x00000080;
                            }
                            notIn_.add(
                                    input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry));
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                    in_ = java.util.Collections.unmodifiableList(in_);
                }
                if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                    notIn_ = java.util.Collections.unmodifiableList(notIn_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {

            return Validate.internal_static_validate_DurationRules_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {

            return Validate.internal_static_validate_DurationRules_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Validate.DurationRules.class, Validate.DurationRules.Builder.class);
        }

        private int bitField0_;
        public static final int REQUIRED_FIELD_NUMBER = 1;
        private boolean required_;

        /**
         * <pre>
         * Required specifies that this field must be set
         * </pre>
         *
         * <code>optional bool required = 1;</code>
         */
        public boolean hasRequired() {

            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <pre>
         * Required specifies that this field must be set
         * </pre>
         *
         * <code>optional bool required = 1;</code>
         */
        public boolean getRequired() {

            return required_;
        }

        public static final int CONST_FIELD_NUMBER = 2;
        private com.google.protobuf.Duration const_;

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional .google.protobuf.Duration const = 2;</code>
         */
        public boolean hasConst() {

            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional .google.protobuf.Duration const = 2;</code>
         */
        public com.google.protobuf.Duration getConst() {

            return const_ == null ? com.google.protobuf.Duration.getDefaultInstance() : const_;
        }

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional .google.protobuf.Duration const = 2;</code>
         */
        public com.google.protobuf.DurationOrBuilder getConstOrBuilder() {

            return const_ == null ? com.google.protobuf.Duration.getDefaultInstance() : const_;
        }

        public static final int LT_FIELD_NUMBER = 3;
        private com.google.protobuf.Duration lt_;

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Duration lt = 3;</code>
         */
        public boolean hasLt() {

            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Duration lt = 3;</code>
         */
        public com.google.protobuf.Duration getLt() {

            return lt_ == null ? com.google.protobuf.Duration.getDefaultInstance() : lt_;
        }

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Duration lt = 3;</code>
         */
        public com.google.protobuf.DurationOrBuilder getLtOrBuilder() {

            return lt_ == null ? com.google.protobuf.Duration.getDefaultInstance() : lt_;
        }

        public static final int LTE_FIELD_NUMBER = 4;
        private com.google.protobuf.Duration lte_;

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * inclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Duration lte = 4;</code>
         */
        public boolean hasLte() {

            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * inclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Duration lte = 4;</code>
         */
        public com.google.protobuf.Duration getLte() {

            return lte_ == null ? com.google.protobuf.Duration.getDefaultInstance() : lte_;
        }

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * inclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Duration lte = 4;</code>
         */
        public com.google.protobuf.DurationOrBuilder getLteOrBuilder() {

            return lte_ == null ? com.google.protobuf.Duration.getDefaultInstance() : lte_;
        }

        public static final int GT_FIELD_NUMBER = 5;
        private com.google.protobuf.Duration gt_;

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Duration gt = 5;</code>
         */
        public boolean hasGt() {

            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Duration gt = 5;</code>
         */
        public com.google.protobuf.Duration getGt() {

            return gt_ == null ? com.google.protobuf.Duration.getDefaultInstance() : gt_;
        }

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Duration gt = 5;</code>
         */
        public com.google.protobuf.DurationOrBuilder getGtOrBuilder() {

            return gt_ == null ? com.google.protobuf.Duration.getDefaultInstance() : gt_;
        }

        public static final int GTE_FIELD_NUMBER = 6;
        private com.google.protobuf.Duration gte_;

        /**
         * <pre>
         * Gte specifies that this field must be greater than the specified value,
         * inclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Duration gte = 6;</code>
         */
        public boolean hasGte() {

            return ((bitField0_ & 0x00000020) == 0x00000020);
        }

        /**
         * <pre>
         * Gte specifies that this field must be greater than the specified value,
         * inclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Duration gte = 6;</code>
         */
        public com.google.protobuf.Duration getGte() {

            return gte_ == null ? com.google.protobuf.Duration.getDefaultInstance() : gte_;
        }

        /**
         * <pre>
         * Gte specifies that this field must be greater than the specified value,
         * inclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Duration gte = 6;</code>
         */
        public com.google.protobuf.DurationOrBuilder getGteOrBuilder() {

            return gte_ == null ? com.google.protobuf.Duration.getDefaultInstance() : gte_;
        }

        public static final int IN_FIELD_NUMBER = 7;
        private java.util.List<com.google.protobuf.Duration> in_;

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated .google.protobuf.Duration in = 7;</code>
         */
        public java.util.List<com.google.protobuf.Duration> getInList() {

            return in_;
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated .google.protobuf.Duration in = 7;</code>
         */
        public java.util.List<? extends com.google.protobuf.DurationOrBuilder>
        getInOrBuilderList() {

            return in_;
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated .google.protobuf.Duration in = 7;</code>
         */
        public int getInCount() {

            return in_.size();
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated .google.protobuf.Duration in = 7;</code>
         */
        public com.google.protobuf.Duration getIn(int index) {

            return in_.get(index);
        }

        /**
         * <pre>
         * In specifies that this field must be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated .google.protobuf.Duration in = 7;</code>
         */
        public com.google.protobuf.DurationOrBuilder getInOrBuilder(
                int index) {

            return in_.get(index);
        }

        public static final int NOT_IN_FIELD_NUMBER = 8;
        private java.util.List<com.google.protobuf.Duration> notIn_;

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated .google.protobuf.Duration not_in = 8;</code>
         */
        public java.util.List<com.google.protobuf.Duration> getNotInList() {

            return notIn_;
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated .google.protobuf.Duration not_in = 8;</code>
         */
        public java.util.List<? extends com.google.protobuf.DurationOrBuilder>
        getNotInOrBuilderList() {

            return notIn_;
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated .google.protobuf.Duration not_in = 8;</code>
         */
        public int getNotInCount() {

            return notIn_.size();
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated .google.protobuf.Duration not_in = 8;</code>
         */
        public com.google.protobuf.Duration getNotIn(int index) {

            return notIn_.get(index);
        }

        /**
         * <pre>
         * NotIn specifies that this field cannot be equal to one of the specified
         * values
         * </pre>
         *
         * <code>repeated .google.protobuf.Duration not_in = 8;</code>
         */
        public com.google.protobuf.DurationOrBuilder getNotInOrBuilder(
                int index) {

            return notIn_.get(index);
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {

            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {

            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeBool(1, required_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeMessage(2, getConst());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeMessage(3, getLt());
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeMessage(4, getLte());
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeMessage(5, getGt());
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                output.writeMessage(6, getGte());
            }
            for (int i = 0; i < in_.size(); i++) {
                output.writeMessage(7, in_.get(i));
            }
            for (int i = 0; i < notIn_.size(); i++) {
                output.writeMessage(8, notIn_.get(i));
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {

            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(1, required_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, getConst());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(3, getLt());
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(4, getLte());
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(5, getGt());
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(6, getGte());
            }
            for (int i = 0; i < in_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(7, in_.get(i));
            }
            for (int i = 0; i < notIn_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(8, notIn_.get(i));
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {

            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Validate.DurationRules)) {
                return super.equals(obj);
            }
            Validate.DurationRules other = (Validate.DurationRules) obj;

            boolean result = true;
            result = result && (hasRequired() == other.hasRequired());
            if (hasRequired()) {
                result = result && (getRequired()
                        == other.getRequired());
            }
            result = result && (hasConst() == other.hasConst());
            if (hasConst()) {
                result = result && getConst()
                        .equals(other.getConst());
            }
            result = result && (hasLt() == other.hasLt());
            if (hasLt()) {
                result = result && getLt()
                        .equals(other.getLt());
            }
            result = result && (hasLte() == other.hasLte());
            if (hasLte()) {
                result = result && getLte()
                        .equals(other.getLte());
            }
            result = result && (hasGt() == other.hasGt());
            if (hasGt()) {
                result = result && getGt()
                        .equals(other.getGt());
            }
            result = result && (hasGte() == other.hasGte());
            if (hasGte()) {
                result = result && getGte()
                        .equals(other.getGte());
            }
            result = result && getInList()
                    .equals(other.getInList());
            result = result && getNotInList()
                    .equals(other.getNotInList());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {

            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasRequired()) {
                hash = (37 * hash) + REQUIRED_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                        getRequired());
            }
            if (hasConst()) {
                hash = (37 * hash) + CONST_FIELD_NUMBER;
                hash = (53 * hash) + getConst().hashCode();
            }
            if (hasLt()) {
                hash = (37 * hash) + LT_FIELD_NUMBER;
                hash = (53 * hash) + getLt().hashCode();
            }
            if (hasLte()) {
                hash = (37 * hash) + LTE_FIELD_NUMBER;
                hash = (53 * hash) + getLte().hashCode();
            }
            if (hasGt()) {
                hash = (37 * hash) + GT_FIELD_NUMBER;
                hash = (53 * hash) + getGt().hashCode();
            }
            if (hasGte()) {
                hash = (37 * hash) + GTE_FIELD_NUMBER;
                hash = (53 * hash) + getGte().hashCode();
            }
            if (getInCount() > 0) {
                hash = (37 * hash) + IN_FIELD_NUMBER;
                hash = (53 * hash) + getInList().hashCode();
            }
            if (getNotInCount() > 0) {
                hash = (37 * hash) + NOT_IN_FIELD_NUMBER;
                hash = (53 * hash) + getNotInList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static Validate.DurationRules parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.DurationRules parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.DurationRules parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.DurationRules parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.DurationRules parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.DurationRules parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.DurationRules parseFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.DurationRules parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.DurationRules parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Validate.DurationRules parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.DurationRules parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.DurationRules parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {

            return newBuilder();
        }

        public static Builder newBuilder() {

            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(Validate.DurationRules prototype) {

            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {

            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * DurationRules describe the constraints applied exclusively to the
         * `google.protobuf.Duration` well-known type
         * </pre>
         * <p>
         * Protobuf type {@code validate.DurationRules}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:validate.DurationRules)
                Validate.DurationRulesOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return Validate.internal_static_validate_DurationRules_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return Validate.internal_static_validate_DurationRules_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Validate.DurationRules.class, Validate.DurationRules.Builder.class);
            }

            // Construct using validate.Validate.DurationRules.newBuilder()
            private Builder() {

                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {

                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getConstFieldBuilder();
                    getLtFieldBuilder();
                    getLteFieldBuilder();
                    getGtFieldBuilder();
                    getGteFieldBuilder();
                    getInFieldBuilder();
                    getNotInFieldBuilder();
                }
            }

            @java.lang.Override
            public Builder clear() {

                super.clear();
                required_ = false;
                bitField0_ = (bitField0_ & ~0x00000001);
                if (constBuilder_ == null) {
                    const_ = null;
                } else {
                    constBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000002);
                if (ltBuilder_ == null) {
                    lt_ = null;
                } else {
                    ltBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000004);
                if (lteBuilder_ == null) {
                    lte_ = null;
                } else {
                    lteBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000008);
                if (gtBuilder_ == null) {
                    gt_ = null;
                } else {
                    gtBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000010);
                if (gteBuilder_ == null) {
                    gte_ = null;
                } else {
                    gteBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000020);
                if (inBuilder_ == null) {
                    in_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000040);
                } else {
                    inBuilder_.clear();
                }
                if (notInBuilder_ == null) {
                    notIn_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000080);
                } else {
                    notInBuilder_.clear();
                }
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {

                return Validate.internal_static_validate_DurationRules_descriptor;
            }

            @java.lang.Override
            public Validate.DurationRules getDefaultInstanceForType() {

                return Validate.DurationRules.getDefaultInstance();
            }

            @java.lang.Override
            public Validate.DurationRules build() {

                Validate.DurationRules result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public Validate.DurationRules buildPartial() {

                Validate.DurationRules result = new Validate.DurationRules(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.required_ = required_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                if (constBuilder_ == null) {
                    result.const_ = const_;
                } else {
                    result.const_ = constBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                if (ltBuilder_ == null) {
                    result.lt_ = lt_;
                } else {
                    result.lt_ = ltBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                if (lteBuilder_ == null) {
                    result.lte_ = lte_;
                } else {
                    result.lte_ = lteBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                if (gtBuilder_ == null) {
                    result.gt_ = gt_;
                } else {
                    result.gt_ = gtBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
                    to_bitField0_ |= 0x00000020;
                }
                if (gteBuilder_ == null) {
                    result.gte_ = gte_;
                } else {
                    result.gte_ = gteBuilder_.build();
                }
                if (inBuilder_ == null) {
                    if (((bitField0_ & 0x00000040) == 0x00000040)) {
                        in_ = java.util.Collections.unmodifiableList(in_);
                        bitField0_ = (bitField0_ & ~0x00000040);
                    }
                    result.in_ = in_;
                } else {
                    result.in_ = inBuilder_.build();
                }
                if (notInBuilder_ == null) {
                    if (((bitField0_ & 0x00000080) == 0x00000080)) {
                        notIn_ = java.util.Collections.unmodifiableList(notIn_);
                        bitField0_ = (bitField0_ & ~0x00000080);
                    }
                    result.notIn_ = notIn_;
                } else {
                    result.notIn_ = notInBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {

                return (Builder) super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {

                return (Builder) super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                return (Builder) super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {

                return (Builder) super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {

                if (other instanceof Validate.DurationRules) {
                    return mergeFrom((Validate.DurationRules) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(Validate.DurationRules other) {

                if (other == Validate.DurationRules.getDefaultInstance()) return this;
                if (other.hasRequired()) {
                    setRequired(other.getRequired());
                }
                if (other.hasConst()) {
                    mergeConst(other.getConst());
                }
                if (other.hasLt()) {
                    mergeLt(other.getLt());
                }
                if (other.hasLte()) {
                    mergeLte(other.getLte());
                }
                if (other.hasGt()) {
                    mergeGt(other.getGt());
                }
                if (other.hasGte()) {
                    mergeGte(other.getGte());
                }
                if (inBuilder_ == null) {
                    if (!other.in_.isEmpty()) {
                        if (in_.isEmpty()) {
                            in_ = other.in_;
                            bitField0_ = (bitField0_ & ~0x00000040);
                        } else {
                            ensureInIsMutable();
                            in_.addAll(other.in_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.in_.isEmpty()) {
                        if (inBuilder_.isEmpty()) {
                            inBuilder_.dispose();
                            inBuilder_ = null;
                            in_ = other.in_;
                            bitField0_ = (bitField0_ & ~0x00000040);
                            inBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getInFieldBuilder() : null;
                        } else {
                            inBuilder_.addAllMessages(other.in_);
                        }
                    }
                }
                if (notInBuilder_ == null) {
                    if (!other.notIn_.isEmpty()) {
                        if (notIn_.isEmpty()) {
                            notIn_ = other.notIn_;
                            bitField0_ = (bitField0_ & ~0x00000080);
                        } else {
                            ensureNotInIsMutable();
                            notIn_.addAll(other.notIn_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.notIn_.isEmpty()) {
                        if (notInBuilder_.isEmpty()) {
                            notInBuilder_.dispose();
                            notInBuilder_ = null;
                            notIn_ = other.notIn_;
                            bitField0_ = (bitField0_ & ~0x00000080);
                            notInBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getNotInFieldBuilder() : null;
                        } else {
                            notInBuilder_.addAllMessages(other.notIn_);
                        }
                    }
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {

                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                Validate.DurationRules parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (Validate.DurationRules) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private boolean required_;

            /**
             * <pre>
             * Required specifies that this field must be set
             * </pre>
             *
             * <code>optional bool required = 1;</code>
             */
            public boolean hasRequired() {

                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <pre>
             * Required specifies that this field must be set
             * </pre>
             *
             * <code>optional bool required = 1;</code>
             */
            public boolean getRequired() {

                return required_;
            }

            /**
             * <pre>
             * Required specifies that this field must be set
             * </pre>
             *
             * <code>optional bool required = 1;</code>
             */
            public Builder setRequired(boolean value) {

                bitField0_ |= 0x00000001;
                required_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Required specifies that this field must be set
             * </pre>
             *
             * <code>optional bool required = 1;</code>
             */
            public Builder clearRequired() {

                bitField0_ = (bitField0_ & ~0x00000001);
                required_ = false;
                onChanged();
                return this;
            }

            private com.google.protobuf.Duration const_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> constBuilder_;

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional .google.protobuf.Duration const = 2;</code>
             */
            public boolean hasConst() {

                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional .google.protobuf.Duration const = 2;</code>
             */
            public com.google.protobuf.Duration getConst() {

                if (constBuilder_ == null) {
                    return const_ == null ? com.google.protobuf.Duration.getDefaultInstance() : const_;
                } else {
                    return constBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional .google.protobuf.Duration const = 2;</code>
             */
            public Builder setConst(com.google.protobuf.Duration value) {

                if (constBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    const_ = value;
                    onChanged();
                } else {
                    constBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000002;
                return this;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional .google.protobuf.Duration const = 2;</code>
             */
            public Builder setConst(
                    com.google.protobuf.Duration.Builder builderForValue) {

                if (constBuilder_ == null) {
                    const_ = builderForValue.build();
                    onChanged();
                } else {
                    constBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000002;
                return this;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional .google.protobuf.Duration const = 2;</code>
             */
            public Builder mergeConst(com.google.protobuf.Duration value) {

                if (constBuilder_ == null) {
                    if (((bitField0_ & 0x00000002) == 0x00000002) &&
                            const_ != null &&
                            const_ != com.google.protobuf.Duration.getDefaultInstance()) {
                        const_ =
                                com.google.protobuf.Duration.newBuilder(const_).mergeFrom(value).buildPartial();
                    } else {
                        const_ = value;
                    }
                    onChanged();
                } else {
                    constBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000002;
                return this;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional .google.protobuf.Duration const = 2;</code>
             */
            public Builder clearConst() {

                if (constBuilder_ == null) {
                    const_ = null;
                    onChanged();
                } else {
                    constBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional .google.protobuf.Duration const = 2;</code>
             */
            public com.google.protobuf.Duration.Builder getConstBuilder() {

                bitField0_ |= 0x00000002;
                onChanged();
                return getConstFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional .google.protobuf.Duration const = 2;</code>
             */
            public com.google.protobuf.DurationOrBuilder getConstOrBuilder() {

                if (constBuilder_ != null) {
                    return constBuilder_.getMessageOrBuilder();
                } else {
                    return const_ == null ?
                            com.google.protobuf.Duration.getDefaultInstance() : const_;
                }
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional .google.protobuf.Duration const = 2;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>
            getConstFieldBuilder() {

                if (constBuilder_ == null) {
                    constBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                            getConst(),
                            getParentForChildren(),
                            isClean());
                    const_ = null;
                }
                return constBuilder_;
            }

            private com.google.protobuf.Duration lt_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> ltBuilder_;

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration lt = 3;</code>
             */
            public boolean hasLt() {

                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration lt = 3;</code>
             */
            public com.google.protobuf.Duration getLt() {

                if (ltBuilder_ == null) {
                    return lt_ == null ? com.google.protobuf.Duration.getDefaultInstance() : lt_;
                } else {
                    return ltBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration lt = 3;</code>
             */
            public Builder setLt(com.google.protobuf.Duration value) {

                if (ltBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    lt_ = value;
                    onChanged();
                } else {
                    ltBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000004;
                return this;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration lt = 3;</code>
             */
            public Builder setLt(
                    com.google.protobuf.Duration.Builder builderForValue) {

                if (ltBuilder_ == null) {
                    lt_ = builderForValue.build();
                    onChanged();
                } else {
                    ltBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000004;
                return this;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration lt = 3;</code>
             */
            public Builder mergeLt(com.google.protobuf.Duration value) {

                if (ltBuilder_ == null) {
                    if (((bitField0_ & 0x00000004) == 0x00000004) &&
                            lt_ != null &&
                            lt_ != com.google.protobuf.Duration.getDefaultInstance()) {
                        lt_ =
                                com.google.protobuf.Duration.newBuilder(lt_).mergeFrom(value).buildPartial();
                    } else {
                        lt_ = value;
                    }
                    onChanged();
                } else {
                    ltBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000004;
                return this;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration lt = 3;</code>
             */
            public Builder clearLt() {

                if (ltBuilder_ == null) {
                    lt_ = null;
                    onChanged();
                } else {
                    ltBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000004);
                return this;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration lt = 3;</code>
             */
            public com.google.protobuf.Duration.Builder getLtBuilder() {

                bitField0_ |= 0x00000004;
                onChanged();
                return getLtFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration lt = 3;</code>
             */
            public com.google.protobuf.DurationOrBuilder getLtOrBuilder() {

                if (ltBuilder_ != null) {
                    return ltBuilder_.getMessageOrBuilder();
                } else {
                    return lt_ == null ?
                            com.google.protobuf.Duration.getDefaultInstance() : lt_;
                }
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration lt = 3;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>
            getLtFieldBuilder() {

                if (ltBuilder_ == null) {
                    ltBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                            getLt(),
                            getParentForChildren(),
                            isClean());
                    lt_ = null;
                }
                return ltBuilder_;
            }

            private com.google.protobuf.Duration lte_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> lteBuilder_;

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration lte = 4;</code>
             */
            public boolean hasLte() {

                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration lte = 4;</code>
             */
            public com.google.protobuf.Duration getLte() {

                if (lteBuilder_ == null) {
                    return lte_ == null ? com.google.protobuf.Duration.getDefaultInstance() : lte_;
                } else {
                    return lteBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration lte = 4;</code>
             */
            public Builder setLte(com.google.protobuf.Duration value) {

                if (lteBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    lte_ = value;
                    onChanged();
                } else {
                    lteBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000008;
                return this;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration lte = 4;</code>
             */
            public Builder setLte(
                    com.google.protobuf.Duration.Builder builderForValue) {

                if (lteBuilder_ == null) {
                    lte_ = builderForValue.build();
                    onChanged();
                } else {
                    lteBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000008;
                return this;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration lte = 4;</code>
             */
            public Builder mergeLte(com.google.protobuf.Duration value) {

                if (lteBuilder_ == null) {
                    if (((bitField0_ & 0x00000008) == 0x00000008) &&
                            lte_ != null &&
                            lte_ != com.google.protobuf.Duration.getDefaultInstance()) {
                        lte_ =
                                com.google.protobuf.Duration.newBuilder(lte_).mergeFrom(value).buildPartial();
                    } else {
                        lte_ = value;
                    }
                    onChanged();
                } else {
                    lteBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000008;
                return this;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration lte = 4;</code>
             */
            public Builder clearLte() {

                if (lteBuilder_ == null) {
                    lte_ = null;
                    onChanged();
                } else {
                    lteBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000008);
                return this;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration lte = 4;</code>
             */
            public com.google.protobuf.Duration.Builder getLteBuilder() {

                bitField0_ |= 0x00000008;
                onChanged();
                return getLteFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration lte = 4;</code>
             */
            public com.google.protobuf.DurationOrBuilder getLteOrBuilder() {

                if (lteBuilder_ != null) {
                    return lteBuilder_.getMessageOrBuilder();
                } else {
                    return lte_ == null ?
                            com.google.protobuf.Duration.getDefaultInstance() : lte_;
                }
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration lte = 4;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>
            getLteFieldBuilder() {

                if (lteBuilder_ == null) {
                    lteBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                            getLte(),
                            getParentForChildren(),
                            isClean());
                    lte_ = null;
                }
                return lteBuilder_;
            }

            private com.google.protobuf.Duration gt_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> gtBuilder_;

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration gt = 5;</code>
             */
            public boolean hasGt() {

                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration gt = 5;</code>
             */
            public com.google.protobuf.Duration getGt() {

                if (gtBuilder_ == null) {
                    return gt_ == null ? com.google.protobuf.Duration.getDefaultInstance() : gt_;
                } else {
                    return gtBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration gt = 5;</code>
             */
            public Builder setGt(com.google.protobuf.Duration value) {

                if (gtBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    gt_ = value;
                    onChanged();
                } else {
                    gtBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000010;
                return this;
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration gt = 5;</code>
             */
            public Builder setGt(
                    com.google.protobuf.Duration.Builder builderForValue) {

                if (gtBuilder_ == null) {
                    gt_ = builderForValue.build();
                    onChanged();
                } else {
                    gtBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000010;
                return this;
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration gt = 5;</code>
             */
            public Builder mergeGt(com.google.protobuf.Duration value) {

                if (gtBuilder_ == null) {
                    if (((bitField0_ & 0x00000010) == 0x00000010) &&
                            gt_ != null &&
                            gt_ != com.google.protobuf.Duration.getDefaultInstance()) {
                        gt_ =
                                com.google.protobuf.Duration.newBuilder(gt_).mergeFrom(value).buildPartial();
                    } else {
                        gt_ = value;
                    }
                    onChanged();
                } else {
                    gtBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000010;
                return this;
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration gt = 5;</code>
             */
            public Builder clearGt() {

                if (gtBuilder_ == null) {
                    gt_ = null;
                    onChanged();
                } else {
                    gtBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000010);
                return this;
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration gt = 5;</code>
             */
            public com.google.protobuf.Duration.Builder getGtBuilder() {

                bitField0_ |= 0x00000010;
                onChanged();
                return getGtFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration gt = 5;</code>
             */
            public com.google.protobuf.DurationOrBuilder getGtOrBuilder() {

                if (gtBuilder_ != null) {
                    return gtBuilder_.getMessageOrBuilder();
                } else {
                    return gt_ == null ?
                            com.google.protobuf.Duration.getDefaultInstance() : gt_;
                }
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration gt = 5;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>
            getGtFieldBuilder() {

                if (gtBuilder_ == null) {
                    gtBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                            getGt(),
                            getParentForChildren(),
                            isClean());
                    gt_ = null;
                }
                return gtBuilder_;
            }

            private com.google.protobuf.Duration gte_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> gteBuilder_;

            /**
             * <pre>
             * Gte specifies that this field must be greater than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration gte = 6;</code>
             */
            public boolean hasGte() {

                return ((bitField0_ & 0x00000020) == 0x00000020);
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration gte = 6;</code>
             */
            public com.google.protobuf.Duration getGte() {

                if (gteBuilder_ == null) {
                    return gte_ == null ? com.google.protobuf.Duration.getDefaultInstance() : gte_;
                } else {
                    return gteBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration gte = 6;</code>
             */
            public Builder setGte(com.google.protobuf.Duration value) {

                if (gteBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    gte_ = value;
                    onChanged();
                } else {
                    gteBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000020;
                return this;
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration gte = 6;</code>
             */
            public Builder setGte(
                    com.google.protobuf.Duration.Builder builderForValue) {

                if (gteBuilder_ == null) {
                    gte_ = builderForValue.build();
                    onChanged();
                } else {
                    gteBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000020;
                return this;
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration gte = 6;</code>
             */
            public Builder mergeGte(com.google.protobuf.Duration value) {

                if (gteBuilder_ == null) {
                    if (((bitField0_ & 0x00000020) == 0x00000020) &&
                            gte_ != null &&
                            gte_ != com.google.protobuf.Duration.getDefaultInstance()) {
                        gte_ =
                                com.google.protobuf.Duration.newBuilder(gte_).mergeFrom(value).buildPartial();
                    } else {
                        gte_ = value;
                    }
                    onChanged();
                } else {
                    gteBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000020;
                return this;
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration gte = 6;</code>
             */
            public Builder clearGte() {

                if (gteBuilder_ == null) {
                    gte_ = null;
                    onChanged();
                } else {
                    gteBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000020);
                return this;
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration gte = 6;</code>
             */
            public com.google.protobuf.Duration.Builder getGteBuilder() {

                bitField0_ |= 0x00000020;
                onChanged();
                return getGteFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration gte = 6;</code>
             */
            public com.google.protobuf.DurationOrBuilder getGteOrBuilder() {

                if (gteBuilder_ != null) {
                    return gteBuilder_.getMessageOrBuilder();
                } else {
                    return gte_ == null ?
                            com.google.protobuf.Duration.getDefaultInstance() : gte_;
                }
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Duration gte = 6;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>
            getGteFieldBuilder() {

                if (gteBuilder_ == null) {
                    gteBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                            getGte(),
                            getParentForChildren(),
                            isClean());
                    gte_ = null;
                }
                return gteBuilder_;
            }

            private java.util.List<com.google.protobuf.Duration> in_ =
                    java.util.Collections.emptyList();

            private void ensureInIsMutable() {

                if (!((bitField0_ & 0x00000040) == 0x00000040)) {
                    in_ = new java.util.ArrayList<com.google.protobuf.Duration>(in_);
                    bitField0_ |= 0x00000040;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> inBuilder_;

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration in = 7;</code>
             */
            public java.util.List<com.google.protobuf.Duration> getInList() {

                if (inBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(in_);
                } else {
                    return inBuilder_.getMessageList();
                }
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration in = 7;</code>
             */
            public int getInCount() {

                if (inBuilder_ == null) {
                    return in_.size();
                } else {
                    return inBuilder_.getCount();
                }
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration in = 7;</code>
             */
            public com.google.protobuf.Duration getIn(int index) {

                if (inBuilder_ == null) {
                    return in_.get(index);
                } else {
                    return inBuilder_.getMessage(index);
                }
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration in = 7;</code>
             */
            public Builder setIn(
                    int index, com.google.protobuf.Duration value) {

                if (inBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureInIsMutable();
                    in_.set(index, value);
                    onChanged();
                } else {
                    inBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration in = 7;</code>
             */
            public Builder setIn(
                    int index, com.google.protobuf.Duration.Builder builderForValue) {

                if (inBuilder_ == null) {
                    ensureInIsMutable();
                    in_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    inBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration in = 7;</code>
             */
            public Builder addIn(com.google.protobuf.Duration value) {

                if (inBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureInIsMutable();
                    in_.add(value);
                    onChanged();
                } else {
                    inBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration in = 7;</code>
             */
            public Builder addIn(
                    int index, com.google.protobuf.Duration value) {

                if (inBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureInIsMutable();
                    in_.add(index, value);
                    onChanged();
                } else {
                    inBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration in = 7;</code>
             */
            public Builder addIn(
                    com.google.protobuf.Duration.Builder builderForValue) {

                if (inBuilder_ == null) {
                    ensureInIsMutable();
                    in_.add(builderForValue.build());
                    onChanged();
                } else {
                    inBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration in = 7;</code>
             */
            public Builder addIn(
                    int index, com.google.protobuf.Duration.Builder builderForValue) {

                if (inBuilder_ == null) {
                    ensureInIsMutable();
                    in_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    inBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration in = 7;</code>
             */
            public Builder addAllIn(
                    java.lang.Iterable<? extends com.google.protobuf.Duration> values) {

                if (inBuilder_ == null) {
                    ensureInIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, in_);
                    onChanged();
                } else {
                    inBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration in = 7;</code>
             */
            public Builder clearIn() {

                if (inBuilder_ == null) {
                    in_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000040);
                    onChanged();
                } else {
                    inBuilder_.clear();
                }
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration in = 7;</code>
             */
            public Builder removeIn(int index) {

                if (inBuilder_ == null) {
                    ensureInIsMutable();
                    in_.remove(index);
                    onChanged();
                } else {
                    inBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration in = 7;</code>
             */
            public com.google.protobuf.Duration.Builder getInBuilder(
                    int index) {

                return getInFieldBuilder().getBuilder(index);
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration in = 7;</code>
             */
            public com.google.protobuf.DurationOrBuilder getInOrBuilder(
                    int index) {

                if (inBuilder_ == null) {
                    return in_.get(index);
                } else {
                    return inBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration in = 7;</code>
             */
            public java.util.List<? extends com.google.protobuf.DurationOrBuilder>
            getInOrBuilderList() {

                if (inBuilder_ != null) {
                    return inBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(in_);
                }
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration in = 7;</code>
             */
            public com.google.protobuf.Duration.Builder addInBuilder() {

                return getInFieldBuilder().addBuilder(
                        com.google.protobuf.Duration.getDefaultInstance());
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration in = 7;</code>
             */
            public com.google.protobuf.Duration.Builder addInBuilder(
                    int index) {

                return getInFieldBuilder().addBuilder(
                        index, com.google.protobuf.Duration.getDefaultInstance());
            }

            /**
             * <pre>
             * In specifies that this field must be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration in = 7;</code>
             */
            public java.util.List<com.google.protobuf.Duration.Builder>
            getInBuilderList() {

                return getInFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>
            getInFieldBuilder() {

                if (inBuilder_ == null) {
                    inBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                            in_,
                            ((bitField0_ & 0x00000040) == 0x00000040),
                            getParentForChildren(),
                            isClean());
                    in_ = null;
                }
                return inBuilder_;
            }

            private java.util.List<com.google.protobuf.Duration> notIn_ =
                    java.util.Collections.emptyList();

            private void ensureNotInIsMutable() {

                if (!((bitField0_ & 0x00000080) == 0x00000080)) {
                    notIn_ = new java.util.ArrayList<com.google.protobuf.Duration>(notIn_);
                    bitField0_ |= 0x00000080;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> notInBuilder_;

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration not_in = 8;</code>
             */
            public java.util.List<com.google.protobuf.Duration> getNotInList() {

                if (notInBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(notIn_);
                } else {
                    return notInBuilder_.getMessageList();
                }
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration not_in = 8;</code>
             */
            public int getNotInCount() {

                if (notInBuilder_ == null) {
                    return notIn_.size();
                } else {
                    return notInBuilder_.getCount();
                }
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration not_in = 8;</code>
             */
            public com.google.protobuf.Duration getNotIn(int index) {

                if (notInBuilder_ == null) {
                    return notIn_.get(index);
                } else {
                    return notInBuilder_.getMessage(index);
                }
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration not_in = 8;</code>
             */
            public Builder setNotIn(
                    int index, com.google.protobuf.Duration value) {

                if (notInBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureNotInIsMutable();
                    notIn_.set(index, value);
                    onChanged();
                } else {
                    notInBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration not_in = 8;</code>
             */
            public Builder setNotIn(
                    int index, com.google.protobuf.Duration.Builder builderForValue) {

                if (notInBuilder_ == null) {
                    ensureNotInIsMutable();
                    notIn_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    notInBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration not_in = 8;</code>
             */
            public Builder addNotIn(com.google.protobuf.Duration value) {

                if (notInBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureNotInIsMutable();
                    notIn_.add(value);
                    onChanged();
                } else {
                    notInBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration not_in = 8;</code>
             */
            public Builder addNotIn(
                    int index, com.google.protobuf.Duration value) {

                if (notInBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureNotInIsMutable();
                    notIn_.add(index, value);
                    onChanged();
                } else {
                    notInBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration not_in = 8;</code>
             */
            public Builder addNotIn(
                    com.google.protobuf.Duration.Builder builderForValue) {

                if (notInBuilder_ == null) {
                    ensureNotInIsMutable();
                    notIn_.add(builderForValue.build());
                    onChanged();
                } else {
                    notInBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration not_in = 8;</code>
             */
            public Builder addNotIn(
                    int index, com.google.protobuf.Duration.Builder builderForValue) {

                if (notInBuilder_ == null) {
                    ensureNotInIsMutable();
                    notIn_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    notInBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration not_in = 8;</code>
             */
            public Builder addAllNotIn(
                    java.lang.Iterable<? extends com.google.protobuf.Duration> values) {

                if (notInBuilder_ == null) {
                    ensureNotInIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, notIn_);
                    onChanged();
                } else {
                    notInBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration not_in = 8;</code>
             */
            public Builder clearNotIn() {

                if (notInBuilder_ == null) {
                    notIn_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000080);
                    onChanged();
                } else {
                    notInBuilder_.clear();
                }
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration not_in = 8;</code>
             */
            public Builder removeNotIn(int index) {

                if (notInBuilder_ == null) {
                    ensureNotInIsMutable();
                    notIn_.remove(index);
                    onChanged();
                } else {
                    notInBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration not_in = 8;</code>
             */
            public com.google.protobuf.Duration.Builder getNotInBuilder(
                    int index) {

                return getNotInFieldBuilder().getBuilder(index);
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration not_in = 8;</code>
             */
            public com.google.protobuf.DurationOrBuilder getNotInOrBuilder(
                    int index) {

                if (notInBuilder_ == null) {
                    return notIn_.get(index);
                } else {
                    return notInBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration not_in = 8;</code>
             */
            public java.util.List<? extends com.google.protobuf.DurationOrBuilder>
            getNotInOrBuilderList() {

                if (notInBuilder_ != null) {
                    return notInBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(notIn_);
                }
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration not_in = 8;</code>
             */
            public com.google.protobuf.Duration.Builder addNotInBuilder() {

                return getNotInFieldBuilder().addBuilder(
                        com.google.protobuf.Duration.getDefaultInstance());
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration not_in = 8;</code>
             */
            public com.google.protobuf.Duration.Builder addNotInBuilder(
                    int index) {

                return getNotInFieldBuilder().addBuilder(
                        index, com.google.protobuf.Duration.getDefaultInstance());
            }

            /**
             * <pre>
             * NotIn specifies that this field cannot be equal to one of the specified
             * values
             * </pre>
             *
             * <code>repeated .google.protobuf.Duration not_in = 8;</code>
             */
            public java.util.List<com.google.protobuf.Duration.Builder>
            getNotInBuilderList() {

                return getNotInFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>
            getNotInFieldBuilder() {

                if (notInBuilder_ == null) {
                    notInBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                            notIn_,
                            ((bitField0_ & 0x00000080) == 0x00000080),
                            getParentForChildren(),
                            isClean());
                    notIn_ = null;
                }
                return notInBuilder_;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:validate.DurationRules)
        }

        // @@protoc_insertion_point(class_scope:validate.DurationRules)
        private static final Validate.DurationRules DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new Validate.DurationRules();
        }

        public static Validate.DurationRules getDefaultInstance() {

            return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated
        public static final com.google.protobuf.Parser<DurationRules>
                PARSER = new com.google.protobuf.AbstractParser<DurationRules>() {
            @java.lang.Override
            public DurationRules parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return new DurationRules(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<DurationRules> parser() {

            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<DurationRules> getParserForType() {

            return PARSER;
        }

        @java.lang.Override
        public Validate.DurationRules getDefaultInstanceForType() {

            return DEFAULT_INSTANCE;
        }

    }

    public interface TimestampRulesOrBuilder extends
            // @@protoc_insertion_point(interface_extends:validate.TimestampRules)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Required specifies that this field must be set
         * </pre>
         *
         * <code>optional bool required = 1;</code>
         */
        boolean hasRequired();

        /**
         * <pre>
         * Required specifies that this field must be set
         * </pre>
         *
         * <code>optional bool required = 1;</code>
         */
        boolean getRequired();

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp const = 2;</code>
         */
        boolean hasConst();

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp const = 2;</code>
         */
        com.google.protobuf.Timestamp getConst();

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp const = 2;</code>
         */
        com.google.protobuf.TimestampOrBuilder getConstOrBuilder();

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp lt = 3;</code>
         */
        boolean hasLt();

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp lt = 3;</code>
         */
        com.google.protobuf.Timestamp getLt();

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp lt = 3;</code>
         */
        com.google.protobuf.TimestampOrBuilder getLtOrBuilder();

        /**
         * <pre>
         * Lte specifies that this field must be less than the specified value,
         * inclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp lte = 4;</code>
         */
        boolean hasLte();

        /**
         * <pre>
         * Lte specifies that this field must be less than the specified value,
         * inclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp lte = 4;</code>
         */
        com.google.protobuf.Timestamp getLte();

        /**
         * <pre>
         * Lte specifies that this field must be less than the specified value,
         * inclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp lte = 4;</code>
         */
        com.google.protobuf.TimestampOrBuilder getLteOrBuilder();

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp gt = 5;</code>
         */
        boolean hasGt();

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp gt = 5;</code>
         */
        com.google.protobuf.Timestamp getGt();

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp gt = 5;</code>
         */
        com.google.protobuf.TimestampOrBuilder getGtOrBuilder();

        /**
         * <pre>
         * Gte specifies that this field must be greater than the specified value,
         * inclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp gte = 6;</code>
         */
        boolean hasGte();

        /**
         * <pre>
         * Gte specifies that this field must be greater than the specified value,
         * inclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp gte = 6;</code>
         */
        com.google.protobuf.Timestamp getGte();

        /**
         * <pre>
         * Gte specifies that this field must be greater than the specified value,
         * inclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp gte = 6;</code>
         */
        com.google.protobuf.TimestampOrBuilder getGteOrBuilder();

        /**
         * <pre>
         * LtNow specifies that this must be less than the current time. LtNow
         * can only be used with the Within rule.
         * </pre>
         *
         * <code>optional bool lt_now = 7;</code>
         */
        boolean hasLtNow();

        /**
         * <pre>
         * LtNow specifies that this must be less than the current time. LtNow
         * can only be used with the Within rule.
         * </pre>
         *
         * <code>optional bool lt_now = 7;</code>
         */
        boolean getLtNow();

        /**
         * <pre>
         * GtNow specifies that this must be greater than the current time. GtNow
         * can only be used with the Within rule.
         * </pre>
         *
         * <code>optional bool gt_now = 8;</code>
         */
        boolean hasGtNow();

        /**
         * <pre>
         * GtNow specifies that this must be greater than the current time. GtNow
         * can only be used with the Within rule.
         * </pre>
         *
         * <code>optional bool gt_now = 8;</code>
         */
        boolean getGtNow();

        /**
         * <pre>
         * Within specifies that this field must be within this duration of the
         * current time. This constraint can be used alone or with the LtNow and
         * GtNow rules.
         * </pre>
         *
         * <code>optional .google.protobuf.Duration within = 9;</code>
         */
        boolean hasWithin();

        /**
         * <pre>
         * Within specifies that this field must be within this duration of the
         * current time. This constraint can be used alone or with the LtNow and
         * GtNow rules.
         * </pre>
         *
         * <code>optional .google.protobuf.Duration within = 9;</code>
         */
        com.google.protobuf.Duration getWithin();

        /**
         * <pre>
         * Within specifies that this field must be within this duration of the
         * current time. This constraint can be used alone or with the LtNow and
         * GtNow rules.
         * </pre>
         *
         * <code>optional .google.protobuf.Duration within = 9;</code>
         */
        com.google.protobuf.DurationOrBuilder getWithinOrBuilder();
    }

    /**
     * <pre>
     * TimestampRules describe the constraints applied exclusively to the
     * `google.protobuf.Timestamp` well-known type
     * </pre>
     * <p>
     * Protobuf type {@code validate.TimestampRules}
     */
    public static final class TimestampRules extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:validate.TimestampRules)
            TimestampRulesOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use TimestampRules.newBuilder() to construct.
        private TimestampRules(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

            super(builder);
        }

        private TimestampRules() {

            required_ = false;
            ltNow_ = false;
            gtNow_ = false;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {

            return this.unknownFields;
        }

        private TimestampRules(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8: {
                            bitField0_ |= 0x00000001;
                            required_ = input.readBool();
                            break;
                        }
                        case 18: {
                            com.google.protobuf.Timestamp.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                                subBuilder = const_.toBuilder();
                            }
                            const_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(const_);
                                const_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000002;
                            break;
                        }
                        case 26: {
                            com.google.protobuf.Timestamp.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                                subBuilder = lt_.toBuilder();
                            }
                            lt_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(lt_);
                                lt_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000004;
                            break;
                        }
                        case 34: {
                            com.google.protobuf.Timestamp.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                                subBuilder = lte_.toBuilder();
                            }
                            lte_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(lte_);
                                lte_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000008;
                            break;
                        }
                        case 42: {
                            com.google.protobuf.Timestamp.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                                subBuilder = gt_.toBuilder();
                            }
                            gt_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(gt_);
                                gt_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000010;
                            break;
                        }
                        case 50: {
                            com.google.protobuf.Timestamp.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                                subBuilder = gte_.toBuilder();
                            }
                            gte_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(gte_);
                                gte_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000020;
                            break;
                        }
                        case 56: {
                            bitField0_ |= 0x00000040;
                            ltNow_ = input.readBool();
                            break;
                        }
                        case 64: {
                            bitField0_ |= 0x00000080;
                            gtNow_ = input.readBool();
                            break;
                        }
                        case 74: {
                            com.google.protobuf.Duration.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000100) == 0x00000100)) {
                                subBuilder = within_.toBuilder();
                            }
                            within_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(within_);
                                within_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000100;
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {

            return Validate.internal_static_validate_TimestampRules_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {

            return Validate.internal_static_validate_TimestampRules_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Validate.TimestampRules.class, Validate.TimestampRules.Builder.class);
        }

        private int bitField0_;
        public static final int REQUIRED_FIELD_NUMBER = 1;
        private boolean required_;

        /**
         * <pre>
         * Required specifies that this field must be set
         * </pre>
         *
         * <code>optional bool required = 1;</code>
         */
        public boolean hasRequired() {

            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <pre>
         * Required specifies that this field must be set
         * </pre>
         *
         * <code>optional bool required = 1;</code>
         */
        public boolean getRequired() {

            return required_;
        }

        public static final int CONST_FIELD_NUMBER = 2;
        private com.google.protobuf.Timestamp const_;

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp const = 2;</code>
         */
        public boolean hasConst() {

            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp const = 2;</code>
         */
        public com.google.protobuf.Timestamp getConst() {

            return const_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : const_;
        }

        /**
         * <pre>
         * Const specifies that this field must be exactly the specified value
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp const = 2;</code>
         */
        public com.google.protobuf.TimestampOrBuilder getConstOrBuilder() {

            return const_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : const_;
        }

        public static final int LT_FIELD_NUMBER = 3;
        private com.google.protobuf.Timestamp lt_;

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp lt = 3;</code>
         */
        public boolean hasLt() {

            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp lt = 3;</code>
         */
        public com.google.protobuf.Timestamp getLt() {

            return lt_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : lt_;
        }

        /**
         * <pre>
         * Lt specifies that this field must be less than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp lt = 3;</code>
         */
        public com.google.protobuf.TimestampOrBuilder getLtOrBuilder() {

            return lt_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : lt_;
        }

        public static final int LTE_FIELD_NUMBER = 4;
        private com.google.protobuf.Timestamp lte_;

        /**
         * <pre>
         * Lte specifies that this field must be less than the specified value,
         * inclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp lte = 4;</code>
         */
        public boolean hasLte() {

            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <pre>
         * Lte specifies that this field must be less than the specified value,
         * inclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp lte = 4;</code>
         */
        public com.google.protobuf.Timestamp getLte() {

            return lte_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : lte_;
        }

        /**
         * <pre>
         * Lte specifies that this field must be less than the specified value,
         * inclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp lte = 4;</code>
         */
        public com.google.protobuf.TimestampOrBuilder getLteOrBuilder() {

            return lte_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : lte_;
        }

        public static final int GT_FIELD_NUMBER = 5;
        private com.google.protobuf.Timestamp gt_;

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp gt = 5;</code>
         */
        public boolean hasGt() {

            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp gt = 5;</code>
         */
        public com.google.protobuf.Timestamp getGt() {

            return gt_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : gt_;
        }

        /**
         * <pre>
         * Gt specifies that this field must be greater than the specified value,
         * exclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp gt = 5;</code>
         */
        public com.google.protobuf.TimestampOrBuilder getGtOrBuilder() {

            return gt_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : gt_;
        }

        public static final int GTE_FIELD_NUMBER = 6;
        private com.google.protobuf.Timestamp gte_;

        /**
         * <pre>
         * Gte specifies that this field must be greater than the specified value,
         * inclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp gte = 6;</code>
         */
        public boolean hasGte() {

            return ((bitField0_ & 0x00000020) == 0x00000020);
        }

        /**
         * <pre>
         * Gte specifies that this field must be greater than the specified value,
         * inclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp gte = 6;</code>
         */
        public com.google.protobuf.Timestamp getGte() {

            return gte_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : gte_;
        }

        /**
         * <pre>
         * Gte specifies that this field must be greater than the specified value,
         * inclusive
         * </pre>
         *
         * <code>optional .google.protobuf.Timestamp gte = 6;</code>
         */
        public com.google.protobuf.TimestampOrBuilder getGteOrBuilder() {

            return gte_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : gte_;
        }

        public static final int LT_NOW_FIELD_NUMBER = 7;
        private boolean ltNow_;

        /**
         * <pre>
         * LtNow specifies that this must be less than the current time. LtNow
         * can only be used with the Within rule.
         * </pre>
         *
         * <code>optional bool lt_now = 7;</code>
         */
        public boolean hasLtNow() {

            return ((bitField0_ & 0x00000040) == 0x00000040);
        }

        /**
         * <pre>
         * LtNow specifies that this must be less than the current time. LtNow
         * can only be used with the Within rule.
         * </pre>
         *
         * <code>optional bool lt_now = 7;</code>
         */
        public boolean getLtNow() {

            return ltNow_;
        }

        public static final int GT_NOW_FIELD_NUMBER = 8;
        private boolean gtNow_;

        /**
         * <pre>
         * GtNow specifies that this must be greater than the current time. GtNow
         * can only be used with the Within rule.
         * </pre>
         *
         * <code>optional bool gt_now = 8;</code>
         */
        public boolean hasGtNow() {

            return ((bitField0_ & 0x00000080) == 0x00000080);
        }

        /**
         * <pre>
         * GtNow specifies that this must be greater than the current time. GtNow
         * can only be used with the Within rule.
         * </pre>
         *
         * <code>optional bool gt_now = 8;</code>
         */
        public boolean getGtNow() {

            return gtNow_;
        }

        public static final int WITHIN_FIELD_NUMBER = 9;
        private com.google.protobuf.Duration within_;

        /**
         * <pre>
         * Within specifies that this field must be within this duration of the
         * current time. This constraint can be used alone or with the LtNow and
         * GtNow rules.
         * </pre>
         *
         * <code>optional .google.protobuf.Duration within = 9;</code>
         */
        public boolean hasWithin() {

            return ((bitField0_ & 0x00000100) == 0x00000100);
        }

        /**
         * <pre>
         * Within specifies that this field must be within this duration of the
         * current time. This constraint can be used alone or with the LtNow and
         * GtNow rules.
         * </pre>
         *
         * <code>optional .google.protobuf.Duration within = 9;</code>
         */
        public com.google.protobuf.Duration getWithin() {

            return within_ == null ? com.google.protobuf.Duration.getDefaultInstance() : within_;
        }

        /**
         * <pre>
         * Within specifies that this field must be within this duration of the
         * current time. This constraint can be used alone or with the LtNow and
         * GtNow rules.
         * </pre>
         *
         * <code>optional .google.protobuf.Duration within = 9;</code>
         */
        public com.google.protobuf.DurationOrBuilder getWithinOrBuilder() {

            return within_ == null ? com.google.protobuf.Duration.getDefaultInstance() : within_;
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {

            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {

            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeBool(1, required_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeMessage(2, getConst());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeMessage(3, getLt());
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeMessage(4, getLte());
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeMessage(5, getGt());
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                output.writeMessage(6, getGte());
            }
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
                output.writeBool(7, ltNow_);
            }
            if (((bitField0_ & 0x00000080) == 0x00000080)) {
                output.writeBool(8, gtNow_);
            }
            if (((bitField0_ & 0x00000100) == 0x00000100)) {
                output.writeMessage(9, getWithin());
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {

            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(1, required_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, getConst());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(3, getLt());
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(4, getLte());
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(5, getGt());
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(6, getGte());
            }
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(7, ltNow_);
            }
            if (((bitField0_ & 0x00000080) == 0x00000080)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(8, gtNow_);
            }
            if (((bitField0_ & 0x00000100) == 0x00000100)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(9, getWithin());
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {

            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Validate.TimestampRules)) {
                return super.equals(obj);
            }
            Validate.TimestampRules other = (Validate.TimestampRules) obj;

            boolean result = true;
            result = result && (hasRequired() == other.hasRequired());
            if (hasRequired()) {
                result = result && (getRequired()
                        == other.getRequired());
            }
            result = result && (hasConst() == other.hasConst());
            if (hasConst()) {
                result = result && getConst()
                        .equals(other.getConst());
            }
            result = result && (hasLt() == other.hasLt());
            if (hasLt()) {
                result = result && getLt()
                        .equals(other.getLt());
            }
            result = result && (hasLte() == other.hasLte());
            if (hasLte()) {
                result = result && getLte()
                        .equals(other.getLte());
            }
            result = result && (hasGt() == other.hasGt());
            if (hasGt()) {
                result = result && getGt()
                        .equals(other.getGt());
            }
            result = result && (hasGte() == other.hasGte());
            if (hasGte()) {
                result = result && getGte()
                        .equals(other.getGte());
            }
            result = result && (hasLtNow() == other.hasLtNow());
            if (hasLtNow()) {
                result = result && (getLtNow()
                        == other.getLtNow());
            }
            result = result && (hasGtNow() == other.hasGtNow());
            if (hasGtNow()) {
                result = result && (getGtNow()
                        == other.getGtNow());
            }
            result = result && (hasWithin() == other.hasWithin());
            if (hasWithin()) {
                result = result && getWithin()
                        .equals(other.getWithin());
            }
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {

            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasRequired()) {
                hash = (37 * hash) + REQUIRED_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                        getRequired());
            }
            if (hasConst()) {
                hash = (37 * hash) + CONST_FIELD_NUMBER;
                hash = (53 * hash) + getConst().hashCode();
            }
            if (hasLt()) {
                hash = (37 * hash) + LT_FIELD_NUMBER;
                hash = (53 * hash) + getLt().hashCode();
            }
            if (hasLte()) {
                hash = (37 * hash) + LTE_FIELD_NUMBER;
                hash = (53 * hash) + getLte().hashCode();
            }
            if (hasGt()) {
                hash = (37 * hash) + GT_FIELD_NUMBER;
                hash = (53 * hash) + getGt().hashCode();
            }
            if (hasGte()) {
                hash = (37 * hash) + GTE_FIELD_NUMBER;
                hash = (53 * hash) + getGte().hashCode();
            }
            if (hasLtNow()) {
                hash = (37 * hash) + LT_NOW_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                        getLtNow());
            }
            if (hasGtNow()) {
                hash = (37 * hash) + GT_NOW_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                        getGtNow());
            }
            if (hasWithin()) {
                hash = (37 * hash) + WITHIN_FIELD_NUMBER;
                hash = (53 * hash) + getWithin().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static Validate.TimestampRules parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.TimestampRules parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.TimestampRules parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.TimestampRules parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.TimestampRules parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static Validate.TimestampRules parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Validate.TimestampRules parseFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.TimestampRules parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.TimestampRules parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Validate.TimestampRules parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Validate.TimestampRules parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Validate.TimestampRules parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {

            return newBuilder();
        }

        public static Builder newBuilder() {

            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(Validate.TimestampRules prototype) {

            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {

            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * TimestampRules describe the constraints applied exclusively to the
         * `google.protobuf.Timestamp` well-known type
         * </pre>
         * <p>
         * Protobuf type {@code validate.TimestampRules}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:validate.TimestampRules)
                Validate.TimestampRulesOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return Validate.internal_static_validate_TimestampRules_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return Validate.internal_static_validate_TimestampRules_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Validate.TimestampRules.class, Validate.TimestampRules.Builder.class);
            }

            // Construct using validate.Validate.TimestampRules.newBuilder()
            private Builder() {

                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {

                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getConstFieldBuilder();
                    getLtFieldBuilder();
                    getLteFieldBuilder();
                    getGtFieldBuilder();
                    getGteFieldBuilder();
                    getWithinFieldBuilder();
                }
            }

            @java.lang.Override
            public Builder clear() {

                super.clear();
                required_ = false;
                bitField0_ = (bitField0_ & ~0x00000001);
                if (constBuilder_ == null) {
                    const_ = null;
                } else {
                    constBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000002);
                if (ltBuilder_ == null) {
                    lt_ = null;
                } else {
                    ltBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000004);
                if (lteBuilder_ == null) {
                    lte_ = null;
                } else {
                    lteBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000008);
                if (gtBuilder_ == null) {
                    gt_ = null;
                } else {
                    gtBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000010);
                if (gteBuilder_ == null) {
                    gte_ = null;
                } else {
                    gteBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000020);
                ltNow_ = false;
                bitField0_ = (bitField0_ & ~0x00000040);
                gtNow_ = false;
                bitField0_ = (bitField0_ & ~0x00000080);
                if (withinBuilder_ == null) {
                    within_ = null;
                } else {
                    withinBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000100);
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {

                return Validate.internal_static_validate_TimestampRules_descriptor;
            }

            @java.lang.Override
            public Validate.TimestampRules getDefaultInstanceForType() {

                return Validate.TimestampRules.getDefaultInstance();
            }

            @java.lang.Override
            public Validate.TimestampRules build() {

                Validate.TimestampRules result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public Validate.TimestampRules buildPartial() {

                Validate.TimestampRules result = new Validate.TimestampRules(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.required_ = required_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                if (constBuilder_ == null) {
                    result.const_ = const_;
                } else {
                    result.const_ = constBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                if (ltBuilder_ == null) {
                    result.lt_ = lt_;
                } else {
                    result.lt_ = ltBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                if (lteBuilder_ == null) {
                    result.lte_ = lte_;
                } else {
                    result.lte_ = lteBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                if (gtBuilder_ == null) {
                    result.gt_ = gt_;
                } else {
                    result.gt_ = gtBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
                    to_bitField0_ |= 0x00000020;
                }
                if (gteBuilder_ == null) {
                    result.gte_ = gte_;
                } else {
                    result.gte_ = gteBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
                    to_bitField0_ |= 0x00000040;
                }
                result.ltNow_ = ltNow_;
                if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
                    to_bitField0_ |= 0x00000080;
                }
                result.gtNow_ = gtNow_;
                if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
                    to_bitField0_ |= 0x00000100;
                }
                if (withinBuilder_ == null) {
                    result.within_ = within_;
                } else {
                    result.within_ = withinBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {

                return (Builder) super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {

                return (Builder) super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                return (Builder) super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {

                return (Builder) super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {

                if (other instanceof Validate.TimestampRules) {
                    return mergeFrom((Validate.TimestampRules) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(Validate.TimestampRules other) {

                if (other == Validate.TimestampRules.getDefaultInstance()) return this;
                if (other.hasRequired()) {
                    setRequired(other.getRequired());
                }
                if (other.hasConst()) {
                    mergeConst(other.getConst());
                }
                if (other.hasLt()) {
                    mergeLt(other.getLt());
                }
                if (other.hasLte()) {
                    mergeLte(other.getLte());
                }
                if (other.hasGt()) {
                    mergeGt(other.getGt());
                }
                if (other.hasGte()) {
                    mergeGte(other.getGte());
                }
                if (other.hasLtNow()) {
                    setLtNow(other.getLtNow());
                }
                if (other.hasGtNow()) {
                    setGtNow(other.getGtNow());
                }
                if (other.hasWithin()) {
                    mergeWithin(other.getWithin());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {

                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                Validate.TimestampRules parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (Validate.TimestampRules) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private boolean required_;

            /**
             * <pre>
             * Required specifies that this field must be set
             * </pre>
             *
             * <code>optional bool required = 1;</code>
             */
            public boolean hasRequired() {

                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <pre>
             * Required specifies that this field must be set
             * </pre>
             *
             * <code>optional bool required = 1;</code>
             */
            public boolean getRequired() {

                return required_;
            }

            /**
             * <pre>
             * Required specifies that this field must be set
             * </pre>
             *
             * <code>optional bool required = 1;</code>
             */
            public Builder setRequired(boolean value) {

                bitField0_ |= 0x00000001;
                required_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Required specifies that this field must be set
             * </pre>
             *
             * <code>optional bool required = 1;</code>
             */
            public Builder clearRequired() {

                bitField0_ = (bitField0_ & ~0x00000001);
                required_ = false;
                onChanged();
                return this;
            }

            private com.google.protobuf.Timestamp const_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> constBuilder_;

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp const = 2;</code>
             */
            public boolean hasConst() {

                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp const = 2;</code>
             */
            public com.google.protobuf.Timestamp getConst() {

                if (constBuilder_ == null) {
                    return const_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : const_;
                } else {
                    return constBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp const = 2;</code>
             */
            public Builder setConst(com.google.protobuf.Timestamp value) {

                if (constBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    const_ = value;
                    onChanged();
                } else {
                    constBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000002;
                return this;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp const = 2;</code>
             */
            public Builder setConst(
                    com.google.protobuf.Timestamp.Builder builderForValue) {

                if (constBuilder_ == null) {
                    const_ = builderForValue.build();
                    onChanged();
                } else {
                    constBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000002;
                return this;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp const = 2;</code>
             */
            public Builder mergeConst(com.google.protobuf.Timestamp value) {

                if (constBuilder_ == null) {
                    if (((bitField0_ & 0x00000002) == 0x00000002) &&
                            const_ != null &&
                            const_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
                        const_ =
                                com.google.protobuf.Timestamp.newBuilder(const_).mergeFrom(value).buildPartial();
                    } else {
                        const_ = value;
                    }
                    onChanged();
                } else {
                    constBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000002;
                return this;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp const = 2;</code>
             */
            public Builder clearConst() {

                if (constBuilder_ == null) {
                    const_ = null;
                    onChanged();
                } else {
                    constBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp const = 2;</code>
             */
            public com.google.protobuf.Timestamp.Builder getConstBuilder() {

                bitField0_ |= 0x00000002;
                onChanged();
                return getConstFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp const = 2;</code>
             */
            public com.google.protobuf.TimestampOrBuilder getConstOrBuilder() {

                if (constBuilder_ != null) {
                    return constBuilder_.getMessageOrBuilder();
                } else {
                    return const_ == null ?
                            com.google.protobuf.Timestamp.getDefaultInstance() : const_;
                }
            }

            /**
             * <pre>
             * Const specifies that this field must be exactly the specified value
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp const = 2;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>
            getConstFieldBuilder() {

                if (constBuilder_ == null) {
                    constBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                            getConst(),
                            getParentForChildren(),
                            isClean());
                    const_ = null;
                }
                return constBuilder_;
            }

            private com.google.protobuf.Timestamp lt_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> ltBuilder_;

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp lt = 3;</code>
             */
            public boolean hasLt() {

                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp lt = 3;</code>
             */
            public com.google.protobuf.Timestamp getLt() {

                if (ltBuilder_ == null) {
                    return lt_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : lt_;
                } else {
                    return ltBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp lt = 3;</code>
             */
            public Builder setLt(com.google.protobuf.Timestamp value) {

                if (ltBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    lt_ = value;
                    onChanged();
                } else {
                    ltBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000004;
                return this;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp lt = 3;</code>
             */
            public Builder setLt(
                    com.google.protobuf.Timestamp.Builder builderForValue) {

                if (ltBuilder_ == null) {
                    lt_ = builderForValue.build();
                    onChanged();
                } else {
                    ltBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000004;
                return this;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp lt = 3;</code>
             */
            public Builder mergeLt(com.google.protobuf.Timestamp value) {

                if (ltBuilder_ == null) {
                    if (((bitField0_ & 0x00000004) == 0x00000004) &&
                            lt_ != null &&
                            lt_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
                        lt_ =
                                com.google.protobuf.Timestamp.newBuilder(lt_).mergeFrom(value).buildPartial();
                    } else {
                        lt_ = value;
                    }
                    onChanged();
                } else {
                    ltBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000004;
                return this;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp lt = 3;</code>
             */
            public Builder clearLt() {

                if (ltBuilder_ == null) {
                    lt_ = null;
                    onChanged();
                } else {
                    ltBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000004);
                return this;
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp lt = 3;</code>
             */
            public com.google.protobuf.Timestamp.Builder getLtBuilder() {

                bitField0_ |= 0x00000004;
                onChanged();
                return getLtFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp lt = 3;</code>
             */
            public com.google.protobuf.TimestampOrBuilder getLtOrBuilder() {

                if (ltBuilder_ != null) {
                    return ltBuilder_.getMessageOrBuilder();
                } else {
                    return lt_ == null ?
                            com.google.protobuf.Timestamp.getDefaultInstance() : lt_;
                }
            }

            /**
             * <pre>
             * Lt specifies that this field must be less than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp lt = 3;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>
            getLtFieldBuilder() {

                if (ltBuilder_ == null) {
                    ltBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                            getLt(),
                            getParentForChildren(),
                            isClean());
                    lt_ = null;
                }
                return ltBuilder_;
            }

            private com.google.protobuf.Timestamp lte_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> lteBuilder_;

            /**
             * <pre>
             * Lte specifies that this field must be less than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp lte = 4;</code>
             */
            public boolean hasLte() {

                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp lte = 4;</code>
             */
            public com.google.protobuf.Timestamp getLte() {

                if (lteBuilder_ == null) {
                    return lte_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : lte_;
                } else {
                    return lteBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp lte = 4;</code>
             */
            public Builder setLte(com.google.protobuf.Timestamp value) {

                if (lteBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    lte_ = value;
                    onChanged();
                } else {
                    lteBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000008;
                return this;
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp lte = 4;</code>
             */
            public Builder setLte(
                    com.google.protobuf.Timestamp.Builder builderForValue) {

                if (lteBuilder_ == null) {
                    lte_ = builderForValue.build();
                    onChanged();
                } else {
                    lteBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000008;
                return this;
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp lte = 4;</code>
             */
            public Builder mergeLte(com.google.protobuf.Timestamp value) {

                if (lteBuilder_ == null) {
                    if (((bitField0_ & 0x00000008) == 0x00000008) &&
                            lte_ != null &&
                            lte_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
                        lte_ =
                                com.google.protobuf.Timestamp.newBuilder(lte_).mergeFrom(value).buildPartial();
                    } else {
                        lte_ = value;
                    }
                    onChanged();
                } else {
                    lteBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000008;
                return this;
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp lte = 4;</code>
             */
            public Builder clearLte() {

                if (lteBuilder_ == null) {
                    lte_ = null;
                    onChanged();
                } else {
                    lteBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000008);
                return this;
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp lte = 4;</code>
             */
            public com.google.protobuf.Timestamp.Builder getLteBuilder() {

                bitField0_ |= 0x00000008;
                onChanged();
                return getLteFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp lte = 4;</code>
             */
            public com.google.protobuf.TimestampOrBuilder getLteOrBuilder() {

                if (lteBuilder_ != null) {
                    return lteBuilder_.getMessageOrBuilder();
                } else {
                    return lte_ == null ?
                            com.google.protobuf.Timestamp.getDefaultInstance() : lte_;
                }
            }

            /**
             * <pre>
             * Lte specifies that this field must be less than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp lte = 4;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>
            getLteFieldBuilder() {

                if (lteBuilder_ == null) {
                    lteBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                            getLte(),
                            getParentForChildren(),
                            isClean());
                    lte_ = null;
                }
                return lteBuilder_;
            }

            private com.google.protobuf.Timestamp gt_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> gtBuilder_;

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp gt = 5;</code>
             */
            public boolean hasGt() {

                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp gt = 5;</code>
             */
            public com.google.protobuf.Timestamp getGt() {

                if (gtBuilder_ == null) {
                    return gt_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : gt_;
                } else {
                    return gtBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp gt = 5;</code>
             */
            public Builder setGt(com.google.protobuf.Timestamp value) {

                if (gtBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    gt_ = value;
                    onChanged();
                } else {
                    gtBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000010;
                return this;
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp gt = 5;</code>
             */
            public Builder setGt(
                    com.google.protobuf.Timestamp.Builder builderForValue) {

                if (gtBuilder_ == null) {
                    gt_ = builderForValue.build();
                    onChanged();
                } else {
                    gtBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000010;
                return this;
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp gt = 5;</code>
             */
            public Builder mergeGt(com.google.protobuf.Timestamp value) {

                if (gtBuilder_ == null) {
                    if (((bitField0_ & 0x00000010) == 0x00000010) &&
                            gt_ != null &&
                            gt_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
                        gt_ =
                                com.google.protobuf.Timestamp.newBuilder(gt_).mergeFrom(value).buildPartial();
                    } else {
                        gt_ = value;
                    }
                    onChanged();
                } else {
                    gtBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000010;
                return this;
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp gt = 5;</code>
             */
            public Builder clearGt() {

                if (gtBuilder_ == null) {
                    gt_ = null;
                    onChanged();
                } else {
                    gtBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000010);
                return this;
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp gt = 5;</code>
             */
            public com.google.protobuf.Timestamp.Builder getGtBuilder() {

                bitField0_ |= 0x00000010;
                onChanged();
                return getGtFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp gt = 5;</code>
             */
            public com.google.protobuf.TimestampOrBuilder getGtOrBuilder() {

                if (gtBuilder_ != null) {
                    return gtBuilder_.getMessageOrBuilder();
                } else {
                    return gt_ == null ?
                            com.google.protobuf.Timestamp.getDefaultInstance() : gt_;
                }
            }

            /**
             * <pre>
             * Gt specifies that this field must be greater than the specified value,
             * exclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp gt = 5;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>
            getGtFieldBuilder() {

                if (gtBuilder_ == null) {
                    gtBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                            getGt(),
                            getParentForChildren(),
                            isClean());
                    gt_ = null;
                }
                return gtBuilder_;
            }

            private com.google.protobuf.Timestamp gte_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> gteBuilder_;

            /**
             * <pre>
             * Gte specifies that this field must be greater than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp gte = 6;</code>
             */
            public boolean hasGte() {

                return ((bitField0_ & 0x00000020) == 0x00000020);
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp gte = 6;</code>
             */
            public com.google.protobuf.Timestamp getGte() {

                if (gteBuilder_ == null) {
                    return gte_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : gte_;
                } else {
                    return gteBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp gte = 6;</code>
             */
            public Builder setGte(com.google.protobuf.Timestamp value) {

                if (gteBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    gte_ = value;
                    onChanged();
                } else {
                    gteBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000020;
                return this;
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp gte = 6;</code>
             */
            public Builder setGte(
                    com.google.protobuf.Timestamp.Builder builderForValue) {

                if (gteBuilder_ == null) {
                    gte_ = builderForValue.build();
                    onChanged();
                } else {
                    gteBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000020;
                return this;
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp gte = 6;</code>
             */
            public Builder mergeGte(com.google.protobuf.Timestamp value) {

                if (gteBuilder_ == null) {
                    if (((bitField0_ & 0x00000020) == 0x00000020) &&
                            gte_ != null &&
                            gte_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
                        gte_ =
                                com.google.protobuf.Timestamp.newBuilder(gte_).mergeFrom(value).buildPartial();
                    } else {
                        gte_ = value;
                    }
                    onChanged();
                } else {
                    gteBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000020;
                return this;
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp gte = 6;</code>
             */
            public Builder clearGte() {

                if (gteBuilder_ == null) {
                    gte_ = null;
                    onChanged();
                } else {
                    gteBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000020);
                return this;
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp gte = 6;</code>
             */
            public com.google.protobuf.Timestamp.Builder getGteBuilder() {

                bitField0_ |= 0x00000020;
                onChanged();
                return getGteFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp gte = 6;</code>
             */
            public com.google.protobuf.TimestampOrBuilder getGteOrBuilder() {

                if (gteBuilder_ != null) {
                    return gteBuilder_.getMessageOrBuilder();
                } else {
                    return gte_ == null ?
                            com.google.protobuf.Timestamp.getDefaultInstance() : gte_;
                }
            }

            /**
             * <pre>
             * Gte specifies that this field must be greater than the specified value,
             * inclusive
             * </pre>
             *
             * <code>optional .google.protobuf.Timestamp gte = 6;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>
            getGteFieldBuilder() {

                if (gteBuilder_ == null) {
                    gteBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                            getGte(),
                            getParentForChildren(),
                            isClean());
                    gte_ = null;
                }
                return gteBuilder_;
            }

            private boolean ltNow_;

            /**
             * <pre>
             * LtNow specifies that this must be less than the current time. LtNow
             * can only be used with the Within rule.
             * </pre>
             *
             * <code>optional bool lt_now = 7;</code>
             */
            public boolean hasLtNow() {

                return ((bitField0_ & 0x00000040) == 0x00000040);
            }

            /**
             * <pre>
             * LtNow specifies that this must be less than the current time. LtNow
             * can only be used with the Within rule.
             * </pre>
             *
             * <code>optional bool lt_now = 7;</code>
             */
            public boolean getLtNow() {

                return ltNow_;
            }

            /**
             * <pre>
             * LtNow specifies that this must be less than the current time. LtNow
             * can only be used with the Within rule.
             * </pre>
             *
             * <code>optional bool lt_now = 7;</code>
             */
            public Builder setLtNow(boolean value) {

                bitField0_ |= 0x00000040;
                ltNow_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * LtNow specifies that this must be less than the current time. LtNow
             * can only be used with the Within rule.
             * </pre>
             *
             * <code>optional bool lt_now = 7;</code>
             */
            public Builder clearLtNow() {

                bitField0_ = (bitField0_ & ~0x00000040);
                ltNow_ = false;
                onChanged();
                return this;
            }

            private boolean gtNow_;

            /**
             * <pre>
             * GtNow specifies that this must be greater than the current time. GtNow
             * can only be used with the Within rule.
             * </pre>
             *
             * <code>optional bool gt_now = 8;</code>
             */
            public boolean hasGtNow() {

                return ((bitField0_ & 0x00000080) == 0x00000080);
            }

            /**
             * <pre>
             * GtNow specifies that this must be greater than the current time. GtNow
             * can only be used with the Within rule.
             * </pre>
             *
             * <code>optional bool gt_now = 8;</code>
             */
            public boolean getGtNow() {

                return gtNow_;
            }

            /**
             * <pre>
             * GtNow specifies that this must be greater than the current time. GtNow
             * can only be used with the Within rule.
             * </pre>
             *
             * <code>optional bool gt_now = 8;</code>
             */
            public Builder setGtNow(boolean value) {

                bitField0_ |= 0x00000080;
                gtNow_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * GtNow specifies that this must be greater than the current time. GtNow
             * can only be used with the Within rule.
             * </pre>
             *
             * <code>optional bool gt_now = 8;</code>
             */
            public Builder clearGtNow() {

                bitField0_ = (bitField0_ & ~0x00000080);
                gtNow_ = false;
                onChanged();
                return this;
            }

            private com.google.protobuf.Duration within_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> withinBuilder_;

            /**
             * <pre>
             * Within specifies that this field must be within this duration of the
             * current time. This constraint can be used alone or with the LtNow and
             * GtNow rules.
             * </pre>
             *
             * <code>optional .google.protobuf.Duration within = 9;</code>
             */
            public boolean hasWithin() {

                return ((bitField0_ & 0x00000100) == 0x00000100);
            }

            /**
             * <pre>
             * Within specifies that this field must be within this duration of the
             * current time. This constraint can be used alone or with the LtNow and
             * GtNow rules.
             * </pre>
             *
             * <code>optional .google.protobuf.Duration within = 9;</code>
             */
            public com.google.protobuf.Duration getWithin() {

                if (withinBuilder_ == null) {
                    return within_ == null ? com.google.protobuf.Duration.getDefaultInstance() : within_;
                } else {
                    return withinBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Within specifies that this field must be within this duration of the
             * current time. This constraint can be used alone or with the LtNow and
             * GtNow rules.
             * </pre>
             *
             * <code>optional .google.protobuf.Duration within = 9;</code>
             */
            public Builder setWithin(com.google.protobuf.Duration value) {

                if (withinBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    within_ = value;
                    onChanged();
                } else {
                    withinBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000100;
                return this;
            }

            /**
             * <pre>
             * Within specifies that this field must be within this duration of the
             * current time. This constraint can be used alone or with the LtNow and
             * GtNow rules.
             * </pre>
             *
             * <code>optional .google.protobuf.Duration within = 9;</code>
             */
            public Builder setWithin(
                    com.google.protobuf.Duration.Builder builderForValue) {

                if (withinBuilder_ == null) {
                    within_ = builderForValue.build();
                    onChanged();
                } else {
                    withinBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000100;
                return this;
            }

            /**
             * <pre>
             * Within specifies that this field must be within this duration of the
             * current time. This constraint can be used alone or with the LtNow and
             * GtNow rules.
             * </pre>
             *
             * <code>optional .google.protobuf.Duration within = 9;</code>
             */
            public Builder mergeWithin(com.google.protobuf.Duration value) {

                if (withinBuilder_ == null) {
                    if (((bitField0_ & 0x00000100) == 0x00000100) &&
                            within_ != null &&
                            within_ != com.google.protobuf.Duration.getDefaultInstance()) {
                        within_ =
                                com.google.protobuf.Duration.newBuilder(within_).mergeFrom(value).buildPartial();
                    } else {
                        within_ = value;
                    }
                    onChanged();
                } else {
                    withinBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000100;
                return this;
            }

            /**
             * <pre>
             * Within specifies that this field must be within this duration of the
             * current time. This constraint can be used alone or with the LtNow and
             * GtNow rules.
             * </pre>
             *
             * <code>optional .google.protobuf.Duration within = 9;</code>
             */
            public Builder clearWithin() {

                if (withinBuilder_ == null) {
                    within_ = null;
                    onChanged();
                } else {
                    withinBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000100);
                return this;
            }

            /**
             * <pre>
             * Within specifies that this field must be within this duration of the
             * current time. This constraint can be used alone or with the LtNow and
             * GtNow rules.
             * </pre>
             *
             * <code>optional .google.protobuf.Duration within = 9;</code>
             */
            public com.google.protobuf.Duration.Builder getWithinBuilder() {

                bitField0_ |= 0x00000100;
                onChanged();
                return getWithinFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Within specifies that this field must be within this duration of the
             * current time. This constraint can be used alone or with the LtNow and
             * GtNow rules.
             * </pre>
             *
             * <code>optional .google.protobuf.Duration within = 9;</code>
             */
            public com.google.protobuf.DurationOrBuilder getWithinOrBuilder() {

                if (withinBuilder_ != null) {
                    return withinBuilder_.getMessageOrBuilder();
                } else {
                    return within_ == null ?
                            com.google.protobuf.Duration.getDefaultInstance() : within_;
                }
            }

            /**
             * <pre>
             * Within specifies that this field must be within this duration of the
             * current time. This constraint can be used alone or with the LtNow and
             * GtNow rules.
             * </pre>
             *
             * <code>optional .google.protobuf.Duration within = 9;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>
            getWithinFieldBuilder() {

                if (withinBuilder_ == null) {
                    withinBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                            getWithin(),
                            getParentForChildren(),
                            isClean());
                    within_ = null;
                }
                return withinBuilder_;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:validate.TimestampRules)
        }

        // @@protoc_insertion_point(class_scope:validate.TimestampRules)
        private static final Validate.TimestampRules DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new Validate.TimestampRules();
        }

        public static Validate.TimestampRules getDefaultInstance() {

            return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated
        public static final com.google.protobuf.Parser<TimestampRules>
                PARSER = new com.google.protobuf.AbstractParser<TimestampRules>() {
            @java.lang.Override
            public TimestampRules parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return new TimestampRules(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<TimestampRules> parser() {

            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<TimestampRules> getParserForType() {

            return PARSER;
        }

        @java.lang.Override
        public Validate.TimestampRules getDefaultInstanceForType() {

            return DEFAULT_INSTANCE;
        }

    }

    public static final int DISABLED_FIELD_NUMBER = 919191;
    /**
     * <pre>
     * Disabled nullifies any validation rules for this message, including any
     * message fields associated with it that do support validation.
     * </pre>
     *
     * <code>extend .google.protobuf.MessageOptions { ... }</code>
     */
    public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
            com.google.protobuf.DescriptorProtos.MessageOptions,
            java.lang.Boolean> disabled = com.google.protobuf.GeneratedMessage
            .newFileScopedGeneratedExtension(
                    java.lang.Boolean.class,
                    null);
    public static final int REQUIRED_FIELD_NUMBER = 919191;
    /**
     * <pre>
     * Required ensures that exactly one the field options in a oneof is set;
     * validation fails if no fields in the oneof are set.
     * </pre>
     *
     * <code>extend .google.protobuf.OneofOptions { ... }</code>
     */
    public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
            com.google.protobuf.DescriptorProtos.OneofOptions,
            java.lang.Boolean> required = com.google.protobuf.GeneratedMessage
            .newFileScopedGeneratedExtension(
                    java.lang.Boolean.class,
                    null);
    public static final int RULES_FIELD_NUMBER = 919191;
    /**
     * <pre>
     * Rules specify the validations to be performed on this field. By default,
     * no validation is performed against a field.
     * </pre>
     *
     * <code>extend .google.protobuf.FieldOptions { ... }</code>
     */
    public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
            com.google.protobuf.DescriptorProtos.FieldOptions,
            Validate.FieldRules> rules = com.google.protobuf.GeneratedMessage
            .newFileScopedGeneratedExtension(
                    Validate.FieldRules.class,
                    Validate.FieldRules.getDefaultInstance());
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_validate_FieldRules_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_validate_FieldRules_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_validate_FloatRules_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_validate_FloatRules_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_validate_DoubleRules_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_validate_DoubleRules_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_validate_Int32Rules_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_validate_Int32Rules_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_validate_Int64Rules_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_validate_Int64Rules_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_validate_UInt32Rules_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_validate_UInt32Rules_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_validate_UInt64Rules_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_validate_UInt64Rules_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_validate_SInt32Rules_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_validate_SInt32Rules_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_validate_SInt64Rules_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_validate_SInt64Rules_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_validate_Fixed32Rules_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_validate_Fixed32Rules_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_validate_Fixed64Rules_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_validate_Fixed64Rules_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_validate_SFixed32Rules_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_validate_SFixed32Rules_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_validate_SFixed64Rules_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_validate_SFixed64Rules_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_validate_BoolRules_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_validate_BoolRules_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_validate_StringRules_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_validate_StringRules_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_validate_BytesRules_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_validate_BytesRules_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_validate_EnumRules_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_validate_EnumRules_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_validate_MessageRules_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_validate_MessageRules_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_validate_RepeatedRules_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_validate_RepeatedRules_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_validate_MapRules_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_validate_MapRules_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_validate_AnyRules_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_validate_AnyRules_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_validate_DurationRules_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_validate_DurationRules_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_validate_TimestampRules_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_validate_TimestampRules_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {

        return descriptor;
    }

    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;

    static {
        java.lang.String[] descriptorData = {
                "\n\016validate.proto\022\010validate\032 google/proto" +
                        "buf/descriptor.proto\032\036google/protobuf/du" +
                        "ration.proto\032\037google/protobuf/timestamp." +
                        "proto\"\232\007\n\nFieldRules\022%\n\005float\030\001 \001(\0132\024.va" +
                        "lidate.FloatRulesH\000\022\'\n\006double\030\002 \001(\0132\025.va" +
                        "lidate.DoubleRulesH\000\022%\n\005int32\030\003 \001(\0132\024.va" +
                        "lidate.Int32RulesH\000\022%\n\005int64\030\004 \001(\0132\024.val" +
                        "idate.Int64RulesH\000\022\'\n\006uint32\030\005 \001(\0132\025.val" +
                        "idate.UInt32RulesH\000\022\'\n\006uint64\030\006 \001(\0132\025.va" +
                        "lidate.UInt64RulesH\000\022\'\n\006sint32\030\007 \001(\0132\025.v" +
                        "alidate.SInt32RulesH\000\022\'\n\006sint64\030\010 \001(\0132\025." +
                        "validate.SInt64RulesH\000\022)\n\007fixed32\030\t \001(\0132" +
                        "\026.validate.Fixed32RulesH\000\022)\n\007fixed64\030\n \001" +
                        "(\0132\026.validate.Fixed64RulesH\000\022+\n\010sfixed32" +
                        "\030\013 \001(\0132\027.validate.SFixed32RulesH\000\022+\n\010sfi" +
                        "xed64\030\014 \001(\0132\027.validate.SFixed64RulesH\000\022#" +
                        "\n\004bool\030\r \001(\0132\023.validate.BoolRulesH\000\022\'\n\006s" +
                        "tring\030\016 \001(\0132\025.validate.StringRulesH\000\022%\n\005" +
                        "bytes\030\017 \001(\0132\024.validate.BytesRulesH\000\022#\n\004e" +
                        "num\030\020 \001(\0132\023.validate.EnumRulesH\000\022)\n\007mess" +
                        "age\030\021 \001(\0132\026.validate.MessageRulesH\000\022+\n\010r" +
                        "epeated\030\022 \001(\0132\027.validate.RepeatedRulesH\000" +
                        "\022!\n\003map\030\023 \001(\0132\022.validate.MapRulesH\000\022!\n\003a" +
                        "ny\030\024 \001(\0132\022.validate.AnyRulesH\000\022+\n\010durati" +
                        "on\030\025 \001(\0132\027.validate.DurationRulesH\000\022-\n\tt" +
                        "imestamp\030\026 \001(\0132\030.validate.TimestampRules" +
                        "H\000B\006\n\004type\"i\n\nFloatRules\022\r\n\005const\030\001 \001(\002\022" +
                        "\n\n\002lt\030\002 \001(\002\022\013\n\003lte\030\003 \001(\002\022\n\n\002gt\030\004 \001(\002\022\013\n\003" +
                        "gte\030\005 \001(\002\022\n\n\002in\030\006 \003(\002\022\016\n\006not_in\030\007 \003(\002\"j\n" +
                        "\013DoubleRules\022\r\n\005const\030\001 \001(\001\022\n\n\002lt\030\002 \001(\001\022" +
                        "\013\n\003lte\030\003 \001(\001\022\n\n\002gt\030\004 \001(\001\022\013\n\003gte\030\005 \001(\001\022\n\n" +
                        "\002in\030\006 \003(\001\022\016\n\006not_in\030\007 \003(\001\"i\n\nInt32Rules\022" +
                        "\r\n\005const\030\001 \001(\005\022\n\n\002lt\030\002 \001(\005\022\013\n\003lte\030\003 \001(\005\022" +
                        "\n\n\002gt\030\004 \001(\005\022\013\n\003gte\030\005 \001(\005\022\n\n\002in\030\006 \003(\005\022\016\n\006" +
                        "not_in\030\007 \003(\005\"i\n\nInt64Rules\022\r\n\005const\030\001 \001(" +
                        "\003\022\n\n\002lt\030\002 \001(\003\022\013\n\003lte\030\003 \001(\003\022\n\n\002gt\030\004 \001(\003\022\013" +
                        "\n\003gte\030\005 \001(\003\022\n\n\002in\030\006 \003(\003\022\016\n\006not_in\030\007 \003(\003\"" +
                        "j\n\013UInt32Rules\022\r\n\005const\030\001 \001(\r\022\n\n\002lt\030\002 \001(" +
                        "\r\022\013\n\003lte\030\003 \001(\r\022\n\n\002gt\030\004 \001(\r\022\013\n\003gte\030\005 \001(\r\022" +
                        "\n\n\002in\030\006 \003(\r\022\016\n\006not_in\030\007 \003(\r\"j\n\013UInt64Rul" +
                        "es\022\r\n\005const\030\001 \001(\004\022\n\n\002lt\030\002 \001(\004\022\013\n\003lte\030\003 \001" +
                        "(\004\022\n\n\002gt\030\004 \001(\004\022\013\n\003gte\030\005 \001(\004\022\n\n\002in\030\006 \003(\004\022" +
                        "\016\n\006not_in\030\007 \003(\004\"j\n\013SInt32Rules\022\r\n\005const\030" +
                        "\001 \001(\021\022\n\n\002lt\030\002 \001(\021\022\013\n\003lte\030\003 \001(\021\022\n\n\002gt\030\004 \001" +
                        "(\021\022\013\n\003gte\030\005 \001(\021\022\n\n\002in\030\006 \003(\021\022\016\n\006not_in\030\007 " +
                        "\003(\021\"j\n\013SInt64Rules\022\r\n\005const\030\001 \001(\022\022\n\n\002lt\030" +
                        "\002 \001(\022\022\013\n\003lte\030\003 \001(\022\022\n\n\002gt\030\004 \001(\022\022\013\n\003gte\030\005 " +
                        "\001(\022\022\n\n\002in\030\006 \003(\022\022\016\n\006not_in\030\007 \003(\022\"k\n\014Fixed" +
                        "32Rules\022\r\n\005const\030\001 \001(\007\022\n\n\002lt\030\002 \001(\007\022\013\n\003lt" +
                        "e\030\003 \001(\007\022\n\n\002gt\030\004 \001(\007\022\013\n\003gte\030\005 \001(\007\022\n\n\002in\030\006" +
                        " \003(\007\022\016\n\006not_in\030\007 \003(\007\"k\n\014Fixed64Rules\022\r\n\005" +
                        "const\030\001 \001(\006\022\n\n\002lt\030\002 \001(\006\022\013\n\003lte\030\003 \001(\006\022\n\n\002" +
                        "gt\030\004 \001(\006\022\013\n\003gte\030\005 \001(\006\022\n\n\002in\030\006 \003(\006\022\016\n\006not" +
                        "_in\030\007 \003(\006\"l\n\rSFixed32Rules\022\r\n\005const\030\001 \001(" +
                        "\017\022\n\n\002lt\030\002 \001(\017\022\013\n\003lte\030\003 \001(\017\022\n\n\002gt\030\004 \001(\017\022\013" +
                        "\n\003gte\030\005 \001(\017\022\n\n\002in\030\006 \003(\017\022\016\n\006not_in\030\007 \003(\017\"" +
                        "l\n\rSFixed64Rules\022\r\n\005const\030\001 \001(\020\022\n\n\002lt\030\002 " +
                        "\001(\020\022\013\n\003lte\030\003 \001(\020\022\n\n\002gt\030\004 \001(\020\022\013\n\003gte\030\005 \001(" +
                        "\020\022\n\n\002in\030\006 \003(\020\022\016\n\006not_in\030\007 \003(\020\"\032\n\tBoolRul" +
                        "es\022\r\n\005const\030\001 \001(\010\"\306\002\n\013StringRules\022\r\n\005con" +
                        "st\030\001 \001(\t\022\017\n\007min_len\030\002 \001(\004\022\017\n\007max_len\030\003 \001" +
                        "(\004\022\021\n\tmin_bytes\030\004 \001(\004\022\021\n\tmax_bytes\030\005 \001(\004" +
                        "\022\017\n\007pattern\030\006 \001(\t\022\016\n\006prefix\030\007 \001(\t\022\016\n\006suf" +
                        "fix\030\010 \001(\t\022\020\n\010contains\030\t \001(\t\022\n\n\002in\030\n \003(\t\022" +
                        "\016\n\006not_in\030\013 \003(\t\022\017\n\005email\030\014 \001(\010H\000\022\022\n\010host" +
                        "name\030\r \001(\010H\000\022\014\n\002ip\030\016 \001(\010H\000\022\016\n\004ipv4\030\017 \001(\010" +
                        "H\000\022\016\n\004ipv6\030\020 \001(\010H\000\022\r\n\003uri\030\021 \001(\010H\000\022\021\n\007uri" +
                        "_ref\030\022 \001(\010H\000B\014\n\nwell_known\"\330\001\n\nBytesRule" +
                        "s\022\r\n\005const\030\001 \001(\014\022\017\n\007min_len\030\002 \001(\004\022\017\n\007max" +
                        "_len\030\003 \001(\004\022\017\n\007pattern\030\004 \001(\t\022\016\n\006prefix\030\005 " +
                        "\001(\014\022\016\n\006suffix\030\006 \001(\014\022\020\n\010contains\030\007 \001(\014\022\n\n" +
                        "\002in\030\010 \003(\014\022\016\n\006not_in\030\t \003(\014\022\014\n\002ip\030\n \001(\010H\000\022" +
                        "\016\n\004ipv4\030\013 \001(\010H\000\022\016\n\004ipv6\030\014 \001(\010H\000B\014\n\nwell_" +
                        "known\"L\n\tEnumRules\022\r\n\005const\030\001 \001(\005\022\024\n\014def" +
                        "ined_only\030\002 \001(\010\022\n\n\002in\030\003 \003(\005\022\016\n\006not_in\030\004 " +
                        "\003(\005\".\n\014MessageRules\022\014\n\004skip\030\001 \001(\010\022\020\n\010req" +
                        "uired\030\002 \001(\010\"j\n\rRepeatedRules\022\021\n\tmin_item" +
                        "s\030\001 \001(\004\022\021\n\tmax_items\030\002 \001(\004\022\016\n\006unique\030\003 \001" +
                        "(\010\022#\n\005items\030\004 \001(\0132\024.validate.FieldRules\"" +
                        "\215\001\n\010MapRules\022\021\n\tmin_pairs\030\001 \001(\004\022\021\n\tmax_p" +
                        "airs\030\002 \001(\004\022\021\n\tno_sparse\030\003 \001(\010\022\"\n\004keys\030\004 " +
                        "\001(\0132\024.validate.FieldRules\022$\n\006values\030\005 \001(" +
                        "\0132\024.validate.FieldRules\"8\n\010AnyRules\022\020\n\010r" +
                        "equired\030\001 \001(\010\022\n\n\002in\030\002 \003(\t\022\016\n\006not_in\030\003 \003(" +
                        "\t\"\273\002\n\rDurationRules\022\020\n\010required\030\001 \001(\010\022(\n" +
                        "\005const\030\002 \001(\0132\031.google.protobuf.Duration\022" +
                        "%\n\002lt\030\003 \001(\0132\031.google.protobuf.Duration\022&" +
                        "\n\003lte\030\004 \001(\0132\031.google.protobuf.Duration\022%" +
                        "\n\002gt\030\005 \001(\0132\031.google.protobuf.Duration\022&\n" +
                        "\003gte\030\006 \001(\0132\031.google.protobuf.Duration\022%\n" +
                        "\002in\030\007 \003(\0132\031.google.protobuf.Duration\022)\n\006" +
                        "not_in\030\010 \003(\0132\031.google.protobuf.Duration\"" +
                        "\272\002\n\016TimestampRules\022\020\n\010required\030\001 \001(\010\022)\n\005" +
                        "const\030\002 \001(\0132\032.google.protobuf.Timestamp\022" +
                        "&\n\002lt\030\003 \001(\0132\032.google.protobuf.Timestamp\022" +
                        "\'\n\003lte\030\004 \001(\0132\032.google.protobuf.Timestamp" +
                        "\022&\n\002gt\030\005 \001(\0132\032.google.protobuf.Timestamp" +
                        "\022\'\n\003gte\030\006 \001(\0132\032.google.protobuf.Timestam" +
                        "p\022\016\n\006lt_now\030\007 \001(\010\022\016\n\006gt_now\030\010 \001(\010\022)\n\006wit" +
                        "hin\030\t \001(\0132\031.google.protobuf.Duration:3\n\010" +
                        "disabled\022\037.google.protobuf.MessageOption" +
                        "s\030\227\2158 \001(\010:1\n\010required\022\035.google.protobuf." +
                        "OneofOptions\030\227\2158 \001(\010:D\n\005rules\022\035.google.p" +
                        "rotobuf.FieldOptions\030\227\2158 \001(\0132\024.validate." +
                        "FieldRulesB.Z,github.com/lyft/protoc-gen" +
                        "-validate/validate"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            com.google.protobuf.Descriptors.FileDescriptor root) {

                        descriptor = root;
                        return null;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[]{
                                com.google.protobuf.DescriptorProtos.getDescriptor(),
                                com.google.protobuf.DurationProto.getDescriptor(),
                                com.google.protobuf.TimestampProto.getDescriptor(),
                        }, assigner);
        internal_static_validate_FieldRules_descriptor =
                getDescriptor().getMessageTypes().get(0);
        internal_static_validate_FieldRules_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_validate_FieldRules_descriptor,
                new java.lang.String[]{"Float", "Double", "Int32", "Int64", "Uint32", "Uint64", "Sint32", "Sint64", "Fixed32", "Fixed64", "Sfixed32", "Sfixed64", "Bool", "String", "Bytes", "Enum", "Message", "Repeated", "Map", "Any", "Duration", "Timestamp", "Type",});
        internal_static_validate_FloatRules_descriptor =
                getDescriptor().getMessageTypes().get(1);
        internal_static_validate_FloatRules_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_validate_FloatRules_descriptor,
                new java.lang.String[]{"Const", "Lt", "Lte", "Gt", "Gte", "In", "NotIn",});
        internal_static_validate_DoubleRules_descriptor =
                getDescriptor().getMessageTypes().get(2);
        internal_static_validate_DoubleRules_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_validate_DoubleRules_descriptor,
                new java.lang.String[]{"Const", "Lt", "Lte", "Gt", "Gte", "In", "NotIn",});
        internal_static_validate_Int32Rules_descriptor =
                getDescriptor().getMessageTypes().get(3);
        internal_static_validate_Int32Rules_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_validate_Int32Rules_descriptor,
                new java.lang.String[]{"Const", "Lt", "Lte", "Gt", "Gte", "In", "NotIn",});
        internal_static_validate_Int64Rules_descriptor =
                getDescriptor().getMessageTypes().get(4);
        internal_static_validate_Int64Rules_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_validate_Int64Rules_descriptor,
                new java.lang.String[]{"Const", "Lt", "Lte", "Gt", "Gte", "In", "NotIn",});
        internal_static_validate_UInt32Rules_descriptor =
                getDescriptor().getMessageTypes().get(5);
        internal_static_validate_UInt32Rules_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_validate_UInt32Rules_descriptor,
                new java.lang.String[]{"Const", "Lt", "Lte", "Gt", "Gte", "In", "NotIn",});
        internal_static_validate_UInt64Rules_descriptor =
                getDescriptor().getMessageTypes().get(6);
        internal_static_validate_UInt64Rules_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_validate_UInt64Rules_descriptor,
                new java.lang.String[]{"Const", "Lt", "Lte", "Gt", "Gte", "In", "NotIn",});
        internal_static_validate_SInt32Rules_descriptor =
                getDescriptor().getMessageTypes().get(7);
        internal_static_validate_SInt32Rules_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_validate_SInt32Rules_descriptor,
                new java.lang.String[]{"Const", "Lt", "Lte", "Gt", "Gte", "In", "NotIn",});
        internal_static_validate_SInt64Rules_descriptor =
                getDescriptor().getMessageTypes().get(8);
        internal_static_validate_SInt64Rules_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_validate_SInt64Rules_descriptor,
                new java.lang.String[]{"Const", "Lt", "Lte", "Gt", "Gte", "In", "NotIn",});
        internal_static_validate_Fixed32Rules_descriptor =
                getDescriptor().getMessageTypes().get(9);
        internal_static_validate_Fixed32Rules_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_validate_Fixed32Rules_descriptor,
                new java.lang.String[]{"Const", "Lt", "Lte", "Gt", "Gte", "In", "NotIn",});
        internal_static_validate_Fixed64Rules_descriptor =
                getDescriptor().getMessageTypes().get(10);
        internal_static_validate_Fixed64Rules_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_validate_Fixed64Rules_descriptor,
                new java.lang.String[]{"Const", "Lt", "Lte", "Gt", "Gte", "In", "NotIn",});
        internal_static_validate_SFixed32Rules_descriptor =
                getDescriptor().getMessageTypes().get(11);
        internal_static_validate_SFixed32Rules_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_validate_SFixed32Rules_descriptor,
                new java.lang.String[]{"Const", "Lt", "Lte", "Gt", "Gte", "In", "NotIn",});
        internal_static_validate_SFixed64Rules_descriptor =
                getDescriptor().getMessageTypes().get(12);
        internal_static_validate_SFixed64Rules_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_validate_SFixed64Rules_descriptor,
                new java.lang.String[]{"Const", "Lt", "Lte", "Gt", "Gte", "In", "NotIn",});
        internal_static_validate_BoolRules_descriptor =
                getDescriptor().getMessageTypes().get(13);
        internal_static_validate_BoolRules_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_validate_BoolRules_descriptor,
                new java.lang.String[]{"Const",});
        internal_static_validate_StringRules_descriptor =
                getDescriptor().getMessageTypes().get(14);
        internal_static_validate_StringRules_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_validate_StringRules_descriptor,
                new java.lang.String[]{"Const", "MinLen", "MaxLen", "MinBytes", "MaxBytes", "Pattern", "Prefix", "Suffix", "Contains", "In", "NotIn", "Email", "Hostname", "Ip", "Ipv4", "Ipv6", "Uri", "UriRef", "WellKnown",});
        internal_static_validate_BytesRules_descriptor =
                getDescriptor().getMessageTypes().get(15);
        internal_static_validate_BytesRules_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_validate_BytesRules_descriptor,
                new java.lang.String[]{"Const", "MinLen", "MaxLen", "Pattern", "Prefix", "Suffix", "Contains", "In", "NotIn", "Ip", "Ipv4", "Ipv6", "WellKnown",});
        internal_static_validate_EnumRules_descriptor =
                getDescriptor().getMessageTypes().get(16);
        internal_static_validate_EnumRules_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_validate_EnumRules_descriptor,
                new java.lang.String[]{"Const", "DefinedOnly", "In", "NotIn",});
        internal_static_validate_MessageRules_descriptor =
                getDescriptor().getMessageTypes().get(17);
        internal_static_validate_MessageRules_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_validate_MessageRules_descriptor,
                new java.lang.String[]{"Skip", "Required",});
        internal_static_validate_RepeatedRules_descriptor =
                getDescriptor().getMessageTypes().get(18);
        internal_static_validate_RepeatedRules_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_validate_RepeatedRules_descriptor,
                new java.lang.String[]{"MinItems", "MaxItems", "Unique", "Items",});
        internal_static_validate_MapRules_descriptor =
                getDescriptor().getMessageTypes().get(19);
        internal_static_validate_MapRules_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_validate_MapRules_descriptor,
                new java.lang.String[]{"MinPairs", "MaxPairs", "NoSparse", "Keys", "Values",});
        internal_static_validate_AnyRules_descriptor =
                getDescriptor().getMessageTypes().get(20);
        internal_static_validate_AnyRules_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_validate_AnyRules_descriptor,
                new java.lang.String[]{"Required", "In", "NotIn",});
        internal_static_validate_DurationRules_descriptor =
                getDescriptor().getMessageTypes().get(21);
        internal_static_validate_DurationRules_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_validate_DurationRules_descriptor,
                new java.lang.String[]{"Required", "Const", "Lt", "Lte", "Gt", "Gte", "In", "NotIn",});
        internal_static_validate_TimestampRules_descriptor =
                getDescriptor().getMessageTypes().get(22);
        internal_static_validate_TimestampRules_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_validate_TimestampRules_descriptor,
                new java.lang.String[]{"Required", "Const", "Lt", "Lte", "Gt", "Gte", "LtNow", "GtNow", "Within",});
        disabled.internalInit(descriptor.getExtensions().get(0));
        required.internalInit(descriptor.getExtensions().get(1));
        rules.internalInit(descriptor.getExtensions().get(2));
        com.google.protobuf.DescriptorProtos.getDescriptor();
        com.google.protobuf.DurationProto.getDescriptor();
        com.google.protobuf.TimestampProto.getDescriptor();
    }

    // @@protoc_insertion_point(outer_class_scope)
}
