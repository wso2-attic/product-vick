// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/api/v2/core/health_check.proto

package org.wso2.vick.auth.cell.sts.generated.envoy.core;

import org.wso2.vick.auth.cell.sts.generated.validate.Validate;

public final class HealthCheckOuterClass {

    private HealthCheckOuterClass() {

    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {

    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {

        registerAllExtensions(
                (com.google.protobuf.ExtensionRegistryLite) registry);
    }

    /**
     * <pre>
     * Endpoint health status.
     * </pre>
     * <p>
     * Protobuf enum {@code envoy.api.v2.core.HealthStatus}
     */
    public enum HealthStatus
            implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <pre>
         * The health status is not known. This is interpreted by Envoy as *HEALTHY*.
         * </pre>
         *
         * <code>UNKNOWN = 0;</code>
         */
        UNKNOWN(0),
        /**
         * <pre>
         * Healthy.
         * </pre>
         *
         * <code>HEALTHY = 1;</code>
         */
        HEALTHY(1),
        /**
         * <pre>
         * Unhealthy.
         * </pre>
         *
         * <code>UNHEALTHY = 2;</code>
         */
        UNHEALTHY(2),
        /**
         * <pre>
         * Connection draining in progress. E.g.,
         * `&lt;https://aws.amazon.com/blogs/aws/elb-connection-draining-remove-instances-from-service-with-care/&gt;`_
         * or
         * `&lt;https://cloud.google.com/compute/docs/load-balancing/enabling-connection-draining&gt;`_.
         * This is interpreted by Envoy as *UNHEALTHY*.
         * </pre>
         *
         * <code>DRAINING = 3;</code>
         */
        DRAINING(3),
        /**
         * <pre>
         * Health check timed out. This is part of HDS and is interpreted by Envoy as
         * *UNHEALTHY*.
         * </pre>
         *
         * <code>TIMEOUT = 4;</code>
         */
        TIMEOUT(4),
        UNRECOGNIZED(-1),
        ;

        /**
         * <pre>
         * The health status is not known. This is interpreted by Envoy as *HEALTHY*.
         * </pre>
         *
         * <code>UNKNOWN = 0;</code>
         */
        public static final int UNKNOWN_VALUE = 0;
        /**
         * <pre>
         * Healthy.
         * </pre>
         *
         * <code>HEALTHY = 1;</code>
         */
        public static final int HEALTHY_VALUE = 1;
        /**
         * <pre>
         * Unhealthy.
         * </pre>
         *
         * <code>UNHEALTHY = 2;</code>
         */
        public static final int UNHEALTHY_VALUE = 2;
        /**
         * <pre>
         * Connection draining in progress. E.g.,
         * `&lt;https://aws.amazon.com/blogs/aws/elb-connection-draining-remove-instances-from-service-with-care/&gt;`_
         * or
         * `&lt;https://cloud.google.com/compute/docs/load-balancing/enabling-connection-draining&gt;`_.
         * This is interpreted by Envoy as *UNHEALTHY*.
         * </pre>
         *
         * <code>DRAINING = 3;</code>
         */
        public static final int DRAINING_VALUE = 3;
        /**
         * <pre>
         * Health check timed out. This is part of HDS and is interpreted by Envoy as
         * *UNHEALTHY*.
         * </pre>
         *
         * <code>TIMEOUT = 4;</code>
         */
        public static final int TIMEOUT_VALUE = 4;

        public final int getNumber() {

            if (this == UNRECOGNIZED) {
                throw new java.lang.IllegalArgumentException(
                        "Can't get the number of an unknown enum value.");
            }
            return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static HealthStatus valueOf(int value) {

            return forNumber(value);
        }

        public static HealthStatus forNumber(int value) {

            switch (value) {
                case 0:
                    return UNKNOWN;
                case 1:
                    return HEALTHY;
                case 2:
                    return UNHEALTHY;
                case 3:
                    return DRAINING;
                case 4:
                    return TIMEOUT;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<HealthStatus>
        internalGetValueMap() {

            return internalValueMap;
        }

        private static final com.google.protobuf.Internal.EnumLiteMap<
                HealthStatus> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<HealthStatus>() {
                    public HealthStatus findValueByNumber(int number) {

                        return HealthStatus.forNumber(number);
                    }
                };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {

            return getDescriptor().getValues().get(ordinal());
        }

        public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {

            return getDescriptor();
        }

        public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {

            return HealthCheckOuterClass.getDescriptor().getEnumTypes().get(0);
        }

        private static final HealthStatus[] VALUES = values();

        public static HealthStatus valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {

            if (desc.getType() != getDescriptor()) {
                throw new java.lang.IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            if (desc.getIndex() == -1) {
                return UNRECOGNIZED;
            }
            return VALUES[desc.getIndex()];
        }

        private final int value;

        private HealthStatus(int value) {

            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:envoy.api.v2.core.HealthStatus)
    }

    public interface HealthCheckOrBuilder extends
            // @@protoc_insertion_point(interface_extends:envoy.api.v2.core.HealthCheck)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * The time to wait for a health check response. If the timeout is reached the
         * health check attempt will be considered a failure.
         * </pre>
         *
         * <code>.google.protobuf.Duration timeout = 1 [(.gogoproto.stdduration) = true, (.validate.rules) = { ... }</code>
         */
        boolean hasTimeout();

        /**
         * <pre>
         * The time to wait for a health check response. If the timeout is reached the
         * health check attempt will be considered a failure.
         * </pre>
         *
         * <code>.google.protobuf.Duration timeout = 1 [(.gogoproto.stdduration) = true, (.validate.rules) = { ... }</code>
         */
        com.google.protobuf.Duration getTimeout();

        /**
         * <pre>
         * The time to wait for a health check response. If the timeout is reached the
         * health check attempt will be considered a failure.
         * </pre>
         *
         * <code>.google.protobuf.Duration timeout = 1 [(.gogoproto.stdduration) = true, (.validate.rules) = { ... }</code>
         */
        com.google.protobuf.DurationOrBuilder getTimeoutOrBuilder();

        /**
         * <pre>
         * The interval between health checks.
         * </pre>
         *
         * <code>.google.protobuf.Duration interval = 2 [(.gogoproto.stdduration) = true, (.validate.rules) = { ... }</code>
         */
        boolean hasInterval();

        /**
         * <pre>
         * The interval between health checks.
         * </pre>
         *
         * <code>.google.protobuf.Duration interval = 2 [(.gogoproto.stdduration) = true, (.validate.rules) = { ... }</code>
         */
        com.google.protobuf.Duration getInterval();

        /**
         * <pre>
         * The interval between health checks.
         * </pre>
         *
         * <code>.google.protobuf.Duration interval = 2 [(.gogoproto.stdduration) = true, (.validate.rules) = { ... }</code>
         */
        com.google.protobuf.DurationOrBuilder getIntervalOrBuilder();

        /**
         * <pre>
         * An optional jitter amount in millseconds. If specified, during every
         * interval Envoy will add 0 to interval_jitter to the wait time.
         * </pre>
         *
         * <code>.google.protobuf.Duration interval_jitter = 3;</code>
         */
        boolean hasIntervalJitter();

        /**
         * <pre>
         * An optional jitter amount in millseconds. If specified, during every
         * interval Envoy will add 0 to interval_jitter to the wait time.
         * </pre>
         *
         * <code>.google.protobuf.Duration interval_jitter = 3;</code>
         */
        com.google.protobuf.Duration getIntervalJitter();

        /**
         * <pre>
         * An optional jitter amount in millseconds. If specified, during every
         * interval Envoy will add 0 to interval_jitter to the wait time.
         * </pre>
         *
         * <code>.google.protobuf.Duration interval_jitter = 3;</code>
         */
        com.google.protobuf.DurationOrBuilder getIntervalJitterOrBuilder();

        /**
         * <pre>
         * An optional jitter amount as a percentage of interval_ms. If specified,
         * during every interval Envoy will add 0 to interval_ms *
         * interval_jitter_percent / 100 to the wait time.
         * If interval_jitter_ms and interval_jitter_percent are both set, both of
         * them will be used to increase the wait time.
         * </pre>
         *
         * <code>uint32 interval_jitter_percent = 18;</code>
         */
        int getIntervalJitterPercent();

        /**
         * <pre>
         * The number of unhealthy health checks required before a host is marked
         * unhealthy. Note that for *http* health checking if a host responds with 503
         * this threshold is ignored and the host is considered unhealthy immediately.
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value unhealthy_threshold = 4;</code>
         */
        boolean hasUnhealthyThreshold();

        /**
         * <pre>
         * The number of unhealthy health checks required before a host is marked
         * unhealthy. Note that for *http* health checking if a host responds with 503
         * this threshold is ignored and the host is considered unhealthy immediately.
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value unhealthy_threshold = 4;</code>
         */
        com.google.protobuf.UInt32Value getUnhealthyThreshold();

        /**
         * <pre>
         * The number of unhealthy health checks required before a host is marked
         * unhealthy. Note that for *http* health checking if a host responds with 503
         * this threshold is ignored and the host is considered unhealthy immediately.
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value unhealthy_threshold = 4;</code>
         */
        com.google.protobuf.UInt32ValueOrBuilder getUnhealthyThresholdOrBuilder();

        /**
         * <pre>
         * The number of healthy health checks required before a host is marked
         * healthy. Note that during startup, only a single successful health check is
         * required to mark a host healthy.
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value healthy_threshold = 5;</code>
         */
        boolean hasHealthyThreshold();

        /**
         * <pre>
         * The number of healthy health checks required before a host is marked
         * healthy. Note that during startup, only a single successful health check is
         * required to mark a host healthy.
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value healthy_threshold = 5;</code>
         */
        com.google.protobuf.UInt32Value getHealthyThreshold();

        /**
         * <pre>
         * The number of healthy health checks required before a host is marked
         * healthy. Note that during startup, only a single successful health check is
         * required to mark a host healthy.
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value healthy_threshold = 5;</code>
         */
        com.google.protobuf.UInt32ValueOrBuilder getHealthyThresholdOrBuilder();

        /**
         * <pre>
         * [#not-implemented-hide:] Non-serving port for health checking.
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value alt_port = 6;</code>
         */
        boolean hasAltPort();

        /**
         * <pre>
         * [#not-implemented-hide:] Non-serving port for health checking.
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value alt_port = 6;</code>
         */
        com.google.protobuf.UInt32Value getAltPort();

        /**
         * <pre>
         * [#not-implemented-hide:] Non-serving port for health checking.
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value alt_port = 6;</code>
         */
        com.google.protobuf.UInt32ValueOrBuilder getAltPortOrBuilder();

        /**
         * <pre>
         * Reuse health check connection between health checks. Default is true.
         * </pre>
         *
         * <code>.google.protobuf.BoolValue reuse_connection = 7;</code>
         */
        boolean hasReuseConnection();

        /**
         * <pre>
         * Reuse health check connection between health checks. Default is true.
         * </pre>
         *
         * <code>.google.protobuf.BoolValue reuse_connection = 7;</code>
         */
        com.google.protobuf.BoolValue getReuseConnection();

        /**
         * <pre>
         * Reuse health check connection between health checks. Default is true.
         * </pre>
         *
         * <code>.google.protobuf.BoolValue reuse_connection = 7;</code>
         */
        com.google.protobuf.BoolValueOrBuilder getReuseConnectionOrBuilder();

        /**
         * <pre>
         * HTTP health check.
         * </pre>
         *
         * <code>.envoy.api.v2.core.HealthCheck.HttpHealthCheck http_health_check = 8;</code>
         */
        boolean hasHttpHealthCheck();

        /**
         * <pre>
         * HTTP health check.
         * </pre>
         *
         * <code>.envoy.api.v2.core.HealthCheck.HttpHealthCheck http_health_check = 8;</code>
         */
        HealthCheckOuterClass.HealthCheck.HttpHealthCheck getHttpHealthCheck();

        /**
         * <pre>
         * HTTP health check.
         * </pre>
         *
         * <code>.envoy.api.v2.core.HealthCheck.HttpHealthCheck http_health_check = 8;</code>
         */
        HealthCheckOuterClass.HealthCheck.HttpHealthCheckOrBuilder getHttpHealthCheckOrBuilder();

        /**
         * <pre>
         * TCP health check.
         * </pre>
         *
         * <code>.envoy.api.v2.core.HealthCheck.TcpHealthCheck tcp_health_check = 9;</code>
         */
        boolean hasTcpHealthCheck();

        /**
         * <pre>
         * TCP health check.
         * </pre>
         *
         * <code>.envoy.api.v2.core.HealthCheck.TcpHealthCheck tcp_health_check = 9;</code>
         */
        HealthCheckOuterClass.HealthCheck.TcpHealthCheck getTcpHealthCheck();

        /**
         * <pre>
         * TCP health check.
         * </pre>
         *
         * <code>.envoy.api.v2.core.HealthCheck.TcpHealthCheck tcp_health_check = 9;</code>
         */
        HealthCheckOuterClass.HealthCheck.TcpHealthCheckOrBuilder getTcpHealthCheckOrBuilder();

        /**
         * <pre>
         * gRPC health check.
         * </pre>
         *
         * <code>.envoy.api.v2.core.HealthCheck.GrpcHealthCheck grpc_health_check = 11;</code>
         */
        boolean hasGrpcHealthCheck();

        /**
         * <pre>
         * gRPC health check.
         * </pre>
         *
         * <code>.envoy.api.v2.core.HealthCheck.GrpcHealthCheck grpc_health_check = 11;</code>
         */
        HealthCheckOuterClass.HealthCheck.GrpcHealthCheck getGrpcHealthCheck();

        /**
         * <pre>
         * gRPC health check.
         * </pre>
         *
         * <code>.envoy.api.v2.core.HealthCheck.GrpcHealthCheck grpc_health_check = 11;</code>
         */
        HealthCheckOuterClass.HealthCheck.GrpcHealthCheckOrBuilder getGrpcHealthCheckOrBuilder();

        /**
         * <pre>
         * Custom health check.
         * </pre>
         *
         * <code>.envoy.api.v2.core.HealthCheck.CustomHealthCheck custom_health_check = 13;</code>
         */
        boolean hasCustomHealthCheck();

        /**
         * <pre>
         * Custom health check.
         * </pre>
         *
         * <code>.envoy.api.v2.core.HealthCheck.CustomHealthCheck custom_health_check = 13;</code>
         */
        HealthCheckOuterClass.HealthCheck.CustomHealthCheck getCustomHealthCheck();

        /**
         * <pre>
         * Custom health check.
         * </pre>
         *
         * <code>.envoy.api.v2.core.HealthCheck.CustomHealthCheck custom_health_check = 13;</code>
         */
        HealthCheckOuterClass.HealthCheck.CustomHealthCheckOrBuilder getCustomHealthCheckOrBuilder();

        /**
         * <pre>
         * The "no traffic interval" is a special health check interval that is used when a cluster has
         * never had traffic routed to it. This lower interval allows cluster information to be kept up to
         * date, without sending a potentially large amount of active health checking traffic for no
         * reason. Once a cluster has been used for traffic routing, Envoy will shift back to using the
         * standard health check interval that is defined. Note that this interval takes precedence over
         * any other.
         * The default value for "no traffic interval" is 60 seconds.
         * </pre>
         *
         * <code>.google.protobuf.Duration no_traffic_interval = 12;</code>
         */
        boolean hasNoTrafficInterval();

        /**
         * <pre>
         * The "no traffic interval" is a special health check interval that is used when a cluster has
         * never had traffic routed to it. This lower interval allows cluster information to be kept up to
         * date, without sending a potentially large amount of active health checking traffic for no
         * reason. Once a cluster has been used for traffic routing, Envoy will shift back to using the
         * standard health check interval that is defined. Note that this interval takes precedence over
         * any other.
         * The default value for "no traffic interval" is 60 seconds.
         * </pre>
         *
         * <code>.google.protobuf.Duration no_traffic_interval = 12;</code>
         */
        com.google.protobuf.Duration getNoTrafficInterval();

        /**
         * <pre>
         * The "no traffic interval" is a special health check interval that is used when a cluster has
         * never had traffic routed to it. This lower interval allows cluster information to be kept up to
         * date, without sending a potentially large amount of active health checking traffic for no
         * reason. Once a cluster has been used for traffic routing, Envoy will shift back to using the
         * standard health check interval that is defined. Note that this interval takes precedence over
         * any other.
         * The default value for "no traffic interval" is 60 seconds.
         * </pre>
         *
         * <code>.google.protobuf.Duration no_traffic_interval = 12;</code>
         */
        com.google.protobuf.DurationOrBuilder getNoTrafficIntervalOrBuilder();

        /**
         * <pre>
         * The "unhealthy interval" is a health check interval that is used for hosts that are marked as
         * unhealthy. As soon as the host is marked as healthy, Envoy will shift back to using the
         * standard health check interval that is defined.
         * The default value for "unhealthy interval" is the same as "interval".
         * </pre>
         *
         * <code>.google.protobuf.Duration unhealthy_interval = 14;</code>
         */
        boolean hasUnhealthyInterval();

        /**
         * <pre>
         * The "unhealthy interval" is a health check interval that is used for hosts that are marked as
         * unhealthy. As soon as the host is marked as healthy, Envoy will shift back to using the
         * standard health check interval that is defined.
         * The default value for "unhealthy interval" is the same as "interval".
         * </pre>
         *
         * <code>.google.protobuf.Duration unhealthy_interval = 14;</code>
         */
        com.google.protobuf.Duration getUnhealthyInterval();

        /**
         * <pre>
         * The "unhealthy interval" is a health check interval that is used for hosts that are marked as
         * unhealthy. As soon as the host is marked as healthy, Envoy will shift back to using the
         * standard health check interval that is defined.
         * The default value for "unhealthy interval" is the same as "interval".
         * </pre>
         *
         * <code>.google.protobuf.Duration unhealthy_interval = 14;</code>
         */
        com.google.protobuf.DurationOrBuilder getUnhealthyIntervalOrBuilder();

        /**
         * <pre>
         * The "unhealthy edge interval" is a special health check interval that is used for the first
         * health check right after a host is marked as unhealthy. For subsequent health checks
         * Envoy will shift back to using either "unhealthy interval" if present or the standard health
         * check interval that is defined.
         * The default value for "unhealthy edge interval" is the same as "unhealthy interval".
         * </pre>
         *
         * <code>.google.protobuf.Duration unhealthy_edge_interval = 15;</code>
         */
        boolean hasUnhealthyEdgeInterval();

        /**
         * <pre>
         * The "unhealthy edge interval" is a special health check interval that is used for the first
         * health check right after a host is marked as unhealthy. For subsequent health checks
         * Envoy will shift back to using either "unhealthy interval" if present or the standard health
         * check interval that is defined.
         * The default value for "unhealthy edge interval" is the same as "unhealthy interval".
         * </pre>
         *
         * <code>.google.protobuf.Duration unhealthy_edge_interval = 15;</code>
         */
        com.google.protobuf.Duration getUnhealthyEdgeInterval();

        /**
         * <pre>
         * The "unhealthy edge interval" is a special health check interval that is used for the first
         * health check right after a host is marked as unhealthy. For subsequent health checks
         * Envoy will shift back to using either "unhealthy interval" if present or the standard health
         * check interval that is defined.
         * The default value for "unhealthy edge interval" is the same as "unhealthy interval".
         * </pre>
         *
         * <code>.google.protobuf.Duration unhealthy_edge_interval = 15;</code>
         */
        com.google.protobuf.DurationOrBuilder getUnhealthyEdgeIntervalOrBuilder();

        /**
         * <pre>
         * The "healthy edge interval" is a special health check interval that is used for the first
         * health check right after a host is marked as healthy. For subsequent health checks
         * Envoy will shift back to using the standard health check interval that is defined.
         * The default value for "healthy edge interval" is the same as the default interval.
         * </pre>
         *
         * <code>.google.protobuf.Duration healthy_edge_interval = 16;</code>
         */
        boolean hasHealthyEdgeInterval();

        /**
         * <pre>
         * The "healthy edge interval" is a special health check interval that is used for the first
         * health check right after a host is marked as healthy. For subsequent health checks
         * Envoy will shift back to using the standard health check interval that is defined.
         * The default value for "healthy edge interval" is the same as the default interval.
         * </pre>
         *
         * <code>.google.protobuf.Duration healthy_edge_interval = 16;</code>
         */
        com.google.protobuf.Duration getHealthyEdgeInterval();

        /**
         * <pre>
         * The "healthy edge interval" is a special health check interval that is used for the first
         * health check right after a host is marked as healthy. For subsequent health checks
         * Envoy will shift back to using the standard health check interval that is defined.
         * The default value for "healthy edge interval" is the same as the default interval.
         * </pre>
         *
         * <code>.google.protobuf.Duration healthy_edge_interval = 16;</code>
         */
        com.google.protobuf.DurationOrBuilder getHealthyEdgeIntervalOrBuilder();

        /**
         * <pre>
         * Specifies the path to the :ref:`health check event log &lt;arch_overview_health_check_logging&gt;`.
         * If empty, no event log will be written.
         * </pre>
         *
         * <code>string event_log_path = 17;</code>
         */
        java.lang.String getEventLogPath();

        /**
         * <pre>
         * Specifies the path to the :ref:`health check event log &lt;arch_overview_health_check_logging&gt;`.
         * If empty, no event log will be written.
         * </pre>
         *
         * <code>string event_log_path = 17;</code>
         */
        com.google.protobuf.ByteString
        getEventLogPathBytes();

        public HealthCheckOuterClass.HealthCheck.HealthCheckerCase getHealthCheckerCase();
    }

    /**
     * Protobuf type {@code envoy.api.v2.core.HealthCheck}
     */
    public static final class HealthCheck extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:envoy.api.v2.core.HealthCheck)
            HealthCheckOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use HealthCheck.newBuilder() to construct.
        private HealthCheck(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

            super(builder);
        }

        private HealthCheck() {

            intervalJitterPercent_ = 0;
            eventLogPath_ = "";
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {

            return this.unknownFields;
        }

        private HealthCheck(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10: {
                            com.google.protobuf.Duration.Builder subBuilder = null;
                            if (timeout_ != null) {
                                subBuilder = timeout_.toBuilder();
                            }
                            timeout_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(timeout_);
                                timeout_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 18: {
                            com.google.protobuf.Duration.Builder subBuilder = null;
                            if (interval_ != null) {
                                subBuilder = interval_.toBuilder();
                            }
                            interval_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(interval_);
                                interval_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 26: {
                            com.google.protobuf.Duration.Builder subBuilder = null;
                            if (intervalJitter_ != null) {
                                subBuilder = intervalJitter_.toBuilder();
                            }
                            intervalJitter_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(intervalJitter_);
                                intervalJitter_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 34: {
                            com.google.protobuf.UInt32Value.Builder subBuilder = null;
                            if (unhealthyThreshold_ != null) {
                                subBuilder = unhealthyThreshold_.toBuilder();
                            }
                            unhealthyThreshold_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(unhealthyThreshold_);
                                unhealthyThreshold_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 42: {
                            com.google.protobuf.UInt32Value.Builder subBuilder = null;
                            if (healthyThreshold_ != null) {
                                subBuilder = healthyThreshold_.toBuilder();
                            }
                            healthyThreshold_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(healthyThreshold_);
                                healthyThreshold_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 50: {
                            com.google.protobuf.UInt32Value.Builder subBuilder = null;
                            if (altPort_ != null) {
                                subBuilder = altPort_.toBuilder();
                            }
                            altPort_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(altPort_);
                                altPort_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 58: {
                            com.google.protobuf.BoolValue.Builder subBuilder = null;
                            if (reuseConnection_ != null) {
                                subBuilder = reuseConnection_.toBuilder();
                            }
                            reuseConnection_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(reuseConnection_);
                                reuseConnection_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 66: {
                            HealthCheckOuterClass.HealthCheck.HttpHealthCheck.Builder subBuilder = null;
                            if (healthCheckerCase_ == 8) {
                                subBuilder = ((HealthCheckOuterClass.HealthCheck.HttpHealthCheck) healthChecker_).toBuilder();
                            }
                            healthChecker_ =
                                    input.readMessage(HealthCheckOuterClass.HealthCheck.HttpHealthCheck.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom((HealthCheckOuterClass.HealthCheck.HttpHealthCheck) healthChecker_);
                                healthChecker_ = subBuilder.buildPartial();
                            }
                            healthCheckerCase_ = 8;
                            break;
                        }
                        case 74: {
                            HealthCheckOuterClass.HealthCheck.TcpHealthCheck.Builder subBuilder = null;
                            if (healthCheckerCase_ == 9) {
                                subBuilder = ((HealthCheckOuterClass.HealthCheck.TcpHealthCheck) healthChecker_).toBuilder();
                            }
                            healthChecker_ =
                                    input.readMessage(HealthCheckOuterClass.HealthCheck.TcpHealthCheck.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom((HealthCheckOuterClass.HealthCheck.TcpHealthCheck) healthChecker_);
                                healthChecker_ = subBuilder.buildPartial();
                            }
                            healthCheckerCase_ = 9;
                            break;
                        }
                        case 90: {
                            HealthCheckOuterClass.HealthCheck.GrpcHealthCheck.Builder subBuilder = null;
                            if (healthCheckerCase_ == 11) {
                                subBuilder = ((HealthCheckOuterClass.HealthCheck.GrpcHealthCheck) healthChecker_).toBuilder();
                            }
                            healthChecker_ =
                                    input.readMessage(HealthCheckOuterClass.HealthCheck.GrpcHealthCheck.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom((HealthCheckOuterClass.HealthCheck.GrpcHealthCheck) healthChecker_);
                                healthChecker_ = subBuilder.buildPartial();
                            }
                            healthCheckerCase_ = 11;
                            break;
                        }
                        case 98: {
                            com.google.protobuf.Duration.Builder subBuilder = null;
                            if (noTrafficInterval_ != null) {
                                subBuilder = noTrafficInterval_.toBuilder();
                            }
                            noTrafficInterval_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(noTrafficInterval_);
                                noTrafficInterval_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 106: {
                            HealthCheckOuterClass.HealthCheck.CustomHealthCheck.Builder subBuilder = null;
                            if (healthCheckerCase_ == 13) {
                                subBuilder = ((HealthCheckOuterClass.HealthCheck.CustomHealthCheck) healthChecker_).toBuilder();
                            }
                            healthChecker_ =
                                    input.readMessage(HealthCheckOuterClass.HealthCheck.CustomHealthCheck.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom((HealthCheckOuterClass.HealthCheck.CustomHealthCheck) healthChecker_);
                                healthChecker_ = subBuilder.buildPartial();
                            }
                            healthCheckerCase_ = 13;
                            break;
                        }
                        case 114: {
                            com.google.protobuf.Duration.Builder subBuilder = null;
                            if (unhealthyInterval_ != null) {
                                subBuilder = unhealthyInterval_.toBuilder();
                            }
                            unhealthyInterval_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(unhealthyInterval_);
                                unhealthyInterval_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 122: {
                            com.google.protobuf.Duration.Builder subBuilder = null;
                            if (unhealthyEdgeInterval_ != null) {
                                subBuilder = unhealthyEdgeInterval_.toBuilder();
                            }
                            unhealthyEdgeInterval_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(unhealthyEdgeInterval_);
                                unhealthyEdgeInterval_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 130: {
                            com.google.protobuf.Duration.Builder subBuilder = null;
                            if (healthyEdgeInterval_ != null) {
                                subBuilder = healthyEdgeInterval_.toBuilder();
                            }
                            healthyEdgeInterval_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(healthyEdgeInterval_);
                                healthyEdgeInterval_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 138: {
                            java.lang.String s = input.readStringRequireUtf8();

                            eventLogPath_ = s;
                            break;
                        }
                        case 144: {

                            intervalJitterPercent_ = input.readUInt32();
                            break;
                        }
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {

            return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {

            return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            HealthCheckOuterClass.HealthCheck.class, HealthCheckOuterClass.HealthCheck.Builder.class);
        }

        public interface PayloadOrBuilder extends
                // @@protoc_insertion_point(interface_extends:envoy.api.v2.core.HealthCheck.Payload)
                com.google.protobuf.MessageOrBuilder {

            /**
             * <pre>
             * Hex encoded payload. E.g., "000000FF".
             * </pre>
             *
             * <code>string text = 1 [(.validate.rules) = { ... }</code>
             */
            java.lang.String getText();

            /**
             * <pre>
             * Hex encoded payload. E.g., "000000FF".
             * </pre>
             *
             * <code>string text = 1 [(.validate.rules) = { ... }</code>
             */
            com.google.protobuf.ByteString
            getTextBytes();

            /**
             * <pre>
             * [#not-implemented-hide:] Binary payload.
             * </pre>
             *
             * <code>bytes binary = 2;</code>
             */
            com.google.protobuf.ByteString getBinary();

            public HealthCheckOuterClass.HealthCheck.Payload.PayloadCase getPayloadCase();
        }

        /**
         * <pre>
         * Describes the encoding of the payload bytes in the payload.
         * </pre>
         * <p>
         * Protobuf type {@code envoy.api.v2.core.HealthCheck.Payload}
         */
        public static final class Payload extends
                com.google.protobuf.GeneratedMessageV3 implements
                // @@protoc_insertion_point(message_implements:envoy.api.v2.core.HealthCheck.Payload)
                PayloadOrBuilder {

            private static final long serialVersionUID = 0L;

            // Use Payload.newBuilder() to construct.
            private Payload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

                super(builder);
            }

            private Payload() {

            }

            @java.lang.Override
            public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {

                return this.unknownFields;
            }

            private Payload(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                        com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            case 10: {
                                java.lang.String s = input.readStringRequireUtf8();
                                payloadCase_ = 1;
                                payload_ = s;
                                break;
                            }
                            case 18: {
                                payloadCase_ = 2;
                                payload_ = input.readBytes();
                                break;
                            }
                            default: {
                                if (!parseUnknownFieldProto3(
                                        input, unknownFields, extensionRegistry, tag)) {
                                    done = true;
                                }
                                break;
                            }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(
                            e).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_Payload_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_Payload_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                HealthCheckOuterClass.HealthCheck.Payload.class, HealthCheckOuterClass.HealthCheck.Payload.Builder.class);
            }

            private int payloadCase_ = 0;
            private java.lang.Object payload_;

            public enum PayloadCase
                    implements com.google.protobuf.Internal.EnumLite {
                TEXT(1),
                BINARY(2),
                PAYLOAD_NOT_SET(0);
                private final int value;

                private PayloadCase(int value) {

                    this.value = value;
                }

                /**
                 * @deprecated Use {@link #forNumber(int)} instead.
                 */
                @java.lang.Deprecated
                public static PayloadCase valueOf(int value) {

                    return forNumber(value);
                }

                public static PayloadCase forNumber(int value) {

                    switch (value) {
                        case 1:
                            return TEXT;
                        case 2:
                            return BINARY;
                        case 0:
                            return PAYLOAD_NOT_SET;
                        default:
                            return null;
                    }
                }

                public int getNumber() {

                    return this.value;
                }
            }

            ;

            public PayloadCase
            getPayloadCase() {

                return PayloadCase.forNumber(
                        payloadCase_);
            }

            public static final int TEXT_FIELD_NUMBER = 1;

            /**
             * <pre>
             * Hex encoded payload. E.g., "000000FF".
             * </pre>
             *
             * <code>string text = 1 [(.validate.rules) = { ... }</code>
             */
            public java.lang.String getText() {

                java.lang.Object ref = "";
                if (payloadCase_ == 1) {
                    ref = payload_;
                }
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (payloadCase_ == 1) {
                        payload_ = s;
                    }
                    return s;
                }
            }

            /**
             * <pre>
             * Hex encoded payload. E.g., "000000FF".
             * </pre>
             *
             * <code>string text = 1 [(.validate.rules) = { ... }</code>
             */
            public com.google.protobuf.ByteString
            getTextBytes() {

                java.lang.Object ref = "";
                if (payloadCase_ == 1) {
                    ref = payload_;
                }
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    if (payloadCase_ == 1) {
                        payload_ = b;
                    }
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final int BINARY_FIELD_NUMBER = 2;

            /**
             * <pre>
             * [#not-implemented-hide:] Binary payload.
             * </pre>
             *
             * <code>bytes binary = 2;</code>
             */
            public com.google.protobuf.ByteString getBinary() {

                if (payloadCase_ == 2) {
                    return (com.google.protobuf.ByteString) payload_;
                }
                return com.google.protobuf.ByteString.EMPTY;
            }

            private byte memoizedIsInitialized = -1;

            @java.lang.Override
            public final boolean isInitialized() {

                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1) return true;
                if (isInitialized == 0) return false;

                memoizedIsInitialized = 1;
                return true;
            }

            @java.lang.Override
            public void writeTo(com.google.protobuf.CodedOutputStream output)
                    throws java.io.IOException {

                if (payloadCase_ == 1) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 1, payload_);
                }
                if (payloadCase_ == 2) {
                    output.writeBytes(
                            2, (com.google.protobuf.ByteString) payload_);
                }
                unknownFields.writeTo(output);
            }

            @java.lang.Override
            public int getSerializedSize() {

                int size = memoizedSize;
                if (size != -1) return size;

                size = 0;
                if (payloadCase_ == 1) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, payload_);
                }
                if (payloadCase_ == 2) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeBytesSize(
                                    2, (com.google.protobuf.ByteString) payload_);
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @java.lang.Override
            public boolean equals(final java.lang.Object obj) {

                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof HealthCheckOuterClass.HealthCheck.Payload)) {
                    return super.equals(obj);
                }
                HealthCheckOuterClass.HealthCheck.Payload other = (HealthCheckOuterClass.HealthCheck.Payload) obj;

                boolean result = true;
                result = result && getPayloadCase().equals(
                        other.getPayloadCase());
                if (!result) return false;
                switch (payloadCase_) {
                    case 1:
                        result = result && getText()
                                .equals(other.getText());
                        break;
                    case 2:
                        result = result && getBinary()
                                .equals(other.getBinary());
                        break;
                    case 0:
                    default:
                }
                result = result && unknownFields.equals(other.unknownFields);
                return result;
            }

            @java.lang.Override
            public int hashCode() {

                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                switch (payloadCase_) {
                    case 1:
                        hash = (37 * hash) + TEXT_FIELD_NUMBER;
                        hash = (53 * hash) + getText().hashCode();
                        break;
                    case 2:
                        hash = (37 * hash) + BINARY_FIELD_NUMBER;
                        hash = (53 * hash) + getBinary().hashCode();
                        break;
                    case 0:
                    default:
                }
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static HealthCheckOuterClass.HealthCheck.Payload parseFrom(
                    java.nio.ByteBuffer data)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data);
            }

            public static HealthCheckOuterClass.HealthCheck.Payload parseFrom(
                    java.nio.ByteBuffer data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static HealthCheckOuterClass.HealthCheck.Payload parseFrom(
                    com.google.protobuf.ByteString data)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data);
            }

            public static HealthCheckOuterClass.HealthCheck.Payload parseFrom(
                    com.google.protobuf.ByteString data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static HealthCheckOuterClass.HealthCheck.Payload parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data);
            }

            public static HealthCheckOuterClass.HealthCheck.Payload parseFrom(
                    byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static HealthCheckOuterClass.HealthCheck.Payload parseFrom(java.io.InputStream input)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }

            public static HealthCheckOuterClass.HealthCheck.Payload parseFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static HealthCheckOuterClass.HealthCheck.Payload parseDelimitedFrom(java.io.InputStream input)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input);
            }

            public static HealthCheckOuterClass.HealthCheck.Payload parseDelimitedFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static HealthCheckOuterClass.HealthCheck.Payload parseFrom(
                    com.google.protobuf.CodedInputStream input)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }

            public static HealthCheckOuterClass.HealthCheck.Payload parseFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            @java.lang.Override
            public Builder newBuilderForType() {

                return newBuilder();
            }

            public static Builder newBuilder() {

                return DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(HealthCheckOuterClass.HealthCheck.Payload prototype) {

                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            @java.lang.Override
            public Builder toBuilder() {

                return this == DEFAULT_INSTANCE
                        ? new Builder() : new Builder().mergeFrom(this);
            }

            @java.lang.Override
            protected Builder newBuilderForType(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * <pre>
             * Describes the encoding of the payload bytes in the payload.
             * </pre>
             * <p>
             * Protobuf type {@code envoy.api.v2.core.HealthCheck.Payload}
             */
            public static final class Builder extends
                    com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                    // @@protoc_insertion_point(builder_implements:envoy.api.v2.core.HealthCheck.Payload)
                    HealthCheckOuterClass.HealthCheck.PayloadOrBuilder {

                public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {

                    return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_Payload_descriptor;
                }

                @java.lang.Override
                protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {

                    return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_Payload_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(
                                    HealthCheckOuterClass.HealthCheck.Payload.class, HealthCheckOuterClass.HealthCheck.Payload.Builder.class);
                }

                // Construct using envoy.api.v2.core.HealthCheckOuterClass.HealthCheck.Payload.newBuilder()
                private Builder() {

                    maybeForceBuilderInitialization();
                }

                private Builder(
                        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                    super(parent);
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {

                    if (com.google.protobuf.GeneratedMessageV3
                            .alwaysUseFieldBuilders) {
                    }
                }

                @java.lang.Override
                public Builder clear() {

                    super.clear();
                    payloadCase_ = 0;
                    payload_ = null;
                    return this;
                }

                @java.lang.Override
                public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {

                    return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_Payload_descriptor;
                }

                @java.lang.Override
                public HealthCheckOuterClass.HealthCheck.Payload getDefaultInstanceForType() {

                    return HealthCheckOuterClass.HealthCheck.Payload.getDefaultInstance();
                }

                @java.lang.Override
                public HealthCheckOuterClass.HealthCheck.Payload build() {

                    HealthCheckOuterClass.HealthCheck.Payload result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                @java.lang.Override
                public HealthCheckOuterClass.HealthCheck.Payload buildPartial() {

                    HealthCheckOuterClass.HealthCheck.Payload result = new HealthCheckOuterClass.HealthCheck.Payload(this);
                    if (payloadCase_ == 1) {
                        result.payload_ = payload_;
                    }
                    if (payloadCase_ == 2) {
                        result.payload_ = payload_;
                    }
                    result.payloadCase_ = payloadCase_;
                    onBuilt();
                    return result;
                }

                @java.lang.Override
                public Builder clone() {

                    return (Builder) super.clone();
                }

                @java.lang.Override
                public Builder setField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {

                    return (Builder) super.setField(field, value);
                }

                @java.lang.Override
                public Builder clearField(
                        com.google.protobuf.Descriptors.FieldDescriptor field) {

                    return (Builder) super.clearField(field);
                }

                @java.lang.Override
                public Builder clearOneof(
                        com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                    return (Builder) super.clearOneof(oneof);
                }

                @java.lang.Override
                public Builder setRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        int index, java.lang.Object value) {

                    return (Builder) super.setRepeatedField(field, index, value);
                }

                @java.lang.Override
                public Builder addRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {

                    return (Builder) super.addRepeatedField(field, value);
                }

                @java.lang.Override
                public Builder mergeFrom(com.google.protobuf.Message other) {

                    if (other instanceof HealthCheckOuterClass.HealthCheck.Payload) {
                        return mergeFrom((HealthCheckOuterClass.HealthCheck.Payload) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(HealthCheckOuterClass.HealthCheck.Payload other) {

                    if (other == HealthCheckOuterClass.HealthCheck.Payload.getDefaultInstance())
                        return this;
                    switch (other.getPayloadCase()) {
                        case TEXT: {
                            payloadCase_ = 1;
                            payload_ = other.payload_;
                            onChanged();
                            break;
                        }
                        case BINARY: {
                            setBinary(other.getBinary());
                            break;
                        }
                        case PAYLOAD_NOT_SET: {
                            break;
                        }
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                @java.lang.Override
                public final boolean isInitialized() {

                    return true;
                }

                @java.lang.Override
                public Builder mergeFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws java.io.IOException {

                    HealthCheckOuterClass.HealthCheck.Payload parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (HealthCheckOuterClass.HealthCheck.Payload) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private int payloadCase_ = 0;
                private java.lang.Object payload_;

                public PayloadCase
                getPayloadCase() {

                    return PayloadCase.forNumber(
                            payloadCase_);
                }

                public Builder clearPayload() {

                    payloadCase_ = 0;
                    payload_ = null;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * Hex encoded payload. E.g., "000000FF".
                 * </pre>
                 *
                 * <code>string text = 1 [(.validate.rules) = { ... }</code>
                 */
                public java.lang.String getText() {

                    java.lang.Object ref = "";
                    if (payloadCase_ == 1) {
                        ref = payload_;
                    }
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs =
                                (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        if (payloadCase_ == 1) {
                            payload_ = s;
                        }
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <pre>
                 * Hex encoded payload. E.g., "000000FF".
                 * </pre>
                 *
                 * <code>string text = 1 [(.validate.rules) = { ... }</code>
                 */
                public com.google.protobuf.ByteString
                getTextBytes() {

                    java.lang.Object ref = "";
                    if (payloadCase_ == 1) {
                        ref = payload_;
                    }
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b =
                                com.google.protobuf.ByteString.copyFromUtf8(
                                        (java.lang.String) ref);
                        if (payloadCase_ == 1) {
                            payload_ = b;
                        }
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <pre>
                 * Hex encoded payload. E.g., "000000FF".
                 * </pre>
                 *
                 * <code>string text = 1 [(.validate.rules) = { ... }</code>
                 */
                public Builder setText(
                        java.lang.String value) {

                    if (value == null) {
                        throw new NullPointerException();
                    }
                    payloadCase_ = 1;
                    payload_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * Hex encoded payload. E.g., "000000FF".
                 * </pre>
                 *
                 * <code>string text = 1 [(.validate.rules) = { ... }</code>
                 */
                public Builder clearText() {

                    if (payloadCase_ == 1) {
                        payloadCase_ = 0;
                        payload_ = null;
                        onChanged();
                    }
                    return this;
                }

                /**
                 * <pre>
                 * Hex encoded payload. E.g., "000000FF".
                 * </pre>
                 *
                 * <code>string text = 1 [(.validate.rules) = { ... }</code>
                 */
                public Builder setTextBytes(
                        com.google.protobuf.ByteString value) {

                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);
                    payloadCase_ = 1;
                    payload_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * [#not-implemented-hide:] Binary payload.
                 * </pre>
                 *
                 * <code>bytes binary = 2;</code>
                 */
                public com.google.protobuf.ByteString getBinary() {

                    if (payloadCase_ == 2) {
                        return (com.google.protobuf.ByteString) payload_;
                    }
                    return com.google.protobuf.ByteString.EMPTY;
                }

                /**
                 * <pre>
                 * [#not-implemented-hide:] Binary payload.
                 * </pre>
                 *
                 * <code>bytes binary = 2;</code>
                 */
                public Builder setBinary(com.google.protobuf.ByteString value) {

                    if (value == null) {
                        throw new NullPointerException();
                    }
                    payloadCase_ = 2;
                    payload_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * [#not-implemented-hide:] Binary payload.
                 * </pre>
                 *
                 * <code>bytes binary = 2;</code>
                 */
                public Builder clearBinary() {

                    if (payloadCase_ == 2) {
                        payloadCase_ = 0;
                        payload_ = null;
                        onChanged();
                    }
                    return this;
                }

                @java.lang.Override
                public final Builder setUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {

                    return super.setUnknownFieldsProto3(unknownFields);
                }

                @java.lang.Override
                public final Builder mergeUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {

                    return super.mergeUnknownFields(unknownFields);
                }

                // @@protoc_insertion_point(builder_scope:envoy.api.v2.core.HealthCheck.Payload)
            }

            // @@protoc_insertion_point(class_scope:envoy.api.v2.core.HealthCheck.Payload)
            private static final HealthCheckOuterClass.HealthCheck.Payload DEFAULT_INSTANCE;

            static {
                DEFAULT_INSTANCE = new HealthCheckOuterClass.HealthCheck.Payload();
            }

            public static HealthCheckOuterClass.HealthCheck.Payload getDefaultInstance() {

                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.Parser<Payload>
                    PARSER = new com.google.protobuf.AbstractParser<Payload>() {
                @java.lang.Override
                public Payload parsePartialFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws com.google.protobuf.InvalidProtocolBufferException {

                    return new Payload(input, extensionRegistry);
                }
            };

            public static com.google.protobuf.Parser<Payload> parser() {

                return PARSER;
            }

            @java.lang.Override
            public com.google.protobuf.Parser<Payload> getParserForType() {

                return PARSER;
            }

            @java.lang.Override
            public HealthCheckOuterClass.HealthCheck.Payload getDefaultInstanceForType() {

                return DEFAULT_INSTANCE;
            }

        }

        public interface HttpHealthCheckOrBuilder extends
                // @@protoc_insertion_point(interface_extends:envoy.api.v2.core.HealthCheck.HttpHealthCheck)
                com.google.protobuf.MessageOrBuilder {

            /**
             * <pre>
             * The value of the host header in the HTTP health check request. If
             * left empty (default value), the name of the cluster this health check is associated
             * with will be used.
             * </pre>
             *
             * <code>string host = 1;</code>
             */
            java.lang.String getHost();

            /**
             * <pre>
             * The value of the host header in the HTTP health check request. If
             * left empty (default value), the name of the cluster this health check is associated
             * with will be used.
             * </pre>
             *
             * <code>string host = 1;</code>
             */
            com.google.protobuf.ByteString
            getHostBytes();

            /**
             * <pre>
             * Specifies the HTTP path that will be requested during health checking. For example
             * *&#47;healthcheck*.
             * </pre>
             *
             * <code>string path = 2 [(.validate.rules) = { ... }</code>
             */
            java.lang.String getPath();

            /**
             * <pre>
             * Specifies the HTTP path that will be requested during health checking. For example
             * *&#47;healthcheck*.
             * </pre>
             *
             * <code>string path = 2 [(.validate.rules) = { ... }</code>
             */
            com.google.protobuf.ByteString
            getPathBytes();

            /**
             * <pre>
             * [#not-implemented-hide:] HTTP specific payload.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.Payload send = 3;</code>
             */
            boolean hasSend();

            /**
             * <pre>
             * [#not-implemented-hide:] HTTP specific payload.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.Payload send = 3;</code>
             */
            HealthCheckOuterClass.HealthCheck.Payload getSend();

            /**
             * <pre>
             * [#not-implemented-hide:] HTTP specific payload.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.Payload send = 3;</code>
             */
            HealthCheckOuterClass.HealthCheck.PayloadOrBuilder getSendOrBuilder();

            /**
             * <pre>
             * [#not-implemented-hide:] HTTP specific response.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.Payload receive = 4;</code>
             */
            boolean hasReceive();

            /**
             * <pre>
             * [#not-implemented-hide:] HTTP specific response.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.Payload receive = 4;</code>
             */
            HealthCheckOuterClass.HealthCheck.Payload getReceive();

            /**
             * <pre>
             * [#not-implemented-hide:] HTTP specific response.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.Payload receive = 4;</code>
             */
            HealthCheckOuterClass.HealthCheck.PayloadOrBuilder getReceiveOrBuilder();

            /**
             * <pre>
             * An optional service name parameter which is used to validate the identity of
             * the health checked cluster. See the :ref:`architecture overview
             * &lt;arch_overview_health_checking_identity&gt;` for more information.
             * </pre>
             *
             * <code>string service_name = 5;</code>
             */
            java.lang.String getServiceName();

            /**
             * <pre>
             * An optional service name parameter which is used to validate the identity of
             * the health checked cluster. See the :ref:`architecture overview
             * &lt;arch_overview_health_checking_identity&gt;` for more information.
             * </pre>
             *
             * <code>string service_name = 5;</code>
             */
            com.google.protobuf.ByteString
            getServiceNameBytes();

            /**
             * <pre>
             * Specifies a list of HTTP headers that should be added to each request that is sent to the
             * health checked cluster. For more information, including details on header value syntax, see
             * the documentation on :ref:`custom request headers
             * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.HeaderValueOption request_headers_to_add = 6;</code>
             */
            java.util.List<Base.HeaderValueOption>
            getRequestHeadersToAddList();

            /**
             * <pre>
             * Specifies a list of HTTP headers that should be added to each request that is sent to the
             * health checked cluster. For more information, including details on header value syntax, see
             * the documentation on :ref:`custom request headers
             * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.HeaderValueOption request_headers_to_add = 6;</code>
             */
            Base.HeaderValueOption getRequestHeadersToAdd(int index);

            /**
             * <pre>
             * Specifies a list of HTTP headers that should be added to each request that is sent to the
             * health checked cluster. For more information, including details on header value syntax, see
             * the documentation on :ref:`custom request headers
             * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.HeaderValueOption request_headers_to_add = 6;</code>
             */
            int getRequestHeadersToAddCount();

            /**
             * <pre>
             * Specifies a list of HTTP headers that should be added to each request that is sent to the
             * health checked cluster. For more information, including details on header value syntax, see
             * the documentation on :ref:`custom request headers
             * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.HeaderValueOption request_headers_to_add = 6;</code>
             */
            java.util.List<? extends Base.HeaderValueOptionOrBuilder>
            getRequestHeadersToAddOrBuilderList();

            /**
             * <pre>
             * Specifies a list of HTTP headers that should be added to each request that is sent to the
             * health checked cluster. For more information, including details on header value syntax, see
             * the documentation on :ref:`custom request headers
             * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.HeaderValueOption request_headers_to_add = 6;</code>
             */
            Base.HeaderValueOptionOrBuilder getRequestHeadersToAddOrBuilder(
                    int index);

            /**
             * <pre>
             * Specifies a list of HTTP headers that should be removed from each request that is sent to the
             * health checked cluster.
             * </pre>
             *
             * <code>repeated string request_headers_to_remove = 8;</code>
             */
            java.util.List<java.lang.String>
            getRequestHeadersToRemoveList();

            /**
             * <pre>
             * Specifies a list of HTTP headers that should be removed from each request that is sent to the
             * health checked cluster.
             * </pre>
             *
             * <code>repeated string request_headers_to_remove = 8;</code>
             */
            int getRequestHeadersToRemoveCount();

            /**
             * <pre>
             * Specifies a list of HTTP headers that should be removed from each request that is sent to the
             * health checked cluster.
             * </pre>
             *
             * <code>repeated string request_headers_to_remove = 8;</code>
             */
            java.lang.String getRequestHeadersToRemove(int index);

            /**
             * <pre>
             * Specifies a list of HTTP headers that should be removed from each request that is sent to the
             * health checked cluster.
             * </pre>
             *
             * <code>repeated string request_headers_to_remove = 8;</code>
             */
            com.google.protobuf.ByteString
            getRequestHeadersToRemoveBytes(int index);

            /**
             * <pre>
             * If set, health checks will be made using http/2.
             * </pre>
             *
             * <code>bool use_http2 = 7;</code>
             */
            boolean getUseHttp2();
        }

        /**
         * <pre>
         * [#comment:next free field: 9]
         * </pre>
         * <p>
         * Protobuf type {@code envoy.api.v2.core.HealthCheck.HttpHealthCheck}
         */
        public static final class HttpHealthCheck extends
                com.google.protobuf.GeneratedMessageV3 implements
                // @@protoc_insertion_point(message_implements:envoy.api.v2.core.HealthCheck.HttpHealthCheck)
                HttpHealthCheckOrBuilder {

            private static final long serialVersionUID = 0L;

            // Use HttpHealthCheck.newBuilder() to construct.
            private HttpHealthCheck(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

                super(builder);
            }

            private HttpHealthCheck() {

                host_ = "";
                path_ = "";
                serviceName_ = "";
                requestHeadersToAdd_ = java.util.Collections.emptyList();
                requestHeadersToRemove_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                useHttp2_ = false;
            }

            @java.lang.Override
            public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {

                return this.unknownFields;
            }

            private HttpHealthCheck(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                        com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            case 10: {
                                java.lang.String s = input.readStringRequireUtf8();

                                host_ = s;
                                break;
                            }
                            case 18: {
                                java.lang.String s = input.readStringRequireUtf8();

                                path_ = s;
                                break;
                            }
                            case 26: {
                                HealthCheckOuterClass.HealthCheck.Payload.Builder subBuilder = null;
                                if (send_ != null) {
                                    subBuilder = send_.toBuilder();
                                }
                                send_ = input.readMessage(HealthCheckOuterClass.HealthCheck.Payload.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(send_);
                                    send_ = subBuilder.buildPartial();
                                }

                                break;
                            }
                            case 34: {
                                HealthCheckOuterClass.HealthCheck.Payload.Builder subBuilder = null;
                                if (receive_ != null) {
                                    subBuilder = receive_.toBuilder();
                                }
                                receive_ = input.readMessage(HealthCheckOuterClass.HealthCheck.Payload.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(receive_);
                                    receive_ = subBuilder.buildPartial();
                                }

                                break;
                            }
                            case 42: {
                                java.lang.String s = input.readStringRequireUtf8();

                                serviceName_ = s;
                                break;
                            }
                            case 50: {
                                if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                                    requestHeadersToAdd_ = new java.util.ArrayList<Base.HeaderValueOption>();
                                    mutable_bitField0_ |= 0x00000020;
                                }
                                requestHeadersToAdd_.add(
                                        input.readMessage(Base.HeaderValueOption.parser(), extensionRegistry));
                                break;
                            }
                            case 56: {

                                useHttp2_ = input.readBool();
                                break;
                            }
                            case 66: {
                                java.lang.String s = input.readStringRequireUtf8();
                                if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                                    requestHeadersToRemove_ = new com.google.protobuf.LazyStringArrayList();
                                    mutable_bitField0_ |= 0x00000040;
                                }
                                requestHeadersToRemove_.add(s);
                                break;
                            }
                            default: {
                                if (!parseUnknownFieldProto3(
                                        input, unknownFields, extensionRegistry, tag)) {
                                    done = true;
                                }
                                break;
                            }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(
                            e).setUnfinishedMessage(this);
                } finally {
                    if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                        requestHeadersToAdd_ = java.util.Collections.unmodifiableList(requestHeadersToAdd_);
                    }
                    if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                        requestHeadersToRemove_ = requestHeadersToRemove_.getUnmodifiableView();
                    }
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_HttpHealthCheck_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_HttpHealthCheck_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                HealthCheckOuterClass.HealthCheck.HttpHealthCheck.class, HealthCheckOuterClass.HealthCheck.HttpHealthCheck.Builder.class);
            }

            private int bitField0_;
            public static final int HOST_FIELD_NUMBER = 1;
            private volatile java.lang.Object host_;

            /**
             * <pre>
             * The value of the host header in the HTTP health check request. If
             * left empty (default value), the name of the cluster this health check is associated
             * with will be used.
             * </pre>
             *
             * <code>string host = 1;</code>
             */
            public java.lang.String getHost() {

                java.lang.Object ref = host_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    host_ = s;
                    return s;
                }
            }

            /**
             * <pre>
             * The value of the host header in the HTTP health check request. If
             * left empty (default value), the name of the cluster this health check is associated
             * with will be used.
             * </pre>
             *
             * <code>string host = 1;</code>
             */
            public com.google.protobuf.ByteString
            getHostBytes() {

                java.lang.Object ref = host_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    host_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final int PATH_FIELD_NUMBER = 2;
            private volatile java.lang.Object path_;

            /**
             * <pre>
             * Specifies the HTTP path that will be requested during health checking. For example
             * *&#47;healthcheck*.
             * </pre>
             *
             * <code>string path = 2 [(.validate.rules) = { ... }</code>
             */
            public java.lang.String getPath() {

                java.lang.Object ref = path_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    path_ = s;
                    return s;
                }
            }

            /**
             * <pre>
             * Specifies the HTTP path that will be requested during health checking. For example
             * *&#47;healthcheck*.
             * </pre>
             *
             * <code>string path = 2 [(.validate.rules) = { ... }</code>
             */
            public com.google.protobuf.ByteString
            getPathBytes() {

                java.lang.Object ref = path_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    path_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final int SEND_FIELD_NUMBER = 3;
            private HealthCheckOuterClass.HealthCheck.Payload send_;

            /**
             * <pre>
             * [#not-implemented-hide:] HTTP specific payload.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.Payload send = 3;</code>
             */
            public boolean hasSend() {

                return send_ != null;
            }

            /**
             * <pre>
             * [#not-implemented-hide:] HTTP specific payload.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.Payload send = 3;</code>
             */
            public HealthCheckOuterClass.HealthCheck.Payload getSend() {

                return send_ == null ? HealthCheckOuterClass.HealthCheck.Payload.getDefaultInstance() : send_;
            }

            /**
             * <pre>
             * [#not-implemented-hide:] HTTP specific payload.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.Payload send = 3;</code>
             */
            public HealthCheckOuterClass.HealthCheck.PayloadOrBuilder getSendOrBuilder() {

                return getSend();
            }

            public static final int RECEIVE_FIELD_NUMBER = 4;
            private HealthCheckOuterClass.HealthCheck.Payload receive_;

            /**
             * <pre>
             * [#not-implemented-hide:] HTTP specific response.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.Payload receive = 4;</code>
             */
            public boolean hasReceive() {

                return receive_ != null;
            }

            /**
             * <pre>
             * [#not-implemented-hide:] HTTP specific response.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.Payload receive = 4;</code>
             */
            public HealthCheckOuterClass.HealthCheck.Payload getReceive() {

                return receive_ == null ? HealthCheckOuterClass.HealthCheck.Payload.getDefaultInstance() : receive_;
            }

            /**
             * <pre>
             * [#not-implemented-hide:] HTTP specific response.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.Payload receive = 4;</code>
             */
            public HealthCheckOuterClass.HealthCheck.PayloadOrBuilder getReceiveOrBuilder() {

                return getReceive();
            }

            public static final int SERVICE_NAME_FIELD_NUMBER = 5;
            private volatile java.lang.Object serviceName_;

            /**
             * <pre>
             * An optional service name parameter which is used to validate the identity of
             * the health checked cluster. See the :ref:`architecture overview
             * &lt;arch_overview_health_checking_identity&gt;` for more information.
             * </pre>
             *
             * <code>string service_name = 5;</code>
             */
            public java.lang.String getServiceName() {

                java.lang.Object ref = serviceName_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    serviceName_ = s;
                    return s;
                }
            }

            /**
             * <pre>
             * An optional service name parameter which is used to validate the identity of
             * the health checked cluster. See the :ref:`architecture overview
             * &lt;arch_overview_health_checking_identity&gt;` for more information.
             * </pre>
             *
             * <code>string service_name = 5;</code>
             */
            public com.google.protobuf.ByteString
            getServiceNameBytes() {

                java.lang.Object ref = serviceName_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    serviceName_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final int REQUEST_HEADERS_TO_ADD_FIELD_NUMBER = 6;
            private java.util.List<Base.HeaderValueOption> requestHeadersToAdd_;

            /**
             * <pre>
             * Specifies a list of HTTP headers that should be added to each request that is sent to the
             * health checked cluster. For more information, including details on header value syntax, see
             * the documentation on :ref:`custom request headers
             * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.HeaderValueOption request_headers_to_add = 6;</code>
             */
            public java.util.List<Base.HeaderValueOption> getRequestHeadersToAddList() {

                return requestHeadersToAdd_;
            }

            /**
             * <pre>
             * Specifies a list of HTTP headers that should be added to each request that is sent to the
             * health checked cluster. For more information, including details on header value syntax, see
             * the documentation on :ref:`custom request headers
             * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.HeaderValueOption request_headers_to_add = 6;</code>
             */
            public java.util.List<? extends Base.HeaderValueOptionOrBuilder>
            getRequestHeadersToAddOrBuilderList() {

                return requestHeadersToAdd_;
            }

            /**
             * <pre>
             * Specifies a list of HTTP headers that should be added to each request that is sent to the
             * health checked cluster. For more information, including details on header value syntax, see
             * the documentation on :ref:`custom request headers
             * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.HeaderValueOption request_headers_to_add = 6;</code>
             */
            public int getRequestHeadersToAddCount() {

                return requestHeadersToAdd_.size();
            }

            /**
             * <pre>
             * Specifies a list of HTTP headers that should be added to each request that is sent to the
             * health checked cluster. For more information, including details on header value syntax, see
             * the documentation on :ref:`custom request headers
             * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.HeaderValueOption request_headers_to_add = 6;</code>
             */
            public Base.HeaderValueOption getRequestHeadersToAdd(int index) {

                return requestHeadersToAdd_.get(index);
            }

            /**
             * <pre>
             * Specifies a list of HTTP headers that should be added to each request that is sent to the
             * health checked cluster. For more information, including details on header value syntax, see
             * the documentation on :ref:`custom request headers
             * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.HeaderValueOption request_headers_to_add = 6;</code>
             */
            public Base.HeaderValueOptionOrBuilder getRequestHeadersToAddOrBuilder(
                    int index) {

                return requestHeadersToAdd_.get(index);
            }

            public static final int REQUEST_HEADERS_TO_REMOVE_FIELD_NUMBER = 8;
            private com.google.protobuf.LazyStringList requestHeadersToRemove_;

            /**
             * <pre>
             * Specifies a list of HTTP headers that should be removed from each request that is sent to the
             * health checked cluster.
             * </pre>
             *
             * <code>repeated string request_headers_to_remove = 8;</code>
             */
            public com.google.protobuf.ProtocolStringList
            getRequestHeadersToRemoveList() {

                return requestHeadersToRemove_;
            }

            /**
             * <pre>
             * Specifies a list of HTTP headers that should be removed from each request that is sent to the
             * health checked cluster.
             * </pre>
             *
             * <code>repeated string request_headers_to_remove = 8;</code>
             */
            public int getRequestHeadersToRemoveCount() {

                return requestHeadersToRemove_.size();
            }

            /**
             * <pre>
             * Specifies a list of HTTP headers that should be removed from each request that is sent to the
             * health checked cluster.
             * </pre>
             *
             * <code>repeated string request_headers_to_remove = 8;</code>
             */
            public java.lang.String getRequestHeadersToRemove(int index) {

                return requestHeadersToRemove_.get(index);
            }

            /**
             * <pre>
             * Specifies a list of HTTP headers that should be removed from each request that is sent to the
             * health checked cluster.
             * </pre>
             *
             * <code>repeated string request_headers_to_remove = 8;</code>
             */
            public com.google.protobuf.ByteString
            getRequestHeadersToRemoveBytes(int index) {

                return requestHeadersToRemove_.getByteString(index);
            }

            public static final int USE_HTTP2_FIELD_NUMBER = 7;
            private boolean useHttp2_;

            /**
             * <pre>
             * If set, health checks will be made using http/2.
             * </pre>
             *
             * <code>bool use_http2 = 7;</code>
             */
            public boolean getUseHttp2() {

                return useHttp2_;
            }

            private byte memoizedIsInitialized = -1;

            @java.lang.Override
            public final boolean isInitialized() {

                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1) return true;
                if (isInitialized == 0) return false;

                memoizedIsInitialized = 1;
                return true;
            }

            @java.lang.Override
            public void writeTo(com.google.protobuf.CodedOutputStream output)
                    throws java.io.IOException {

                if (!getHostBytes().isEmpty()) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 1, host_);
                }
                if (!getPathBytes().isEmpty()) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 2, path_);
                }
                if (send_ != null) {
                    output.writeMessage(3, getSend());
                }
                if (receive_ != null) {
                    output.writeMessage(4, getReceive());
                }
                if (!getServiceNameBytes().isEmpty()) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 5, serviceName_);
                }
                for (int i = 0; i < requestHeadersToAdd_.size(); i++) {
                    output.writeMessage(6, requestHeadersToAdd_.get(i));
                }
                if (useHttp2_ != false) {
                    output.writeBool(7, useHttp2_);
                }
                for (int i = 0; i < requestHeadersToRemove_.size(); i++) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 8, requestHeadersToRemove_.getRaw(i));
                }
                unknownFields.writeTo(output);
            }

            @java.lang.Override
            public int getSerializedSize() {

                int size = memoizedSize;
                if (size != -1) return size;

                size = 0;
                if (!getHostBytes().isEmpty()) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, host_);
                }
                if (!getPathBytes().isEmpty()) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, path_);
                }
                if (send_ != null) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeMessageSize(3, getSend());
                }
                if (receive_ != null) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeMessageSize(4, getReceive());
                }
                if (!getServiceNameBytes().isEmpty()) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, serviceName_);
                }
                for (int i = 0; i < requestHeadersToAdd_.size(); i++) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeMessageSize(6, requestHeadersToAdd_.get(i));
                }
                if (useHttp2_ != false) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeBoolSize(7, useHttp2_);
                }
                {
                    int dataSize = 0;
                    for (int i = 0; i < requestHeadersToRemove_.size(); i++) {
                        dataSize += computeStringSizeNoTag(requestHeadersToRemove_.getRaw(i));
                    }
                    size += dataSize;
                    size += 1 * getRequestHeadersToRemoveList().size();
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @java.lang.Override
            public boolean equals(final java.lang.Object obj) {

                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof HealthCheckOuterClass.HealthCheck.HttpHealthCheck)) {
                    return super.equals(obj);
                }
                HealthCheckOuterClass.HealthCheck.HttpHealthCheck other = (HealthCheckOuterClass.HealthCheck.HttpHealthCheck) obj;

                boolean result = true;
                result = result && getHost()
                        .equals(other.getHost());
                result = result && getPath()
                        .equals(other.getPath());
                result = result && (hasSend() == other.hasSend());
                if (hasSend()) {
                    result = result && getSend()
                            .equals(other.getSend());
                }
                result = result && (hasReceive() == other.hasReceive());
                if (hasReceive()) {
                    result = result && getReceive()
                            .equals(other.getReceive());
                }
                result = result && getServiceName()
                        .equals(other.getServiceName());
                result = result && getRequestHeadersToAddList()
                        .equals(other.getRequestHeadersToAddList());
                result = result && getRequestHeadersToRemoveList()
                        .equals(other.getRequestHeadersToRemoveList());
                result = result && (getUseHttp2()
                        == other.getUseHttp2());
                result = result && unknownFields.equals(other.unknownFields);
                return result;
            }

            @java.lang.Override
            public int hashCode() {

                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + HOST_FIELD_NUMBER;
                hash = (53 * hash) + getHost().hashCode();
                hash = (37 * hash) + PATH_FIELD_NUMBER;
                hash = (53 * hash) + getPath().hashCode();
                if (hasSend()) {
                    hash = (37 * hash) + SEND_FIELD_NUMBER;
                    hash = (53 * hash) + getSend().hashCode();
                }
                if (hasReceive()) {
                    hash = (37 * hash) + RECEIVE_FIELD_NUMBER;
                    hash = (53 * hash) + getReceive().hashCode();
                }
                hash = (37 * hash) + SERVICE_NAME_FIELD_NUMBER;
                hash = (53 * hash) + getServiceName().hashCode();
                if (getRequestHeadersToAddCount() > 0) {
                    hash = (37 * hash) + REQUEST_HEADERS_TO_ADD_FIELD_NUMBER;
                    hash = (53 * hash) + getRequestHeadersToAddList().hashCode();
                }
                if (getRequestHeadersToRemoveCount() > 0) {
                    hash = (37 * hash) + REQUEST_HEADERS_TO_REMOVE_FIELD_NUMBER;
                    hash = (53 * hash) + getRequestHeadersToRemoveList().hashCode();
                }
                hash = (37 * hash) + USE_HTTP2_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                        getUseHttp2());
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static HealthCheckOuterClass.HealthCheck.HttpHealthCheck parseFrom(
                    java.nio.ByteBuffer data)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data);
            }

            public static HealthCheckOuterClass.HealthCheck.HttpHealthCheck parseFrom(
                    java.nio.ByteBuffer data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static HealthCheckOuterClass.HealthCheck.HttpHealthCheck parseFrom(
                    com.google.protobuf.ByteString data)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data);
            }

            public static HealthCheckOuterClass.HealthCheck.HttpHealthCheck parseFrom(
                    com.google.protobuf.ByteString data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static HealthCheckOuterClass.HealthCheck.HttpHealthCheck parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data);
            }

            public static HealthCheckOuterClass.HealthCheck.HttpHealthCheck parseFrom(
                    byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static HealthCheckOuterClass.HealthCheck.HttpHealthCheck parseFrom(java.io.InputStream input)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }

            public static HealthCheckOuterClass.HealthCheck.HttpHealthCheck parseFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static HealthCheckOuterClass.HealthCheck.HttpHealthCheck parseDelimitedFrom(java.io.InputStream input)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input);
            }

            public static HealthCheckOuterClass.HealthCheck.HttpHealthCheck parseDelimitedFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static HealthCheckOuterClass.HealthCheck.HttpHealthCheck parseFrom(
                    com.google.protobuf.CodedInputStream input)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }

            public static HealthCheckOuterClass.HealthCheck.HttpHealthCheck parseFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            @java.lang.Override
            public Builder newBuilderForType() {

                return newBuilder();
            }

            public static Builder newBuilder() {

                return DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(HealthCheckOuterClass.HealthCheck.HttpHealthCheck prototype) {

                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            @java.lang.Override
            public Builder toBuilder() {

                return this == DEFAULT_INSTANCE
                        ? new Builder() : new Builder().mergeFrom(this);
            }

            @java.lang.Override
            protected Builder newBuilderForType(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * <pre>
             * [#comment:next free field: 9]
             * </pre>
             * <p>
             * Protobuf type {@code envoy.api.v2.core.HealthCheck.HttpHealthCheck}
             */
            public static final class Builder extends
                    com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                    // @@protoc_insertion_point(builder_implements:envoy.api.v2.core.HealthCheck.HttpHealthCheck)
                    HealthCheckOuterClass.HealthCheck.HttpHealthCheckOrBuilder {

                public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {

                    return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_HttpHealthCheck_descriptor;
                }

                @java.lang.Override
                protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {

                    return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_HttpHealthCheck_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(
                                    HealthCheckOuterClass.HealthCheck.HttpHealthCheck.class, HealthCheckOuterClass.HealthCheck.HttpHealthCheck.Builder.class);
                }

                // Construct using envoy.api.v2.core.HealthCheckOuterClass.HealthCheck.HttpHealthCheck.newBuilder()
                private Builder() {

                    maybeForceBuilderInitialization();
                }

                private Builder(
                        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                    super(parent);
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {

                    if (com.google.protobuf.GeneratedMessageV3
                            .alwaysUseFieldBuilders) {
                        getRequestHeadersToAddFieldBuilder();
                    }
                }

                @java.lang.Override
                public Builder clear() {

                    super.clear();
                    host_ = "";

                    path_ = "";

                    if (sendBuilder_ == null) {
                        send_ = null;
                    } else {
                        send_ = null;
                        sendBuilder_ = null;
                    }
                    if (receiveBuilder_ == null) {
                        receive_ = null;
                    } else {
                        receive_ = null;
                        receiveBuilder_ = null;
                    }
                    serviceName_ = "";

                    if (requestHeadersToAddBuilder_ == null) {
                        requestHeadersToAdd_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000020);
                    } else {
                        requestHeadersToAddBuilder_.clear();
                    }
                    requestHeadersToRemove_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                    bitField0_ = (bitField0_ & ~0x00000040);
                    useHttp2_ = false;

                    return this;
                }

                @java.lang.Override
                public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {

                    return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_HttpHealthCheck_descriptor;
                }

                @java.lang.Override
                public HealthCheckOuterClass.HealthCheck.HttpHealthCheck getDefaultInstanceForType() {

                    return HealthCheckOuterClass.HealthCheck.HttpHealthCheck.getDefaultInstance();
                }

                @java.lang.Override
                public HealthCheckOuterClass.HealthCheck.HttpHealthCheck build() {

                    HealthCheckOuterClass.HealthCheck.HttpHealthCheck result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                @java.lang.Override
                public HealthCheckOuterClass.HealthCheck.HttpHealthCheck buildPartial() {

                    HealthCheckOuterClass.HealthCheck.HttpHealthCheck result = new HealthCheckOuterClass.HealthCheck.HttpHealthCheck(this);
                    int from_bitField0_ = bitField0_;
                    int to_bitField0_ = 0;
                    result.host_ = host_;
                    result.path_ = path_;
                    if (sendBuilder_ == null) {
                        result.send_ = send_;
                    } else {
                        result.send_ = sendBuilder_.build();
                    }
                    if (receiveBuilder_ == null) {
                        result.receive_ = receive_;
                    } else {
                        result.receive_ = receiveBuilder_.build();
                    }
                    result.serviceName_ = serviceName_;
                    if (requestHeadersToAddBuilder_ == null) {
                        if (((bitField0_ & 0x00000020) == 0x00000020)) {
                            requestHeadersToAdd_ = java.util.Collections.unmodifiableList(requestHeadersToAdd_);
                            bitField0_ = (bitField0_ & ~0x00000020);
                        }
                        result.requestHeadersToAdd_ = requestHeadersToAdd_;
                    } else {
                        result.requestHeadersToAdd_ = requestHeadersToAddBuilder_.build();
                    }
                    if (((bitField0_ & 0x00000040) == 0x00000040)) {
                        requestHeadersToRemove_ = requestHeadersToRemove_.getUnmodifiableView();
                        bitField0_ = (bitField0_ & ~0x00000040);
                    }
                    result.requestHeadersToRemove_ = requestHeadersToRemove_;
                    result.useHttp2_ = useHttp2_;
                    result.bitField0_ = to_bitField0_;
                    onBuilt();
                    return result;
                }

                @java.lang.Override
                public Builder clone() {

                    return (Builder) super.clone();
                }

                @java.lang.Override
                public Builder setField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {

                    return (Builder) super.setField(field, value);
                }

                @java.lang.Override
                public Builder clearField(
                        com.google.protobuf.Descriptors.FieldDescriptor field) {

                    return (Builder) super.clearField(field);
                }

                @java.lang.Override
                public Builder clearOneof(
                        com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                    return (Builder) super.clearOneof(oneof);
                }

                @java.lang.Override
                public Builder setRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        int index, java.lang.Object value) {

                    return (Builder) super.setRepeatedField(field, index, value);
                }

                @java.lang.Override
                public Builder addRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {

                    return (Builder) super.addRepeatedField(field, value);
                }

                @java.lang.Override
                public Builder mergeFrom(com.google.protobuf.Message other) {

                    if (other instanceof HealthCheckOuterClass.HealthCheck.HttpHealthCheck) {
                        return mergeFrom((HealthCheckOuterClass.HealthCheck.HttpHealthCheck) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(HealthCheckOuterClass.HealthCheck.HttpHealthCheck other) {

                    if (other == HealthCheckOuterClass.HealthCheck.HttpHealthCheck.getDefaultInstance())
                        return this;
                    if (!other.getHost().isEmpty()) {
                        host_ = other.host_;
                        onChanged();
                    }
                    if (!other.getPath().isEmpty()) {
                        path_ = other.path_;
                        onChanged();
                    }
                    if (other.hasSend()) {
                        mergeSend(other.getSend());
                    }
                    if (other.hasReceive()) {
                        mergeReceive(other.getReceive());
                    }
                    if (!other.getServiceName().isEmpty()) {
                        serviceName_ = other.serviceName_;
                        onChanged();
                    }
                    if (requestHeadersToAddBuilder_ == null) {
                        if (!other.requestHeadersToAdd_.isEmpty()) {
                            if (requestHeadersToAdd_.isEmpty()) {
                                requestHeadersToAdd_ = other.requestHeadersToAdd_;
                                bitField0_ = (bitField0_ & ~0x00000020);
                            } else {
                                ensureRequestHeadersToAddIsMutable();
                                requestHeadersToAdd_.addAll(other.requestHeadersToAdd_);
                            }
                            onChanged();
                        }
                    } else {
                        if (!other.requestHeadersToAdd_.isEmpty()) {
                            if (requestHeadersToAddBuilder_.isEmpty()) {
                                requestHeadersToAddBuilder_.dispose();
                                requestHeadersToAddBuilder_ = null;
                                requestHeadersToAdd_ = other.requestHeadersToAdd_;
                                bitField0_ = (bitField0_ & ~0x00000020);
                                requestHeadersToAddBuilder_ =
                                        com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                                getRequestHeadersToAddFieldBuilder() : null;
                            } else {
                                requestHeadersToAddBuilder_.addAllMessages(other.requestHeadersToAdd_);
                            }
                        }
                    }
                    if (!other.requestHeadersToRemove_.isEmpty()) {
                        if (requestHeadersToRemove_.isEmpty()) {
                            requestHeadersToRemove_ = other.requestHeadersToRemove_;
                            bitField0_ = (bitField0_ & ~0x00000040);
                        } else {
                            ensureRequestHeadersToRemoveIsMutable();
                            requestHeadersToRemove_.addAll(other.requestHeadersToRemove_);
                        }
                        onChanged();
                    }
                    if (other.getUseHttp2() != false) {
                        setUseHttp2(other.getUseHttp2());
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                @java.lang.Override
                public final boolean isInitialized() {

                    return true;
                }

                @java.lang.Override
                public Builder mergeFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws java.io.IOException {

                    HealthCheckOuterClass.HealthCheck.HttpHealthCheck parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (HealthCheckOuterClass.HealthCheck.HttpHealthCheck) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private int bitField0_;

                private java.lang.Object host_ = "";

                /**
                 * <pre>
                 * The value of the host header in the HTTP health check request. If
                 * left empty (default value), the name of the cluster this health check is associated
                 * with will be used.
                 * </pre>
                 *
                 * <code>string host = 1;</code>
                 */
                public java.lang.String getHost() {

                    java.lang.Object ref = host_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs =
                                (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        host_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <pre>
                 * The value of the host header in the HTTP health check request. If
                 * left empty (default value), the name of the cluster this health check is associated
                 * with will be used.
                 * </pre>
                 *
                 * <code>string host = 1;</code>
                 */
                public com.google.protobuf.ByteString
                getHostBytes() {

                    java.lang.Object ref = host_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b =
                                com.google.protobuf.ByteString.copyFromUtf8(
                                        (java.lang.String) ref);
                        host_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <pre>
                 * The value of the host header in the HTTP health check request. If
                 * left empty (default value), the name of the cluster this health check is associated
                 * with will be used.
                 * </pre>
                 *
                 * <code>string host = 1;</code>
                 */
                public Builder setHost(
                        java.lang.String value) {

                    if (value == null) {
                        throw new NullPointerException();
                    }

                    host_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * The value of the host header in the HTTP health check request. If
                 * left empty (default value), the name of the cluster this health check is associated
                 * with will be used.
                 * </pre>
                 *
                 * <code>string host = 1;</code>
                 */
                public Builder clearHost() {

                    host_ = getDefaultInstance().getHost();
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * The value of the host header in the HTTP health check request. If
                 * left empty (default value), the name of the cluster this health check is associated
                 * with will be used.
                 * </pre>
                 *
                 * <code>string host = 1;</code>
                 */
                public Builder setHostBytes(
                        com.google.protobuf.ByteString value) {

                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);

                    host_ = value;
                    onChanged();
                    return this;
                }

                private java.lang.Object path_ = "";

                /**
                 * <pre>
                 * Specifies the HTTP path that will be requested during health checking. For example
                 * *&#47;healthcheck*.
                 * </pre>
                 *
                 * <code>string path = 2 [(.validate.rules) = { ... }</code>
                 */
                public java.lang.String getPath() {

                    java.lang.Object ref = path_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs =
                                (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        path_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <pre>
                 * Specifies the HTTP path that will be requested during health checking. For example
                 * *&#47;healthcheck*.
                 * </pre>
                 *
                 * <code>string path = 2 [(.validate.rules) = { ... }</code>
                 */
                public com.google.protobuf.ByteString
                getPathBytes() {

                    java.lang.Object ref = path_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b =
                                com.google.protobuf.ByteString.copyFromUtf8(
                                        (java.lang.String) ref);
                        path_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <pre>
                 * Specifies the HTTP path that will be requested during health checking. For example
                 * *&#47;healthcheck*.
                 * </pre>
                 *
                 * <code>string path = 2 [(.validate.rules) = { ... }</code>
                 */
                public Builder setPath(
                        java.lang.String value) {

                    if (value == null) {
                        throw new NullPointerException();
                    }

                    path_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * Specifies the HTTP path that will be requested during health checking. For example
                 * *&#47;healthcheck*.
                 * </pre>
                 *
                 * <code>string path = 2 [(.validate.rules) = { ... }</code>
                 */
                public Builder clearPath() {

                    path_ = getDefaultInstance().getPath();
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * Specifies the HTTP path that will be requested during health checking. For example
                 * *&#47;healthcheck*.
                 * </pre>
                 *
                 * <code>string path = 2 [(.validate.rules) = { ... }</code>
                 */
                public Builder setPathBytes(
                        com.google.protobuf.ByteString value) {

                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);

                    path_ = value;
                    onChanged();
                    return this;
                }

                private HealthCheckOuterClass.HealthCheck.Payload send_ = null;
                private com.google.protobuf.SingleFieldBuilderV3<
                        HealthCheckOuterClass.HealthCheck.Payload, HealthCheckOuterClass.HealthCheck.Payload.Builder, HealthCheckOuterClass.HealthCheck.PayloadOrBuilder> sendBuilder_;

                /**
                 * <pre>
                 * [#not-implemented-hide:] HTTP specific payload.
                 * </pre>
                 *
                 * <code>.envoy.api.v2.core.HealthCheck.Payload send = 3;</code>
                 */
                public boolean hasSend() {

                    return sendBuilder_ != null || send_ != null;
                }

                /**
                 * <pre>
                 * [#not-implemented-hide:] HTTP specific payload.
                 * </pre>
                 *
                 * <code>.envoy.api.v2.core.HealthCheck.Payload send = 3;</code>
                 */
                public HealthCheckOuterClass.HealthCheck.Payload getSend() {

                    if (sendBuilder_ == null) {
                        return send_ == null ? HealthCheckOuterClass.HealthCheck.Payload.getDefaultInstance() : send_;
                    } else {
                        return sendBuilder_.getMessage();
                    }
                }

                /**
                 * <pre>
                 * [#not-implemented-hide:] HTTP specific payload.
                 * </pre>
                 *
                 * <code>.envoy.api.v2.core.HealthCheck.Payload send = 3;</code>
                 */
                public Builder setSend(HealthCheckOuterClass.HealthCheck.Payload value) {

                    if (sendBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        send_ = value;
                        onChanged();
                    } else {
                        sendBuilder_.setMessage(value);
                    }

                    return this;
                }

                /**
                 * <pre>
                 * [#not-implemented-hide:] HTTP specific payload.
                 * </pre>
                 *
                 * <code>.envoy.api.v2.core.HealthCheck.Payload send = 3;</code>
                 */
                public Builder setSend(
                        HealthCheckOuterClass.HealthCheck.Payload.Builder builderForValue) {

                    if (sendBuilder_ == null) {
                        send_ = builderForValue.build();
                        onChanged();
                    } else {
                        sendBuilder_.setMessage(builderForValue.build());
                    }

                    return this;
                }

                /**
                 * <pre>
                 * [#not-implemented-hide:] HTTP specific payload.
                 * </pre>
                 *
                 * <code>.envoy.api.v2.core.HealthCheck.Payload send = 3;</code>
                 */
                public Builder mergeSend(HealthCheckOuterClass.HealthCheck.Payload value) {

                    if (sendBuilder_ == null) {
                        if (send_ != null) {
                            send_ =
                                    HealthCheckOuterClass.HealthCheck.Payload.newBuilder(send_).mergeFrom(value).buildPartial();
                        } else {
                            send_ = value;
                        }
                        onChanged();
                    } else {
                        sendBuilder_.mergeFrom(value);
                    }

                    return this;
                }

                /**
                 * <pre>
                 * [#not-implemented-hide:] HTTP specific payload.
                 * </pre>
                 *
                 * <code>.envoy.api.v2.core.HealthCheck.Payload send = 3;</code>
                 */
                public Builder clearSend() {

                    if (sendBuilder_ == null) {
                        send_ = null;
                        onChanged();
                    } else {
                        send_ = null;
                        sendBuilder_ = null;
                    }

                    return this;
                }

                /**
                 * <pre>
                 * [#not-implemented-hide:] HTTP specific payload.
                 * </pre>
                 *
                 * <code>.envoy.api.v2.core.HealthCheck.Payload send = 3;</code>
                 */
                public HealthCheckOuterClass.HealthCheck.Payload.Builder getSendBuilder() {

                    onChanged();
                    return getSendFieldBuilder().getBuilder();
                }

                /**
                 * <pre>
                 * [#not-implemented-hide:] HTTP specific payload.
                 * </pre>
                 *
                 * <code>.envoy.api.v2.core.HealthCheck.Payload send = 3;</code>
                 */
                public HealthCheckOuterClass.HealthCheck.PayloadOrBuilder getSendOrBuilder() {

                    if (sendBuilder_ != null) {
                        return sendBuilder_.getMessageOrBuilder();
                    } else {
                        return send_ == null ?
                                HealthCheckOuterClass.HealthCheck.Payload.getDefaultInstance() : send_;
                    }
                }

                /**
                 * <pre>
                 * [#not-implemented-hide:] HTTP specific payload.
                 * </pre>
                 *
                 * <code>.envoy.api.v2.core.HealthCheck.Payload send = 3;</code>
                 */
                private com.google.protobuf.SingleFieldBuilderV3<
                        HealthCheckOuterClass.HealthCheck.Payload, HealthCheckOuterClass.HealthCheck.Payload.Builder, HealthCheckOuterClass.HealthCheck.PayloadOrBuilder>
                getSendFieldBuilder() {

                    if (sendBuilder_ == null) {
                        sendBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                                HealthCheckOuterClass.HealthCheck.Payload, HealthCheckOuterClass.HealthCheck.Payload.Builder, HealthCheckOuterClass.HealthCheck.PayloadOrBuilder>(
                                getSend(),
                                getParentForChildren(),
                                isClean());
                        send_ = null;
                    }
                    return sendBuilder_;
                }

                private HealthCheckOuterClass.HealthCheck.Payload receive_ = null;
                private com.google.protobuf.SingleFieldBuilderV3<
                        HealthCheckOuterClass.HealthCheck.Payload, HealthCheckOuterClass.HealthCheck.Payload.Builder, HealthCheckOuterClass.HealthCheck.PayloadOrBuilder> receiveBuilder_;

                /**
                 * <pre>
                 * [#not-implemented-hide:] HTTP specific response.
                 * </pre>
                 *
                 * <code>.envoy.api.v2.core.HealthCheck.Payload receive = 4;</code>
                 */
                public boolean hasReceive() {

                    return receiveBuilder_ != null || receive_ != null;
                }

                /**
                 * <pre>
                 * [#not-implemented-hide:] HTTP specific response.
                 * </pre>
                 *
                 * <code>.envoy.api.v2.core.HealthCheck.Payload receive = 4;</code>
                 */
                public HealthCheckOuterClass.HealthCheck.Payload getReceive() {

                    if (receiveBuilder_ == null) {
                        return receive_ == null ? HealthCheckOuterClass.HealthCheck.Payload.getDefaultInstance() : receive_;
                    } else {
                        return receiveBuilder_.getMessage();
                    }
                }

                /**
                 * <pre>
                 * [#not-implemented-hide:] HTTP specific response.
                 * </pre>
                 *
                 * <code>.envoy.api.v2.core.HealthCheck.Payload receive = 4;</code>
                 */
                public Builder setReceive(HealthCheckOuterClass.HealthCheck.Payload value) {

                    if (receiveBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        receive_ = value;
                        onChanged();
                    } else {
                        receiveBuilder_.setMessage(value);
                    }

                    return this;
                }

                /**
                 * <pre>
                 * [#not-implemented-hide:] HTTP specific response.
                 * </pre>
                 *
                 * <code>.envoy.api.v2.core.HealthCheck.Payload receive = 4;</code>
                 */
                public Builder setReceive(
                        HealthCheckOuterClass.HealthCheck.Payload.Builder builderForValue) {

                    if (receiveBuilder_ == null) {
                        receive_ = builderForValue.build();
                        onChanged();
                    } else {
                        receiveBuilder_.setMessage(builderForValue.build());
                    }

                    return this;
                }

                /**
                 * <pre>
                 * [#not-implemented-hide:] HTTP specific response.
                 * </pre>
                 *
                 * <code>.envoy.api.v2.core.HealthCheck.Payload receive = 4;</code>
                 */
                public Builder mergeReceive(HealthCheckOuterClass.HealthCheck.Payload value) {

                    if (receiveBuilder_ == null) {
                        if (receive_ != null) {
                            receive_ =
                                    HealthCheckOuterClass.HealthCheck.Payload.newBuilder(receive_).mergeFrom(value).buildPartial();
                        } else {
                            receive_ = value;
                        }
                        onChanged();
                    } else {
                        receiveBuilder_.mergeFrom(value);
                    }

                    return this;
                }

                /**
                 * <pre>
                 * [#not-implemented-hide:] HTTP specific response.
                 * </pre>
                 *
                 * <code>.envoy.api.v2.core.HealthCheck.Payload receive = 4;</code>
                 */
                public Builder clearReceive() {

                    if (receiveBuilder_ == null) {
                        receive_ = null;
                        onChanged();
                    } else {
                        receive_ = null;
                        receiveBuilder_ = null;
                    }

                    return this;
                }

                /**
                 * <pre>
                 * [#not-implemented-hide:] HTTP specific response.
                 * </pre>
                 *
                 * <code>.envoy.api.v2.core.HealthCheck.Payload receive = 4;</code>
                 */
                public HealthCheckOuterClass.HealthCheck.Payload.Builder getReceiveBuilder() {

                    onChanged();
                    return getReceiveFieldBuilder().getBuilder();
                }

                /**
                 * <pre>
                 * [#not-implemented-hide:] HTTP specific response.
                 * </pre>
                 *
                 * <code>.envoy.api.v2.core.HealthCheck.Payload receive = 4;</code>
                 */
                public HealthCheckOuterClass.HealthCheck.PayloadOrBuilder getReceiveOrBuilder() {

                    if (receiveBuilder_ != null) {
                        return receiveBuilder_.getMessageOrBuilder();
                    } else {
                        return receive_ == null ?
                                HealthCheckOuterClass.HealthCheck.Payload.getDefaultInstance() : receive_;
                    }
                }

                /**
                 * <pre>
                 * [#not-implemented-hide:] HTTP specific response.
                 * </pre>
                 *
                 * <code>.envoy.api.v2.core.HealthCheck.Payload receive = 4;</code>
                 */
                private com.google.protobuf.SingleFieldBuilderV3<
                        HealthCheckOuterClass.HealthCheck.Payload, HealthCheckOuterClass.HealthCheck.Payload.Builder, HealthCheckOuterClass.HealthCheck.PayloadOrBuilder>
                getReceiveFieldBuilder() {

                    if (receiveBuilder_ == null) {
                        receiveBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                                HealthCheckOuterClass.HealthCheck.Payload, HealthCheckOuterClass.HealthCheck.Payload.Builder, HealthCheckOuterClass.HealthCheck.PayloadOrBuilder>(
                                getReceive(),
                                getParentForChildren(),
                                isClean());
                        receive_ = null;
                    }
                    return receiveBuilder_;
                }

                private java.lang.Object serviceName_ = "";

                /**
                 * <pre>
                 * An optional service name parameter which is used to validate the identity of
                 * the health checked cluster. See the :ref:`architecture overview
                 * &lt;arch_overview_health_checking_identity&gt;` for more information.
                 * </pre>
                 *
                 * <code>string service_name = 5;</code>
                 */
                public java.lang.String getServiceName() {

                    java.lang.Object ref = serviceName_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs =
                                (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        serviceName_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <pre>
                 * An optional service name parameter which is used to validate the identity of
                 * the health checked cluster. See the :ref:`architecture overview
                 * &lt;arch_overview_health_checking_identity&gt;` for more information.
                 * </pre>
                 *
                 * <code>string service_name = 5;</code>
                 */
                public com.google.protobuf.ByteString
                getServiceNameBytes() {

                    java.lang.Object ref = serviceName_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b =
                                com.google.protobuf.ByteString.copyFromUtf8(
                                        (java.lang.String) ref);
                        serviceName_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <pre>
                 * An optional service name parameter which is used to validate the identity of
                 * the health checked cluster. See the :ref:`architecture overview
                 * &lt;arch_overview_health_checking_identity&gt;` for more information.
                 * </pre>
                 *
                 * <code>string service_name = 5;</code>
                 */
                public Builder setServiceName(
                        java.lang.String value) {

                    if (value == null) {
                        throw new NullPointerException();
                    }

                    serviceName_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * An optional service name parameter which is used to validate the identity of
                 * the health checked cluster. See the :ref:`architecture overview
                 * &lt;arch_overview_health_checking_identity&gt;` for more information.
                 * </pre>
                 *
                 * <code>string service_name = 5;</code>
                 */
                public Builder clearServiceName() {

                    serviceName_ = getDefaultInstance().getServiceName();
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * An optional service name parameter which is used to validate the identity of
                 * the health checked cluster. See the :ref:`architecture overview
                 * &lt;arch_overview_health_checking_identity&gt;` for more information.
                 * </pre>
                 *
                 * <code>string service_name = 5;</code>
                 */
                public Builder setServiceNameBytes(
                        com.google.protobuf.ByteString value) {

                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);

                    serviceName_ = value;
                    onChanged();
                    return this;
                }

                private java.util.List<Base.HeaderValueOption> requestHeadersToAdd_ =
                        java.util.Collections.emptyList();

                private void ensureRequestHeadersToAddIsMutable() {

                    if (!((bitField0_ & 0x00000020) == 0x00000020)) {
                        requestHeadersToAdd_ = new java.util.ArrayList<Base.HeaderValueOption>(requestHeadersToAdd_);
                        bitField0_ |= 0x00000020;
                    }
                }

                private com.google.protobuf.RepeatedFieldBuilderV3<
                        Base.HeaderValueOption, Base.HeaderValueOption.Builder, Base.HeaderValueOptionOrBuilder> requestHeadersToAddBuilder_;

                /**
                 * <pre>
                 * Specifies a list of HTTP headers that should be added to each request that is sent to the
                 * health checked cluster. For more information, including details on header value syntax, see
                 * the documentation on :ref:`custom request headers
                 * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HeaderValueOption request_headers_to_add = 6;</code>
                 */
                public java.util.List<Base.HeaderValueOption> getRequestHeadersToAddList() {

                    if (requestHeadersToAddBuilder_ == null) {
                        return java.util.Collections.unmodifiableList(requestHeadersToAdd_);
                    } else {
                        return requestHeadersToAddBuilder_.getMessageList();
                    }
                }

                /**
                 * <pre>
                 * Specifies a list of HTTP headers that should be added to each request that is sent to the
                 * health checked cluster. For more information, including details on header value syntax, see
                 * the documentation on :ref:`custom request headers
                 * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HeaderValueOption request_headers_to_add = 6;</code>
                 */
                public int getRequestHeadersToAddCount() {

                    if (requestHeadersToAddBuilder_ == null) {
                        return requestHeadersToAdd_.size();
                    } else {
                        return requestHeadersToAddBuilder_.getCount();
                    }
                }

                /**
                 * <pre>
                 * Specifies a list of HTTP headers that should be added to each request that is sent to the
                 * health checked cluster. For more information, including details on header value syntax, see
                 * the documentation on :ref:`custom request headers
                 * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HeaderValueOption request_headers_to_add = 6;</code>
                 */
                public Base.HeaderValueOption getRequestHeadersToAdd(int index) {

                    if (requestHeadersToAddBuilder_ == null) {
                        return requestHeadersToAdd_.get(index);
                    } else {
                        return requestHeadersToAddBuilder_.getMessage(index);
                    }
                }

                /**
                 * <pre>
                 * Specifies a list of HTTP headers that should be added to each request that is sent to the
                 * health checked cluster. For more information, including details on header value syntax, see
                 * the documentation on :ref:`custom request headers
                 * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HeaderValueOption request_headers_to_add = 6;</code>
                 */
                public Builder setRequestHeadersToAdd(
                        int index, Base.HeaderValueOption value) {

                    if (requestHeadersToAddBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureRequestHeadersToAddIsMutable();
                        requestHeadersToAdd_.set(index, value);
                        onChanged();
                    } else {
                        requestHeadersToAddBuilder_.setMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <pre>
                 * Specifies a list of HTTP headers that should be added to each request that is sent to the
                 * health checked cluster. For more information, including details on header value syntax, see
                 * the documentation on :ref:`custom request headers
                 * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HeaderValueOption request_headers_to_add = 6;</code>
                 */
                public Builder setRequestHeadersToAdd(
                        int index, Base.HeaderValueOption.Builder builderForValue) {

                    if (requestHeadersToAddBuilder_ == null) {
                        ensureRequestHeadersToAddIsMutable();
                        requestHeadersToAdd_.set(index, builderForValue.build());
                        onChanged();
                    } else {
                        requestHeadersToAddBuilder_.setMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <pre>
                 * Specifies a list of HTTP headers that should be added to each request that is sent to the
                 * health checked cluster. For more information, including details on header value syntax, see
                 * the documentation on :ref:`custom request headers
                 * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HeaderValueOption request_headers_to_add = 6;</code>
                 */
                public Builder addRequestHeadersToAdd(Base.HeaderValueOption value) {

                    if (requestHeadersToAddBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureRequestHeadersToAddIsMutable();
                        requestHeadersToAdd_.add(value);
                        onChanged();
                    } else {
                        requestHeadersToAddBuilder_.addMessage(value);
                    }
                    return this;
                }

                /**
                 * <pre>
                 * Specifies a list of HTTP headers that should be added to each request that is sent to the
                 * health checked cluster. For more information, including details on header value syntax, see
                 * the documentation on :ref:`custom request headers
                 * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HeaderValueOption request_headers_to_add = 6;</code>
                 */
                public Builder addRequestHeadersToAdd(
                        int index, Base.HeaderValueOption value) {

                    if (requestHeadersToAddBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureRequestHeadersToAddIsMutable();
                        requestHeadersToAdd_.add(index, value);
                        onChanged();
                    } else {
                        requestHeadersToAddBuilder_.addMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <pre>
                 * Specifies a list of HTTP headers that should be added to each request that is sent to the
                 * health checked cluster. For more information, including details on header value syntax, see
                 * the documentation on :ref:`custom request headers
                 * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HeaderValueOption request_headers_to_add = 6;</code>
                 */
                public Builder addRequestHeadersToAdd(
                        Base.HeaderValueOption.Builder builderForValue) {

                    if (requestHeadersToAddBuilder_ == null) {
                        ensureRequestHeadersToAddIsMutable();
                        requestHeadersToAdd_.add(builderForValue.build());
                        onChanged();
                    } else {
                        requestHeadersToAddBuilder_.addMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <pre>
                 * Specifies a list of HTTP headers that should be added to each request that is sent to the
                 * health checked cluster. For more information, including details on header value syntax, see
                 * the documentation on :ref:`custom request headers
                 * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HeaderValueOption request_headers_to_add = 6;</code>
                 */
                public Builder addRequestHeadersToAdd(
                        int index, Base.HeaderValueOption.Builder builderForValue) {

                    if (requestHeadersToAddBuilder_ == null) {
                        ensureRequestHeadersToAddIsMutable();
                        requestHeadersToAdd_.add(index, builderForValue.build());
                        onChanged();
                    } else {
                        requestHeadersToAddBuilder_.addMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <pre>
                 * Specifies a list of HTTP headers that should be added to each request that is sent to the
                 * health checked cluster. For more information, including details on header value syntax, see
                 * the documentation on :ref:`custom request headers
                 * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HeaderValueOption request_headers_to_add = 6;</code>
                 */
                public Builder addAllRequestHeadersToAdd(
                        java.lang.Iterable<? extends Base.HeaderValueOption> values) {

                    if (requestHeadersToAddBuilder_ == null) {
                        ensureRequestHeadersToAddIsMutable();
                        com.google.protobuf.AbstractMessageLite.Builder.addAll(
                                values, requestHeadersToAdd_);
                        onChanged();
                    } else {
                        requestHeadersToAddBuilder_.addAllMessages(values);
                    }
                    return this;
                }

                /**
                 * <pre>
                 * Specifies a list of HTTP headers that should be added to each request that is sent to the
                 * health checked cluster. For more information, including details on header value syntax, see
                 * the documentation on :ref:`custom request headers
                 * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HeaderValueOption request_headers_to_add = 6;</code>
                 */
                public Builder clearRequestHeadersToAdd() {

                    if (requestHeadersToAddBuilder_ == null) {
                        requestHeadersToAdd_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000020);
                        onChanged();
                    } else {
                        requestHeadersToAddBuilder_.clear();
                    }
                    return this;
                }

                /**
                 * <pre>
                 * Specifies a list of HTTP headers that should be added to each request that is sent to the
                 * health checked cluster. For more information, including details on header value syntax, see
                 * the documentation on :ref:`custom request headers
                 * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HeaderValueOption request_headers_to_add = 6;</code>
                 */
                public Builder removeRequestHeadersToAdd(int index) {

                    if (requestHeadersToAddBuilder_ == null) {
                        ensureRequestHeadersToAddIsMutable();
                        requestHeadersToAdd_.remove(index);
                        onChanged();
                    } else {
                        requestHeadersToAddBuilder_.remove(index);
                    }
                    return this;
                }

                /**
                 * <pre>
                 * Specifies a list of HTTP headers that should be added to each request that is sent to the
                 * health checked cluster. For more information, including details on header value syntax, see
                 * the documentation on :ref:`custom request headers
                 * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HeaderValueOption request_headers_to_add = 6;</code>
                 */
                public Base.HeaderValueOption.Builder getRequestHeadersToAddBuilder(
                        int index) {

                    return getRequestHeadersToAddFieldBuilder().getBuilder(index);
                }

                /**
                 * <pre>
                 * Specifies a list of HTTP headers that should be added to each request that is sent to the
                 * health checked cluster. For more information, including details on header value syntax, see
                 * the documentation on :ref:`custom request headers
                 * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HeaderValueOption request_headers_to_add = 6;</code>
                 */
                public Base.HeaderValueOptionOrBuilder getRequestHeadersToAddOrBuilder(
                        int index) {

                    if (requestHeadersToAddBuilder_ == null) {
                        return requestHeadersToAdd_.get(index);
                    } else {
                        return requestHeadersToAddBuilder_.getMessageOrBuilder(index);
                    }
                }

                /**
                 * <pre>
                 * Specifies a list of HTTP headers that should be added to each request that is sent to the
                 * health checked cluster. For more information, including details on header value syntax, see
                 * the documentation on :ref:`custom request headers
                 * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HeaderValueOption request_headers_to_add = 6;</code>
                 */
                public java.util.List<? extends Base.HeaderValueOptionOrBuilder>
                getRequestHeadersToAddOrBuilderList() {

                    if (requestHeadersToAddBuilder_ != null) {
                        return requestHeadersToAddBuilder_.getMessageOrBuilderList();
                    } else {
                        return java.util.Collections.unmodifiableList(requestHeadersToAdd_);
                    }
                }

                /**
                 * <pre>
                 * Specifies a list of HTTP headers that should be added to each request that is sent to the
                 * health checked cluster. For more information, including details on header value syntax, see
                 * the documentation on :ref:`custom request headers
                 * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HeaderValueOption request_headers_to_add = 6;</code>
                 */
                public Base.HeaderValueOption.Builder addRequestHeadersToAddBuilder() {

                    return getRequestHeadersToAddFieldBuilder().addBuilder(
                            Base.HeaderValueOption.getDefaultInstance());
                }

                /**
                 * <pre>
                 * Specifies a list of HTTP headers that should be added to each request that is sent to the
                 * health checked cluster. For more information, including details on header value syntax, see
                 * the documentation on :ref:`custom request headers
                 * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HeaderValueOption request_headers_to_add = 6;</code>
                 */
                public Base.HeaderValueOption.Builder addRequestHeadersToAddBuilder(
                        int index) {

                    return getRequestHeadersToAddFieldBuilder().addBuilder(
                            index, Base.HeaderValueOption.getDefaultInstance());
                }

                /**
                 * <pre>
                 * Specifies a list of HTTP headers that should be added to each request that is sent to the
                 * health checked cluster. For more information, including details on header value syntax, see
                 * the documentation on :ref:`custom request headers
                 * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HeaderValueOption request_headers_to_add = 6;</code>
                 */
                public java.util.List<Base.HeaderValueOption.Builder>
                getRequestHeadersToAddBuilderList() {

                    return getRequestHeadersToAddFieldBuilder().getBuilderList();
                }

                private com.google.protobuf.RepeatedFieldBuilderV3<
                        Base.HeaderValueOption, Base.HeaderValueOption.Builder, Base.HeaderValueOptionOrBuilder>
                getRequestHeadersToAddFieldBuilder() {

                    if (requestHeadersToAddBuilder_ == null) {
                        requestHeadersToAddBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                                Base.HeaderValueOption, Base.HeaderValueOption.Builder, Base.HeaderValueOptionOrBuilder>(
                                requestHeadersToAdd_,
                                ((bitField0_ & 0x00000020) == 0x00000020),
                                getParentForChildren(),
                                isClean());
                        requestHeadersToAdd_ = null;
                    }
                    return requestHeadersToAddBuilder_;
                }

                private com.google.protobuf.LazyStringList requestHeadersToRemove_ = com.google.protobuf.LazyStringArrayList.EMPTY;

                private void ensureRequestHeadersToRemoveIsMutable() {

                    if (!((bitField0_ & 0x00000040) == 0x00000040)) {
                        requestHeadersToRemove_ = new com.google.protobuf.LazyStringArrayList(requestHeadersToRemove_);
                        bitField0_ |= 0x00000040;
                    }
                }

                /**
                 * <pre>
                 * Specifies a list of HTTP headers that should be removed from each request that is sent to the
                 * health checked cluster.
                 * </pre>
                 *
                 * <code>repeated string request_headers_to_remove = 8;</code>
                 */
                public com.google.protobuf.ProtocolStringList
                getRequestHeadersToRemoveList() {

                    return requestHeadersToRemove_.getUnmodifiableView();
                }

                /**
                 * <pre>
                 * Specifies a list of HTTP headers that should be removed from each request that is sent to the
                 * health checked cluster.
                 * </pre>
                 *
                 * <code>repeated string request_headers_to_remove = 8;</code>
                 */
                public int getRequestHeadersToRemoveCount() {

                    return requestHeadersToRemove_.size();
                }

                /**
                 * <pre>
                 * Specifies a list of HTTP headers that should be removed from each request that is sent to the
                 * health checked cluster.
                 * </pre>
                 *
                 * <code>repeated string request_headers_to_remove = 8;</code>
                 */
                public java.lang.String getRequestHeadersToRemove(int index) {

                    return requestHeadersToRemove_.get(index);
                }

                /**
                 * <pre>
                 * Specifies a list of HTTP headers that should be removed from each request that is sent to the
                 * health checked cluster.
                 * </pre>
                 *
                 * <code>repeated string request_headers_to_remove = 8;</code>
                 */
                public com.google.protobuf.ByteString
                getRequestHeadersToRemoveBytes(int index) {

                    return requestHeadersToRemove_.getByteString(index);
                }

                /**
                 * <pre>
                 * Specifies a list of HTTP headers that should be removed from each request that is sent to the
                 * health checked cluster.
                 * </pre>
                 *
                 * <code>repeated string request_headers_to_remove = 8;</code>
                 */
                public Builder setRequestHeadersToRemove(
                        int index, java.lang.String value) {

                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureRequestHeadersToRemoveIsMutable();
                    requestHeadersToRemove_.set(index, value);
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * Specifies a list of HTTP headers that should be removed from each request that is sent to the
                 * health checked cluster.
                 * </pre>
                 *
                 * <code>repeated string request_headers_to_remove = 8;</code>
                 */
                public Builder addRequestHeadersToRemove(
                        java.lang.String value) {

                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureRequestHeadersToRemoveIsMutable();
                    requestHeadersToRemove_.add(value);
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * Specifies a list of HTTP headers that should be removed from each request that is sent to the
                 * health checked cluster.
                 * </pre>
                 *
                 * <code>repeated string request_headers_to_remove = 8;</code>
                 */
                public Builder addAllRequestHeadersToRemove(
                        java.lang.Iterable<java.lang.String> values) {

                    ensureRequestHeadersToRemoveIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, requestHeadersToRemove_);
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * Specifies a list of HTTP headers that should be removed from each request that is sent to the
                 * health checked cluster.
                 * </pre>
                 *
                 * <code>repeated string request_headers_to_remove = 8;</code>
                 */
                public Builder clearRequestHeadersToRemove() {

                    requestHeadersToRemove_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                    bitField0_ = (bitField0_ & ~0x00000040);
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * Specifies a list of HTTP headers that should be removed from each request that is sent to the
                 * health checked cluster.
                 * </pre>
                 *
                 * <code>repeated string request_headers_to_remove = 8;</code>
                 */
                public Builder addRequestHeadersToRemoveBytes(
                        com.google.protobuf.ByteString value) {

                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);
                    ensureRequestHeadersToRemoveIsMutable();
                    requestHeadersToRemove_.add(value);
                    onChanged();
                    return this;
                }

                private boolean useHttp2_;

                /**
                 * <pre>
                 * If set, health checks will be made using http/2.
                 * </pre>
                 *
                 * <code>bool use_http2 = 7;</code>
                 */
                public boolean getUseHttp2() {

                    return useHttp2_;
                }

                /**
                 * <pre>
                 * If set, health checks will be made using http/2.
                 * </pre>
                 *
                 * <code>bool use_http2 = 7;</code>
                 */
                public Builder setUseHttp2(boolean value) {

                    useHttp2_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * If set, health checks will be made using http/2.
                 * </pre>
                 *
                 * <code>bool use_http2 = 7;</code>
                 */
                public Builder clearUseHttp2() {

                    useHttp2_ = false;
                    onChanged();
                    return this;
                }

                @java.lang.Override
                public final Builder setUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {

                    return super.setUnknownFieldsProto3(unknownFields);
                }

                @java.lang.Override
                public final Builder mergeUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {

                    return super.mergeUnknownFields(unknownFields);
                }

                // @@protoc_insertion_point(builder_scope:envoy.api.v2.core.HealthCheck.HttpHealthCheck)
            }

            // @@protoc_insertion_point(class_scope:envoy.api.v2.core.HealthCheck.HttpHealthCheck)
            private static final HealthCheckOuterClass.HealthCheck.HttpHealthCheck DEFAULT_INSTANCE;

            static {
                DEFAULT_INSTANCE = new HealthCheckOuterClass.HealthCheck.HttpHealthCheck();
            }

            public static HealthCheckOuterClass.HealthCheck.HttpHealthCheck getDefaultInstance() {

                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.Parser<HttpHealthCheck>
                    PARSER = new com.google.protobuf.AbstractParser<HttpHealthCheck>() {
                @java.lang.Override
                public HttpHealthCheck parsePartialFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws com.google.protobuf.InvalidProtocolBufferException {

                    return new HttpHealthCheck(input, extensionRegistry);
                }
            };

            public static com.google.protobuf.Parser<HttpHealthCheck> parser() {

                return PARSER;
            }

            @java.lang.Override
            public com.google.protobuf.Parser<HttpHealthCheck> getParserForType() {

                return PARSER;
            }

            @java.lang.Override
            public HealthCheckOuterClass.HealthCheck.HttpHealthCheck getDefaultInstanceForType() {

                return DEFAULT_INSTANCE;
            }

        }

        public interface TcpHealthCheckOrBuilder extends
                // @@protoc_insertion_point(interface_extends:envoy.api.v2.core.HealthCheck.TcpHealthCheck)
                com.google.protobuf.MessageOrBuilder {

            /**
             * <pre>
             * Empty payloads imply a connect-only health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.Payload send = 1;</code>
             */
            boolean hasSend();

            /**
             * <pre>
             * Empty payloads imply a connect-only health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.Payload send = 1;</code>
             */
            HealthCheckOuterClass.HealthCheck.Payload getSend();

            /**
             * <pre>
             * Empty payloads imply a connect-only health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.Payload send = 1;</code>
             */
            HealthCheckOuterClass.HealthCheck.PayloadOrBuilder getSendOrBuilder();

            /**
             * <pre>
             * When checking the response, “fuzzy” matching is performed such that each
             * binary block must be found, and in the order specified, but not
             * necessarily contiguous.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.HealthCheck.Payload receive = 2;</code>
             */
            java.util.List<HealthCheckOuterClass.HealthCheck.Payload>
            getReceiveList();

            /**
             * <pre>
             * When checking the response, “fuzzy” matching is performed such that each
             * binary block must be found, and in the order specified, but not
             * necessarily contiguous.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.HealthCheck.Payload receive = 2;</code>
             */
            HealthCheckOuterClass.HealthCheck.Payload getReceive(int index);

            /**
             * <pre>
             * When checking the response, “fuzzy” matching is performed such that each
             * binary block must be found, and in the order specified, but not
             * necessarily contiguous.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.HealthCheck.Payload receive = 2;</code>
             */
            int getReceiveCount();

            /**
             * <pre>
             * When checking the response, “fuzzy” matching is performed such that each
             * binary block must be found, and in the order specified, but not
             * necessarily contiguous.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.HealthCheck.Payload receive = 2;</code>
             */
            java.util.List<? extends HealthCheckOuterClass.HealthCheck.PayloadOrBuilder>
            getReceiveOrBuilderList();

            /**
             * <pre>
             * When checking the response, “fuzzy” matching is performed such that each
             * binary block must be found, and in the order specified, but not
             * necessarily contiguous.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.HealthCheck.Payload receive = 2;</code>
             */
            HealthCheckOuterClass.HealthCheck.PayloadOrBuilder getReceiveOrBuilder(
                    int index);
        }

        /**
         * Protobuf type {@code envoy.api.v2.core.HealthCheck.TcpHealthCheck}
         */
        public static final class TcpHealthCheck extends
                com.google.protobuf.GeneratedMessageV3 implements
                // @@protoc_insertion_point(message_implements:envoy.api.v2.core.HealthCheck.TcpHealthCheck)
                TcpHealthCheckOrBuilder {

            private static final long serialVersionUID = 0L;

            // Use TcpHealthCheck.newBuilder() to construct.
            private TcpHealthCheck(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

                super(builder);
            }

            private TcpHealthCheck() {

                receive_ = java.util.Collections.emptyList();
            }

            @java.lang.Override
            public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {

                return this.unknownFields;
            }

            private TcpHealthCheck(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                        com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            case 10: {
                                HealthCheckOuterClass.HealthCheck.Payload.Builder subBuilder = null;
                                if (send_ != null) {
                                    subBuilder = send_.toBuilder();
                                }
                                send_ = input.readMessage(HealthCheckOuterClass.HealthCheck.Payload.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(send_);
                                    send_ = subBuilder.buildPartial();
                                }

                                break;
                            }
                            case 18: {
                                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                                    receive_ = new java.util.ArrayList<HealthCheckOuterClass.HealthCheck.Payload>();
                                    mutable_bitField0_ |= 0x00000002;
                                }
                                receive_.add(
                                        input.readMessage(HealthCheckOuterClass.HealthCheck.Payload.parser(), extensionRegistry));
                                break;
                            }
                            default: {
                                if (!parseUnknownFieldProto3(
                                        input, unknownFields, extensionRegistry, tag)) {
                                    done = true;
                                }
                                break;
                            }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(
                            e).setUnfinishedMessage(this);
                } finally {
                    if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                        receive_ = java.util.Collections.unmodifiableList(receive_);
                    }
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_TcpHealthCheck_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_TcpHealthCheck_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                HealthCheckOuterClass.HealthCheck.TcpHealthCheck.class, HealthCheckOuterClass.HealthCheck.TcpHealthCheck.Builder.class);
            }

            private int bitField0_;
            public static final int SEND_FIELD_NUMBER = 1;
            private HealthCheckOuterClass.HealthCheck.Payload send_;

            /**
             * <pre>
             * Empty payloads imply a connect-only health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.Payload send = 1;</code>
             */
            public boolean hasSend() {

                return send_ != null;
            }

            /**
             * <pre>
             * Empty payloads imply a connect-only health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.Payload send = 1;</code>
             */
            public HealthCheckOuterClass.HealthCheck.Payload getSend() {

                return send_ == null ? HealthCheckOuterClass.HealthCheck.Payload.getDefaultInstance() : send_;
            }

            /**
             * <pre>
             * Empty payloads imply a connect-only health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.Payload send = 1;</code>
             */
            public HealthCheckOuterClass.HealthCheck.PayloadOrBuilder getSendOrBuilder() {

                return getSend();
            }

            public static final int RECEIVE_FIELD_NUMBER = 2;
            private java.util.List<HealthCheckOuterClass.HealthCheck.Payload> receive_;

            /**
             * <pre>
             * When checking the response, “fuzzy” matching is performed such that each
             * binary block must be found, and in the order specified, but not
             * necessarily contiguous.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.HealthCheck.Payload receive = 2;</code>
             */
            public java.util.List<HealthCheckOuterClass.HealthCheck.Payload> getReceiveList() {

                return receive_;
            }

            /**
             * <pre>
             * When checking the response, “fuzzy” matching is performed such that each
             * binary block must be found, and in the order specified, but not
             * necessarily contiguous.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.HealthCheck.Payload receive = 2;</code>
             */
            public java.util.List<? extends HealthCheckOuterClass.HealthCheck.PayloadOrBuilder>
            getReceiveOrBuilderList() {

                return receive_;
            }

            /**
             * <pre>
             * When checking the response, “fuzzy” matching is performed such that each
             * binary block must be found, and in the order specified, but not
             * necessarily contiguous.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.HealthCheck.Payload receive = 2;</code>
             */
            public int getReceiveCount() {

                return receive_.size();
            }

            /**
             * <pre>
             * When checking the response, “fuzzy” matching is performed such that each
             * binary block must be found, and in the order specified, but not
             * necessarily contiguous.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.HealthCheck.Payload receive = 2;</code>
             */
            public HealthCheckOuterClass.HealthCheck.Payload getReceive(int index) {

                return receive_.get(index);
            }

            /**
             * <pre>
             * When checking the response, “fuzzy” matching is performed such that each
             * binary block must be found, and in the order specified, but not
             * necessarily contiguous.
             * </pre>
             *
             * <code>repeated .envoy.api.v2.core.HealthCheck.Payload receive = 2;</code>
             */
            public HealthCheckOuterClass.HealthCheck.PayloadOrBuilder getReceiveOrBuilder(
                    int index) {

                return receive_.get(index);
            }

            private byte memoizedIsInitialized = -1;

            @java.lang.Override
            public final boolean isInitialized() {

                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1) return true;
                if (isInitialized == 0) return false;

                memoizedIsInitialized = 1;
                return true;
            }

            @java.lang.Override
            public void writeTo(com.google.protobuf.CodedOutputStream output)
                    throws java.io.IOException {

                if (send_ != null) {
                    output.writeMessage(1, getSend());
                }
                for (int i = 0; i < receive_.size(); i++) {
                    output.writeMessage(2, receive_.get(i));
                }
                unknownFields.writeTo(output);
            }

            @java.lang.Override
            public int getSerializedSize() {

                int size = memoizedSize;
                if (size != -1) return size;

                size = 0;
                if (send_ != null) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeMessageSize(1, getSend());
                }
                for (int i = 0; i < receive_.size(); i++) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeMessageSize(2, receive_.get(i));
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @java.lang.Override
            public boolean equals(final java.lang.Object obj) {

                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof HealthCheckOuterClass.HealthCheck.TcpHealthCheck)) {
                    return super.equals(obj);
                }
                HealthCheckOuterClass.HealthCheck.TcpHealthCheck other = (HealthCheckOuterClass.HealthCheck.TcpHealthCheck) obj;

                boolean result = true;
                result = result && (hasSend() == other.hasSend());
                if (hasSend()) {
                    result = result && getSend()
                            .equals(other.getSend());
                }
                result = result && getReceiveList()
                        .equals(other.getReceiveList());
                result = result && unknownFields.equals(other.unknownFields);
                return result;
            }

            @java.lang.Override
            public int hashCode() {

                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                if (hasSend()) {
                    hash = (37 * hash) + SEND_FIELD_NUMBER;
                    hash = (53 * hash) + getSend().hashCode();
                }
                if (getReceiveCount() > 0) {
                    hash = (37 * hash) + RECEIVE_FIELD_NUMBER;
                    hash = (53 * hash) + getReceiveList().hashCode();
                }
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static HealthCheckOuterClass.HealthCheck.TcpHealthCheck parseFrom(
                    java.nio.ByteBuffer data)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data);
            }

            public static HealthCheckOuterClass.HealthCheck.TcpHealthCheck parseFrom(
                    java.nio.ByteBuffer data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static HealthCheckOuterClass.HealthCheck.TcpHealthCheck parseFrom(
                    com.google.protobuf.ByteString data)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data);
            }

            public static HealthCheckOuterClass.HealthCheck.TcpHealthCheck parseFrom(
                    com.google.protobuf.ByteString data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static HealthCheckOuterClass.HealthCheck.TcpHealthCheck parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data);
            }

            public static HealthCheckOuterClass.HealthCheck.TcpHealthCheck parseFrom(
                    byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static HealthCheckOuterClass.HealthCheck.TcpHealthCheck parseFrom(java.io.InputStream input)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }

            public static HealthCheckOuterClass.HealthCheck.TcpHealthCheck parseFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static HealthCheckOuterClass.HealthCheck.TcpHealthCheck parseDelimitedFrom(java.io.InputStream input)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input);
            }

            public static HealthCheckOuterClass.HealthCheck.TcpHealthCheck parseDelimitedFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static HealthCheckOuterClass.HealthCheck.TcpHealthCheck parseFrom(
                    com.google.protobuf.CodedInputStream input)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }

            public static HealthCheckOuterClass.HealthCheck.TcpHealthCheck parseFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            @java.lang.Override
            public Builder newBuilderForType() {

                return newBuilder();
            }

            public static Builder newBuilder() {

                return DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(HealthCheckOuterClass.HealthCheck.TcpHealthCheck prototype) {

                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            @java.lang.Override
            public Builder toBuilder() {

                return this == DEFAULT_INSTANCE
                        ? new Builder() : new Builder().mergeFrom(this);
            }

            @java.lang.Override
            protected Builder newBuilderForType(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * Protobuf type {@code envoy.api.v2.core.HealthCheck.TcpHealthCheck}
             */
            public static final class Builder extends
                    com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                    // @@protoc_insertion_point(builder_implements:envoy.api.v2.core.HealthCheck.TcpHealthCheck)
                    HealthCheckOuterClass.HealthCheck.TcpHealthCheckOrBuilder {

                public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {

                    return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_TcpHealthCheck_descriptor;
                }

                @java.lang.Override
                protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {

                    return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_TcpHealthCheck_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(
                                    HealthCheckOuterClass.HealthCheck.TcpHealthCheck.class, HealthCheckOuterClass.HealthCheck.TcpHealthCheck.Builder.class);
                }

                // Construct using envoy.api.v2.core.HealthCheckOuterClass.HealthCheck.TcpHealthCheck.newBuilder()
                private Builder() {

                    maybeForceBuilderInitialization();
                }

                private Builder(
                        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                    super(parent);
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {

                    if (com.google.protobuf.GeneratedMessageV3
                            .alwaysUseFieldBuilders) {
                        getReceiveFieldBuilder();
                    }
                }

                @java.lang.Override
                public Builder clear() {

                    super.clear();
                    if (sendBuilder_ == null) {
                        send_ = null;
                    } else {
                        send_ = null;
                        sendBuilder_ = null;
                    }
                    if (receiveBuilder_ == null) {
                        receive_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000002);
                    } else {
                        receiveBuilder_.clear();
                    }
                    return this;
                }

                @java.lang.Override
                public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {

                    return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_TcpHealthCheck_descriptor;
                }

                @java.lang.Override
                public HealthCheckOuterClass.HealthCheck.TcpHealthCheck getDefaultInstanceForType() {

                    return HealthCheckOuterClass.HealthCheck.TcpHealthCheck.getDefaultInstance();
                }

                @java.lang.Override
                public HealthCheckOuterClass.HealthCheck.TcpHealthCheck build() {

                    HealthCheckOuterClass.HealthCheck.TcpHealthCheck result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                @java.lang.Override
                public HealthCheckOuterClass.HealthCheck.TcpHealthCheck buildPartial() {

                    HealthCheckOuterClass.HealthCheck.TcpHealthCheck result = new HealthCheckOuterClass.HealthCheck.TcpHealthCheck(this);
                    int from_bitField0_ = bitField0_;
                    int to_bitField0_ = 0;
                    if (sendBuilder_ == null) {
                        result.send_ = send_;
                    } else {
                        result.send_ = sendBuilder_.build();
                    }
                    if (receiveBuilder_ == null) {
                        if (((bitField0_ & 0x00000002) == 0x00000002)) {
                            receive_ = java.util.Collections.unmodifiableList(receive_);
                            bitField0_ = (bitField0_ & ~0x00000002);
                        }
                        result.receive_ = receive_;
                    } else {
                        result.receive_ = receiveBuilder_.build();
                    }
                    result.bitField0_ = to_bitField0_;
                    onBuilt();
                    return result;
                }

                @java.lang.Override
                public Builder clone() {

                    return (Builder) super.clone();
                }

                @java.lang.Override
                public Builder setField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {

                    return (Builder) super.setField(field, value);
                }

                @java.lang.Override
                public Builder clearField(
                        com.google.protobuf.Descriptors.FieldDescriptor field) {

                    return (Builder) super.clearField(field);
                }

                @java.lang.Override
                public Builder clearOneof(
                        com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                    return (Builder) super.clearOneof(oneof);
                }

                @java.lang.Override
                public Builder setRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        int index, java.lang.Object value) {

                    return (Builder) super.setRepeatedField(field, index, value);
                }

                @java.lang.Override
                public Builder addRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {

                    return (Builder) super.addRepeatedField(field, value);
                }

                @java.lang.Override
                public Builder mergeFrom(com.google.protobuf.Message other) {

                    if (other instanceof HealthCheckOuterClass.HealthCheck.TcpHealthCheck) {
                        return mergeFrom((HealthCheckOuterClass.HealthCheck.TcpHealthCheck) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(HealthCheckOuterClass.HealthCheck.TcpHealthCheck other) {

                    if (other == HealthCheckOuterClass.HealthCheck.TcpHealthCheck.getDefaultInstance())
                        return this;
                    if (other.hasSend()) {
                        mergeSend(other.getSend());
                    }
                    if (receiveBuilder_ == null) {
                        if (!other.receive_.isEmpty()) {
                            if (receive_.isEmpty()) {
                                receive_ = other.receive_;
                                bitField0_ = (bitField0_ & ~0x00000002);
                            } else {
                                ensureReceiveIsMutable();
                                receive_.addAll(other.receive_);
                            }
                            onChanged();
                        }
                    } else {
                        if (!other.receive_.isEmpty()) {
                            if (receiveBuilder_.isEmpty()) {
                                receiveBuilder_.dispose();
                                receiveBuilder_ = null;
                                receive_ = other.receive_;
                                bitField0_ = (bitField0_ & ~0x00000002);
                                receiveBuilder_ =
                                        com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                                getReceiveFieldBuilder() : null;
                            } else {
                                receiveBuilder_.addAllMessages(other.receive_);
                            }
                        }
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                @java.lang.Override
                public final boolean isInitialized() {

                    return true;
                }

                @java.lang.Override
                public Builder mergeFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws java.io.IOException {

                    HealthCheckOuterClass.HealthCheck.TcpHealthCheck parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (HealthCheckOuterClass.HealthCheck.TcpHealthCheck) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private int bitField0_;

                private HealthCheckOuterClass.HealthCheck.Payload send_ = null;
                private com.google.protobuf.SingleFieldBuilderV3<
                        HealthCheckOuterClass.HealthCheck.Payload, HealthCheckOuterClass.HealthCheck.Payload.Builder, HealthCheckOuterClass.HealthCheck.PayloadOrBuilder> sendBuilder_;

                /**
                 * <pre>
                 * Empty payloads imply a connect-only health check.
                 * </pre>
                 *
                 * <code>.envoy.api.v2.core.HealthCheck.Payload send = 1;</code>
                 */
                public boolean hasSend() {

                    return sendBuilder_ != null || send_ != null;
                }

                /**
                 * <pre>
                 * Empty payloads imply a connect-only health check.
                 * </pre>
                 *
                 * <code>.envoy.api.v2.core.HealthCheck.Payload send = 1;</code>
                 */
                public HealthCheckOuterClass.HealthCheck.Payload getSend() {

                    if (sendBuilder_ == null) {
                        return send_ == null ? HealthCheckOuterClass.HealthCheck.Payload.getDefaultInstance() : send_;
                    } else {
                        return sendBuilder_.getMessage();
                    }
                }

                /**
                 * <pre>
                 * Empty payloads imply a connect-only health check.
                 * </pre>
                 *
                 * <code>.envoy.api.v2.core.HealthCheck.Payload send = 1;</code>
                 */
                public Builder setSend(HealthCheckOuterClass.HealthCheck.Payload value) {

                    if (sendBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        send_ = value;
                        onChanged();
                    } else {
                        sendBuilder_.setMessage(value);
                    }

                    return this;
                }

                /**
                 * <pre>
                 * Empty payloads imply a connect-only health check.
                 * </pre>
                 *
                 * <code>.envoy.api.v2.core.HealthCheck.Payload send = 1;</code>
                 */
                public Builder setSend(
                        HealthCheckOuterClass.HealthCheck.Payload.Builder builderForValue) {

                    if (sendBuilder_ == null) {
                        send_ = builderForValue.build();
                        onChanged();
                    } else {
                        sendBuilder_.setMessage(builderForValue.build());
                    }

                    return this;
                }

                /**
                 * <pre>
                 * Empty payloads imply a connect-only health check.
                 * </pre>
                 *
                 * <code>.envoy.api.v2.core.HealthCheck.Payload send = 1;</code>
                 */
                public Builder mergeSend(HealthCheckOuterClass.HealthCheck.Payload value) {

                    if (sendBuilder_ == null) {
                        if (send_ != null) {
                            send_ =
                                    HealthCheckOuterClass.HealthCheck.Payload.newBuilder(send_).mergeFrom(value).buildPartial();
                        } else {
                            send_ = value;
                        }
                        onChanged();
                    } else {
                        sendBuilder_.mergeFrom(value);
                    }

                    return this;
                }

                /**
                 * <pre>
                 * Empty payloads imply a connect-only health check.
                 * </pre>
                 *
                 * <code>.envoy.api.v2.core.HealthCheck.Payload send = 1;</code>
                 */
                public Builder clearSend() {

                    if (sendBuilder_ == null) {
                        send_ = null;
                        onChanged();
                    } else {
                        send_ = null;
                        sendBuilder_ = null;
                    }

                    return this;
                }

                /**
                 * <pre>
                 * Empty payloads imply a connect-only health check.
                 * </pre>
                 *
                 * <code>.envoy.api.v2.core.HealthCheck.Payload send = 1;</code>
                 */
                public HealthCheckOuterClass.HealthCheck.Payload.Builder getSendBuilder() {

                    onChanged();
                    return getSendFieldBuilder().getBuilder();
                }

                /**
                 * <pre>
                 * Empty payloads imply a connect-only health check.
                 * </pre>
                 *
                 * <code>.envoy.api.v2.core.HealthCheck.Payload send = 1;</code>
                 */
                public HealthCheckOuterClass.HealthCheck.PayloadOrBuilder getSendOrBuilder() {

                    if (sendBuilder_ != null) {
                        return sendBuilder_.getMessageOrBuilder();
                    } else {
                        return send_ == null ?
                                HealthCheckOuterClass.HealthCheck.Payload.getDefaultInstance() : send_;
                    }
                }

                /**
                 * <pre>
                 * Empty payloads imply a connect-only health check.
                 * </pre>
                 *
                 * <code>.envoy.api.v2.core.HealthCheck.Payload send = 1;</code>
                 */
                private com.google.protobuf.SingleFieldBuilderV3<
                        HealthCheckOuterClass.HealthCheck.Payload, HealthCheckOuterClass.HealthCheck.Payload.Builder, HealthCheckOuterClass.HealthCheck.PayloadOrBuilder>
                getSendFieldBuilder() {

                    if (sendBuilder_ == null) {
                        sendBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                                HealthCheckOuterClass.HealthCheck.Payload, HealthCheckOuterClass.HealthCheck.Payload.Builder, HealthCheckOuterClass.HealthCheck.PayloadOrBuilder>(
                                getSend(),
                                getParentForChildren(),
                                isClean());
                        send_ = null;
                    }
                    return sendBuilder_;
                }

                private java.util.List<HealthCheckOuterClass.HealthCheck.Payload> receive_ =
                        java.util.Collections.emptyList();

                private void ensureReceiveIsMutable() {

                    if (!((bitField0_ & 0x00000002) == 0x00000002)) {
                        receive_ = new java.util.ArrayList<HealthCheckOuterClass.HealthCheck.Payload>(receive_);
                        bitField0_ |= 0x00000002;
                    }
                }

                private com.google.protobuf.RepeatedFieldBuilderV3<
                        HealthCheckOuterClass.HealthCheck.Payload, HealthCheckOuterClass.HealthCheck.Payload.Builder, HealthCheckOuterClass.HealthCheck.PayloadOrBuilder> receiveBuilder_;

                /**
                 * <pre>
                 * When checking the response, “fuzzy” matching is performed such that each
                 * binary block must be found, and in the order specified, but not
                 * necessarily contiguous.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HealthCheck.Payload receive = 2;</code>
                 */
                public java.util.List<HealthCheckOuterClass.HealthCheck.Payload> getReceiveList() {

                    if (receiveBuilder_ == null) {
                        return java.util.Collections.unmodifiableList(receive_);
                    } else {
                        return receiveBuilder_.getMessageList();
                    }
                }

                /**
                 * <pre>
                 * When checking the response, “fuzzy” matching is performed such that each
                 * binary block must be found, and in the order specified, but not
                 * necessarily contiguous.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HealthCheck.Payload receive = 2;</code>
                 */
                public int getReceiveCount() {

                    if (receiveBuilder_ == null) {
                        return receive_.size();
                    } else {
                        return receiveBuilder_.getCount();
                    }
                }

                /**
                 * <pre>
                 * When checking the response, “fuzzy” matching is performed such that each
                 * binary block must be found, and in the order specified, but not
                 * necessarily contiguous.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HealthCheck.Payload receive = 2;</code>
                 */
                public HealthCheckOuterClass.HealthCheck.Payload getReceive(int index) {

                    if (receiveBuilder_ == null) {
                        return receive_.get(index);
                    } else {
                        return receiveBuilder_.getMessage(index);
                    }
                }

                /**
                 * <pre>
                 * When checking the response, “fuzzy” matching is performed such that each
                 * binary block must be found, and in the order specified, but not
                 * necessarily contiguous.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HealthCheck.Payload receive = 2;</code>
                 */
                public Builder setReceive(
                        int index, HealthCheckOuterClass.HealthCheck.Payload value) {

                    if (receiveBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureReceiveIsMutable();
                        receive_.set(index, value);
                        onChanged();
                    } else {
                        receiveBuilder_.setMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <pre>
                 * When checking the response, “fuzzy” matching is performed such that each
                 * binary block must be found, and in the order specified, but not
                 * necessarily contiguous.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HealthCheck.Payload receive = 2;</code>
                 */
                public Builder setReceive(
                        int index, HealthCheckOuterClass.HealthCheck.Payload.Builder builderForValue) {

                    if (receiveBuilder_ == null) {
                        ensureReceiveIsMutable();
                        receive_.set(index, builderForValue.build());
                        onChanged();
                    } else {
                        receiveBuilder_.setMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <pre>
                 * When checking the response, “fuzzy” matching is performed such that each
                 * binary block must be found, and in the order specified, but not
                 * necessarily contiguous.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HealthCheck.Payload receive = 2;</code>
                 */
                public Builder addReceive(HealthCheckOuterClass.HealthCheck.Payload value) {

                    if (receiveBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureReceiveIsMutable();
                        receive_.add(value);
                        onChanged();
                    } else {
                        receiveBuilder_.addMessage(value);
                    }
                    return this;
                }

                /**
                 * <pre>
                 * When checking the response, “fuzzy” matching is performed such that each
                 * binary block must be found, and in the order specified, but not
                 * necessarily contiguous.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HealthCheck.Payload receive = 2;</code>
                 */
                public Builder addReceive(
                        int index, HealthCheckOuterClass.HealthCheck.Payload value) {

                    if (receiveBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureReceiveIsMutable();
                        receive_.add(index, value);
                        onChanged();
                    } else {
                        receiveBuilder_.addMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <pre>
                 * When checking the response, “fuzzy” matching is performed such that each
                 * binary block must be found, and in the order specified, but not
                 * necessarily contiguous.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HealthCheck.Payload receive = 2;</code>
                 */
                public Builder addReceive(
                        HealthCheckOuterClass.HealthCheck.Payload.Builder builderForValue) {

                    if (receiveBuilder_ == null) {
                        ensureReceiveIsMutable();
                        receive_.add(builderForValue.build());
                        onChanged();
                    } else {
                        receiveBuilder_.addMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <pre>
                 * When checking the response, “fuzzy” matching is performed such that each
                 * binary block must be found, and in the order specified, but not
                 * necessarily contiguous.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HealthCheck.Payload receive = 2;</code>
                 */
                public Builder addReceive(
                        int index, HealthCheckOuterClass.HealthCheck.Payload.Builder builderForValue) {

                    if (receiveBuilder_ == null) {
                        ensureReceiveIsMutable();
                        receive_.add(index, builderForValue.build());
                        onChanged();
                    } else {
                        receiveBuilder_.addMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <pre>
                 * When checking the response, “fuzzy” matching is performed such that each
                 * binary block must be found, and in the order specified, but not
                 * necessarily contiguous.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HealthCheck.Payload receive = 2;</code>
                 */
                public Builder addAllReceive(
                        java.lang.Iterable<? extends HealthCheckOuterClass.HealthCheck.Payload> values) {

                    if (receiveBuilder_ == null) {
                        ensureReceiveIsMutable();
                        com.google.protobuf.AbstractMessageLite.Builder.addAll(
                                values, receive_);
                        onChanged();
                    } else {
                        receiveBuilder_.addAllMessages(values);
                    }
                    return this;
                }

                /**
                 * <pre>
                 * When checking the response, “fuzzy” matching is performed such that each
                 * binary block must be found, and in the order specified, but not
                 * necessarily contiguous.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HealthCheck.Payload receive = 2;</code>
                 */
                public Builder clearReceive() {

                    if (receiveBuilder_ == null) {
                        receive_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000002);
                        onChanged();
                    } else {
                        receiveBuilder_.clear();
                    }
                    return this;
                }

                /**
                 * <pre>
                 * When checking the response, “fuzzy” matching is performed such that each
                 * binary block must be found, and in the order specified, but not
                 * necessarily contiguous.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HealthCheck.Payload receive = 2;</code>
                 */
                public Builder removeReceive(int index) {

                    if (receiveBuilder_ == null) {
                        ensureReceiveIsMutable();
                        receive_.remove(index);
                        onChanged();
                    } else {
                        receiveBuilder_.remove(index);
                    }
                    return this;
                }

                /**
                 * <pre>
                 * When checking the response, “fuzzy” matching is performed such that each
                 * binary block must be found, and in the order specified, but not
                 * necessarily contiguous.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HealthCheck.Payload receive = 2;</code>
                 */
                public HealthCheckOuterClass.HealthCheck.Payload.Builder getReceiveBuilder(
                        int index) {

                    return getReceiveFieldBuilder().getBuilder(index);
                }

                /**
                 * <pre>
                 * When checking the response, “fuzzy” matching is performed such that each
                 * binary block must be found, and in the order specified, but not
                 * necessarily contiguous.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HealthCheck.Payload receive = 2;</code>
                 */
                public HealthCheckOuterClass.HealthCheck.PayloadOrBuilder getReceiveOrBuilder(
                        int index) {

                    if (receiveBuilder_ == null) {
                        return receive_.get(index);
                    } else {
                        return receiveBuilder_.getMessageOrBuilder(index);
                    }
                }

                /**
                 * <pre>
                 * When checking the response, “fuzzy” matching is performed such that each
                 * binary block must be found, and in the order specified, but not
                 * necessarily contiguous.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HealthCheck.Payload receive = 2;</code>
                 */
                public java.util.List<? extends HealthCheckOuterClass.HealthCheck.PayloadOrBuilder>
                getReceiveOrBuilderList() {

                    if (receiveBuilder_ != null) {
                        return receiveBuilder_.getMessageOrBuilderList();
                    } else {
                        return java.util.Collections.unmodifiableList(receive_);
                    }
                }

                /**
                 * <pre>
                 * When checking the response, “fuzzy” matching is performed such that each
                 * binary block must be found, and in the order specified, but not
                 * necessarily contiguous.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HealthCheck.Payload receive = 2;</code>
                 */
                public HealthCheckOuterClass.HealthCheck.Payload.Builder addReceiveBuilder() {

                    return getReceiveFieldBuilder().addBuilder(
                            HealthCheckOuterClass.HealthCheck.Payload.getDefaultInstance());
                }

                /**
                 * <pre>
                 * When checking the response, “fuzzy” matching is performed such that each
                 * binary block must be found, and in the order specified, but not
                 * necessarily contiguous.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HealthCheck.Payload receive = 2;</code>
                 */
                public HealthCheckOuterClass.HealthCheck.Payload.Builder addReceiveBuilder(
                        int index) {

                    return getReceiveFieldBuilder().addBuilder(
                            index, HealthCheckOuterClass.HealthCheck.Payload.getDefaultInstance());
                }

                /**
                 * <pre>
                 * When checking the response, “fuzzy” matching is performed such that each
                 * binary block must be found, and in the order specified, but not
                 * necessarily contiguous.
                 * </pre>
                 *
                 * <code>repeated .envoy.api.v2.core.HealthCheck.Payload receive = 2;</code>
                 */
                public java.util.List<HealthCheckOuterClass.HealthCheck.Payload.Builder>
                getReceiveBuilderList() {

                    return getReceiveFieldBuilder().getBuilderList();
                }

                private com.google.protobuf.RepeatedFieldBuilderV3<
                        HealthCheckOuterClass.HealthCheck.Payload, HealthCheckOuterClass.HealthCheck.Payload.Builder, HealthCheckOuterClass.HealthCheck.PayloadOrBuilder>
                getReceiveFieldBuilder() {

                    if (receiveBuilder_ == null) {
                        receiveBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                                HealthCheckOuterClass.HealthCheck.Payload, HealthCheckOuterClass.HealthCheck.Payload.Builder, HealthCheckOuterClass.HealthCheck.PayloadOrBuilder>(
                                receive_,
                                ((bitField0_ & 0x00000002) == 0x00000002),
                                getParentForChildren(),
                                isClean());
                        receive_ = null;
                    }
                    return receiveBuilder_;
                }

                @java.lang.Override
                public final Builder setUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {

                    return super.setUnknownFieldsProto3(unknownFields);
                }

                @java.lang.Override
                public final Builder mergeUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {

                    return super.mergeUnknownFields(unknownFields);
                }

                // @@protoc_insertion_point(builder_scope:envoy.api.v2.core.HealthCheck.TcpHealthCheck)
            }

            // @@protoc_insertion_point(class_scope:envoy.api.v2.core.HealthCheck.TcpHealthCheck)
            private static final HealthCheckOuterClass.HealthCheck.TcpHealthCheck DEFAULT_INSTANCE;

            static {
                DEFAULT_INSTANCE = new HealthCheckOuterClass.HealthCheck.TcpHealthCheck();
            }

            public static HealthCheckOuterClass.HealthCheck.TcpHealthCheck getDefaultInstance() {

                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.Parser<TcpHealthCheck>
                    PARSER = new com.google.protobuf.AbstractParser<TcpHealthCheck>() {
                @java.lang.Override
                public TcpHealthCheck parsePartialFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws com.google.protobuf.InvalidProtocolBufferException {

                    return new TcpHealthCheck(input, extensionRegistry);
                }
            };

            public static com.google.protobuf.Parser<TcpHealthCheck> parser() {

                return PARSER;
            }

            @java.lang.Override
            public com.google.protobuf.Parser<TcpHealthCheck> getParserForType() {

                return PARSER;
            }

            @java.lang.Override
            public HealthCheckOuterClass.HealthCheck.TcpHealthCheck getDefaultInstanceForType() {

                return DEFAULT_INSTANCE;
            }

        }

        public interface RedisHealthCheckOrBuilder extends
                // @@protoc_insertion_point(interface_extends:envoy.api.v2.core.HealthCheck.RedisHealthCheck)
                com.google.protobuf.MessageOrBuilder {

            /**
             * <pre>
             * If set, optionally perform ``EXISTS &lt;key&gt;`` instead of ``PING``. A return value
             * from Redis of 0 (does not exist) is considered a passing healthcheck. A return value other
             * than 0 is considered a failure. This allows the user to mark a Redis instance for maintenance
             * by setting the specified key to any value and waiting for traffic to drain.
             * </pre>
             *
             * <code>string key = 1;</code>
             */
            java.lang.String getKey();

            /**
             * <pre>
             * If set, optionally perform ``EXISTS &lt;key&gt;`` instead of ``PING``. A return value
             * from Redis of 0 (does not exist) is considered a passing healthcheck. A return value other
             * than 0 is considered a failure. This allows the user to mark a Redis instance for maintenance
             * by setting the specified key to any value and waiting for traffic to drain.
             * </pre>
             *
             * <code>string key = 1;</code>
             */
            com.google.protobuf.ByteString
            getKeyBytes();
        }

        /**
         * Protobuf type {@code envoy.api.v2.core.HealthCheck.RedisHealthCheck}
         */
        public static final class RedisHealthCheck extends
                com.google.protobuf.GeneratedMessageV3 implements
                // @@protoc_insertion_point(message_implements:envoy.api.v2.core.HealthCheck.RedisHealthCheck)
                RedisHealthCheckOrBuilder {

            private static final long serialVersionUID = 0L;

            // Use RedisHealthCheck.newBuilder() to construct.
            private RedisHealthCheck(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

                super(builder);
            }

            private RedisHealthCheck() {

                key_ = "";
            }

            @java.lang.Override
            public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {

                return this.unknownFields;
            }

            private RedisHealthCheck(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                        com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            case 10: {
                                java.lang.String s = input.readStringRequireUtf8();

                                key_ = s;
                                break;
                            }
                            default: {
                                if (!parseUnknownFieldProto3(
                                        input, unknownFields, extensionRegistry, tag)) {
                                    done = true;
                                }
                                break;
                            }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(
                            e).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_RedisHealthCheck_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_RedisHealthCheck_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                HealthCheckOuterClass.HealthCheck.RedisHealthCheck.class, HealthCheckOuterClass.HealthCheck.RedisHealthCheck.Builder.class);
            }

            public static final int KEY_FIELD_NUMBER = 1;
            private volatile java.lang.Object key_;

            /**
             * <pre>
             * If set, optionally perform ``EXISTS &lt;key&gt;`` instead of ``PING``. A return value
             * from Redis of 0 (does not exist) is considered a passing healthcheck. A return value other
             * than 0 is considered a failure. This allows the user to mark a Redis instance for maintenance
             * by setting the specified key to any value and waiting for traffic to drain.
             * </pre>
             *
             * <code>string key = 1;</code>
             */
            public java.lang.String getKey() {

                java.lang.Object ref = key_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    key_ = s;
                    return s;
                }
            }

            /**
             * <pre>
             * If set, optionally perform ``EXISTS &lt;key&gt;`` instead of ``PING``. A return value
             * from Redis of 0 (does not exist) is considered a passing healthcheck. A return value other
             * than 0 is considered a failure. This allows the user to mark a Redis instance for maintenance
             * by setting the specified key to any value and waiting for traffic to drain.
             * </pre>
             *
             * <code>string key = 1;</code>
             */
            public com.google.protobuf.ByteString
            getKeyBytes() {

                java.lang.Object ref = key_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    key_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            private byte memoizedIsInitialized = -1;

            @java.lang.Override
            public final boolean isInitialized() {

                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1) return true;
                if (isInitialized == 0) return false;

                memoizedIsInitialized = 1;
                return true;
            }

            @java.lang.Override
            public void writeTo(com.google.protobuf.CodedOutputStream output)
                    throws java.io.IOException {

                if (!getKeyBytes().isEmpty()) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
                }
                unknownFields.writeTo(output);
            }

            @java.lang.Override
            public int getSerializedSize() {

                int size = memoizedSize;
                if (size != -1) return size;

                size = 0;
                if (!getKeyBytes().isEmpty()) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @java.lang.Override
            public boolean equals(final java.lang.Object obj) {

                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof HealthCheckOuterClass.HealthCheck.RedisHealthCheck)) {
                    return super.equals(obj);
                }
                HealthCheckOuterClass.HealthCheck.RedisHealthCheck other = (HealthCheckOuterClass.HealthCheck.RedisHealthCheck) obj;

                boolean result = true;
                result = result && getKey()
                        .equals(other.getKey());
                result = result && unknownFields.equals(other.unknownFields);
                return result;
            }

            @java.lang.Override
            public int hashCode() {

                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + KEY_FIELD_NUMBER;
                hash = (53 * hash) + getKey().hashCode();
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static HealthCheckOuterClass.HealthCheck.RedisHealthCheck parseFrom(
                    java.nio.ByteBuffer data)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data);
            }

            public static HealthCheckOuterClass.HealthCheck.RedisHealthCheck parseFrom(
                    java.nio.ByteBuffer data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static HealthCheckOuterClass.HealthCheck.RedisHealthCheck parseFrom(
                    com.google.protobuf.ByteString data)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data);
            }

            public static HealthCheckOuterClass.HealthCheck.RedisHealthCheck parseFrom(
                    com.google.protobuf.ByteString data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static HealthCheckOuterClass.HealthCheck.RedisHealthCheck parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data);
            }

            public static HealthCheckOuterClass.HealthCheck.RedisHealthCheck parseFrom(
                    byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static HealthCheckOuterClass.HealthCheck.RedisHealthCheck parseFrom(java.io.InputStream input)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }

            public static HealthCheckOuterClass.HealthCheck.RedisHealthCheck parseFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static HealthCheckOuterClass.HealthCheck.RedisHealthCheck parseDelimitedFrom(java.io.InputStream input)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input);
            }

            public static HealthCheckOuterClass.HealthCheck.RedisHealthCheck parseDelimitedFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static HealthCheckOuterClass.HealthCheck.RedisHealthCheck parseFrom(
                    com.google.protobuf.CodedInputStream input)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }

            public static HealthCheckOuterClass.HealthCheck.RedisHealthCheck parseFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            @java.lang.Override
            public Builder newBuilderForType() {

                return newBuilder();
            }

            public static Builder newBuilder() {

                return DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(HealthCheckOuterClass.HealthCheck.RedisHealthCheck prototype) {

                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            @java.lang.Override
            public Builder toBuilder() {

                return this == DEFAULT_INSTANCE
                        ? new Builder() : new Builder().mergeFrom(this);
            }

            @java.lang.Override
            protected Builder newBuilderForType(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * Protobuf type {@code envoy.api.v2.core.HealthCheck.RedisHealthCheck}
             */
            public static final class Builder extends
                    com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                    // @@protoc_insertion_point(builder_implements:envoy.api.v2.core.HealthCheck.RedisHealthCheck)
                    HealthCheckOuterClass.HealthCheck.RedisHealthCheckOrBuilder {

                public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {

                    return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_RedisHealthCheck_descriptor;
                }

                @java.lang.Override
                protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {

                    return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_RedisHealthCheck_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(
                                    HealthCheckOuterClass.HealthCheck.RedisHealthCheck.class, HealthCheckOuterClass.HealthCheck.RedisHealthCheck.Builder.class);
                }

                // Construct using envoy.api.v2.core.HealthCheckOuterClass.HealthCheck.RedisHealthCheck.newBuilder()
                private Builder() {

                    maybeForceBuilderInitialization();
                }

                private Builder(
                        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                    super(parent);
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {

                    if (com.google.protobuf.GeneratedMessageV3
                            .alwaysUseFieldBuilders) {
                    }
                }

                @java.lang.Override
                public Builder clear() {

                    super.clear();
                    key_ = "";

                    return this;
                }

                @java.lang.Override
                public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {

                    return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_RedisHealthCheck_descriptor;
                }

                @java.lang.Override
                public HealthCheckOuterClass.HealthCheck.RedisHealthCheck getDefaultInstanceForType() {

                    return HealthCheckOuterClass.HealthCheck.RedisHealthCheck.getDefaultInstance();
                }

                @java.lang.Override
                public HealthCheckOuterClass.HealthCheck.RedisHealthCheck build() {

                    HealthCheckOuterClass.HealthCheck.RedisHealthCheck result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                @java.lang.Override
                public HealthCheckOuterClass.HealthCheck.RedisHealthCheck buildPartial() {

                    HealthCheckOuterClass.HealthCheck.RedisHealthCheck result = new HealthCheckOuterClass.HealthCheck.RedisHealthCheck(this);
                    result.key_ = key_;
                    onBuilt();
                    return result;
                }

                @java.lang.Override
                public Builder clone() {

                    return (Builder) super.clone();
                }

                @java.lang.Override
                public Builder setField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {

                    return (Builder) super.setField(field, value);
                }

                @java.lang.Override
                public Builder clearField(
                        com.google.protobuf.Descriptors.FieldDescriptor field) {

                    return (Builder) super.clearField(field);
                }

                @java.lang.Override
                public Builder clearOneof(
                        com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                    return (Builder) super.clearOneof(oneof);
                }

                @java.lang.Override
                public Builder setRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        int index, java.lang.Object value) {

                    return (Builder) super.setRepeatedField(field, index, value);
                }

                @java.lang.Override
                public Builder addRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {

                    return (Builder) super.addRepeatedField(field, value);
                }

                @java.lang.Override
                public Builder mergeFrom(com.google.protobuf.Message other) {

                    if (other instanceof HealthCheckOuterClass.HealthCheck.RedisHealthCheck) {
                        return mergeFrom((HealthCheckOuterClass.HealthCheck.RedisHealthCheck) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(HealthCheckOuterClass.HealthCheck.RedisHealthCheck other) {

                    if (other == HealthCheckOuterClass.HealthCheck.RedisHealthCheck.getDefaultInstance())
                        return this;
                    if (!other.getKey().isEmpty()) {
                        key_ = other.key_;
                        onChanged();
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                @java.lang.Override
                public final boolean isInitialized() {

                    return true;
                }

                @java.lang.Override
                public Builder mergeFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws java.io.IOException {

                    HealthCheckOuterClass.HealthCheck.RedisHealthCheck parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (HealthCheckOuterClass.HealthCheck.RedisHealthCheck) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private java.lang.Object key_ = "";

                /**
                 * <pre>
                 * If set, optionally perform ``EXISTS &lt;key&gt;`` instead of ``PING``. A return value
                 * from Redis of 0 (does not exist) is considered a passing healthcheck. A return value other
                 * than 0 is considered a failure. This allows the user to mark a Redis instance for maintenance
                 * by setting the specified key to any value and waiting for traffic to drain.
                 * </pre>
                 *
                 * <code>string key = 1;</code>
                 */
                public java.lang.String getKey() {

                    java.lang.Object ref = key_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs =
                                (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        key_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <pre>
                 * If set, optionally perform ``EXISTS &lt;key&gt;`` instead of ``PING``. A return value
                 * from Redis of 0 (does not exist) is considered a passing healthcheck. A return value other
                 * than 0 is considered a failure. This allows the user to mark a Redis instance for maintenance
                 * by setting the specified key to any value and waiting for traffic to drain.
                 * </pre>
                 *
                 * <code>string key = 1;</code>
                 */
                public com.google.protobuf.ByteString
                getKeyBytes() {

                    java.lang.Object ref = key_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b =
                                com.google.protobuf.ByteString.copyFromUtf8(
                                        (java.lang.String) ref);
                        key_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <pre>
                 * If set, optionally perform ``EXISTS &lt;key&gt;`` instead of ``PING``. A return value
                 * from Redis of 0 (does not exist) is considered a passing healthcheck. A return value other
                 * than 0 is considered a failure. This allows the user to mark a Redis instance for maintenance
                 * by setting the specified key to any value and waiting for traffic to drain.
                 * </pre>
                 *
                 * <code>string key = 1;</code>
                 */
                public Builder setKey(
                        java.lang.String value) {

                    if (value == null) {
                        throw new NullPointerException();
                    }

                    key_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * If set, optionally perform ``EXISTS &lt;key&gt;`` instead of ``PING``. A return value
                 * from Redis of 0 (does not exist) is considered a passing healthcheck. A return value other
                 * than 0 is considered a failure. This allows the user to mark a Redis instance for maintenance
                 * by setting the specified key to any value and waiting for traffic to drain.
                 * </pre>
                 *
                 * <code>string key = 1;</code>
                 */
                public Builder clearKey() {

                    key_ = getDefaultInstance().getKey();
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * If set, optionally perform ``EXISTS &lt;key&gt;`` instead of ``PING``. A return value
                 * from Redis of 0 (does not exist) is considered a passing healthcheck. A return value other
                 * than 0 is considered a failure. This allows the user to mark a Redis instance for maintenance
                 * by setting the specified key to any value and waiting for traffic to drain.
                 * </pre>
                 *
                 * <code>string key = 1;</code>
                 */
                public Builder setKeyBytes(
                        com.google.protobuf.ByteString value) {

                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);

                    key_ = value;
                    onChanged();
                    return this;
                }

                @java.lang.Override
                public final Builder setUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {

                    return super.setUnknownFieldsProto3(unknownFields);
                }

                @java.lang.Override
                public final Builder mergeUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {

                    return super.mergeUnknownFields(unknownFields);
                }

                // @@protoc_insertion_point(builder_scope:envoy.api.v2.core.HealthCheck.RedisHealthCheck)
            }

            // @@protoc_insertion_point(class_scope:envoy.api.v2.core.HealthCheck.RedisHealthCheck)
            private static final HealthCheckOuterClass.HealthCheck.RedisHealthCheck DEFAULT_INSTANCE;

            static {
                DEFAULT_INSTANCE = new HealthCheckOuterClass.HealthCheck.RedisHealthCheck();
            }

            public static HealthCheckOuterClass.HealthCheck.RedisHealthCheck getDefaultInstance() {

                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.Parser<RedisHealthCheck>
                    PARSER = new com.google.protobuf.AbstractParser<RedisHealthCheck>() {
                @java.lang.Override
                public RedisHealthCheck parsePartialFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws com.google.protobuf.InvalidProtocolBufferException {

                    return new RedisHealthCheck(input, extensionRegistry);
                }
            };

            public static com.google.protobuf.Parser<RedisHealthCheck> parser() {

                return PARSER;
            }

            @java.lang.Override
            public com.google.protobuf.Parser<RedisHealthCheck> getParserForType() {

                return PARSER;
            }

            @java.lang.Override
            public HealthCheckOuterClass.HealthCheck.RedisHealthCheck getDefaultInstanceForType() {

                return DEFAULT_INSTANCE;
            }

        }

        public interface GrpcHealthCheckOrBuilder extends
                // @@protoc_insertion_point(interface_extends:envoy.api.v2.core.HealthCheck.GrpcHealthCheck)
                com.google.protobuf.MessageOrBuilder {

            /**
             * <pre>
             * An optional service name parameter which will be sent to gRPC service in
             * `grpc.health.v1.HealthCheckRequest
             * &lt;https://github.com/grpc/grpc/blob/master/src/proto/grpc/health/v1/health.proto#L20&gt;`_.
             * message. See `gRPC health-checking overview
             * &lt;https://github.com/grpc/grpc/blob/master/doc/health-checking.md&gt;`_ for more information.
             * </pre>
             *
             * <code>string service_name = 1;</code>
             */
            java.lang.String getServiceName();

            /**
             * <pre>
             * An optional service name parameter which will be sent to gRPC service in
             * `grpc.health.v1.HealthCheckRequest
             * &lt;https://github.com/grpc/grpc/blob/master/src/proto/grpc/health/v1/health.proto#L20&gt;`_.
             * message. See `gRPC health-checking overview
             * &lt;https://github.com/grpc/grpc/blob/master/doc/health-checking.md&gt;`_ for more information.
             * </pre>
             *
             * <code>string service_name = 1;</code>
             */
            com.google.protobuf.ByteString
            getServiceNameBytes();
        }

        /**
         * <pre>
         * `grpc.health.v1.Health
         * &lt;https://github.com/grpc/grpc/blob/master/src/proto/grpc/health/v1/health.proto&gt;`_-based
         * healthcheck. See `gRPC doc &lt;https://github.com/grpc/grpc/blob/master/doc/health-checking.md&gt;`_
         * for details.
         * </pre>
         * <p>
         * Protobuf type {@code envoy.api.v2.core.HealthCheck.GrpcHealthCheck}
         */
        public static final class GrpcHealthCheck extends
                com.google.protobuf.GeneratedMessageV3 implements
                // @@protoc_insertion_point(message_implements:envoy.api.v2.core.HealthCheck.GrpcHealthCheck)
                GrpcHealthCheckOrBuilder {

            private static final long serialVersionUID = 0L;

            // Use GrpcHealthCheck.newBuilder() to construct.
            private GrpcHealthCheck(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

                super(builder);
            }

            private GrpcHealthCheck() {

                serviceName_ = "";
            }

            @java.lang.Override
            public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {

                return this.unknownFields;
            }

            private GrpcHealthCheck(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                        com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            case 10: {
                                java.lang.String s = input.readStringRequireUtf8();

                                serviceName_ = s;
                                break;
                            }
                            default: {
                                if (!parseUnknownFieldProto3(
                                        input, unknownFields, extensionRegistry, tag)) {
                                    done = true;
                                }
                                break;
                            }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(
                            e).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_GrpcHealthCheck_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_GrpcHealthCheck_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                HealthCheckOuterClass.HealthCheck.GrpcHealthCheck.class, HealthCheckOuterClass.HealthCheck.GrpcHealthCheck.Builder.class);
            }

            public static final int SERVICE_NAME_FIELD_NUMBER = 1;
            private volatile java.lang.Object serviceName_;

            /**
             * <pre>
             * An optional service name parameter which will be sent to gRPC service in
             * `grpc.health.v1.HealthCheckRequest
             * &lt;https://github.com/grpc/grpc/blob/master/src/proto/grpc/health/v1/health.proto#L20&gt;`_.
             * message. See `gRPC health-checking overview
             * &lt;https://github.com/grpc/grpc/blob/master/doc/health-checking.md&gt;`_ for more information.
             * </pre>
             *
             * <code>string service_name = 1;</code>
             */
            public java.lang.String getServiceName() {

                java.lang.Object ref = serviceName_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    serviceName_ = s;
                    return s;
                }
            }

            /**
             * <pre>
             * An optional service name parameter which will be sent to gRPC service in
             * `grpc.health.v1.HealthCheckRequest
             * &lt;https://github.com/grpc/grpc/blob/master/src/proto/grpc/health/v1/health.proto#L20&gt;`_.
             * message. See `gRPC health-checking overview
             * &lt;https://github.com/grpc/grpc/blob/master/doc/health-checking.md&gt;`_ for more information.
             * </pre>
             *
             * <code>string service_name = 1;</code>
             */
            public com.google.protobuf.ByteString
            getServiceNameBytes() {

                java.lang.Object ref = serviceName_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    serviceName_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            private byte memoizedIsInitialized = -1;

            @java.lang.Override
            public final boolean isInitialized() {

                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1) return true;
                if (isInitialized == 0) return false;

                memoizedIsInitialized = 1;
                return true;
            }

            @java.lang.Override
            public void writeTo(com.google.protobuf.CodedOutputStream output)
                    throws java.io.IOException {

                if (!getServiceNameBytes().isEmpty()) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 1, serviceName_);
                }
                unknownFields.writeTo(output);
            }

            @java.lang.Override
            public int getSerializedSize() {

                int size = memoizedSize;
                if (size != -1) return size;

                size = 0;
                if (!getServiceNameBytes().isEmpty()) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, serviceName_);
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @java.lang.Override
            public boolean equals(final java.lang.Object obj) {

                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof HealthCheckOuterClass.HealthCheck.GrpcHealthCheck)) {
                    return super.equals(obj);
                }
                HealthCheckOuterClass.HealthCheck.GrpcHealthCheck other = (HealthCheckOuterClass.HealthCheck.GrpcHealthCheck) obj;

                boolean result = true;
                result = result && getServiceName()
                        .equals(other.getServiceName());
                result = result && unknownFields.equals(other.unknownFields);
                return result;
            }

            @java.lang.Override
            public int hashCode() {

                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + SERVICE_NAME_FIELD_NUMBER;
                hash = (53 * hash) + getServiceName().hashCode();
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static HealthCheckOuterClass.HealthCheck.GrpcHealthCheck parseFrom(
                    java.nio.ByteBuffer data)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data);
            }

            public static HealthCheckOuterClass.HealthCheck.GrpcHealthCheck parseFrom(
                    java.nio.ByteBuffer data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static HealthCheckOuterClass.HealthCheck.GrpcHealthCheck parseFrom(
                    com.google.protobuf.ByteString data)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data);
            }

            public static HealthCheckOuterClass.HealthCheck.GrpcHealthCheck parseFrom(
                    com.google.protobuf.ByteString data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static HealthCheckOuterClass.HealthCheck.GrpcHealthCheck parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data);
            }

            public static HealthCheckOuterClass.HealthCheck.GrpcHealthCheck parseFrom(
                    byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static HealthCheckOuterClass.HealthCheck.GrpcHealthCheck parseFrom(java.io.InputStream input)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }

            public static HealthCheckOuterClass.HealthCheck.GrpcHealthCheck parseFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static HealthCheckOuterClass.HealthCheck.GrpcHealthCheck parseDelimitedFrom(java.io.InputStream input)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input);
            }

            public static HealthCheckOuterClass.HealthCheck.GrpcHealthCheck parseDelimitedFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static HealthCheckOuterClass.HealthCheck.GrpcHealthCheck parseFrom(
                    com.google.protobuf.CodedInputStream input)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }

            public static HealthCheckOuterClass.HealthCheck.GrpcHealthCheck parseFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            @java.lang.Override
            public Builder newBuilderForType() {

                return newBuilder();
            }

            public static Builder newBuilder() {

                return DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(HealthCheckOuterClass.HealthCheck.GrpcHealthCheck prototype) {

                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            @java.lang.Override
            public Builder toBuilder() {

                return this == DEFAULT_INSTANCE
                        ? new Builder() : new Builder().mergeFrom(this);
            }

            @java.lang.Override
            protected Builder newBuilderForType(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * <pre>
             * `grpc.health.v1.Health
             * &lt;https://github.com/grpc/grpc/blob/master/src/proto/grpc/health/v1/health.proto&gt;`_-based
             * healthcheck. See `gRPC doc &lt;https://github.com/grpc/grpc/blob/master/doc/health-checking.md&gt;`_
             * for details.
             * </pre>
             * <p>
             * Protobuf type {@code envoy.api.v2.core.HealthCheck.GrpcHealthCheck}
             */
            public static final class Builder extends
                    com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                    // @@protoc_insertion_point(builder_implements:envoy.api.v2.core.HealthCheck.GrpcHealthCheck)
                    HealthCheckOuterClass.HealthCheck.GrpcHealthCheckOrBuilder {

                public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {

                    return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_GrpcHealthCheck_descriptor;
                }

                @java.lang.Override
                protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {

                    return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_GrpcHealthCheck_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(
                                    HealthCheckOuterClass.HealthCheck.GrpcHealthCheck.class, HealthCheckOuterClass.HealthCheck.GrpcHealthCheck.Builder.class);
                }

                // Construct using envoy.api.v2.core.HealthCheckOuterClass.HealthCheck.GrpcHealthCheck.newBuilder()
                private Builder() {

                    maybeForceBuilderInitialization();
                }

                private Builder(
                        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                    super(parent);
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {

                    if (com.google.protobuf.GeneratedMessageV3
                            .alwaysUseFieldBuilders) {
                    }
                }

                @java.lang.Override
                public Builder clear() {

                    super.clear();
                    serviceName_ = "";

                    return this;
                }

                @java.lang.Override
                public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {

                    return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_GrpcHealthCheck_descriptor;
                }

                @java.lang.Override
                public HealthCheckOuterClass.HealthCheck.GrpcHealthCheck getDefaultInstanceForType() {

                    return HealthCheckOuterClass.HealthCheck.GrpcHealthCheck.getDefaultInstance();
                }

                @java.lang.Override
                public HealthCheckOuterClass.HealthCheck.GrpcHealthCheck build() {

                    HealthCheckOuterClass.HealthCheck.GrpcHealthCheck result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                @java.lang.Override
                public HealthCheckOuterClass.HealthCheck.GrpcHealthCheck buildPartial() {

                    HealthCheckOuterClass.HealthCheck.GrpcHealthCheck result = new HealthCheckOuterClass.HealthCheck.GrpcHealthCheck(this);
                    result.serviceName_ = serviceName_;
                    onBuilt();
                    return result;
                }

                @java.lang.Override
                public Builder clone() {

                    return (Builder) super.clone();
                }

                @java.lang.Override
                public Builder setField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {

                    return (Builder) super.setField(field, value);
                }

                @java.lang.Override
                public Builder clearField(
                        com.google.protobuf.Descriptors.FieldDescriptor field) {

                    return (Builder) super.clearField(field);
                }

                @java.lang.Override
                public Builder clearOneof(
                        com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                    return (Builder) super.clearOneof(oneof);
                }

                @java.lang.Override
                public Builder setRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        int index, java.lang.Object value) {

                    return (Builder) super.setRepeatedField(field, index, value);
                }

                @java.lang.Override
                public Builder addRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {

                    return (Builder) super.addRepeatedField(field, value);
                }

                @java.lang.Override
                public Builder mergeFrom(com.google.protobuf.Message other) {

                    if (other instanceof HealthCheckOuterClass.HealthCheck.GrpcHealthCheck) {
                        return mergeFrom((HealthCheckOuterClass.HealthCheck.GrpcHealthCheck) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(HealthCheckOuterClass.HealthCheck.GrpcHealthCheck other) {

                    if (other == HealthCheckOuterClass.HealthCheck.GrpcHealthCheck.getDefaultInstance())
                        return this;
                    if (!other.getServiceName().isEmpty()) {
                        serviceName_ = other.serviceName_;
                        onChanged();
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                @java.lang.Override
                public final boolean isInitialized() {

                    return true;
                }

                @java.lang.Override
                public Builder mergeFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws java.io.IOException {

                    HealthCheckOuterClass.HealthCheck.GrpcHealthCheck parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (HealthCheckOuterClass.HealthCheck.GrpcHealthCheck) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private java.lang.Object serviceName_ = "";

                /**
                 * <pre>
                 * An optional service name parameter which will be sent to gRPC service in
                 * `grpc.health.v1.HealthCheckRequest
                 * &lt;https://github.com/grpc/grpc/blob/master/src/proto/grpc/health/v1/health.proto#L20&gt;`_.
                 * message. See `gRPC health-checking overview
                 * &lt;https://github.com/grpc/grpc/blob/master/doc/health-checking.md&gt;`_ for more information.
                 * </pre>
                 *
                 * <code>string service_name = 1;</code>
                 */
                public java.lang.String getServiceName() {

                    java.lang.Object ref = serviceName_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs =
                                (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        serviceName_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <pre>
                 * An optional service name parameter which will be sent to gRPC service in
                 * `grpc.health.v1.HealthCheckRequest
                 * &lt;https://github.com/grpc/grpc/blob/master/src/proto/grpc/health/v1/health.proto#L20&gt;`_.
                 * message. See `gRPC health-checking overview
                 * &lt;https://github.com/grpc/grpc/blob/master/doc/health-checking.md&gt;`_ for more information.
                 * </pre>
                 *
                 * <code>string service_name = 1;</code>
                 */
                public com.google.protobuf.ByteString
                getServiceNameBytes() {

                    java.lang.Object ref = serviceName_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b =
                                com.google.protobuf.ByteString.copyFromUtf8(
                                        (java.lang.String) ref);
                        serviceName_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <pre>
                 * An optional service name parameter which will be sent to gRPC service in
                 * `grpc.health.v1.HealthCheckRequest
                 * &lt;https://github.com/grpc/grpc/blob/master/src/proto/grpc/health/v1/health.proto#L20&gt;`_.
                 * message. See `gRPC health-checking overview
                 * &lt;https://github.com/grpc/grpc/blob/master/doc/health-checking.md&gt;`_ for more information.
                 * </pre>
                 *
                 * <code>string service_name = 1;</code>
                 */
                public Builder setServiceName(
                        java.lang.String value) {

                    if (value == null) {
                        throw new NullPointerException();
                    }

                    serviceName_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * An optional service name parameter which will be sent to gRPC service in
                 * `grpc.health.v1.HealthCheckRequest
                 * &lt;https://github.com/grpc/grpc/blob/master/src/proto/grpc/health/v1/health.proto#L20&gt;`_.
                 * message. See `gRPC health-checking overview
                 * &lt;https://github.com/grpc/grpc/blob/master/doc/health-checking.md&gt;`_ for more information.
                 * </pre>
                 *
                 * <code>string service_name = 1;</code>
                 */
                public Builder clearServiceName() {

                    serviceName_ = getDefaultInstance().getServiceName();
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * An optional service name parameter which will be sent to gRPC service in
                 * `grpc.health.v1.HealthCheckRequest
                 * &lt;https://github.com/grpc/grpc/blob/master/src/proto/grpc/health/v1/health.proto#L20&gt;`_.
                 * message. See `gRPC health-checking overview
                 * &lt;https://github.com/grpc/grpc/blob/master/doc/health-checking.md&gt;`_ for more information.
                 * </pre>
                 *
                 * <code>string service_name = 1;</code>
                 */
                public Builder setServiceNameBytes(
                        com.google.protobuf.ByteString value) {

                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);

                    serviceName_ = value;
                    onChanged();
                    return this;
                }

                @java.lang.Override
                public final Builder setUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {

                    return super.setUnknownFieldsProto3(unknownFields);
                }

                @java.lang.Override
                public final Builder mergeUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {

                    return super.mergeUnknownFields(unknownFields);
                }

                // @@protoc_insertion_point(builder_scope:envoy.api.v2.core.HealthCheck.GrpcHealthCheck)
            }

            // @@protoc_insertion_point(class_scope:envoy.api.v2.core.HealthCheck.GrpcHealthCheck)
            private static final HealthCheckOuterClass.HealthCheck.GrpcHealthCheck DEFAULT_INSTANCE;

            static {
                DEFAULT_INSTANCE = new HealthCheckOuterClass.HealthCheck.GrpcHealthCheck();
            }

            public static HealthCheckOuterClass.HealthCheck.GrpcHealthCheck getDefaultInstance() {

                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.Parser<GrpcHealthCheck>
                    PARSER = new com.google.protobuf.AbstractParser<GrpcHealthCheck>() {
                @java.lang.Override
                public GrpcHealthCheck parsePartialFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws com.google.protobuf.InvalidProtocolBufferException {

                    return new GrpcHealthCheck(input, extensionRegistry);
                }
            };

            public static com.google.protobuf.Parser<GrpcHealthCheck> parser() {

                return PARSER;
            }

            @java.lang.Override
            public com.google.protobuf.Parser<GrpcHealthCheck> getParserForType() {

                return PARSER;
            }

            @java.lang.Override
            public HealthCheckOuterClass.HealthCheck.GrpcHealthCheck getDefaultInstanceForType() {

                return DEFAULT_INSTANCE;
            }

        }

        public interface CustomHealthCheckOrBuilder extends
                // @@protoc_insertion_point(interface_extends:envoy.api.v2.core.HealthCheck.CustomHealthCheck)
                com.google.protobuf.MessageOrBuilder {

            /**
             * <pre>
             * The registered name of the custom health checker.
             * </pre>
             *
             * <code>string name = 1 [(.validate.rules) = { ... }</code>
             */
            java.lang.String getName();

            /**
             * <pre>
             * The registered name of the custom health checker.
             * </pre>
             *
             * <code>string name = 1 [(.validate.rules) = { ... }</code>
             */
            com.google.protobuf.ByteString
            getNameBytes();

            /**
             * <pre>
             * A custom health checker specific configuration which depends on the custom health checker
             * being instantiated. See :api:`envoy/config/health_checker` for reference.
             * </pre>
             *
             * <code>.google.protobuf.Struct config = 2;</code>
             */
            boolean hasConfig();

            /**
             * <pre>
             * A custom health checker specific configuration which depends on the custom health checker
             * being instantiated. See :api:`envoy/config/health_checker` for reference.
             * </pre>
             *
             * <code>.google.protobuf.Struct config = 2;</code>
             */
            com.google.protobuf.Struct getConfig();

            /**
             * <pre>
             * A custom health checker specific configuration which depends on the custom health checker
             * being instantiated. See :api:`envoy/config/health_checker` for reference.
             * </pre>
             *
             * <code>.google.protobuf.Struct config = 2;</code>
             */
            com.google.protobuf.StructOrBuilder getConfigOrBuilder();
        }

        /**
         * <pre>
         * Custom health check.
         * </pre>
         * <p>
         * Protobuf type {@code envoy.api.v2.core.HealthCheck.CustomHealthCheck}
         */
        public static final class CustomHealthCheck extends
                com.google.protobuf.GeneratedMessageV3 implements
                // @@protoc_insertion_point(message_implements:envoy.api.v2.core.HealthCheck.CustomHealthCheck)
                CustomHealthCheckOrBuilder {

            private static final long serialVersionUID = 0L;

            // Use CustomHealthCheck.newBuilder() to construct.
            private CustomHealthCheck(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {

                super(builder);
            }

            private CustomHealthCheck() {

                name_ = "";
            }

            @java.lang.Override
            public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {

                return this.unknownFields;
            }

            private CustomHealthCheck(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                        com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            case 10: {
                                java.lang.String s = input.readStringRequireUtf8();

                                name_ = s;
                                break;
                            }
                            case 18: {
                                com.google.protobuf.Struct.Builder subBuilder = null;
                                if (config_ != null) {
                                    subBuilder = config_.toBuilder();
                                }
                                config_ = input.readMessage(com.google.protobuf.Struct.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(config_);
                                    config_ = subBuilder.buildPartial();
                                }

                                break;
                            }
                            default: {
                                if (!parseUnknownFieldProto3(
                                        input, unknownFields, extensionRegistry, tag)) {
                                    done = true;
                                }
                                break;
                            }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(
                            e).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_CustomHealthCheck_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_CustomHealthCheck_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                HealthCheckOuterClass.HealthCheck.CustomHealthCheck.class, HealthCheckOuterClass.HealthCheck.CustomHealthCheck.Builder.class);
            }

            public static final int NAME_FIELD_NUMBER = 1;
            private volatile java.lang.Object name_;

            /**
             * <pre>
             * The registered name of the custom health checker.
             * </pre>
             *
             * <code>string name = 1 [(.validate.rules) = { ... }</code>
             */
            public java.lang.String getName() {

                java.lang.Object ref = name_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    name_ = s;
                    return s;
                }
            }

            /**
             * <pre>
             * The registered name of the custom health checker.
             * </pre>
             *
             * <code>string name = 1 [(.validate.rules) = { ... }</code>
             */
            public com.google.protobuf.ByteString
            getNameBytes() {

                java.lang.Object ref = name_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    name_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final int CONFIG_FIELD_NUMBER = 2;
            private com.google.protobuf.Struct config_;

            /**
             * <pre>
             * A custom health checker specific configuration which depends on the custom health checker
             * being instantiated. See :api:`envoy/config/health_checker` for reference.
             * </pre>
             *
             * <code>.google.protobuf.Struct config = 2;</code>
             */
            public boolean hasConfig() {

                return config_ != null;
            }

            /**
             * <pre>
             * A custom health checker specific configuration which depends on the custom health checker
             * being instantiated. See :api:`envoy/config/health_checker` for reference.
             * </pre>
             *
             * <code>.google.protobuf.Struct config = 2;</code>
             */
            public com.google.protobuf.Struct getConfig() {

                return config_ == null ? com.google.protobuf.Struct.getDefaultInstance() : config_;
            }

            /**
             * <pre>
             * A custom health checker specific configuration which depends on the custom health checker
             * being instantiated. See :api:`envoy/config/health_checker` for reference.
             * </pre>
             *
             * <code>.google.protobuf.Struct config = 2;</code>
             */
            public com.google.protobuf.StructOrBuilder getConfigOrBuilder() {

                return getConfig();
            }

            private byte memoizedIsInitialized = -1;

            @java.lang.Override
            public final boolean isInitialized() {

                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1) return true;
                if (isInitialized == 0) return false;

                memoizedIsInitialized = 1;
                return true;
            }

            @java.lang.Override
            public void writeTo(com.google.protobuf.CodedOutputStream output)
                    throws java.io.IOException {

                if (!getNameBytes().isEmpty()) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
                }
                if (config_ != null) {
                    output.writeMessage(2, getConfig());
                }
                unknownFields.writeTo(output);
            }

            @java.lang.Override
            public int getSerializedSize() {

                int size = memoizedSize;
                if (size != -1) return size;

                size = 0;
                if (!getNameBytes().isEmpty()) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
                }
                if (config_ != null) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeMessageSize(2, getConfig());
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @java.lang.Override
            public boolean equals(final java.lang.Object obj) {

                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof HealthCheckOuterClass.HealthCheck.CustomHealthCheck)) {
                    return super.equals(obj);
                }
                HealthCheckOuterClass.HealthCheck.CustomHealthCheck other = (HealthCheckOuterClass.HealthCheck.CustomHealthCheck) obj;

                boolean result = true;
                result = result && getName()
                        .equals(other.getName());
                result = result && (hasConfig() == other.hasConfig());
                if (hasConfig()) {
                    result = result && getConfig()
                            .equals(other.getConfig());
                }
                result = result && unknownFields.equals(other.unknownFields);
                return result;
            }

            @java.lang.Override
            public int hashCode() {

                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + NAME_FIELD_NUMBER;
                hash = (53 * hash) + getName().hashCode();
                if (hasConfig()) {
                    hash = (37 * hash) + CONFIG_FIELD_NUMBER;
                    hash = (53 * hash) + getConfig().hashCode();
                }
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static HealthCheckOuterClass.HealthCheck.CustomHealthCheck parseFrom(
                    java.nio.ByteBuffer data)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data);
            }

            public static HealthCheckOuterClass.HealthCheck.CustomHealthCheck parseFrom(
                    java.nio.ByteBuffer data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static HealthCheckOuterClass.HealthCheck.CustomHealthCheck parseFrom(
                    com.google.protobuf.ByteString data)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data);
            }

            public static HealthCheckOuterClass.HealthCheck.CustomHealthCheck parseFrom(
                    com.google.protobuf.ByteString data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static HealthCheckOuterClass.HealthCheck.CustomHealthCheck parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data);
            }

            public static HealthCheckOuterClass.HealthCheck.CustomHealthCheck parseFrom(
                    byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static HealthCheckOuterClass.HealthCheck.CustomHealthCheck parseFrom(java.io.InputStream input)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }

            public static HealthCheckOuterClass.HealthCheck.CustomHealthCheck parseFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static HealthCheckOuterClass.HealthCheck.CustomHealthCheck parseDelimitedFrom(java.io.InputStream input)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input);
            }

            public static HealthCheckOuterClass.HealthCheck.CustomHealthCheck parseDelimitedFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static HealthCheckOuterClass.HealthCheck.CustomHealthCheck parseFrom(
                    com.google.protobuf.CodedInputStream input)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }

            public static HealthCheckOuterClass.HealthCheck.CustomHealthCheck parseFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            @java.lang.Override
            public Builder newBuilderForType() {

                return newBuilder();
            }

            public static Builder newBuilder() {

                return DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(HealthCheckOuterClass.HealthCheck.CustomHealthCheck prototype) {

                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            @java.lang.Override
            public Builder toBuilder() {

                return this == DEFAULT_INSTANCE
                        ? new Builder() : new Builder().mergeFrom(this);
            }

            @java.lang.Override
            protected Builder newBuilderForType(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * <pre>
             * Custom health check.
             * </pre>
             * <p>
             * Protobuf type {@code envoy.api.v2.core.HealthCheck.CustomHealthCheck}
             */
            public static final class Builder extends
                    com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                    // @@protoc_insertion_point(builder_implements:envoy.api.v2.core.HealthCheck.CustomHealthCheck)
                    HealthCheckOuterClass.HealthCheck.CustomHealthCheckOrBuilder {

                public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {

                    return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_CustomHealthCheck_descriptor;
                }

                @java.lang.Override
                protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {

                    return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_CustomHealthCheck_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(
                                    HealthCheckOuterClass.HealthCheck.CustomHealthCheck.class, HealthCheckOuterClass.HealthCheck.CustomHealthCheck.Builder.class);
                }

                // Construct using envoy.api.v2.core.HealthCheckOuterClass.HealthCheck.CustomHealthCheck.newBuilder()
                private Builder() {

                    maybeForceBuilderInitialization();
                }

                private Builder(
                        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                    super(parent);
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {

                    if (com.google.protobuf.GeneratedMessageV3
                            .alwaysUseFieldBuilders) {
                    }
                }

                @java.lang.Override
                public Builder clear() {

                    super.clear();
                    name_ = "";

                    if (configBuilder_ == null) {
                        config_ = null;
                    } else {
                        config_ = null;
                        configBuilder_ = null;
                    }
                    return this;
                }

                @java.lang.Override
                public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {

                    return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_CustomHealthCheck_descriptor;
                }

                @java.lang.Override
                public HealthCheckOuterClass.HealthCheck.CustomHealthCheck getDefaultInstanceForType() {

                    return HealthCheckOuterClass.HealthCheck.CustomHealthCheck.getDefaultInstance();
                }

                @java.lang.Override
                public HealthCheckOuterClass.HealthCheck.CustomHealthCheck build() {

                    HealthCheckOuterClass.HealthCheck.CustomHealthCheck result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                @java.lang.Override
                public HealthCheckOuterClass.HealthCheck.CustomHealthCheck buildPartial() {

                    HealthCheckOuterClass.HealthCheck.CustomHealthCheck result = new HealthCheckOuterClass.HealthCheck.CustomHealthCheck(this);
                    result.name_ = name_;
                    if (configBuilder_ == null) {
                        result.config_ = config_;
                    } else {
                        result.config_ = configBuilder_.build();
                    }
                    onBuilt();
                    return result;
                }

                @java.lang.Override
                public Builder clone() {

                    return (Builder) super.clone();
                }

                @java.lang.Override
                public Builder setField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {

                    return (Builder) super.setField(field, value);
                }

                @java.lang.Override
                public Builder clearField(
                        com.google.protobuf.Descriptors.FieldDescriptor field) {

                    return (Builder) super.clearField(field);
                }

                @java.lang.Override
                public Builder clearOneof(
                        com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                    return (Builder) super.clearOneof(oneof);
                }

                @java.lang.Override
                public Builder setRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        int index, java.lang.Object value) {

                    return (Builder) super.setRepeatedField(field, index, value);
                }

                @java.lang.Override
                public Builder addRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {

                    return (Builder) super.addRepeatedField(field, value);
                }

                @java.lang.Override
                public Builder mergeFrom(com.google.protobuf.Message other) {

                    if (other instanceof HealthCheckOuterClass.HealthCheck.CustomHealthCheck) {
                        return mergeFrom((HealthCheckOuterClass.HealthCheck.CustomHealthCheck) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(HealthCheckOuterClass.HealthCheck.CustomHealthCheck other) {

                    if (other == HealthCheckOuterClass.HealthCheck.CustomHealthCheck.getDefaultInstance())
                        return this;
                    if (!other.getName().isEmpty()) {
                        name_ = other.name_;
                        onChanged();
                    }
                    if (other.hasConfig()) {
                        mergeConfig(other.getConfig());
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                @java.lang.Override
                public final boolean isInitialized() {

                    return true;
                }

                @java.lang.Override
                public Builder mergeFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws java.io.IOException {

                    HealthCheckOuterClass.HealthCheck.CustomHealthCheck parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (HealthCheckOuterClass.HealthCheck.CustomHealthCheck) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private java.lang.Object name_ = "";

                /**
                 * <pre>
                 * The registered name of the custom health checker.
                 * </pre>
                 *
                 * <code>string name = 1 [(.validate.rules) = { ... }</code>
                 */
                public java.lang.String getName() {

                    java.lang.Object ref = name_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs =
                                (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        name_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <pre>
                 * The registered name of the custom health checker.
                 * </pre>
                 *
                 * <code>string name = 1 [(.validate.rules) = { ... }</code>
                 */
                public com.google.protobuf.ByteString
                getNameBytes() {

                    java.lang.Object ref = name_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b =
                                com.google.protobuf.ByteString.copyFromUtf8(
                                        (java.lang.String) ref);
                        name_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <pre>
                 * The registered name of the custom health checker.
                 * </pre>
                 *
                 * <code>string name = 1 [(.validate.rules) = { ... }</code>
                 */
                public Builder setName(
                        java.lang.String value) {

                    if (value == null) {
                        throw new NullPointerException();
                    }

                    name_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * The registered name of the custom health checker.
                 * </pre>
                 *
                 * <code>string name = 1 [(.validate.rules) = { ... }</code>
                 */
                public Builder clearName() {

                    name_ = getDefaultInstance().getName();
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * The registered name of the custom health checker.
                 * </pre>
                 *
                 * <code>string name = 1 [(.validate.rules) = { ... }</code>
                 */
                public Builder setNameBytes(
                        com.google.protobuf.ByteString value) {

                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);

                    name_ = value;
                    onChanged();
                    return this;
                }

                private com.google.protobuf.Struct config_ = null;
                private com.google.protobuf.SingleFieldBuilderV3<
                        com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder> configBuilder_;

                /**
                 * <pre>
                 * A custom health checker specific configuration which depends on the custom health checker
                 * being instantiated. See :api:`envoy/config/health_checker` for reference.
                 * </pre>
                 *
                 * <code>.google.protobuf.Struct config = 2;</code>
                 */
                public boolean hasConfig() {

                    return configBuilder_ != null || config_ != null;
                }

                /**
                 * <pre>
                 * A custom health checker specific configuration which depends on the custom health checker
                 * being instantiated. See :api:`envoy/config/health_checker` for reference.
                 * </pre>
                 *
                 * <code>.google.protobuf.Struct config = 2;</code>
                 */
                public com.google.protobuf.Struct getConfig() {

                    if (configBuilder_ == null) {
                        return config_ == null ? com.google.protobuf.Struct.getDefaultInstance() : config_;
                    } else {
                        return configBuilder_.getMessage();
                    }
                }

                /**
                 * <pre>
                 * A custom health checker specific configuration which depends on the custom health checker
                 * being instantiated. See :api:`envoy/config/health_checker` for reference.
                 * </pre>
                 *
                 * <code>.google.protobuf.Struct config = 2;</code>
                 */
                public Builder setConfig(com.google.protobuf.Struct value) {

                    if (configBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        config_ = value;
                        onChanged();
                    } else {
                        configBuilder_.setMessage(value);
                    }

                    return this;
                }

                /**
                 * <pre>
                 * A custom health checker specific configuration which depends on the custom health checker
                 * being instantiated. See :api:`envoy/config/health_checker` for reference.
                 * </pre>
                 *
                 * <code>.google.protobuf.Struct config = 2;</code>
                 */
                public Builder setConfig(
                        com.google.protobuf.Struct.Builder builderForValue) {

                    if (configBuilder_ == null) {
                        config_ = builderForValue.build();
                        onChanged();
                    } else {
                        configBuilder_.setMessage(builderForValue.build());
                    }

                    return this;
                }

                /**
                 * <pre>
                 * A custom health checker specific configuration which depends on the custom health checker
                 * being instantiated. See :api:`envoy/config/health_checker` for reference.
                 * </pre>
                 *
                 * <code>.google.protobuf.Struct config = 2;</code>
                 */
                public Builder mergeConfig(com.google.protobuf.Struct value) {

                    if (configBuilder_ == null) {
                        if (config_ != null) {
                            config_ =
                                    com.google.protobuf.Struct.newBuilder(config_).mergeFrom(value).buildPartial();
                        } else {
                            config_ = value;
                        }
                        onChanged();
                    } else {
                        configBuilder_.mergeFrom(value);
                    }

                    return this;
                }

                /**
                 * <pre>
                 * A custom health checker specific configuration which depends on the custom health checker
                 * being instantiated. See :api:`envoy/config/health_checker` for reference.
                 * </pre>
                 *
                 * <code>.google.protobuf.Struct config = 2;</code>
                 */
                public Builder clearConfig() {

                    if (configBuilder_ == null) {
                        config_ = null;
                        onChanged();
                    } else {
                        config_ = null;
                        configBuilder_ = null;
                    }

                    return this;
                }

                /**
                 * <pre>
                 * A custom health checker specific configuration which depends on the custom health checker
                 * being instantiated. See :api:`envoy/config/health_checker` for reference.
                 * </pre>
                 *
                 * <code>.google.protobuf.Struct config = 2;</code>
                 */
                public com.google.protobuf.Struct.Builder getConfigBuilder() {

                    onChanged();
                    return getConfigFieldBuilder().getBuilder();
                }

                /**
                 * <pre>
                 * A custom health checker specific configuration which depends on the custom health checker
                 * being instantiated. See :api:`envoy/config/health_checker` for reference.
                 * </pre>
                 *
                 * <code>.google.protobuf.Struct config = 2;</code>
                 */
                public com.google.protobuf.StructOrBuilder getConfigOrBuilder() {

                    if (configBuilder_ != null) {
                        return configBuilder_.getMessageOrBuilder();
                    } else {
                        return config_ == null ?
                                com.google.protobuf.Struct.getDefaultInstance() : config_;
                    }
                }

                /**
                 * <pre>
                 * A custom health checker specific configuration which depends on the custom health checker
                 * being instantiated. See :api:`envoy/config/health_checker` for reference.
                 * </pre>
                 *
                 * <code>.google.protobuf.Struct config = 2;</code>
                 */
                private com.google.protobuf.SingleFieldBuilderV3<
                        com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder>
                getConfigFieldBuilder() {

                    if (configBuilder_ == null) {
                        configBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                                com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder>(
                                getConfig(),
                                getParentForChildren(),
                                isClean());
                        config_ = null;
                    }
                    return configBuilder_;
                }

                @java.lang.Override
                public final Builder setUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {

                    return super.setUnknownFieldsProto3(unknownFields);
                }

                @java.lang.Override
                public final Builder mergeUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {

                    return super.mergeUnknownFields(unknownFields);
                }

                // @@protoc_insertion_point(builder_scope:envoy.api.v2.core.HealthCheck.CustomHealthCheck)
            }

            // @@protoc_insertion_point(class_scope:envoy.api.v2.core.HealthCheck.CustomHealthCheck)
            private static final HealthCheckOuterClass.HealthCheck.CustomHealthCheck DEFAULT_INSTANCE;

            static {
                DEFAULT_INSTANCE = new HealthCheckOuterClass.HealthCheck.CustomHealthCheck();
            }

            public static HealthCheckOuterClass.HealthCheck.CustomHealthCheck getDefaultInstance() {

                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.Parser<CustomHealthCheck>
                    PARSER = new com.google.protobuf.AbstractParser<CustomHealthCheck>() {
                @java.lang.Override
                public CustomHealthCheck parsePartialFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws com.google.protobuf.InvalidProtocolBufferException {

                    return new CustomHealthCheck(input, extensionRegistry);
                }
            };

            public static com.google.protobuf.Parser<CustomHealthCheck> parser() {

                return PARSER;
            }

            @java.lang.Override
            public com.google.protobuf.Parser<CustomHealthCheck> getParserForType() {

                return PARSER;
            }

            @java.lang.Override
            public HealthCheckOuterClass.HealthCheck.CustomHealthCheck getDefaultInstanceForType() {

                return DEFAULT_INSTANCE;
            }

        }

        private int healthCheckerCase_ = 0;
        private java.lang.Object healthChecker_;

        public enum HealthCheckerCase
                implements com.google.protobuf.Internal.EnumLite {
            HTTP_HEALTH_CHECK(8),
            TCP_HEALTH_CHECK(9),
            GRPC_HEALTH_CHECK(11),
            CUSTOM_HEALTH_CHECK(13),
            HEALTHCHECKER_NOT_SET(0);
            private final int value;

            private HealthCheckerCase(int value) {

                this.value = value;
            }

            /**
             * @deprecated Use {@link #forNumber(int)} instead.
             */
            @java.lang.Deprecated
            public static HealthCheckerCase valueOf(int value) {

                return forNumber(value);
            }

            public static HealthCheckerCase forNumber(int value) {

                switch (value) {
                    case 8:
                        return HTTP_HEALTH_CHECK;
                    case 9:
                        return TCP_HEALTH_CHECK;
                    case 11:
                        return GRPC_HEALTH_CHECK;
                    case 13:
                        return CUSTOM_HEALTH_CHECK;
                    case 0:
                        return HEALTHCHECKER_NOT_SET;
                    default:
                        return null;
                }
            }

            public int getNumber() {

                return this.value;
            }
        }

        ;

        public HealthCheckerCase
        getHealthCheckerCase() {

            return HealthCheckerCase.forNumber(
                    healthCheckerCase_);
        }

        public static final int TIMEOUT_FIELD_NUMBER = 1;
        private com.google.protobuf.Duration timeout_;

        /**
         * <pre>
         * The time to wait for a health check response. If the timeout is reached the
         * health check attempt will be considered a failure.
         * </pre>
         *
         * <code>.google.protobuf.Duration timeout = 1 [(.gogoproto.stdduration) = true, (.validate.rules) = { ... }</code>
         */
        public boolean hasTimeout() {

            return timeout_ != null;
        }

        /**
         * <pre>
         * The time to wait for a health check response. If the timeout is reached the
         * health check attempt will be considered a failure.
         * </pre>
         *
         * <code>.google.protobuf.Duration timeout = 1 [(.gogoproto.stdduration) = true, (.validate.rules) = { ... }</code>
         */
        public com.google.protobuf.Duration getTimeout() {

            return timeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : timeout_;
        }

        /**
         * <pre>
         * The time to wait for a health check response. If the timeout is reached the
         * health check attempt will be considered a failure.
         * </pre>
         *
         * <code>.google.protobuf.Duration timeout = 1 [(.gogoproto.stdduration) = true, (.validate.rules) = { ... }</code>
         */
        public com.google.protobuf.DurationOrBuilder getTimeoutOrBuilder() {

            return getTimeout();
        }

        public static final int INTERVAL_FIELD_NUMBER = 2;
        private com.google.protobuf.Duration interval_;

        /**
         * <pre>
         * The interval between health checks.
         * </pre>
         *
         * <code>.google.protobuf.Duration interval = 2 [(.gogoproto.stdduration) = true, (.validate.rules) = { ... }</code>
         */
        public boolean hasInterval() {

            return interval_ != null;
        }

        /**
         * <pre>
         * The interval between health checks.
         * </pre>
         *
         * <code>.google.protobuf.Duration interval = 2 [(.gogoproto.stdduration) = true, (.validate.rules) = { ... }</code>
         */
        public com.google.protobuf.Duration getInterval() {

            return interval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : interval_;
        }

        /**
         * <pre>
         * The interval between health checks.
         * </pre>
         *
         * <code>.google.protobuf.Duration interval = 2 [(.gogoproto.stdduration) = true, (.validate.rules) = { ... }</code>
         */
        public com.google.protobuf.DurationOrBuilder getIntervalOrBuilder() {

            return getInterval();
        }

        public static final int INTERVAL_JITTER_FIELD_NUMBER = 3;
        private com.google.protobuf.Duration intervalJitter_;

        /**
         * <pre>
         * An optional jitter amount in millseconds. If specified, during every
         * interval Envoy will add 0 to interval_jitter to the wait time.
         * </pre>
         *
         * <code>.google.protobuf.Duration interval_jitter = 3;</code>
         */
        public boolean hasIntervalJitter() {

            return intervalJitter_ != null;
        }

        /**
         * <pre>
         * An optional jitter amount in millseconds. If specified, during every
         * interval Envoy will add 0 to interval_jitter to the wait time.
         * </pre>
         *
         * <code>.google.protobuf.Duration interval_jitter = 3;</code>
         */
        public com.google.protobuf.Duration getIntervalJitter() {

            return intervalJitter_ == null ? com.google.protobuf.Duration.getDefaultInstance() : intervalJitter_;
        }

        /**
         * <pre>
         * An optional jitter amount in millseconds. If specified, during every
         * interval Envoy will add 0 to interval_jitter to the wait time.
         * </pre>
         *
         * <code>.google.protobuf.Duration interval_jitter = 3;</code>
         */
        public com.google.protobuf.DurationOrBuilder getIntervalJitterOrBuilder() {

            return getIntervalJitter();
        }

        public static final int INTERVAL_JITTER_PERCENT_FIELD_NUMBER = 18;
        private int intervalJitterPercent_;

        /**
         * <pre>
         * An optional jitter amount as a percentage of interval_ms. If specified,
         * during every interval Envoy will add 0 to interval_ms *
         * interval_jitter_percent / 100 to the wait time.
         * If interval_jitter_ms and interval_jitter_percent are both set, both of
         * them will be used to increase the wait time.
         * </pre>
         *
         * <code>uint32 interval_jitter_percent = 18;</code>
         */
        public int getIntervalJitterPercent() {

            return intervalJitterPercent_;
        }

        public static final int UNHEALTHY_THRESHOLD_FIELD_NUMBER = 4;
        private com.google.protobuf.UInt32Value unhealthyThreshold_;

        /**
         * <pre>
         * The number of unhealthy health checks required before a host is marked
         * unhealthy. Note that for *http* health checking if a host responds with 503
         * this threshold is ignored and the host is considered unhealthy immediately.
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value unhealthy_threshold = 4;</code>
         */
        public boolean hasUnhealthyThreshold() {

            return unhealthyThreshold_ != null;
        }

        /**
         * <pre>
         * The number of unhealthy health checks required before a host is marked
         * unhealthy. Note that for *http* health checking if a host responds with 503
         * this threshold is ignored and the host is considered unhealthy immediately.
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value unhealthy_threshold = 4;</code>
         */
        public com.google.protobuf.UInt32Value getUnhealthyThreshold() {

            return unhealthyThreshold_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : unhealthyThreshold_;
        }

        /**
         * <pre>
         * The number of unhealthy health checks required before a host is marked
         * unhealthy. Note that for *http* health checking if a host responds with 503
         * this threshold is ignored and the host is considered unhealthy immediately.
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value unhealthy_threshold = 4;</code>
         */
        public com.google.protobuf.UInt32ValueOrBuilder getUnhealthyThresholdOrBuilder() {

            return getUnhealthyThreshold();
        }

        public static final int HEALTHY_THRESHOLD_FIELD_NUMBER = 5;
        private com.google.protobuf.UInt32Value healthyThreshold_;

        /**
         * <pre>
         * The number of healthy health checks required before a host is marked
         * healthy. Note that during startup, only a single successful health check is
         * required to mark a host healthy.
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value healthy_threshold = 5;</code>
         */
        public boolean hasHealthyThreshold() {

            return healthyThreshold_ != null;
        }

        /**
         * <pre>
         * The number of healthy health checks required before a host is marked
         * healthy. Note that during startup, only a single successful health check is
         * required to mark a host healthy.
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value healthy_threshold = 5;</code>
         */
        public com.google.protobuf.UInt32Value getHealthyThreshold() {

            return healthyThreshold_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : healthyThreshold_;
        }

        /**
         * <pre>
         * The number of healthy health checks required before a host is marked
         * healthy. Note that during startup, only a single successful health check is
         * required to mark a host healthy.
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value healthy_threshold = 5;</code>
         */
        public com.google.protobuf.UInt32ValueOrBuilder getHealthyThresholdOrBuilder() {

            return getHealthyThreshold();
        }

        public static final int ALT_PORT_FIELD_NUMBER = 6;
        private com.google.protobuf.UInt32Value altPort_;

        /**
         * <pre>
         * [#not-implemented-hide:] Non-serving port for health checking.
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value alt_port = 6;</code>
         */
        public boolean hasAltPort() {

            return altPort_ != null;
        }

        /**
         * <pre>
         * [#not-implemented-hide:] Non-serving port for health checking.
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value alt_port = 6;</code>
         */
        public com.google.protobuf.UInt32Value getAltPort() {

            return altPort_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : altPort_;
        }

        /**
         * <pre>
         * [#not-implemented-hide:] Non-serving port for health checking.
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value alt_port = 6;</code>
         */
        public com.google.protobuf.UInt32ValueOrBuilder getAltPortOrBuilder() {

            return getAltPort();
        }

        public static final int REUSE_CONNECTION_FIELD_NUMBER = 7;
        private com.google.protobuf.BoolValue reuseConnection_;

        /**
         * <pre>
         * Reuse health check connection between health checks. Default is true.
         * </pre>
         *
         * <code>.google.protobuf.BoolValue reuse_connection = 7;</code>
         */
        public boolean hasReuseConnection() {

            return reuseConnection_ != null;
        }

        /**
         * <pre>
         * Reuse health check connection between health checks. Default is true.
         * </pre>
         *
         * <code>.google.protobuf.BoolValue reuse_connection = 7;</code>
         */
        public com.google.protobuf.BoolValue getReuseConnection() {

            return reuseConnection_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : reuseConnection_;
        }

        /**
         * <pre>
         * Reuse health check connection between health checks. Default is true.
         * </pre>
         *
         * <code>.google.protobuf.BoolValue reuse_connection = 7;</code>
         */
        public com.google.protobuf.BoolValueOrBuilder getReuseConnectionOrBuilder() {

            return getReuseConnection();
        }

        public static final int HTTP_HEALTH_CHECK_FIELD_NUMBER = 8;

        /**
         * <pre>
         * HTTP health check.
         * </pre>
         *
         * <code>.envoy.api.v2.core.HealthCheck.HttpHealthCheck http_health_check = 8;</code>
         */
        public boolean hasHttpHealthCheck() {

            return healthCheckerCase_ == 8;
        }

        /**
         * <pre>
         * HTTP health check.
         * </pre>
         *
         * <code>.envoy.api.v2.core.HealthCheck.HttpHealthCheck http_health_check = 8;</code>
         */
        public HealthCheckOuterClass.HealthCheck.HttpHealthCheck getHttpHealthCheck() {

            if (healthCheckerCase_ == 8) {
                return (HealthCheckOuterClass.HealthCheck.HttpHealthCheck) healthChecker_;
            }
            return HealthCheckOuterClass.HealthCheck.HttpHealthCheck.getDefaultInstance();
        }

        /**
         * <pre>
         * HTTP health check.
         * </pre>
         *
         * <code>.envoy.api.v2.core.HealthCheck.HttpHealthCheck http_health_check = 8;</code>
         */
        public HealthCheckOuterClass.HealthCheck.HttpHealthCheckOrBuilder getHttpHealthCheckOrBuilder() {

            if (healthCheckerCase_ == 8) {
                return (HealthCheckOuterClass.HealthCheck.HttpHealthCheck) healthChecker_;
            }
            return HealthCheckOuterClass.HealthCheck.HttpHealthCheck.getDefaultInstance();
        }

        public static final int TCP_HEALTH_CHECK_FIELD_NUMBER = 9;

        /**
         * <pre>
         * TCP health check.
         * </pre>
         *
         * <code>.envoy.api.v2.core.HealthCheck.TcpHealthCheck tcp_health_check = 9;</code>
         */
        public boolean hasTcpHealthCheck() {

            return healthCheckerCase_ == 9;
        }

        /**
         * <pre>
         * TCP health check.
         * </pre>
         *
         * <code>.envoy.api.v2.core.HealthCheck.TcpHealthCheck tcp_health_check = 9;</code>
         */
        public HealthCheckOuterClass.HealthCheck.TcpHealthCheck getTcpHealthCheck() {

            if (healthCheckerCase_ == 9) {
                return (HealthCheckOuterClass.HealthCheck.TcpHealthCheck) healthChecker_;
            }
            return HealthCheckOuterClass.HealthCheck.TcpHealthCheck.getDefaultInstance();
        }

        /**
         * <pre>
         * TCP health check.
         * </pre>
         *
         * <code>.envoy.api.v2.core.HealthCheck.TcpHealthCheck tcp_health_check = 9;</code>
         */
        public HealthCheckOuterClass.HealthCheck.TcpHealthCheckOrBuilder getTcpHealthCheckOrBuilder() {

            if (healthCheckerCase_ == 9) {
                return (HealthCheckOuterClass.HealthCheck.TcpHealthCheck) healthChecker_;
            }
            return HealthCheckOuterClass.HealthCheck.TcpHealthCheck.getDefaultInstance();
        }

        public static final int GRPC_HEALTH_CHECK_FIELD_NUMBER = 11;

        /**
         * <pre>
         * gRPC health check.
         * </pre>
         *
         * <code>.envoy.api.v2.core.HealthCheck.GrpcHealthCheck grpc_health_check = 11;</code>
         */
        public boolean hasGrpcHealthCheck() {

            return healthCheckerCase_ == 11;
        }

        /**
         * <pre>
         * gRPC health check.
         * </pre>
         *
         * <code>.envoy.api.v2.core.HealthCheck.GrpcHealthCheck grpc_health_check = 11;</code>
         */
        public HealthCheckOuterClass.HealthCheck.GrpcHealthCheck getGrpcHealthCheck() {

            if (healthCheckerCase_ == 11) {
                return (HealthCheckOuterClass.HealthCheck.GrpcHealthCheck) healthChecker_;
            }
            return HealthCheckOuterClass.HealthCheck.GrpcHealthCheck.getDefaultInstance();
        }

        /**
         * <pre>
         * gRPC health check.
         * </pre>
         *
         * <code>.envoy.api.v2.core.HealthCheck.GrpcHealthCheck grpc_health_check = 11;</code>
         */
        public HealthCheckOuterClass.HealthCheck.GrpcHealthCheckOrBuilder getGrpcHealthCheckOrBuilder() {

            if (healthCheckerCase_ == 11) {
                return (HealthCheckOuterClass.HealthCheck.GrpcHealthCheck) healthChecker_;
            }
            return HealthCheckOuterClass.HealthCheck.GrpcHealthCheck.getDefaultInstance();
        }

        public static final int CUSTOM_HEALTH_CHECK_FIELD_NUMBER = 13;

        /**
         * <pre>
         * Custom health check.
         * </pre>
         *
         * <code>.envoy.api.v2.core.HealthCheck.CustomHealthCheck custom_health_check = 13;</code>
         */
        public boolean hasCustomHealthCheck() {

            return healthCheckerCase_ == 13;
        }

        /**
         * <pre>
         * Custom health check.
         * </pre>
         *
         * <code>.envoy.api.v2.core.HealthCheck.CustomHealthCheck custom_health_check = 13;</code>
         */
        public HealthCheckOuterClass.HealthCheck.CustomHealthCheck getCustomHealthCheck() {

            if (healthCheckerCase_ == 13) {
                return (HealthCheckOuterClass.HealthCheck.CustomHealthCheck) healthChecker_;
            }
            return HealthCheckOuterClass.HealthCheck.CustomHealthCheck.getDefaultInstance();
        }

        /**
         * <pre>
         * Custom health check.
         * </pre>
         *
         * <code>.envoy.api.v2.core.HealthCheck.CustomHealthCheck custom_health_check = 13;</code>
         */
        public HealthCheckOuterClass.HealthCheck.CustomHealthCheckOrBuilder getCustomHealthCheckOrBuilder() {

            if (healthCheckerCase_ == 13) {
                return (HealthCheckOuterClass.HealthCheck.CustomHealthCheck) healthChecker_;
            }
            return HealthCheckOuterClass.HealthCheck.CustomHealthCheck.getDefaultInstance();
        }

        public static final int NO_TRAFFIC_INTERVAL_FIELD_NUMBER = 12;
        private com.google.protobuf.Duration noTrafficInterval_;

        /**
         * <pre>
         * The "no traffic interval" is a special health check interval that is used when a cluster has
         * never had traffic routed to it. This lower interval allows cluster information to be kept up to
         * date, without sending a potentially large amount of active health checking traffic for no
         * reason. Once a cluster has been used for traffic routing, Envoy will shift back to using the
         * standard health check interval that is defined. Note that this interval takes precedence over
         * any other.
         * The default value for "no traffic interval" is 60 seconds.
         * </pre>
         *
         * <code>.google.protobuf.Duration no_traffic_interval = 12;</code>
         */
        public boolean hasNoTrafficInterval() {

            return noTrafficInterval_ != null;
        }

        /**
         * <pre>
         * The "no traffic interval" is a special health check interval that is used when a cluster has
         * never had traffic routed to it. This lower interval allows cluster information to be kept up to
         * date, without sending a potentially large amount of active health checking traffic for no
         * reason. Once a cluster has been used for traffic routing, Envoy will shift back to using the
         * standard health check interval that is defined. Note that this interval takes precedence over
         * any other.
         * The default value for "no traffic interval" is 60 seconds.
         * </pre>
         *
         * <code>.google.protobuf.Duration no_traffic_interval = 12;</code>
         */
        public com.google.protobuf.Duration getNoTrafficInterval() {

            return noTrafficInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : noTrafficInterval_;
        }

        /**
         * <pre>
         * The "no traffic interval" is a special health check interval that is used when a cluster has
         * never had traffic routed to it. This lower interval allows cluster information to be kept up to
         * date, without sending a potentially large amount of active health checking traffic for no
         * reason. Once a cluster has been used for traffic routing, Envoy will shift back to using the
         * standard health check interval that is defined. Note that this interval takes precedence over
         * any other.
         * The default value for "no traffic interval" is 60 seconds.
         * </pre>
         *
         * <code>.google.protobuf.Duration no_traffic_interval = 12;</code>
         */
        public com.google.protobuf.DurationOrBuilder getNoTrafficIntervalOrBuilder() {

            return getNoTrafficInterval();
        }

        public static final int UNHEALTHY_INTERVAL_FIELD_NUMBER = 14;
        private com.google.protobuf.Duration unhealthyInterval_;

        /**
         * <pre>
         * The "unhealthy interval" is a health check interval that is used for hosts that are marked as
         * unhealthy. As soon as the host is marked as healthy, Envoy will shift back to using the
         * standard health check interval that is defined.
         * The default value for "unhealthy interval" is the same as "interval".
         * </pre>
         *
         * <code>.google.protobuf.Duration unhealthy_interval = 14;</code>
         */
        public boolean hasUnhealthyInterval() {

            return unhealthyInterval_ != null;
        }

        /**
         * <pre>
         * The "unhealthy interval" is a health check interval that is used for hosts that are marked as
         * unhealthy. As soon as the host is marked as healthy, Envoy will shift back to using the
         * standard health check interval that is defined.
         * The default value for "unhealthy interval" is the same as "interval".
         * </pre>
         *
         * <code>.google.protobuf.Duration unhealthy_interval = 14;</code>
         */
        public com.google.protobuf.Duration getUnhealthyInterval() {

            return unhealthyInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : unhealthyInterval_;
        }

        /**
         * <pre>
         * The "unhealthy interval" is a health check interval that is used for hosts that are marked as
         * unhealthy. As soon as the host is marked as healthy, Envoy will shift back to using the
         * standard health check interval that is defined.
         * The default value for "unhealthy interval" is the same as "interval".
         * </pre>
         *
         * <code>.google.protobuf.Duration unhealthy_interval = 14;</code>
         */
        public com.google.protobuf.DurationOrBuilder getUnhealthyIntervalOrBuilder() {

            return getUnhealthyInterval();
        }

        public static final int UNHEALTHY_EDGE_INTERVAL_FIELD_NUMBER = 15;
        private com.google.protobuf.Duration unhealthyEdgeInterval_;

        /**
         * <pre>
         * The "unhealthy edge interval" is a special health check interval that is used for the first
         * health check right after a host is marked as unhealthy. For subsequent health checks
         * Envoy will shift back to using either "unhealthy interval" if present or the standard health
         * check interval that is defined.
         * The default value for "unhealthy edge interval" is the same as "unhealthy interval".
         * </pre>
         *
         * <code>.google.protobuf.Duration unhealthy_edge_interval = 15;</code>
         */
        public boolean hasUnhealthyEdgeInterval() {

            return unhealthyEdgeInterval_ != null;
        }

        /**
         * <pre>
         * The "unhealthy edge interval" is a special health check interval that is used for the first
         * health check right after a host is marked as unhealthy. For subsequent health checks
         * Envoy will shift back to using either "unhealthy interval" if present or the standard health
         * check interval that is defined.
         * The default value for "unhealthy edge interval" is the same as "unhealthy interval".
         * </pre>
         *
         * <code>.google.protobuf.Duration unhealthy_edge_interval = 15;</code>
         */
        public com.google.protobuf.Duration getUnhealthyEdgeInterval() {

            return unhealthyEdgeInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : unhealthyEdgeInterval_;
        }

        /**
         * <pre>
         * The "unhealthy edge interval" is a special health check interval that is used for the first
         * health check right after a host is marked as unhealthy. For subsequent health checks
         * Envoy will shift back to using either "unhealthy interval" if present or the standard health
         * check interval that is defined.
         * The default value for "unhealthy edge interval" is the same as "unhealthy interval".
         * </pre>
         *
         * <code>.google.protobuf.Duration unhealthy_edge_interval = 15;</code>
         */
        public com.google.protobuf.DurationOrBuilder getUnhealthyEdgeIntervalOrBuilder() {

            return getUnhealthyEdgeInterval();
        }

        public static final int HEALTHY_EDGE_INTERVAL_FIELD_NUMBER = 16;
        private com.google.protobuf.Duration healthyEdgeInterval_;

        /**
         * <pre>
         * The "healthy edge interval" is a special health check interval that is used for the first
         * health check right after a host is marked as healthy. For subsequent health checks
         * Envoy will shift back to using the standard health check interval that is defined.
         * The default value for "healthy edge interval" is the same as the default interval.
         * </pre>
         *
         * <code>.google.protobuf.Duration healthy_edge_interval = 16;</code>
         */
        public boolean hasHealthyEdgeInterval() {

            return healthyEdgeInterval_ != null;
        }

        /**
         * <pre>
         * The "healthy edge interval" is a special health check interval that is used for the first
         * health check right after a host is marked as healthy. For subsequent health checks
         * Envoy will shift back to using the standard health check interval that is defined.
         * The default value for "healthy edge interval" is the same as the default interval.
         * </pre>
         *
         * <code>.google.protobuf.Duration healthy_edge_interval = 16;</code>
         */
        public com.google.protobuf.Duration getHealthyEdgeInterval() {

            return healthyEdgeInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : healthyEdgeInterval_;
        }

        /**
         * <pre>
         * The "healthy edge interval" is a special health check interval that is used for the first
         * health check right after a host is marked as healthy. For subsequent health checks
         * Envoy will shift back to using the standard health check interval that is defined.
         * The default value for "healthy edge interval" is the same as the default interval.
         * </pre>
         *
         * <code>.google.protobuf.Duration healthy_edge_interval = 16;</code>
         */
        public com.google.protobuf.DurationOrBuilder getHealthyEdgeIntervalOrBuilder() {

            return getHealthyEdgeInterval();
        }

        public static final int EVENT_LOG_PATH_FIELD_NUMBER = 17;
        private volatile java.lang.Object eventLogPath_;

        /**
         * <pre>
         * Specifies the path to the :ref:`health check event log &lt;arch_overview_health_check_logging&gt;`.
         * If empty, no event log will be written.
         * </pre>
         *
         * <code>string event_log_path = 17;</code>
         */
        public java.lang.String getEventLogPath() {

            java.lang.Object ref = eventLogPath_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                eventLogPath_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * Specifies the path to the :ref:`health check event log &lt;arch_overview_health_check_logging&gt;`.
         * If empty, no event log will be written.
         * </pre>
         *
         * <code>string event_log_path = 17;</code>
         */
        public com.google.protobuf.ByteString
        getEventLogPathBytes() {

            java.lang.Object ref = eventLogPath_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                eventLogPath_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {

            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {

            if (timeout_ != null) {
                output.writeMessage(1, getTimeout());
            }
            if (interval_ != null) {
                output.writeMessage(2, getInterval());
            }
            if (intervalJitter_ != null) {
                output.writeMessage(3, getIntervalJitter());
            }
            if (unhealthyThreshold_ != null) {
                output.writeMessage(4, getUnhealthyThreshold());
            }
            if (healthyThreshold_ != null) {
                output.writeMessage(5, getHealthyThreshold());
            }
            if (altPort_ != null) {
                output.writeMessage(6, getAltPort());
            }
            if (reuseConnection_ != null) {
                output.writeMessage(7, getReuseConnection());
            }
            if (healthCheckerCase_ == 8) {
                output.writeMessage(8, (HealthCheckOuterClass.HealthCheck.HttpHealthCheck) healthChecker_);
            }
            if (healthCheckerCase_ == 9) {
                output.writeMessage(9, (HealthCheckOuterClass.HealthCheck.TcpHealthCheck) healthChecker_);
            }
            if (healthCheckerCase_ == 11) {
                output.writeMessage(11, (HealthCheckOuterClass.HealthCheck.GrpcHealthCheck) healthChecker_);
            }
            if (noTrafficInterval_ != null) {
                output.writeMessage(12, getNoTrafficInterval());
            }
            if (healthCheckerCase_ == 13) {
                output.writeMessage(13, (HealthCheckOuterClass.HealthCheck.CustomHealthCheck) healthChecker_);
            }
            if (unhealthyInterval_ != null) {
                output.writeMessage(14, getUnhealthyInterval());
            }
            if (unhealthyEdgeInterval_ != null) {
                output.writeMessage(15, getUnhealthyEdgeInterval());
            }
            if (healthyEdgeInterval_ != null) {
                output.writeMessage(16, getHealthyEdgeInterval());
            }
            if (!getEventLogPathBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 17, eventLogPath_);
            }
            if (intervalJitterPercent_ != 0) {
                output.writeUInt32(18, intervalJitterPercent_);
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {

            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (timeout_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getTimeout());
            }
            if (interval_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, getInterval());
            }
            if (intervalJitter_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(3, getIntervalJitter());
            }
            if (unhealthyThreshold_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(4, getUnhealthyThreshold());
            }
            if (healthyThreshold_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(5, getHealthyThreshold());
            }
            if (altPort_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(6, getAltPort());
            }
            if (reuseConnection_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(7, getReuseConnection());
            }
            if (healthCheckerCase_ == 8) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(8, (HealthCheckOuterClass.HealthCheck.HttpHealthCheck) healthChecker_);
            }
            if (healthCheckerCase_ == 9) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(9, (HealthCheckOuterClass.HealthCheck.TcpHealthCheck) healthChecker_);
            }
            if (healthCheckerCase_ == 11) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(11, (HealthCheckOuterClass.HealthCheck.GrpcHealthCheck) healthChecker_);
            }
            if (noTrafficInterval_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(12, getNoTrafficInterval());
            }
            if (healthCheckerCase_ == 13) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(13, (HealthCheckOuterClass.HealthCheck.CustomHealthCheck) healthChecker_);
            }
            if (unhealthyInterval_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(14, getUnhealthyInterval());
            }
            if (unhealthyEdgeInterval_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(15, getUnhealthyEdgeInterval());
            }
            if (healthyEdgeInterval_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(16, getHealthyEdgeInterval());
            }
            if (!getEventLogPathBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(17, eventLogPath_);
            }
            if (intervalJitterPercent_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(18, intervalJitterPercent_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {

            if (obj == this) {
                return true;
            }
            if (!(obj instanceof HealthCheckOuterClass.HealthCheck)) {
                return super.equals(obj);
            }
            HealthCheckOuterClass.HealthCheck other = (HealthCheckOuterClass.HealthCheck) obj;

            boolean result = true;
            result = result && (hasTimeout() == other.hasTimeout());
            if (hasTimeout()) {
                result = result && getTimeout()
                        .equals(other.getTimeout());
            }
            result = result && (hasInterval() == other.hasInterval());
            if (hasInterval()) {
                result = result && getInterval()
                        .equals(other.getInterval());
            }
            result = result && (hasIntervalJitter() == other.hasIntervalJitter());
            if (hasIntervalJitter()) {
                result = result && getIntervalJitter()
                        .equals(other.getIntervalJitter());
            }
            result = result && (getIntervalJitterPercent()
                    == other.getIntervalJitterPercent());
            result = result && (hasUnhealthyThreshold() == other.hasUnhealthyThreshold());
            if (hasUnhealthyThreshold()) {
                result = result && getUnhealthyThreshold()
                        .equals(other.getUnhealthyThreshold());
            }
            result = result && (hasHealthyThreshold() == other.hasHealthyThreshold());
            if (hasHealthyThreshold()) {
                result = result && getHealthyThreshold()
                        .equals(other.getHealthyThreshold());
            }
            result = result && (hasAltPort() == other.hasAltPort());
            if (hasAltPort()) {
                result = result && getAltPort()
                        .equals(other.getAltPort());
            }
            result = result && (hasReuseConnection() == other.hasReuseConnection());
            if (hasReuseConnection()) {
                result = result && getReuseConnection()
                        .equals(other.getReuseConnection());
            }
            result = result && (hasNoTrafficInterval() == other.hasNoTrafficInterval());
            if (hasNoTrafficInterval()) {
                result = result && getNoTrafficInterval()
                        .equals(other.getNoTrafficInterval());
            }
            result = result && (hasUnhealthyInterval() == other.hasUnhealthyInterval());
            if (hasUnhealthyInterval()) {
                result = result && getUnhealthyInterval()
                        .equals(other.getUnhealthyInterval());
            }
            result = result && (hasUnhealthyEdgeInterval() == other.hasUnhealthyEdgeInterval());
            if (hasUnhealthyEdgeInterval()) {
                result = result && getUnhealthyEdgeInterval()
                        .equals(other.getUnhealthyEdgeInterval());
            }
            result = result && (hasHealthyEdgeInterval() == other.hasHealthyEdgeInterval());
            if (hasHealthyEdgeInterval()) {
                result = result && getHealthyEdgeInterval()
                        .equals(other.getHealthyEdgeInterval());
            }
            result = result && getEventLogPath()
                    .equals(other.getEventLogPath());
            result = result && getHealthCheckerCase().equals(
                    other.getHealthCheckerCase());
            if (!result) return false;
            switch (healthCheckerCase_) {
                case 8:
                    result = result && getHttpHealthCheck()
                            .equals(other.getHttpHealthCheck());
                    break;
                case 9:
                    result = result && getTcpHealthCheck()
                            .equals(other.getTcpHealthCheck());
                    break;
                case 11:
                    result = result && getGrpcHealthCheck()
                            .equals(other.getGrpcHealthCheck());
                    break;
                case 13:
                    result = result && getCustomHealthCheck()
                            .equals(other.getCustomHealthCheck());
                    break;
                case 0:
                default:
            }
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {

            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasTimeout()) {
                hash = (37 * hash) + TIMEOUT_FIELD_NUMBER;
                hash = (53 * hash) + getTimeout().hashCode();
            }
            if (hasInterval()) {
                hash = (37 * hash) + INTERVAL_FIELD_NUMBER;
                hash = (53 * hash) + getInterval().hashCode();
            }
            if (hasIntervalJitter()) {
                hash = (37 * hash) + INTERVAL_JITTER_FIELD_NUMBER;
                hash = (53 * hash) + getIntervalJitter().hashCode();
            }
            hash = (37 * hash) + INTERVAL_JITTER_PERCENT_FIELD_NUMBER;
            hash = (53 * hash) + getIntervalJitterPercent();
            if (hasUnhealthyThreshold()) {
                hash = (37 * hash) + UNHEALTHY_THRESHOLD_FIELD_NUMBER;
                hash = (53 * hash) + getUnhealthyThreshold().hashCode();
            }
            if (hasHealthyThreshold()) {
                hash = (37 * hash) + HEALTHY_THRESHOLD_FIELD_NUMBER;
                hash = (53 * hash) + getHealthyThreshold().hashCode();
            }
            if (hasAltPort()) {
                hash = (37 * hash) + ALT_PORT_FIELD_NUMBER;
                hash = (53 * hash) + getAltPort().hashCode();
            }
            if (hasReuseConnection()) {
                hash = (37 * hash) + REUSE_CONNECTION_FIELD_NUMBER;
                hash = (53 * hash) + getReuseConnection().hashCode();
            }
            if (hasNoTrafficInterval()) {
                hash = (37 * hash) + NO_TRAFFIC_INTERVAL_FIELD_NUMBER;
                hash = (53 * hash) + getNoTrafficInterval().hashCode();
            }
            if (hasUnhealthyInterval()) {
                hash = (37 * hash) + UNHEALTHY_INTERVAL_FIELD_NUMBER;
                hash = (53 * hash) + getUnhealthyInterval().hashCode();
            }
            if (hasUnhealthyEdgeInterval()) {
                hash = (37 * hash) + UNHEALTHY_EDGE_INTERVAL_FIELD_NUMBER;
                hash = (53 * hash) + getUnhealthyEdgeInterval().hashCode();
            }
            if (hasHealthyEdgeInterval()) {
                hash = (37 * hash) + HEALTHY_EDGE_INTERVAL_FIELD_NUMBER;
                hash = (53 * hash) + getHealthyEdgeInterval().hashCode();
            }
            hash = (37 * hash) + EVENT_LOG_PATH_FIELD_NUMBER;
            hash = (53 * hash) + getEventLogPath().hashCode();
            switch (healthCheckerCase_) {
                case 8:
                    hash = (37 * hash) + HTTP_HEALTH_CHECK_FIELD_NUMBER;
                    hash = (53 * hash) + getHttpHealthCheck().hashCode();
                    break;
                case 9:
                    hash = (37 * hash) + TCP_HEALTH_CHECK_FIELD_NUMBER;
                    hash = (53 * hash) + getTcpHealthCheck().hashCode();
                    break;
                case 11:
                    hash = (37 * hash) + GRPC_HEALTH_CHECK_FIELD_NUMBER;
                    hash = (53 * hash) + getGrpcHealthCheck().hashCode();
                    break;
                case 13:
                    hash = (37 * hash) + CUSTOM_HEALTH_CHECK_FIELD_NUMBER;
                    hash = (53 * hash) + getCustomHealthCheck().hashCode();
                    break;
                case 0:
                default:
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static HealthCheckOuterClass.HealthCheck parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static HealthCheckOuterClass.HealthCheck parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static HealthCheckOuterClass.HealthCheck parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static HealthCheckOuterClass.HealthCheck parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static HealthCheckOuterClass.HealthCheck parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data);
        }

        public static HealthCheckOuterClass.HealthCheck parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {

            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static HealthCheckOuterClass.HealthCheck parseFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static HealthCheckOuterClass.HealthCheck parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static HealthCheckOuterClass.HealthCheck parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static HealthCheckOuterClass.HealthCheck parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static HealthCheckOuterClass.HealthCheck parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static HealthCheckOuterClass.HealthCheck parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {

            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {

            return newBuilder();
        }

        public static Builder newBuilder() {

            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(HealthCheckOuterClass.HealthCheck prototype) {

            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {

            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code envoy.api.v2.core.HealthCheck}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:envoy.api.v2.core.HealthCheck)
                HealthCheckOuterClass.HealthCheckOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {

                return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {

                return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                HealthCheckOuterClass.HealthCheck.class, HealthCheckOuterClass.HealthCheck.Builder.class);
            }

            // Construct using envoy.api.v2.core.HealthCheckOuterClass.HealthCheck.newBuilder()
            private Builder() {

                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {

                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {

                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @java.lang.Override
            public Builder clear() {

                super.clear();
                if (timeoutBuilder_ == null) {
                    timeout_ = null;
                } else {
                    timeout_ = null;
                    timeoutBuilder_ = null;
                }
                if (intervalBuilder_ == null) {
                    interval_ = null;
                } else {
                    interval_ = null;
                    intervalBuilder_ = null;
                }
                if (intervalJitterBuilder_ == null) {
                    intervalJitter_ = null;
                } else {
                    intervalJitter_ = null;
                    intervalJitterBuilder_ = null;
                }
                intervalJitterPercent_ = 0;

                if (unhealthyThresholdBuilder_ == null) {
                    unhealthyThreshold_ = null;
                } else {
                    unhealthyThreshold_ = null;
                    unhealthyThresholdBuilder_ = null;
                }
                if (healthyThresholdBuilder_ == null) {
                    healthyThreshold_ = null;
                } else {
                    healthyThreshold_ = null;
                    healthyThresholdBuilder_ = null;
                }
                if (altPortBuilder_ == null) {
                    altPort_ = null;
                } else {
                    altPort_ = null;
                    altPortBuilder_ = null;
                }
                if (reuseConnectionBuilder_ == null) {
                    reuseConnection_ = null;
                } else {
                    reuseConnection_ = null;
                    reuseConnectionBuilder_ = null;
                }
                if (noTrafficIntervalBuilder_ == null) {
                    noTrafficInterval_ = null;
                } else {
                    noTrafficInterval_ = null;
                    noTrafficIntervalBuilder_ = null;
                }
                if (unhealthyIntervalBuilder_ == null) {
                    unhealthyInterval_ = null;
                } else {
                    unhealthyInterval_ = null;
                    unhealthyIntervalBuilder_ = null;
                }
                if (unhealthyEdgeIntervalBuilder_ == null) {
                    unhealthyEdgeInterval_ = null;
                } else {
                    unhealthyEdgeInterval_ = null;
                    unhealthyEdgeIntervalBuilder_ = null;
                }
                if (healthyEdgeIntervalBuilder_ == null) {
                    healthyEdgeInterval_ = null;
                } else {
                    healthyEdgeInterval_ = null;
                    healthyEdgeIntervalBuilder_ = null;
                }
                eventLogPath_ = "";

                healthCheckerCase_ = 0;
                healthChecker_ = null;
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {

                return HealthCheckOuterClass.internal_static_envoy_api_v2_core_HealthCheck_descriptor;
            }

            @java.lang.Override
            public HealthCheckOuterClass.HealthCheck getDefaultInstanceForType() {

                return HealthCheckOuterClass.HealthCheck.getDefaultInstance();
            }

            @java.lang.Override
            public HealthCheckOuterClass.HealthCheck build() {

                HealthCheckOuterClass.HealthCheck result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public HealthCheckOuterClass.HealthCheck buildPartial() {

                HealthCheckOuterClass.HealthCheck result = new HealthCheckOuterClass.HealthCheck(this);
                if (timeoutBuilder_ == null) {
                    result.timeout_ = timeout_;
                } else {
                    result.timeout_ = timeoutBuilder_.build();
                }
                if (intervalBuilder_ == null) {
                    result.interval_ = interval_;
                } else {
                    result.interval_ = intervalBuilder_.build();
                }
                if (intervalJitterBuilder_ == null) {
                    result.intervalJitter_ = intervalJitter_;
                } else {
                    result.intervalJitter_ = intervalJitterBuilder_.build();
                }
                result.intervalJitterPercent_ = intervalJitterPercent_;
                if (unhealthyThresholdBuilder_ == null) {
                    result.unhealthyThreshold_ = unhealthyThreshold_;
                } else {
                    result.unhealthyThreshold_ = unhealthyThresholdBuilder_.build();
                }
                if (healthyThresholdBuilder_ == null) {
                    result.healthyThreshold_ = healthyThreshold_;
                } else {
                    result.healthyThreshold_ = healthyThresholdBuilder_.build();
                }
                if (altPortBuilder_ == null) {
                    result.altPort_ = altPort_;
                } else {
                    result.altPort_ = altPortBuilder_.build();
                }
                if (reuseConnectionBuilder_ == null) {
                    result.reuseConnection_ = reuseConnection_;
                } else {
                    result.reuseConnection_ = reuseConnectionBuilder_.build();
                }
                if (healthCheckerCase_ == 8) {
                    if (httpHealthCheckBuilder_ == null) {
                        result.healthChecker_ = healthChecker_;
                    } else {
                        result.healthChecker_ = httpHealthCheckBuilder_.build();
                    }
                }
                if (healthCheckerCase_ == 9) {
                    if (tcpHealthCheckBuilder_ == null) {
                        result.healthChecker_ = healthChecker_;
                    } else {
                        result.healthChecker_ = tcpHealthCheckBuilder_.build();
                    }
                }
                if (healthCheckerCase_ == 11) {
                    if (grpcHealthCheckBuilder_ == null) {
                        result.healthChecker_ = healthChecker_;
                    } else {
                        result.healthChecker_ = grpcHealthCheckBuilder_.build();
                    }
                }
                if (healthCheckerCase_ == 13) {
                    if (customHealthCheckBuilder_ == null) {
                        result.healthChecker_ = healthChecker_;
                    } else {
                        result.healthChecker_ = customHealthCheckBuilder_.build();
                    }
                }
                if (noTrafficIntervalBuilder_ == null) {
                    result.noTrafficInterval_ = noTrafficInterval_;
                } else {
                    result.noTrafficInterval_ = noTrafficIntervalBuilder_.build();
                }
                if (unhealthyIntervalBuilder_ == null) {
                    result.unhealthyInterval_ = unhealthyInterval_;
                } else {
                    result.unhealthyInterval_ = unhealthyIntervalBuilder_.build();
                }
                if (unhealthyEdgeIntervalBuilder_ == null) {
                    result.unhealthyEdgeInterval_ = unhealthyEdgeInterval_;
                } else {
                    result.unhealthyEdgeInterval_ = unhealthyEdgeIntervalBuilder_.build();
                }
                if (healthyEdgeIntervalBuilder_ == null) {
                    result.healthyEdgeInterval_ = healthyEdgeInterval_;
                } else {
                    result.healthyEdgeInterval_ = healthyEdgeIntervalBuilder_.build();
                }
                result.eventLogPath_ = eventLogPath_;
                result.healthCheckerCase_ = healthCheckerCase_;
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {

                return (Builder) super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {

                return (Builder) super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {

                return (Builder) super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {

                return (Builder) super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {

                return (Builder) super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {

                if (other instanceof HealthCheckOuterClass.HealthCheck) {
                    return mergeFrom((HealthCheckOuterClass.HealthCheck) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(HealthCheckOuterClass.HealthCheck other) {

                if (other == HealthCheckOuterClass.HealthCheck.getDefaultInstance()) return this;
                if (other.hasTimeout()) {
                    mergeTimeout(other.getTimeout());
                }
                if (other.hasInterval()) {
                    mergeInterval(other.getInterval());
                }
                if (other.hasIntervalJitter()) {
                    mergeIntervalJitter(other.getIntervalJitter());
                }
                if (other.getIntervalJitterPercent() != 0) {
                    setIntervalJitterPercent(other.getIntervalJitterPercent());
                }
                if (other.hasUnhealthyThreshold()) {
                    mergeUnhealthyThreshold(other.getUnhealthyThreshold());
                }
                if (other.hasHealthyThreshold()) {
                    mergeHealthyThreshold(other.getHealthyThreshold());
                }
                if (other.hasAltPort()) {
                    mergeAltPort(other.getAltPort());
                }
                if (other.hasReuseConnection()) {
                    mergeReuseConnection(other.getReuseConnection());
                }
                if (other.hasNoTrafficInterval()) {
                    mergeNoTrafficInterval(other.getNoTrafficInterval());
                }
                if (other.hasUnhealthyInterval()) {
                    mergeUnhealthyInterval(other.getUnhealthyInterval());
                }
                if (other.hasUnhealthyEdgeInterval()) {
                    mergeUnhealthyEdgeInterval(other.getUnhealthyEdgeInterval());
                }
                if (other.hasHealthyEdgeInterval()) {
                    mergeHealthyEdgeInterval(other.getHealthyEdgeInterval());
                }
                if (!other.getEventLogPath().isEmpty()) {
                    eventLogPath_ = other.eventLogPath_;
                    onChanged();
                }
                switch (other.getHealthCheckerCase()) {
                    case HTTP_HEALTH_CHECK: {
                        mergeHttpHealthCheck(other.getHttpHealthCheck());
                        break;
                    }
                    case TCP_HEALTH_CHECK: {
                        mergeTcpHealthCheck(other.getTcpHealthCheck());
                        break;
                    }
                    case GRPC_HEALTH_CHECK: {
                        mergeGrpcHealthCheck(other.getGrpcHealthCheck());
                        break;
                    }
                    case CUSTOM_HEALTH_CHECK: {
                        mergeCustomHealthCheck(other.getCustomHealthCheck());
                        break;
                    }
                    case HEALTHCHECKER_NOT_SET: {
                        break;
                    }
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {

                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {

                HealthCheckOuterClass.HealthCheck parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (HealthCheckOuterClass.HealthCheck) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int healthCheckerCase_ = 0;
            private java.lang.Object healthChecker_;

            public HealthCheckerCase
            getHealthCheckerCase() {

                return HealthCheckerCase.forNumber(
                        healthCheckerCase_);
            }

            public Builder clearHealthChecker() {

                healthCheckerCase_ = 0;
                healthChecker_ = null;
                onChanged();
                return this;
            }

            private com.google.protobuf.Duration timeout_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> timeoutBuilder_;

            /**
             * <pre>
             * The time to wait for a health check response. If the timeout is reached the
             * health check attempt will be considered a failure.
             * </pre>
             *
             * <code>.google.protobuf.Duration timeout = 1 [(.gogoproto.stdduration) = true, (.validate.rules) = { ... }</code>
             */
            public boolean hasTimeout() {

                return timeoutBuilder_ != null || timeout_ != null;
            }

            /**
             * <pre>
             * The time to wait for a health check response. If the timeout is reached the
             * health check attempt will be considered a failure.
             * </pre>
             *
             * <code>.google.protobuf.Duration timeout = 1 [(.gogoproto.stdduration) = true, (.validate.rules) = { ... }</code>
             */
            public com.google.protobuf.Duration getTimeout() {

                if (timeoutBuilder_ == null) {
                    return timeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : timeout_;
                } else {
                    return timeoutBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * The time to wait for a health check response. If the timeout is reached the
             * health check attempt will be considered a failure.
             * </pre>
             *
             * <code>.google.protobuf.Duration timeout = 1 [(.gogoproto.stdduration) = true, (.validate.rules) = { ... }</code>
             */
            public Builder setTimeout(com.google.protobuf.Duration value) {

                if (timeoutBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    timeout_ = value;
                    onChanged();
                } else {
                    timeoutBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * The time to wait for a health check response. If the timeout is reached the
             * health check attempt will be considered a failure.
             * </pre>
             *
             * <code>.google.protobuf.Duration timeout = 1 [(.gogoproto.stdduration) = true, (.validate.rules) = { ... }</code>
             */
            public Builder setTimeout(
                    com.google.protobuf.Duration.Builder builderForValue) {

                if (timeoutBuilder_ == null) {
                    timeout_ = builderForValue.build();
                    onChanged();
                } else {
                    timeoutBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * The time to wait for a health check response. If the timeout is reached the
             * health check attempt will be considered a failure.
             * </pre>
             *
             * <code>.google.protobuf.Duration timeout = 1 [(.gogoproto.stdduration) = true, (.validate.rules) = { ... }</code>
             */
            public Builder mergeTimeout(com.google.protobuf.Duration value) {

                if (timeoutBuilder_ == null) {
                    if (timeout_ != null) {
                        timeout_ =
                                com.google.protobuf.Duration.newBuilder(timeout_).mergeFrom(value).buildPartial();
                    } else {
                        timeout_ = value;
                    }
                    onChanged();
                } else {
                    timeoutBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * The time to wait for a health check response. If the timeout is reached the
             * health check attempt will be considered a failure.
             * </pre>
             *
             * <code>.google.protobuf.Duration timeout = 1 [(.gogoproto.stdduration) = true, (.validate.rules) = { ... }</code>
             */
            public Builder clearTimeout() {

                if (timeoutBuilder_ == null) {
                    timeout_ = null;
                    onChanged();
                } else {
                    timeout_ = null;
                    timeoutBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * The time to wait for a health check response. If the timeout is reached the
             * health check attempt will be considered a failure.
             * </pre>
             *
             * <code>.google.protobuf.Duration timeout = 1 [(.gogoproto.stdduration) = true, (.validate.rules) = { ... }</code>
             */
            public com.google.protobuf.Duration.Builder getTimeoutBuilder() {

                onChanged();
                return getTimeoutFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * The time to wait for a health check response. If the timeout is reached the
             * health check attempt will be considered a failure.
             * </pre>
             *
             * <code>.google.protobuf.Duration timeout = 1 [(.gogoproto.stdduration) = true, (.validate.rules) = { ... }</code>
             */
            public com.google.protobuf.DurationOrBuilder getTimeoutOrBuilder() {

                if (timeoutBuilder_ != null) {
                    return timeoutBuilder_.getMessageOrBuilder();
                } else {
                    return timeout_ == null ?
                            com.google.protobuf.Duration.getDefaultInstance() : timeout_;
                }
            }

            /**
             * <pre>
             * The time to wait for a health check response. If the timeout is reached the
             * health check attempt will be considered a failure.
             * </pre>
             *
             * <code>.google.protobuf.Duration timeout = 1 [(.gogoproto.stdduration) = true, (.validate.rules) = { ... }</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>
            getTimeoutFieldBuilder() {

                if (timeoutBuilder_ == null) {
                    timeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                            getTimeout(),
                            getParentForChildren(),
                            isClean());
                    timeout_ = null;
                }
                return timeoutBuilder_;
            }

            private com.google.protobuf.Duration interval_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> intervalBuilder_;

            /**
             * <pre>
             * The interval between health checks.
             * </pre>
             *
             * <code>.google.protobuf.Duration interval = 2 [(.gogoproto.stdduration) = true, (.validate.rules) = { ... }</code>
             */
            public boolean hasInterval() {

                return intervalBuilder_ != null || interval_ != null;
            }

            /**
             * <pre>
             * The interval between health checks.
             * </pre>
             *
             * <code>.google.protobuf.Duration interval = 2 [(.gogoproto.stdduration) = true, (.validate.rules) = { ... }</code>
             */
            public com.google.protobuf.Duration getInterval() {

                if (intervalBuilder_ == null) {
                    return interval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : interval_;
                } else {
                    return intervalBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * The interval between health checks.
             * </pre>
             *
             * <code>.google.protobuf.Duration interval = 2 [(.gogoproto.stdduration) = true, (.validate.rules) = { ... }</code>
             */
            public Builder setInterval(com.google.protobuf.Duration value) {

                if (intervalBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    interval_ = value;
                    onChanged();
                } else {
                    intervalBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * The interval between health checks.
             * </pre>
             *
             * <code>.google.protobuf.Duration interval = 2 [(.gogoproto.stdduration) = true, (.validate.rules) = { ... }</code>
             */
            public Builder setInterval(
                    com.google.protobuf.Duration.Builder builderForValue) {

                if (intervalBuilder_ == null) {
                    interval_ = builderForValue.build();
                    onChanged();
                } else {
                    intervalBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * The interval between health checks.
             * </pre>
             *
             * <code>.google.protobuf.Duration interval = 2 [(.gogoproto.stdduration) = true, (.validate.rules) = { ... }</code>
             */
            public Builder mergeInterval(com.google.protobuf.Duration value) {

                if (intervalBuilder_ == null) {
                    if (interval_ != null) {
                        interval_ =
                                com.google.protobuf.Duration.newBuilder(interval_).mergeFrom(value).buildPartial();
                    } else {
                        interval_ = value;
                    }
                    onChanged();
                } else {
                    intervalBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * The interval between health checks.
             * </pre>
             *
             * <code>.google.protobuf.Duration interval = 2 [(.gogoproto.stdduration) = true, (.validate.rules) = { ... }</code>
             */
            public Builder clearInterval() {

                if (intervalBuilder_ == null) {
                    interval_ = null;
                    onChanged();
                } else {
                    interval_ = null;
                    intervalBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * The interval between health checks.
             * </pre>
             *
             * <code>.google.protobuf.Duration interval = 2 [(.gogoproto.stdduration) = true, (.validate.rules) = { ... }</code>
             */
            public com.google.protobuf.Duration.Builder getIntervalBuilder() {

                onChanged();
                return getIntervalFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * The interval between health checks.
             * </pre>
             *
             * <code>.google.protobuf.Duration interval = 2 [(.gogoproto.stdduration) = true, (.validate.rules) = { ... }</code>
             */
            public com.google.protobuf.DurationOrBuilder getIntervalOrBuilder() {

                if (intervalBuilder_ != null) {
                    return intervalBuilder_.getMessageOrBuilder();
                } else {
                    return interval_ == null ?
                            com.google.protobuf.Duration.getDefaultInstance() : interval_;
                }
            }

            /**
             * <pre>
             * The interval between health checks.
             * </pre>
             *
             * <code>.google.protobuf.Duration interval = 2 [(.gogoproto.stdduration) = true, (.validate.rules) = { ... }</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>
            getIntervalFieldBuilder() {

                if (intervalBuilder_ == null) {
                    intervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                            getInterval(),
                            getParentForChildren(),
                            isClean());
                    interval_ = null;
                }
                return intervalBuilder_;
            }

            private com.google.protobuf.Duration intervalJitter_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> intervalJitterBuilder_;

            /**
             * <pre>
             * An optional jitter amount in millseconds. If specified, during every
             * interval Envoy will add 0 to interval_jitter to the wait time.
             * </pre>
             *
             * <code>.google.protobuf.Duration interval_jitter = 3;</code>
             */
            public boolean hasIntervalJitter() {

                return intervalJitterBuilder_ != null || intervalJitter_ != null;
            }

            /**
             * <pre>
             * An optional jitter amount in millseconds. If specified, during every
             * interval Envoy will add 0 to interval_jitter to the wait time.
             * </pre>
             *
             * <code>.google.protobuf.Duration interval_jitter = 3;</code>
             */
            public com.google.protobuf.Duration getIntervalJitter() {

                if (intervalJitterBuilder_ == null) {
                    return intervalJitter_ == null ? com.google.protobuf.Duration.getDefaultInstance() : intervalJitter_;
                } else {
                    return intervalJitterBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * An optional jitter amount in millseconds. If specified, during every
             * interval Envoy will add 0 to interval_jitter to the wait time.
             * </pre>
             *
             * <code>.google.protobuf.Duration interval_jitter = 3;</code>
             */
            public Builder setIntervalJitter(com.google.protobuf.Duration value) {

                if (intervalJitterBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    intervalJitter_ = value;
                    onChanged();
                } else {
                    intervalJitterBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * An optional jitter amount in millseconds. If specified, during every
             * interval Envoy will add 0 to interval_jitter to the wait time.
             * </pre>
             *
             * <code>.google.protobuf.Duration interval_jitter = 3;</code>
             */
            public Builder setIntervalJitter(
                    com.google.protobuf.Duration.Builder builderForValue) {

                if (intervalJitterBuilder_ == null) {
                    intervalJitter_ = builderForValue.build();
                    onChanged();
                } else {
                    intervalJitterBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * An optional jitter amount in millseconds. If specified, during every
             * interval Envoy will add 0 to interval_jitter to the wait time.
             * </pre>
             *
             * <code>.google.protobuf.Duration interval_jitter = 3;</code>
             */
            public Builder mergeIntervalJitter(com.google.protobuf.Duration value) {

                if (intervalJitterBuilder_ == null) {
                    if (intervalJitter_ != null) {
                        intervalJitter_ =
                                com.google.protobuf.Duration.newBuilder(intervalJitter_).mergeFrom(value).buildPartial();
                    } else {
                        intervalJitter_ = value;
                    }
                    onChanged();
                } else {
                    intervalJitterBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * An optional jitter amount in millseconds. If specified, during every
             * interval Envoy will add 0 to interval_jitter to the wait time.
             * </pre>
             *
             * <code>.google.protobuf.Duration interval_jitter = 3;</code>
             */
            public Builder clearIntervalJitter() {

                if (intervalJitterBuilder_ == null) {
                    intervalJitter_ = null;
                    onChanged();
                } else {
                    intervalJitter_ = null;
                    intervalJitterBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * An optional jitter amount in millseconds. If specified, during every
             * interval Envoy will add 0 to interval_jitter to the wait time.
             * </pre>
             *
             * <code>.google.protobuf.Duration interval_jitter = 3;</code>
             */
            public com.google.protobuf.Duration.Builder getIntervalJitterBuilder() {

                onChanged();
                return getIntervalJitterFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * An optional jitter amount in millseconds. If specified, during every
             * interval Envoy will add 0 to interval_jitter to the wait time.
             * </pre>
             *
             * <code>.google.protobuf.Duration interval_jitter = 3;</code>
             */
            public com.google.protobuf.DurationOrBuilder getIntervalJitterOrBuilder() {

                if (intervalJitterBuilder_ != null) {
                    return intervalJitterBuilder_.getMessageOrBuilder();
                } else {
                    return intervalJitter_ == null ?
                            com.google.protobuf.Duration.getDefaultInstance() : intervalJitter_;
                }
            }

            /**
             * <pre>
             * An optional jitter amount in millseconds. If specified, during every
             * interval Envoy will add 0 to interval_jitter to the wait time.
             * </pre>
             *
             * <code>.google.protobuf.Duration interval_jitter = 3;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>
            getIntervalJitterFieldBuilder() {

                if (intervalJitterBuilder_ == null) {
                    intervalJitterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                            getIntervalJitter(),
                            getParentForChildren(),
                            isClean());
                    intervalJitter_ = null;
                }
                return intervalJitterBuilder_;
            }

            private int intervalJitterPercent_;

            /**
             * <pre>
             * An optional jitter amount as a percentage of interval_ms. If specified,
             * during every interval Envoy will add 0 to interval_ms *
             * interval_jitter_percent / 100 to the wait time.
             * If interval_jitter_ms and interval_jitter_percent are both set, both of
             * them will be used to increase the wait time.
             * </pre>
             *
             * <code>uint32 interval_jitter_percent = 18;</code>
             */
            public int getIntervalJitterPercent() {

                return intervalJitterPercent_;
            }

            /**
             * <pre>
             * An optional jitter amount as a percentage of interval_ms. If specified,
             * during every interval Envoy will add 0 to interval_ms *
             * interval_jitter_percent / 100 to the wait time.
             * If interval_jitter_ms and interval_jitter_percent are both set, both of
             * them will be used to increase the wait time.
             * </pre>
             *
             * <code>uint32 interval_jitter_percent = 18;</code>
             */
            public Builder setIntervalJitterPercent(int value) {

                intervalJitterPercent_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * An optional jitter amount as a percentage of interval_ms. If specified,
             * during every interval Envoy will add 0 to interval_ms *
             * interval_jitter_percent / 100 to the wait time.
             * If interval_jitter_ms and interval_jitter_percent are both set, both of
             * them will be used to increase the wait time.
             * </pre>
             *
             * <code>uint32 interval_jitter_percent = 18;</code>
             */
            public Builder clearIntervalJitterPercent() {

                intervalJitterPercent_ = 0;
                onChanged();
                return this;
            }

            private com.google.protobuf.UInt32Value unhealthyThreshold_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> unhealthyThresholdBuilder_;

            /**
             * <pre>
             * The number of unhealthy health checks required before a host is marked
             * unhealthy. Note that for *http* health checking if a host responds with 503
             * this threshold is ignored and the host is considered unhealthy immediately.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value unhealthy_threshold = 4;</code>
             */
            public boolean hasUnhealthyThreshold() {

                return unhealthyThresholdBuilder_ != null || unhealthyThreshold_ != null;
            }

            /**
             * <pre>
             * The number of unhealthy health checks required before a host is marked
             * unhealthy. Note that for *http* health checking if a host responds with 503
             * this threshold is ignored and the host is considered unhealthy immediately.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value unhealthy_threshold = 4;</code>
             */
            public com.google.protobuf.UInt32Value getUnhealthyThreshold() {

                if (unhealthyThresholdBuilder_ == null) {
                    return unhealthyThreshold_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : unhealthyThreshold_;
                } else {
                    return unhealthyThresholdBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * The number of unhealthy health checks required before a host is marked
             * unhealthy. Note that for *http* health checking if a host responds with 503
             * this threshold is ignored and the host is considered unhealthy immediately.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value unhealthy_threshold = 4;</code>
             */
            public Builder setUnhealthyThreshold(com.google.protobuf.UInt32Value value) {

                if (unhealthyThresholdBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    unhealthyThreshold_ = value;
                    onChanged();
                } else {
                    unhealthyThresholdBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * The number of unhealthy health checks required before a host is marked
             * unhealthy. Note that for *http* health checking if a host responds with 503
             * this threshold is ignored and the host is considered unhealthy immediately.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value unhealthy_threshold = 4;</code>
             */
            public Builder setUnhealthyThreshold(
                    com.google.protobuf.UInt32Value.Builder builderForValue) {

                if (unhealthyThresholdBuilder_ == null) {
                    unhealthyThreshold_ = builderForValue.build();
                    onChanged();
                } else {
                    unhealthyThresholdBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * The number of unhealthy health checks required before a host is marked
             * unhealthy. Note that for *http* health checking if a host responds with 503
             * this threshold is ignored and the host is considered unhealthy immediately.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value unhealthy_threshold = 4;</code>
             */
            public Builder mergeUnhealthyThreshold(com.google.protobuf.UInt32Value value) {

                if (unhealthyThresholdBuilder_ == null) {
                    if (unhealthyThreshold_ != null) {
                        unhealthyThreshold_ =
                                com.google.protobuf.UInt32Value.newBuilder(unhealthyThreshold_).mergeFrom(value).buildPartial();
                    } else {
                        unhealthyThreshold_ = value;
                    }
                    onChanged();
                } else {
                    unhealthyThresholdBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * The number of unhealthy health checks required before a host is marked
             * unhealthy. Note that for *http* health checking if a host responds with 503
             * this threshold is ignored and the host is considered unhealthy immediately.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value unhealthy_threshold = 4;</code>
             */
            public Builder clearUnhealthyThreshold() {

                if (unhealthyThresholdBuilder_ == null) {
                    unhealthyThreshold_ = null;
                    onChanged();
                } else {
                    unhealthyThreshold_ = null;
                    unhealthyThresholdBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * The number of unhealthy health checks required before a host is marked
             * unhealthy. Note that for *http* health checking if a host responds with 503
             * this threshold is ignored and the host is considered unhealthy immediately.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value unhealthy_threshold = 4;</code>
             */
            public com.google.protobuf.UInt32Value.Builder getUnhealthyThresholdBuilder() {

                onChanged();
                return getUnhealthyThresholdFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * The number of unhealthy health checks required before a host is marked
             * unhealthy. Note that for *http* health checking if a host responds with 503
             * this threshold is ignored and the host is considered unhealthy immediately.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value unhealthy_threshold = 4;</code>
             */
            public com.google.protobuf.UInt32ValueOrBuilder getUnhealthyThresholdOrBuilder() {

                if (unhealthyThresholdBuilder_ != null) {
                    return unhealthyThresholdBuilder_.getMessageOrBuilder();
                } else {
                    return unhealthyThreshold_ == null ?
                            com.google.protobuf.UInt32Value.getDefaultInstance() : unhealthyThreshold_;
                }
            }

            /**
             * <pre>
             * The number of unhealthy health checks required before a host is marked
             * unhealthy. Note that for *http* health checking if a host responds with 503
             * this threshold is ignored and the host is considered unhealthy immediately.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value unhealthy_threshold = 4;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>
            getUnhealthyThresholdFieldBuilder() {

                if (unhealthyThresholdBuilder_ == null) {
                    unhealthyThresholdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                            getUnhealthyThreshold(),
                            getParentForChildren(),
                            isClean());
                    unhealthyThreshold_ = null;
                }
                return unhealthyThresholdBuilder_;
            }

            private com.google.protobuf.UInt32Value healthyThreshold_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> healthyThresholdBuilder_;

            /**
             * <pre>
             * The number of healthy health checks required before a host is marked
             * healthy. Note that during startup, only a single successful health check is
             * required to mark a host healthy.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value healthy_threshold = 5;</code>
             */
            public boolean hasHealthyThreshold() {

                return healthyThresholdBuilder_ != null || healthyThreshold_ != null;
            }

            /**
             * <pre>
             * The number of healthy health checks required before a host is marked
             * healthy. Note that during startup, only a single successful health check is
             * required to mark a host healthy.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value healthy_threshold = 5;</code>
             */
            public com.google.protobuf.UInt32Value getHealthyThreshold() {

                if (healthyThresholdBuilder_ == null) {
                    return healthyThreshold_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : healthyThreshold_;
                } else {
                    return healthyThresholdBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * The number of healthy health checks required before a host is marked
             * healthy. Note that during startup, only a single successful health check is
             * required to mark a host healthy.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value healthy_threshold = 5;</code>
             */
            public Builder setHealthyThreshold(com.google.protobuf.UInt32Value value) {

                if (healthyThresholdBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    healthyThreshold_ = value;
                    onChanged();
                } else {
                    healthyThresholdBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * The number of healthy health checks required before a host is marked
             * healthy. Note that during startup, only a single successful health check is
             * required to mark a host healthy.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value healthy_threshold = 5;</code>
             */
            public Builder setHealthyThreshold(
                    com.google.protobuf.UInt32Value.Builder builderForValue) {

                if (healthyThresholdBuilder_ == null) {
                    healthyThreshold_ = builderForValue.build();
                    onChanged();
                } else {
                    healthyThresholdBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * The number of healthy health checks required before a host is marked
             * healthy. Note that during startup, only a single successful health check is
             * required to mark a host healthy.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value healthy_threshold = 5;</code>
             */
            public Builder mergeHealthyThreshold(com.google.protobuf.UInt32Value value) {

                if (healthyThresholdBuilder_ == null) {
                    if (healthyThreshold_ != null) {
                        healthyThreshold_ =
                                com.google.protobuf.UInt32Value.newBuilder(healthyThreshold_).mergeFrom(value).buildPartial();
                    } else {
                        healthyThreshold_ = value;
                    }
                    onChanged();
                } else {
                    healthyThresholdBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * The number of healthy health checks required before a host is marked
             * healthy. Note that during startup, only a single successful health check is
             * required to mark a host healthy.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value healthy_threshold = 5;</code>
             */
            public Builder clearHealthyThreshold() {

                if (healthyThresholdBuilder_ == null) {
                    healthyThreshold_ = null;
                    onChanged();
                } else {
                    healthyThreshold_ = null;
                    healthyThresholdBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * The number of healthy health checks required before a host is marked
             * healthy. Note that during startup, only a single successful health check is
             * required to mark a host healthy.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value healthy_threshold = 5;</code>
             */
            public com.google.protobuf.UInt32Value.Builder getHealthyThresholdBuilder() {

                onChanged();
                return getHealthyThresholdFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * The number of healthy health checks required before a host is marked
             * healthy. Note that during startup, only a single successful health check is
             * required to mark a host healthy.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value healthy_threshold = 5;</code>
             */
            public com.google.protobuf.UInt32ValueOrBuilder getHealthyThresholdOrBuilder() {

                if (healthyThresholdBuilder_ != null) {
                    return healthyThresholdBuilder_.getMessageOrBuilder();
                } else {
                    return healthyThreshold_ == null ?
                            com.google.protobuf.UInt32Value.getDefaultInstance() : healthyThreshold_;
                }
            }

            /**
             * <pre>
             * The number of healthy health checks required before a host is marked
             * healthy. Note that during startup, only a single successful health check is
             * required to mark a host healthy.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value healthy_threshold = 5;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>
            getHealthyThresholdFieldBuilder() {

                if (healthyThresholdBuilder_ == null) {
                    healthyThresholdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                            getHealthyThreshold(),
                            getParentForChildren(),
                            isClean());
                    healthyThreshold_ = null;
                }
                return healthyThresholdBuilder_;
            }

            private com.google.protobuf.UInt32Value altPort_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> altPortBuilder_;

            /**
             * <pre>
             * [#not-implemented-hide:] Non-serving port for health checking.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value alt_port = 6;</code>
             */
            public boolean hasAltPort() {

                return altPortBuilder_ != null || altPort_ != null;
            }

            /**
             * <pre>
             * [#not-implemented-hide:] Non-serving port for health checking.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value alt_port = 6;</code>
             */
            public com.google.protobuf.UInt32Value getAltPort() {

                if (altPortBuilder_ == null) {
                    return altPort_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : altPort_;
                } else {
                    return altPortBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * [#not-implemented-hide:] Non-serving port for health checking.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value alt_port = 6;</code>
             */
            public Builder setAltPort(com.google.protobuf.UInt32Value value) {

                if (altPortBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    altPort_ = value;
                    onChanged();
                } else {
                    altPortBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * [#not-implemented-hide:] Non-serving port for health checking.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value alt_port = 6;</code>
             */
            public Builder setAltPort(
                    com.google.protobuf.UInt32Value.Builder builderForValue) {

                if (altPortBuilder_ == null) {
                    altPort_ = builderForValue.build();
                    onChanged();
                } else {
                    altPortBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * [#not-implemented-hide:] Non-serving port for health checking.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value alt_port = 6;</code>
             */
            public Builder mergeAltPort(com.google.protobuf.UInt32Value value) {

                if (altPortBuilder_ == null) {
                    if (altPort_ != null) {
                        altPort_ =
                                com.google.protobuf.UInt32Value.newBuilder(altPort_).mergeFrom(value).buildPartial();
                    } else {
                        altPort_ = value;
                    }
                    onChanged();
                } else {
                    altPortBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * [#not-implemented-hide:] Non-serving port for health checking.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value alt_port = 6;</code>
             */
            public Builder clearAltPort() {

                if (altPortBuilder_ == null) {
                    altPort_ = null;
                    onChanged();
                } else {
                    altPort_ = null;
                    altPortBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * [#not-implemented-hide:] Non-serving port for health checking.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value alt_port = 6;</code>
             */
            public com.google.protobuf.UInt32Value.Builder getAltPortBuilder() {

                onChanged();
                return getAltPortFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * [#not-implemented-hide:] Non-serving port for health checking.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value alt_port = 6;</code>
             */
            public com.google.protobuf.UInt32ValueOrBuilder getAltPortOrBuilder() {

                if (altPortBuilder_ != null) {
                    return altPortBuilder_.getMessageOrBuilder();
                } else {
                    return altPort_ == null ?
                            com.google.protobuf.UInt32Value.getDefaultInstance() : altPort_;
                }
            }

            /**
             * <pre>
             * [#not-implemented-hide:] Non-serving port for health checking.
             * </pre>
             *
             * <code>.google.protobuf.UInt32Value alt_port = 6;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>
            getAltPortFieldBuilder() {

                if (altPortBuilder_ == null) {
                    altPortBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                            getAltPort(),
                            getParentForChildren(),
                            isClean());
                    altPort_ = null;
                }
                return altPortBuilder_;
            }

            private com.google.protobuf.BoolValue reuseConnection_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> reuseConnectionBuilder_;

            /**
             * <pre>
             * Reuse health check connection between health checks. Default is true.
             * </pre>
             *
             * <code>.google.protobuf.BoolValue reuse_connection = 7;</code>
             */
            public boolean hasReuseConnection() {

                return reuseConnectionBuilder_ != null || reuseConnection_ != null;
            }

            /**
             * <pre>
             * Reuse health check connection between health checks. Default is true.
             * </pre>
             *
             * <code>.google.protobuf.BoolValue reuse_connection = 7;</code>
             */
            public com.google.protobuf.BoolValue getReuseConnection() {

                if (reuseConnectionBuilder_ == null) {
                    return reuseConnection_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : reuseConnection_;
                } else {
                    return reuseConnectionBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Reuse health check connection between health checks. Default is true.
             * </pre>
             *
             * <code>.google.protobuf.BoolValue reuse_connection = 7;</code>
             */
            public Builder setReuseConnection(com.google.protobuf.BoolValue value) {

                if (reuseConnectionBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    reuseConnection_ = value;
                    onChanged();
                } else {
                    reuseConnectionBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * Reuse health check connection between health checks. Default is true.
             * </pre>
             *
             * <code>.google.protobuf.BoolValue reuse_connection = 7;</code>
             */
            public Builder setReuseConnection(
                    com.google.protobuf.BoolValue.Builder builderForValue) {

                if (reuseConnectionBuilder_ == null) {
                    reuseConnection_ = builderForValue.build();
                    onChanged();
                } else {
                    reuseConnectionBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * Reuse health check connection between health checks. Default is true.
             * </pre>
             *
             * <code>.google.protobuf.BoolValue reuse_connection = 7;</code>
             */
            public Builder mergeReuseConnection(com.google.protobuf.BoolValue value) {

                if (reuseConnectionBuilder_ == null) {
                    if (reuseConnection_ != null) {
                        reuseConnection_ =
                                com.google.protobuf.BoolValue.newBuilder(reuseConnection_).mergeFrom(value).buildPartial();
                    } else {
                        reuseConnection_ = value;
                    }
                    onChanged();
                } else {
                    reuseConnectionBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * Reuse health check connection between health checks. Default is true.
             * </pre>
             *
             * <code>.google.protobuf.BoolValue reuse_connection = 7;</code>
             */
            public Builder clearReuseConnection() {

                if (reuseConnectionBuilder_ == null) {
                    reuseConnection_ = null;
                    onChanged();
                } else {
                    reuseConnection_ = null;
                    reuseConnectionBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * Reuse health check connection between health checks. Default is true.
             * </pre>
             *
             * <code>.google.protobuf.BoolValue reuse_connection = 7;</code>
             */
            public com.google.protobuf.BoolValue.Builder getReuseConnectionBuilder() {

                onChanged();
                return getReuseConnectionFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Reuse health check connection between health checks. Default is true.
             * </pre>
             *
             * <code>.google.protobuf.BoolValue reuse_connection = 7;</code>
             */
            public com.google.protobuf.BoolValueOrBuilder getReuseConnectionOrBuilder() {

                if (reuseConnectionBuilder_ != null) {
                    return reuseConnectionBuilder_.getMessageOrBuilder();
                } else {
                    return reuseConnection_ == null ?
                            com.google.protobuf.BoolValue.getDefaultInstance() : reuseConnection_;
                }
            }

            /**
             * <pre>
             * Reuse health check connection between health checks. Default is true.
             * </pre>
             *
             * <code>.google.protobuf.BoolValue reuse_connection = 7;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>
            getReuseConnectionFieldBuilder() {

                if (reuseConnectionBuilder_ == null) {
                    reuseConnectionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                            getReuseConnection(),
                            getParentForChildren(),
                            isClean());
                    reuseConnection_ = null;
                }
                return reuseConnectionBuilder_;
            }

            private com.google.protobuf.SingleFieldBuilderV3<
                    HealthCheckOuterClass.HealthCheck.HttpHealthCheck, HealthCheckOuterClass.HealthCheck.HttpHealthCheck.Builder, HealthCheckOuterClass.HealthCheck.HttpHealthCheckOrBuilder> httpHealthCheckBuilder_;

            /**
             * <pre>
             * HTTP health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.HttpHealthCheck http_health_check = 8;</code>
             */
            public boolean hasHttpHealthCheck() {

                return healthCheckerCase_ == 8;
            }

            /**
             * <pre>
             * HTTP health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.HttpHealthCheck http_health_check = 8;</code>
             */
            public HealthCheckOuterClass.HealthCheck.HttpHealthCheck getHttpHealthCheck() {

                if (httpHealthCheckBuilder_ == null) {
                    if (healthCheckerCase_ == 8) {
                        return (HealthCheckOuterClass.HealthCheck.HttpHealthCheck) healthChecker_;
                    }
                    return HealthCheckOuterClass.HealthCheck.HttpHealthCheck.getDefaultInstance();
                } else {
                    if (healthCheckerCase_ == 8) {
                        return httpHealthCheckBuilder_.getMessage();
                    }
                    return HealthCheckOuterClass.HealthCheck.HttpHealthCheck.getDefaultInstance();
                }
            }

            /**
             * <pre>
             * HTTP health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.HttpHealthCheck http_health_check = 8;</code>
             */
            public Builder setHttpHealthCheck(HealthCheckOuterClass.HealthCheck.HttpHealthCheck value) {

                if (httpHealthCheckBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    healthChecker_ = value;
                    onChanged();
                } else {
                    httpHealthCheckBuilder_.setMessage(value);
                }
                healthCheckerCase_ = 8;
                return this;
            }

            /**
             * <pre>
             * HTTP health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.HttpHealthCheck http_health_check = 8;</code>
             */
            public Builder setHttpHealthCheck(
                    HealthCheckOuterClass.HealthCheck.HttpHealthCheck.Builder builderForValue) {

                if (httpHealthCheckBuilder_ == null) {
                    healthChecker_ = builderForValue.build();
                    onChanged();
                } else {
                    httpHealthCheckBuilder_.setMessage(builderForValue.build());
                }
                healthCheckerCase_ = 8;
                return this;
            }

            /**
             * <pre>
             * HTTP health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.HttpHealthCheck http_health_check = 8;</code>
             */
            public Builder mergeHttpHealthCheck(HealthCheckOuterClass.HealthCheck.HttpHealthCheck value) {

                if (httpHealthCheckBuilder_ == null) {
                    if (healthCheckerCase_ == 8 &&
                            healthChecker_ != HealthCheckOuterClass.HealthCheck.HttpHealthCheck.getDefaultInstance()) {
                        healthChecker_ = HealthCheckOuterClass.HealthCheck.HttpHealthCheck.newBuilder((HealthCheckOuterClass.HealthCheck.HttpHealthCheck) healthChecker_)
                                .mergeFrom(value).buildPartial();
                    } else {
                        healthChecker_ = value;
                    }
                    onChanged();
                } else {
                    if (healthCheckerCase_ == 8) {
                        httpHealthCheckBuilder_.mergeFrom(value);
                    }
                    httpHealthCheckBuilder_.setMessage(value);
                }
                healthCheckerCase_ = 8;
                return this;
            }

            /**
             * <pre>
             * HTTP health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.HttpHealthCheck http_health_check = 8;</code>
             */
            public Builder clearHttpHealthCheck() {

                if (httpHealthCheckBuilder_ == null) {
                    if (healthCheckerCase_ == 8) {
                        healthCheckerCase_ = 0;
                        healthChecker_ = null;
                        onChanged();
                    }
                } else {
                    if (healthCheckerCase_ == 8) {
                        healthCheckerCase_ = 0;
                        healthChecker_ = null;
                    }
                    httpHealthCheckBuilder_.clear();
                }
                return this;
            }

            /**
             * <pre>
             * HTTP health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.HttpHealthCheck http_health_check = 8;</code>
             */
            public HealthCheckOuterClass.HealthCheck.HttpHealthCheck.Builder getHttpHealthCheckBuilder() {

                return getHttpHealthCheckFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * HTTP health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.HttpHealthCheck http_health_check = 8;</code>
             */
            public HealthCheckOuterClass.HealthCheck.HttpHealthCheckOrBuilder getHttpHealthCheckOrBuilder() {

                if ((healthCheckerCase_ == 8) && (httpHealthCheckBuilder_ != null)) {
                    return httpHealthCheckBuilder_.getMessageOrBuilder();
                } else {
                    if (healthCheckerCase_ == 8) {
                        return (HealthCheckOuterClass.HealthCheck.HttpHealthCheck) healthChecker_;
                    }
                    return HealthCheckOuterClass.HealthCheck.HttpHealthCheck.getDefaultInstance();
                }
            }

            /**
             * <pre>
             * HTTP health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.HttpHealthCheck http_health_check = 8;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    HealthCheckOuterClass.HealthCheck.HttpHealthCheck, HealthCheckOuterClass.HealthCheck.HttpHealthCheck.Builder, HealthCheckOuterClass.HealthCheck.HttpHealthCheckOrBuilder>
            getHttpHealthCheckFieldBuilder() {

                if (httpHealthCheckBuilder_ == null) {
                    if (!(healthCheckerCase_ == 8)) {
                        healthChecker_ = HealthCheckOuterClass.HealthCheck.HttpHealthCheck.getDefaultInstance();
                    }
                    httpHealthCheckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            HealthCheckOuterClass.HealthCheck.HttpHealthCheck, HealthCheckOuterClass.HealthCheck.HttpHealthCheck.Builder, HealthCheckOuterClass.HealthCheck.HttpHealthCheckOrBuilder>(
                            (HealthCheckOuterClass.HealthCheck.HttpHealthCheck) healthChecker_,
                            getParentForChildren(),
                            isClean());
                    healthChecker_ = null;
                }
                healthCheckerCase_ = 8;
                onChanged();
                ;
                return httpHealthCheckBuilder_;
            }

            private com.google.protobuf.SingleFieldBuilderV3<
                    HealthCheckOuterClass.HealthCheck.TcpHealthCheck, HealthCheckOuterClass.HealthCheck.TcpHealthCheck.Builder, HealthCheckOuterClass.HealthCheck.TcpHealthCheckOrBuilder> tcpHealthCheckBuilder_;

            /**
             * <pre>
             * TCP health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.TcpHealthCheck tcp_health_check = 9;</code>
             */
            public boolean hasTcpHealthCheck() {

                return healthCheckerCase_ == 9;
            }

            /**
             * <pre>
             * TCP health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.TcpHealthCheck tcp_health_check = 9;</code>
             */
            public HealthCheckOuterClass.HealthCheck.TcpHealthCheck getTcpHealthCheck() {

                if (tcpHealthCheckBuilder_ == null) {
                    if (healthCheckerCase_ == 9) {
                        return (HealthCheckOuterClass.HealthCheck.TcpHealthCheck) healthChecker_;
                    }
                    return HealthCheckOuterClass.HealthCheck.TcpHealthCheck.getDefaultInstance();
                } else {
                    if (healthCheckerCase_ == 9) {
                        return tcpHealthCheckBuilder_.getMessage();
                    }
                    return HealthCheckOuterClass.HealthCheck.TcpHealthCheck.getDefaultInstance();
                }
            }

            /**
             * <pre>
             * TCP health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.TcpHealthCheck tcp_health_check = 9;</code>
             */
            public Builder setTcpHealthCheck(HealthCheckOuterClass.HealthCheck.TcpHealthCheck value) {

                if (tcpHealthCheckBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    healthChecker_ = value;
                    onChanged();
                } else {
                    tcpHealthCheckBuilder_.setMessage(value);
                }
                healthCheckerCase_ = 9;
                return this;
            }

            /**
             * <pre>
             * TCP health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.TcpHealthCheck tcp_health_check = 9;</code>
             */
            public Builder setTcpHealthCheck(
                    HealthCheckOuterClass.HealthCheck.TcpHealthCheck.Builder builderForValue) {

                if (tcpHealthCheckBuilder_ == null) {
                    healthChecker_ = builderForValue.build();
                    onChanged();
                } else {
                    tcpHealthCheckBuilder_.setMessage(builderForValue.build());
                }
                healthCheckerCase_ = 9;
                return this;
            }

            /**
             * <pre>
             * TCP health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.TcpHealthCheck tcp_health_check = 9;</code>
             */
            public Builder mergeTcpHealthCheck(HealthCheckOuterClass.HealthCheck.TcpHealthCheck value) {

                if (tcpHealthCheckBuilder_ == null) {
                    if (healthCheckerCase_ == 9 &&
                            healthChecker_ != HealthCheckOuterClass.HealthCheck.TcpHealthCheck.getDefaultInstance()) {
                        healthChecker_ = HealthCheckOuterClass.HealthCheck.TcpHealthCheck.newBuilder((HealthCheckOuterClass.HealthCheck.TcpHealthCheck) healthChecker_)
                                .mergeFrom(value).buildPartial();
                    } else {
                        healthChecker_ = value;
                    }
                    onChanged();
                } else {
                    if (healthCheckerCase_ == 9) {
                        tcpHealthCheckBuilder_.mergeFrom(value);
                    }
                    tcpHealthCheckBuilder_.setMessage(value);
                }
                healthCheckerCase_ = 9;
                return this;
            }

            /**
             * <pre>
             * TCP health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.TcpHealthCheck tcp_health_check = 9;</code>
             */
            public Builder clearTcpHealthCheck() {

                if (tcpHealthCheckBuilder_ == null) {
                    if (healthCheckerCase_ == 9) {
                        healthCheckerCase_ = 0;
                        healthChecker_ = null;
                        onChanged();
                    }
                } else {
                    if (healthCheckerCase_ == 9) {
                        healthCheckerCase_ = 0;
                        healthChecker_ = null;
                    }
                    tcpHealthCheckBuilder_.clear();
                }
                return this;
            }

            /**
             * <pre>
             * TCP health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.TcpHealthCheck tcp_health_check = 9;</code>
             */
            public HealthCheckOuterClass.HealthCheck.TcpHealthCheck.Builder getTcpHealthCheckBuilder() {

                return getTcpHealthCheckFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * TCP health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.TcpHealthCheck tcp_health_check = 9;</code>
             */
            public HealthCheckOuterClass.HealthCheck.TcpHealthCheckOrBuilder getTcpHealthCheckOrBuilder() {

                if ((healthCheckerCase_ == 9) && (tcpHealthCheckBuilder_ != null)) {
                    return tcpHealthCheckBuilder_.getMessageOrBuilder();
                } else {
                    if (healthCheckerCase_ == 9) {
                        return (HealthCheckOuterClass.HealthCheck.TcpHealthCheck) healthChecker_;
                    }
                    return HealthCheckOuterClass.HealthCheck.TcpHealthCheck.getDefaultInstance();
                }
            }

            /**
             * <pre>
             * TCP health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.TcpHealthCheck tcp_health_check = 9;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    HealthCheckOuterClass.HealthCheck.TcpHealthCheck, HealthCheckOuterClass.HealthCheck.TcpHealthCheck.Builder, HealthCheckOuterClass.HealthCheck.TcpHealthCheckOrBuilder>
            getTcpHealthCheckFieldBuilder() {

                if (tcpHealthCheckBuilder_ == null) {
                    if (!(healthCheckerCase_ == 9)) {
                        healthChecker_ = HealthCheckOuterClass.HealthCheck.TcpHealthCheck.getDefaultInstance();
                    }
                    tcpHealthCheckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            HealthCheckOuterClass.HealthCheck.TcpHealthCheck, HealthCheckOuterClass.HealthCheck.TcpHealthCheck.Builder, HealthCheckOuterClass.HealthCheck.TcpHealthCheckOrBuilder>(
                            (HealthCheckOuterClass.HealthCheck.TcpHealthCheck) healthChecker_,
                            getParentForChildren(),
                            isClean());
                    healthChecker_ = null;
                }
                healthCheckerCase_ = 9;
                onChanged();
                ;
                return tcpHealthCheckBuilder_;
            }

            private com.google.protobuf.SingleFieldBuilderV3<
                    HealthCheckOuterClass.HealthCheck.GrpcHealthCheck, HealthCheckOuterClass.HealthCheck.GrpcHealthCheck.Builder, HealthCheckOuterClass.HealthCheck.GrpcHealthCheckOrBuilder> grpcHealthCheckBuilder_;

            /**
             * <pre>
             * gRPC health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.GrpcHealthCheck grpc_health_check = 11;</code>
             */
            public boolean hasGrpcHealthCheck() {

                return healthCheckerCase_ == 11;
            }

            /**
             * <pre>
             * gRPC health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.GrpcHealthCheck grpc_health_check = 11;</code>
             */
            public HealthCheckOuterClass.HealthCheck.GrpcHealthCheck getGrpcHealthCheck() {

                if (grpcHealthCheckBuilder_ == null) {
                    if (healthCheckerCase_ == 11) {
                        return (HealthCheckOuterClass.HealthCheck.GrpcHealthCheck) healthChecker_;
                    }
                    return HealthCheckOuterClass.HealthCheck.GrpcHealthCheck.getDefaultInstance();
                } else {
                    if (healthCheckerCase_ == 11) {
                        return grpcHealthCheckBuilder_.getMessage();
                    }
                    return HealthCheckOuterClass.HealthCheck.GrpcHealthCheck.getDefaultInstance();
                }
            }

            /**
             * <pre>
             * gRPC health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.GrpcHealthCheck grpc_health_check = 11;</code>
             */
            public Builder setGrpcHealthCheck(HealthCheckOuterClass.HealthCheck.GrpcHealthCheck value) {

                if (grpcHealthCheckBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    healthChecker_ = value;
                    onChanged();
                } else {
                    grpcHealthCheckBuilder_.setMessage(value);
                }
                healthCheckerCase_ = 11;
                return this;
            }

            /**
             * <pre>
             * gRPC health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.GrpcHealthCheck grpc_health_check = 11;</code>
             */
            public Builder setGrpcHealthCheck(
                    HealthCheckOuterClass.HealthCheck.GrpcHealthCheck.Builder builderForValue) {

                if (grpcHealthCheckBuilder_ == null) {
                    healthChecker_ = builderForValue.build();
                    onChanged();
                } else {
                    grpcHealthCheckBuilder_.setMessage(builderForValue.build());
                }
                healthCheckerCase_ = 11;
                return this;
            }

            /**
             * <pre>
             * gRPC health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.GrpcHealthCheck grpc_health_check = 11;</code>
             */
            public Builder mergeGrpcHealthCheck(HealthCheckOuterClass.HealthCheck.GrpcHealthCheck value) {

                if (grpcHealthCheckBuilder_ == null) {
                    if (healthCheckerCase_ == 11 &&
                            healthChecker_ != HealthCheckOuterClass.HealthCheck.GrpcHealthCheck.getDefaultInstance()) {
                        healthChecker_ = HealthCheckOuterClass.HealthCheck.GrpcHealthCheck.newBuilder((HealthCheckOuterClass.HealthCheck.GrpcHealthCheck) healthChecker_)
                                .mergeFrom(value).buildPartial();
                    } else {
                        healthChecker_ = value;
                    }
                    onChanged();
                } else {
                    if (healthCheckerCase_ == 11) {
                        grpcHealthCheckBuilder_.mergeFrom(value);
                    }
                    grpcHealthCheckBuilder_.setMessage(value);
                }
                healthCheckerCase_ = 11;
                return this;
            }

            /**
             * <pre>
             * gRPC health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.GrpcHealthCheck grpc_health_check = 11;</code>
             */
            public Builder clearGrpcHealthCheck() {

                if (grpcHealthCheckBuilder_ == null) {
                    if (healthCheckerCase_ == 11) {
                        healthCheckerCase_ = 0;
                        healthChecker_ = null;
                        onChanged();
                    }
                } else {
                    if (healthCheckerCase_ == 11) {
                        healthCheckerCase_ = 0;
                        healthChecker_ = null;
                    }
                    grpcHealthCheckBuilder_.clear();
                }
                return this;
            }

            /**
             * <pre>
             * gRPC health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.GrpcHealthCheck grpc_health_check = 11;</code>
             */
            public HealthCheckOuterClass.HealthCheck.GrpcHealthCheck.Builder getGrpcHealthCheckBuilder() {

                return getGrpcHealthCheckFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * gRPC health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.GrpcHealthCheck grpc_health_check = 11;</code>
             */
            public HealthCheckOuterClass.HealthCheck.GrpcHealthCheckOrBuilder getGrpcHealthCheckOrBuilder() {

                if ((healthCheckerCase_ == 11) && (grpcHealthCheckBuilder_ != null)) {
                    return grpcHealthCheckBuilder_.getMessageOrBuilder();
                } else {
                    if (healthCheckerCase_ == 11) {
                        return (HealthCheckOuterClass.HealthCheck.GrpcHealthCheck) healthChecker_;
                    }
                    return HealthCheckOuterClass.HealthCheck.GrpcHealthCheck.getDefaultInstance();
                }
            }

            /**
             * <pre>
             * gRPC health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.GrpcHealthCheck grpc_health_check = 11;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    HealthCheckOuterClass.HealthCheck.GrpcHealthCheck, HealthCheckOuterClass.HealthCheck.GrpcHealthCheck.Builder, HealthCheckOuterClass.HealthCheck.GrpcHealthCheckOrBuilder>
            getGrpcHealthCheckFieldBuilder() {

                if (grpcHealthCheckBuilder_ == null) {
                    if (!(healthCheckerCase_ == 11)) {
                        healthChecker_ = HealthCheckOuterClass.HealthCheck.GrpcHealthCheck.getDefaultInstance();
                    }
                    grpcHealthCheckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            HealthCheckOuterClass.HealthCheck.GrpcHealthCheck, HealthCheckOuterClass.HealthCheck.GrpcHealthCheck.Builder, HealthCheckOuterClass.HealthCheck.GrpcHealthCheckOrBuilder>(
                            (HealthCheckOuterClass.HealthCheck.GrpcHealthCheck) healthChecker_,
                            getParentForChildren(),
                            isClean());
                    healthChecker_ = null;
                }
                healthCheckerCase_ = 11;
                onChanged();
                ;
                return grpcHealthCheckBuilder_;
            }

            private com.google.protobuf.SingleFieldBuilderV3<
                    HealthCheckOuterClass.HealthCheck.CustomHealthCheck, HealthCheckOuterClass.HealthCheck.CustomHealthCheck.Builder, HealthCheckOuterClass.HealthCheck.CustomHealthCheckOrBuilder> customHealthCheckBuilder_;

            /**
             * <pre>
             * Custom health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.CustomHealthCheck custom_health_check = 13;</code>
             */
            public boolean hasCustomHealthCheck() {

                return healthCheckerCase_ == 13;
            }

            /**
             * <pre>
             * Custom health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.CustomHealthCheck custom_health_check = 13;</code>
             */
            public HealthCheckOuterClass.HealthCheck.CustomHealthCheck getCustomHealthCheck() {

                if (customHealthCheckBuilder_ == null) {
                    if (healthCheckerCase_ == 13) {
                        return (HealthCheckOuterClass.HealthCheck.CustomHealthCheck) healthChecker_;
                    }
                    return HealthCheckOuterClass.HealthCheck.CustomHealthCheck.getDefaultInstance();
                } else {
                    if (healthCheckerCase_ == 13) {
                        return customHealthCheckBuilder_.getMessage();
                    }
                    return HealthCheckOuterClass.HealthCheck.CustomHealthCheck.getDefaultInstance();
                }
            }

            /**
             * <pre>
             * Custom health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.CustomHealthCheck custom_health_check = 13;</code>
             */
            public Builder setCustomHealthCheck(HealthCheckOuterClass.HealthCheck.CustomHealthCheck value) {

                if (customHealthCheckBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    healthChecker_ = value;
                    onChanged();
                } else {
                    customHealthCheckBuilder_.setMessage(value);
                }
                healthCheckerCase_ = 13;
                return this;
            }

            /**
             * <pre>
             * Custom health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.CustomHealthCheck custom_health_check = 13;</code>
             */
            public Builder setCustomHealthCheck(
                    HealthCheckOuterClass.HealthCheck.CustomHealthCheck.Builder builderForValue) {

                if (customHealthCheckBuilder_ == null) {
                    healthChecker_ = builderForValue.build();
                    onChanged();
                } else {
                    customHealthCheckBuilder_.setMessage(builderForValue.build());
                }
                healthCheckerCase_ = 13;
                return this;
            }

            /**
             * <pre>
             * Custom health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.CustomHealthCheck custom_health_check = 13;</code>
             */
            public Builder mergeCustomHealthCheck(HealthCheckOuterClass.HealthCheck.CustomHealthCheck value) {

                if (customHealthCheckBuilder_ == null) {
                    if (healthCheckerCase_ == 13 &&
                            healthChecker_ != HealthCheckOuterClass.HealthCheck.CustomHealthCheck.getDefaultInstance()) {
                        healthChecker_ = HealthCheckOuterClass.HealthCheck.CustomHealthCheck.newBuilder((HealthCheckOuterClass.HealthCheck.CustomHealthCheck) healthChecker_)
                                .mergeFrom(value).buildPartial();
                    } else {
                        healthChecker_ = value;
                    }
                    onChanged();
                } else {
                    if (healthCheckerCase_ == 13) {
                        customHealthCheckBuilder_.mergeFrom(value);
                    }
                    customHealthCheckBuilder_.setMessage(value);
                }
                healthCheckerCase_ = 13;
                return this;
            }

            /**
             * <pre>
             * Custom health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.CustomHealthCheck custom_health_check = 13;</code>
             */
            public Builder clearCustomHealthCheck() {

                if (customHealthCheckBuilder_ == null) {
                    if (healthCheckerCase_ == 13) {
                        healthCheckerCase_ = 0;
                        healthChecker_ = null;
                        onChanged();
                    }
                } else {
                    if (healthCheckerCase_ == 13) {
                        healthCheckerCase_ = 0;
                        healthChecker_ = null;
                    }
                    customHealthCheckBuilder_.clear();
                }
                return this;
            }

            /**
             * <pre>
             * Custom health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.CustomHealthCheck custom_health_check = 13;</code>
             */
            public HealthCheckOuterClass.HealthCheck.CustomHealthCheck.Builder getCustomHealthCheckBuilder() {

                return getCustomHealthCheckFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Custom health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.CustomHealthCheck custom_health_check = 13;</code>
             */
            public HealthCheckOuterClass.HealthCheck.CustomHealthCheckOrBuilder getCustomHealthCheckOrBuilder() {

                if ((healthCheckerCase_ == 13) && (customHealthCheckBuilder_ != null)) {
                    return customHealthCheckBuilder_.getMessageOrBuilder();
                } else {
                    if (healthCheckerCase_ == 13) {
                        return (HealthCheckOuterClass.HealthCheck.CustomHealthCheck) healthChecker_;
                    }
                    return HealthCheckOuterClass.HealthCheck.CustomHealthCheck.getDefaultInstance();
                }
            }

            /**
             * <pre>
             * Custom health check.
             * </pre>
             *
             * <code>.envoy.api.v2.core.HealthCheck.CustomHealthCheck custom_health_check = 13;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    HealthCheckOuterClass.HealthCheck.CustomHealthCheck, HealthCheckOuterClass.HealthCheck.CustomHealthCheck.Builder, HealthCheckOuterClass.HealthCheck.CustomHealthCheckOrBuilder>
            getCustomHealthCheckFieldBuilder() {

                if (customHealthCheckBuilder_ == null) {
                    if (!(healthCheckerCase_ == 13)) {
                        healthChecker_ = HealthCheckOuterClass.HealthCheck.CustomHealthCheck.getDefaultInstance();
                    }
                    customHealthCheckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            HealthCheckOuterClass.HealthCheck.CustomHealthCheck, HealthCheckOuterClass.HealthCheck.CustomHealthCheck.Builder, HealthCheckOuterClass.HealthCheck.CustomHealthCheckOrBuilder>(
                            (HealthCheckOuterClass.HealthCheck.CustomHealthCheck) healthChecker_,
                            getParentForChildren(),
                            isClean());
                    healthChecker_ = null;
                }
                healthCheckerCase_ = 13;
                onChanged();
                ;
                return customHealthCheckBuilder_;
            }

            private com.google.protobuf.Duration noTrafficInterval_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> noTrafficIntervalBuilder_;

            /**
             * <pre>
             * The "no traffic interval" is a special health check interval that is used when a cluster has
             * never had traffic routed to it. This lower interval allows cluster information to be kept up to
             * date, without sending a potentially large amount of active health checking traffic for no
             * reason. Once a cluster has been used for traffic routing, Envoy will shift back to using the
             * standard health check interval that is defined. Note that this interval takes precedence over
             * any other.
             * The default value for "no traffic interval" is 60 seconds.
             * </pre>
             *
             * <code>.google.protobuf.Duration no_traffic_interval = 12;</code>
             */
            public boolean hasNoTrafficInterval() {

                return noTrafficIntervalBuilder_ != null || noTrafficInterval_ != null;
            }

            /**
             * <pre>
             * The "no traffic interval" is a special health check interval that is used when a cluster has
             * never had traffic routed to it. This lower interval allows cluster information to be kept up to
             * date, without sending a potentially large amount of active health checking traffic for no
             * reason. Once a cluster has been used for traffic routing, Envoy will shift back to using the
             * standard health check interval that is defined. Note that this interval takes precedence over
             * any other.
             * The default value for "no traffic interval" is 60 seconds.
             * </pre>
             *
             * <code>.google.protobuf.Duration no_traffic_interval = 12;</code>
             */
            public com.google.protobuf.Duration getNoTrafficInterval() {

                if (noTrafficIntervalBuilder_ == null) {
                    return noTrafficInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : noTrafficInterval_;
                } else {
                    return noTrafficIntervalBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * The "no traffic interval" is a special health check interval that is used when a cluster has
             * never had traffic routed to it. This lower interval allows cluster information to be kept up to
             * date, without sending a potentially large amount of active health checking traffic for no
             * reason. Once a cluster has been used for traffic routing, Envoy will shift back to using the
             * standard health check interval that is defined. Note that this interval takes precedence over
             * any other.
             * The default value for "no traffic interval" is 60 seconds.
             * </pre>
             *
             * <code>.google.protobuf.Duration no_traffic_interval = 12;</code>
             */
            public Builder setNoTrafficInterval(com.google.protobuf.Duration value) {

                if (noTrafficIntervalBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    noTrafficInterval_ = value;
                    onChanged();
                } else {
                    noTrafficIntervalBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * The "no traffic interval" is a special health check interval that is used when a cluster has
             * never had traffic routed to it. This lower interval allows cluster information to be kept up to
             * date, without sending a potentially large amount of active health checking traffic for no
             * reason. Once a cluster has been used for traffic routing, Envoy will shift back to using the
             * standard health check interval that is defined. Note that this interval takes precedence over
             * any other.
             * The default value for "no traffic interval" is 60 seconds.
             * </pre>
             *
             * <code>.google.protobuf.Duration no_traffic_interval = 12;</code>
             */
            public Builder setNoTrafficInterval(
                    com.google.protobuf.Duration.Builder builderForValue) {

                if (noTrafficIntervalBuilder_ == null) {
                    noTrafficInterval_ = builderForValue.build();
                    onChanged();
                } else {
                    noTrafficIntervalBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * The "no traffic interval" is a special health check interval that is used when a cluster has
             * never had traffic routed to it. This lower interval allows cluster information to be kept up to
             * date, without sending a potentially large amount of active health checking traffic for no
             * reason. Once a cluster has been used for traffic routing, Envoy will shift back to using the
             * standard health check interval that is defined. Note that this interval takes precedence over
             * any other.
             * The default value for "no traffic interval" is 60 seconds.
             * </pre>
             *
             * <code>.google.protobuf.Duration no_traffic_interval = 12;</code>
             */
            public Builder mergeNoTrafficInterval(com.google.protobuf.Duration value) {

                if (noTrafficIntervalBuilder_ == null) {
                    if (noTrafficInterval_ != null) {
                        noTrafficInterval_ =
                                com.google.protobuf.Duration.newBuilder(noTrafficInterval_).mergeFrom(value).buildPartial();
                    } else {
                        noTrafficInterval_ = value;
                    }
                    onChanged();
                } else {
                    noTrafficIntervalBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * The "no traffic interval" is a special health check interval that is used when a cluster has
             * never had traffic routed to it. This lower interval allows cluster information to be kept up to
             * date, without sending a potentially large amount of active health checking traffic for no
             * reason. Once a cluster has been used for traffic routing, Envoy will shift back to using the
             * standard health check interval that is defined. Note that this interval takes precedence over
             * any other.
             * The default value for "no traffic interval" is 60 seconds.
             * </pre>
             *
             * <code>.google.protobuf.Duration no_traffic_interval = 12;</code>
             */
            public Builder clearNoTrafficInterval() {

                if (noTrafficIntervalBuilder_ == null) {
                    noTrafficInterval_ = null;
                    onChanged();
                } else {
                    noTrafficInterval_ = null;
                    noTrafficIntervalBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * The "no traffic interval" is a special health check interval that is used when a cluster has
             * never had traffic routed to it. This lower interval allows cluster information to be kept up to
             * date, without sending a potentially large amount of active health checking traffic for no
             * reason. Once a cluster has been used for traffic routing, Envoy will shift back to using the
             * standard health check interval that is defined. Note that this interval takes precedence over
             * any other.
             * The default value for "no traffic interval" is 60 seconds.
             * </pre>
             *
             * <code>.google.protobuf.Duration no_traffic_interval = 12;</code>
             */
            public com.google.protobuf.Duration.Builder getNoTrafficIntervalBuilder() {

                onChanged();
                return getNoTrafficIntervalFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * The "no traffic interval" is a special health check interval that is used when a cluster has
             * never had traffic routed to it. This lower interval allows cluster information to be kept up to
             * date, without sending a potentially large amount of active health checking traffic for no
             * reason. Once a cluster has been used for traffic routing, Envoy will shift back to using the
             * standard health check interval that is defined. Note that this interval takes precedence over
             * any other.
             * The default value for "no traffic interval" is 60 seconds.
             * </pre>
             *
             * <code>.google.protobuf.Duration no_traffic_interval = 12;</code>
             */
            public com.google.protobuf.DurationOrBuilder getNoTrafficIntervalOrBuilder() {

                if (noTrafficIntervalBuilder_ != null) {
                    return noTrafficIntervalBuilder_.getMessageOrBuilder();
                } else {
                    return noTrafficInterval_ == null ?
                            com.google.protobuf.Duration.getDefaultInstance() : noTrafficInterval_;
                }
            }

            /**
             * <pre>
             * The "no traffic interval" is a special health check interval that is used when a cluster has
             * never had traffic routed to it. This lower interval allows cluster information to be kept up to
             * date, without sending a potentially large amount of active health checking traffic for no
             * reason. Once a cluster has been used for traffic routing, Envoy will shift back to using the
             * standard health check interval that is defined. Note that this interval takes precedence over
             * any other.
             * The default value for "no traffic interval" is 60 seconds.
             * </pre>
             *
             * <code>.google.protobuf.Duration no_traffic_interval = 12;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>
            getNoTrafficIntervalFieldBuilder() {

                if (noTrafficIntervalBuilder_ == null) {
                    noTrafficIntervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                            getNoTrafficInterval(),
                            getParentForChildren(),
                            isClean());
                    noTrafficInterval_ = null;
                }
                return noTrafficIntervalBuilder_;
            }

            private com.google.protobuf.Duration unhealthyInterval_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> unhealthyIntervalBuilder_;

            /**
             * <pre>
             * The "unhealthy interval" is a health check interval that is used for hosts that are marked as
             * unhealthy. As soon as the host is marked as healthy, Envoy will shift back to using the
             * standard health check interval that is defined.
             * The default value for "unhealthy interval" is the same as "interval".
             * </pre>
             *
             * <code>.google.protobuf.Duration unhealthy_interval = 14;</code>
             */
            public boolean hasUnhealthyInterval() {

                return unhealthyIntervalBuilder_ != null || unhealthyInterval_ != null;
            }

            /**
             * <pre>
             * The "unhealthy interval" is a health check interval that is used for hosts that are marked as
             * unhealthy. As soon as the host is marked as healthy, Envoy will shift back to using the
             * standard health check interval that is defined.
             * The default value for "unhealthy interval" is the same as "interval".
             * </pre>
             *
             * <code>.google.protobuf.Duration unhealthy_interval = 14;</code>
             */
            public com.google.protobuf.Duration getUnhealthyInterval() {

                if (unhealthyIntervalBuilder_ == null) {
                    return unhealthyInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : unhealthyInterval_;
                } else {
                    return unhealthyIntervalBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * The "unhealthy interval" is a health check interval that is used for hosts that are marked as
             * unhealthy. As soon as the host is marked as healthy, Envoy will shift back to using the
             * standard health check interval that is defined.
             * The default value for "unhealthy interval" is the same as "interval".
             * </pre>
             *
             * <code>.google.protobuf.Duration unhealthy_interval = 14;</code>
             */
            public Builder setUnhealthyInterval(com.google.protobuf.Duration value) {

                if (unhealthyIntervalBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    unhealthyInterval_ = value;
                    onChanged();
                } else {
                    unhealthyIntervalBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * The "unhealthy interval" is a health check interval that is used for hosts that are marked as
             * unhealthy. As soon as the host is marked as healthy, Envoy will shift back to using the
             * standard health check interval that is defined.
             * The default value for "unhealthy interval" is the same as "interval".
             * </pre>
             *
             * <code>.google.protobuf.Duration unhealthy_interval = 14;</code>
             */
            public Builder setUnhealthyInterval(
                    com.google.protobuf.Duration.Builder builderForValue) {

                if (unhealthyIntervalBuilder_ == null) {
                    unhealthyInterval_ = builderForValue.build();
                    onChanged();
                } else {
                    unhealthyIntervalBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * The "unhealthy interval" is a health check interval that is used for hosts that are marked as
             * unhealthy. As soon as the host is marked as healthy, Envoy will shift back to using the
             * standard health check interval that is defined.
             * The default value for "unhealthy interval" is the same as "interval".
             * </pre>
             *
             * <code>.google.protobuf.Duration unhealthy_interval = 14;</code>
             */
            public Builder mergeUnhealthyInterval(com.google.protobuf.Duration value) {

                if (unhealthyIntervalBuilder_ == null) {
                    if (unhealthyInterval_ != null) {
                        unhealthyInterval_ =
                                com.google.protobuf.Duration.newBuilder(unhealthyInterval_).mergeFrom(value).buildPartial();
                    } else {
                        unhealthyInterval_ = value;
                    }
                    onChanged();
                } else {
                    unhealthyIntervalBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * The "unhealthy interval" is a health check interval that is used for hosts that are marked as
             * unhealthy. As soon as the host is marked as healthy, Envoy will shift back to using the
             * standard health check interval that is defined.
             * The default value for "unhealthy interval" is the same as "interval".
             * </pre>
             *
             * <code>.google.protobuf.Duration unhealthy_interval = 14;</code>
             */
            public Builder clearUnhealthyInterval() {

                if (unhealthyIntervalBuilder_ == null) {
                    unhealthyInterval_ = null;
                    onChanged();
                } else {
                    unhealthyInterval_ = null;
                    unhealthyIntervalBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * The "unhealthy interval" is a health check interval that is used for hosts that are marked as
             * unhealthy. As soon as the host is marked as healthy, Envoy will shift back to using the
             * standard health check interval that is defined.
             * The default value for "unhealthy interval" is the same as "interval".
             * </pre>
             *
             * <code>.google.protobuf.Duration unhealthy_interval = 14;</code>
             */
            public com.google.protobuf.Duration.Builder getUnhealthyIntervalBuilder() {

                onChanged();
                return getUnhealthyIntervalFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * The "unhealthy interval" is a health check interval that is used for hosts that are marked as
             * unhealthy. As soon as the host is marked as healthy, Envoy will shift back to using the
             * standard health check interval that is defined.
             * The default value for "unhealthy interval" is the same as "interval".
             * </pre>
             *
             * <code>.google.protobuf.Duration unhealthy_interval = 14;</code>
             */
            public com.google.protobuf.DurationOrBuilder getUnhealthyIntervalOrBuilder() {

                if (unhealthyIntervalBuilder_ != null) {
                    return unhealthyIntervalBuilder_.getMessageOrBuilder();
                } else {
                    return unhealthyInterval_ == null ?
                            com.google.protobuf.Duration.getDefaultInstance() : unhealthyInterval_;
                }
            }

            /**
             * <pre>
             * The "unhealthy interval" is a health check interval that is used for hosts that are marked as
             * unhealthy. As soon as the host is marked as healthy, Envoy will shift back to using the
             * standard health check interval that is defined.
             * The default value for "unhealthy interval" is the same as "interval".
             * </pre>
             *
             * <code>.google.protobuf.Duration unhealthy_interval = 14;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>
            getUnhealthyIntervalFieldBuilder() {

                if (unhealthyIntervalBuilder_ == null) {
                    unhealthyIntervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                            getUnhealthyInterval(),
                            getParentForChildren(),
                            isClean());
                    unhealthyInterval_ = null;
                }
                return unhealthyIntervalBuilder_;
            }

            private com.google.protobuf.Duration unhealthyEdgeInterval_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> unhealthyEdgeIntervalBuilder_;

            /**
             * <pre>
             * The "unhealthy edge interval" is a special health check interval that is used for the first
             * health check right after a host is marked as unhealthy. For subsequent health checks
             * Envoy will shift back to using either "unhealthy interval" if present or the standard health
             * check interval that is defined.
             * The default value for "unhealthy edge interval" is the same as "unhealthy interval".
             * </pre>
             *
             * <code>.google.protobuf.Duration unhealthy_edge_interval = 15;</code>
             */
            public boolean hasUnhealthyEdgeInterval() {

                return unhealthyEdgeIntervalBuilder_ != null || unhealthyEdgeInterval_ != null;
            }

            /**
             * <pre>
             * The "unhealthy edge interval" is a special health check interval that is used for the first
             * health check right after a host is marked as unhealthy. For subsequent health checks
             * Envoy will shift back to using either "unhealthy interval" if present or the standard health
             * check interval that is defined.
             * The default value for "unhealthy edge interval" is the same as "unhealthy interval".
             * </pre>
             *
             * <code>.google.protobuf.Duration unhealthy_edge_interval = 15;</code>
             */
            public com.google.protobuf.Duration getUnhealthyEdgeInterval() {

                if (unhealthyEdgeIntervalBuilder_ == null) {
                    return unhealthyEdgeInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : unhealthyEdgeInterval_;
                } else {
                    return unhealthyEdgeIntervalBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * The "unhealthy edge interval" is a special health check interval that is used for the first
             * health check right after a host is marked as unhealthy. For subsequent health checks
             * Envoy will shift back to using either "unhealthy interval" if present or the standard health
             * check interval that is defined.
             * The default value for "unhealthy edge interval" is the same as "unhealthy interval".
             * </pre>
             *
             * <code>.google.protobuf.Duration unhealthy_edge_interval = 15;</code>
             */
            public Builder setUnhealthyEdgeInterval(com.google.protobuf.Duration value) {

                if (unhealthyEdgeIntervalBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    unhealthyEdgeInterval_ = value;
                    onChanged();
                } else {
                    unhealthyEdgeIntervalBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * The "unhealthy edge interval" is a special health check interval that is used for the first
             * health check right after a host is marked as unhealthy. For subsequent health checks
             * Envoy will shift back to using either "unhealthy interval" if present or the standard health
             * check interval that is defined.
             * The default value for "unhealthy edge interval" is the same as "unhealthy interval".
             * </pre>
             *
             * <code>.google.protobuf.Duration unhealthy_edge_interval = 15;</code>
             */
            public Builder setUnhealthyEdgeInterval(
                    com.google.protobuf.Duration.Builder builderForValue) {

                if (unhealthyEdgeIntervalBuilder_ == null) {
                    unhealthyEdgeInterval_ = builderForValue.build();
                    onChanged();
                } else {
                    unhealthyEdgeIntervalBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * The "unhealthy edge interval" is a special health check interval that is used for the first
             * health check right after a host is marked as unhealthy. For subsequent health checks
             * Envoy will shift back to using either "unhealthy interval" if present or the standard health
             * check interval that is defined.
             * The default value for "unhealthy edge interval" is the same as "unhealthy interval".
             * </pre>
             *
             * <code>.google.protobuf.Duration unhealthy_edge_interval = 15;</code>
             */
            public Builder mergeUnhealthyEdgeInterval(com.google.protobuf.Duration value) {

                if (unhealthyEdgeIntervalBuilder_ == null) {
                    if (unhealthyEdgeInterval_ != null) {
                        unhealthyEdgeInterval_ =
                                com.google.protobuf.Duration.newBuilder(unhealthyEdgeInterval_).mergeFrom(value).buildPartial();
                    } else {
                        unhealthyEdgeInterval_ = value;
                    }
                    onChanged();
                } else {
                    unhealthyEdgeIntervalBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * The "unhealthy edge interval" is a special health check interval that is used for the first
             * health check right after a host is marked as unhealthy. For subsequent health checks
             * Envoy will shift back to using either "unhealthy interval" if present or the standard health
             * check interval that is defined.
             * The default value for "unhealthy edge interval" is the same as "unhealthy interval".
             * </pre>
             *
             * <code>.google.protobuf.Duration unhealthy_edge_interval = 15;</code>
             */
            public Builder clearUnhealthyEdgeInterval() {

                if (unhealthyEdgeIntervalBuilder_ == null) {
                    unhealthyEdgeInterval_ = null;
                    onChanged();
                } else {
                    unhealthyEdgeInterval_ = null;
                    unhealthyEdgeIntervalBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * The "unhealthy edge interval" is a special health check interval that is used for the first
             * health check right after a host is marked as unhealthy. For subsequent health checks
             * Envoy will shift back to using either "unhealthy interval" if present or the standard health
             * check interval that is defined.
             * The default value for "unhealthy edge interval" is the same as "unhealthy interval".
             * </pre>
             *
             * <code>.google.protobuf.Duration unhealthy_edge_interval = 15;</code>
             */
            public com.google.protobuf.Duration.Builder getUnhealthyEdgeIntervalBuilder() {

                onChanged();
                return getUnhealthyEdgeIntervalFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * The "unhealthy edge interval" is a special health check interval that is used for the first
             * health check right after a host is marked as unhealthy. For subsequent health checks
             * Envoy will shift back to using either "unhealthy interval" if present or the standard health
             * check interval that is defined.
             * The default value for "unhealthy edge interval" is the same as "unhealthy interval".
             * </pre>
             *
             * <code>.google.protobuf.Duration unhealthy_edge_interval = 15;</code>
             */
            public com.google.protobuf.DurationOrBuilder getUnhealthyEdgeIntervalOrBuilder() {

                if (unhealthyEdgeIntervalBuilder_ != null) {
                    return unhealthyEdgeIntervalBuilder_.getMessageOrBuilder();
                } else {
                    return unhealthyEdgeInterval_ == null ?
                            com.google.protobuf.Duration.getDefaultInstance() : unhealthyEdgeInterval_;
                }
            }

            /**
             * <pre>
             * The "unhealthy edge interval" is a special health check interval that is used for the first
             * health check right after a host is marked as unhealthy. For subsequent health checks
             * Envoy will shift back to using either "unhealthy interval" if present or the standard health
             * check interval that is defined.
             * The default value for "unhealthy edge interval" is the same as "unhealthy interval".
             * </pre>
             *
             * <code>.google.protobuf.Duration unhealthy_edge_interval = 15;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>
            getUnhealthyEdgeIntervalFieldBuilder() {

                if (unhealthyEdgeIntervalBuilder_ == null) {
                    unhealthyEdgeIntervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                            getUnhealthyEdgeInterval(),
                            getParentForChildren(),
                            isClean());
                    unhealthyEdgeInterval_ = null;
                }
                return unhealthyEdgeIntervalBuilder_;
            }

            private com.google.protobuf.Duration healthyEdgeInterval_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> healthyEdgeIntervalBuilder_;

            /**
             * <pre>
             * The "healthy edge interval" is a special health check interval that is used for the first
             * health check right after a host is marked as healthy. For subsequent health checks
             * Envoy will shift back to using the standard health check interval that is defined.
             * The default value for "healthy edge interval" is the same as the default interval.
             * </pre>
             *
             * <code>.google.protobuf.Duration healthy_edge_interval = 16;</code>
             */
            public boolean hasHealthyEdgeInterval() {

                return healthyEdgeIntervalBuilder_ != null || healthyEdgeInterval_ != null;
            }

            /**
             * <pre>
             * The "healthy edge interval" is a special health check interval that is used for the first
             * health check right after a host is marked as healthy. For subsequent health checks
             * Envoy will shift back to using the standard health check interval that is defined.
             * The default value for "healthy edge interval" is the same as the default interval.
             * </pre>
             *
             * <code>.google.protobuf.Duration healthy_edge_interval = 16;</code>
             */
            public com.google.protobuf.Duration getHealthyEdgeInterval() {

                if (healthyEdgeIntervalBuilder_ == null) {
                    return healthyEdgeInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : healthyEdgeInterval_;
                } else {
                    return healthyEdgeIntervalBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * The "healthy edge interval" is a special health check interval that is used for the first
             * health check right after a host is marked as healthy. For subsequent health checks
             * Envoy will shift back to using the standard health check interval that is defined.
             * The default value for "healthy edge interval" is the same as the default interval.
             * </pre>
             *
             * <code>.google.protobuf.Duration healthy_edge_interval = 16;</code>
             */
            public Builder setHealthyEdgeInterval(com.google.protobuf.Duration value) {

                if (healthyEdgeIntervalBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    healthyEdgeInterval_ = value;
                    onChanged();
                } else {
                    healthyEdgeIntervalBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <pre>
             * The "healthy edge interval" is a special health check interval that is used for the first
             * health check right after a host is marked as healthy. For subsequent health checks
             * Envoy will shift back to using the standard health check interval that is defined.
             * The default value for "healthy edge interval" is the same as the default interval.
             * </pre>
             *
             * <code>.google.protobuf.Duration healthy_edge_interval = 16;</code>
             */
            public Builder setHealthyEdgeInterval(
                    com.google.protobuf.Duration.Builder builderForValue) {

                if (healthyEdgeIntervalBuilder_ == null) {
                    healthyEdgeInterval_ = builderForValue.build();
                    onChanged();
                } else {
                    healthyEdgeIntervalBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <pre>
             * The "healthy edge interval" is a special health check interval that is used for the first
             * health check right after a host is marked as healthy. For subsequent health checks
             * Envoy will shift back to using the standard health check interval that is defined.
             * The default value for "healthy edge interval" is the same as the default interval.
             * </pre>
             *
             * <code>.google.protobuf.Duration healthy_edge_interval = 16;</code>
             */
            public Builder mergeHealthyEdgeInterval(com.google.protobuf.Duration value) {

                if (healthyEdgeIntervalBuilder_ == null) {
                    if (healthyEdgeInterval_ != null) {
                        healthyEdgeInterval_ =
                                com.google.protobuf.Duration.newBuilder(healthyEdgeInterval_).mergeFrom(value).buildPartial();
                    } else {
                        healthyEdgeInterval_ = value;
                    }
                    onChanged();
                } else {
                    healthyEdgeIntervalBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <pre>
             * The "healthy edge interval" is a special health check interval that is used for the first
             * health check right after a host is marked as healthy. For subsequent health checks
             * Envoy will shift back to using the standard health check interval that is defined.
             * The default value for "healthy edge interval" is the same as the default interval.
             * </pre>
             *
             * <code>.google.protobuf.Duration healthy_edge_interval = 16;</code>
             */
            public Builder clearHealthyEdgeInterval() {

                if (healthyEdgeIntervalBuilder_ == null) {
                    healthyEdgeInterval_ = null;
                    onChanged();
                } else {
                    healthyEdgeInterval_ = null;
                    healthyEdgeIntervalBuilder_ = null;
                }

                return this;
            }

            /**
             * <pre>
             * The "healthy edge interval" is a special health check interval that is used for the first
             * health check right after a host is marked as healthy. For subsequent health checks
             * Envoy will shift back to using the standard health check interval that is defined.
             * The default value for "healthy edge interval" is the same as the default interval.
             * </pre>
             *
             * <code>.google.protobuf.Duration healthy_edge_interval = 16;</code>
             */
            public com.google.protobuf.Duration.Builder getHealthyEdgeIntervalBuilder() {

                onChanged();
                return getHealthyEdgeIntervalFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * The "healthy edge interval" is a special health check interval that is used for the first
             * health check right after a host is marked as healthy. For subsequent health checks
             * Envoy will shift back to using the standard health check interval that is defined.
             * The default value for "healthy edge interval" is the same as the default interval.
             * </pre>
             *
             * <code>.google.protobuf.Duration healthy_edge_interval = 16;</code>
             */
            public com.google.protobuf.DurationOrBuilder getHealthyEdgeIntervalOrBuilder() {

                if (healthyEdgeIntervalBuilder_ != null) {
                    return healthyEdgeIntervalBuilder_.getMessageOrBuilder();
                } else {
                    return healthyEdgeInterval_ == null ?
                            com.google.protobuf.Duration.getDefaultInstance() : healthyEdgeInterval_;
                }
            }

            /**
             * <pre>
             * The "healthy edge interval" is a special health check interval that is used for the first
             * health check right after a host is marked as healthy. For subsequent health checks
             * Envoy will shift back to using the standard health check interval that is defined.
             * The default value for "healthy edge interval" is the same as the default interval.
             * </pre>
             *
             * <code>.google.protobuf.Duration healthy_edge_interval = 16;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>
            getHealthyEdgeIntervalFieldBuilder() {

                if (healthyEdgeIntervalBuilder_ == null) {
                    healthyEdgeIntervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                            getHealthyEdgeInterval(),
                            getParentForChildren(),
                            isClean());
                    healthyEdgeInterval_ = null;
                }
                return healthyEdgeIntervalBuilder_;
            }

            private java.lang.Object eventLogPath_ = "";

            /**
             * <pre>
             * Specifies the path to the :ref:`health check event log &lt;arch_overview_health_check_logging&gt;`.
             * If empty, no event log will be written.
             * </pre>
             *
             * <code>string event_log_path = 17;</code>
             */
            public java.lang.String getEventLogPath() {

                java.lang.Object ref = eventLogPath_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    eventLogPath_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * Specifies the path to the :ref:`health check event log &lt;arch_overview_health_check_logging&gt;`.
             * If empty, no event log will be written.
             * </pre>
             *
             * <code>string event_log_path = 17;</code>
             */
            public com.google.protobuf.ByteString
            getEventLogPathBytes() {

                java.lang.Object ref = eventLogPath_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    eventLogPath_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * Specifies the path to the :ref:`health check event log &lt;arch_overview_health_check_logging&gt;`.
             * If empty, no event log will be written.
             * </pre>
             *
             * <code>string event_log_path = 17;</code>
             */
            public Builder setEventLogPath(
                    java.lang.String value) {

                if (value == null) {
                    throw new NullPointerException();
                }

                eventLogPath_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Specifies the path to the :ref:`health check event log &lt;arch_overview_health_check_logging&gt;`.
             * If empty, no event log will be written.
             * </pre>
             *
             * <code>string event_log_path = 17;</code>
             */
            public Builder clearEventLogPath() {

                eventLogPath_ = getDefaultInstance().getEventLogPath();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Specifies the path to the :ref:`health check event log &lt;arch_overview_health_check_logging&gt;`.
             * If empty, no event log will be written.
             * </pre>
             *
             * <code>string event_log_path = 17;</code>
             */
            public Builder setEventLogPathBytes(
                    com.google.protobuf.ByteString value) {

                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                eventLogPath_ = value;
                onChanged();
                return this;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.setUnknownFieldsProto3(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {

                return super.mergeUnknownFields(unknownFields);
            }

            // @@protoc_insertion_point(builder_scope:envoy.api.v2.core.HealthCheck)
        }

        // @@protoc_insertion_point(class_scope:envoy.api.v2.core.HealthCheck)
        private static final HealthCheckOuterClass.HealthCheck DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new HealthCheckOuterClass.HealthCheck();
        }

        public static HealthCheckOuterClass.HealthCheck getDefaultInstance() {

            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<HealthCheck>
                PARSER = new com.google.protobuf.AbstractParser<HealthCheck>() {
            @java.lang.Override
            public HealthCheck parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {

                return new HealthCheck(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<HealthCheck> parser() {

            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<HealthCheck> getParserForType() {

            return PARSER;
        }

        @java.lang.Override
        public HealthCheckOuterClass.HealthCheck getDefaultInstanceForType() {

            return DEFAULT_INSTANCE;
        }

    }

    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_envoy_api_v2_core_HealthCheck_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_envoy_api_v2_core_HealthCheck_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_envoy_api_v2_core_HealthCheck_Payload_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_envoy_api_v2_core_HealthCheck_Payload_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_envoy_api_v2_core_HealthCheck_HttpHealthCheck_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_envoy_api_v2_core_HealthCheck_HttpHealthCheck_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_envoy_api_v2_core_HealthCheck_TcpHealthCheck_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_envoy_api_v2_core_HealthCheck_TcpHealthCheck_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_envoy_api_v2_core_HealthCheck_RedisHealthCheck_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_envoy_api_v2_core_HealthCheck_RedisHealthCheck_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_envoy_api_v2_core_HealthCheck_GrpcHealthCheck_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_envoy_api_v2_core_HealthCheck_GrpcHealthCheck_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_envoy_api_v2_core_HealthCheck_CustomHealthCheck_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_envoy_api_v2_core_HealthCheck_CustomHealthCheck_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {

        return descriptor;
    }

    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;

    static {
        java.lang.String[] descriptorData = {
                "\n$envoy/api/v2/core/health_check.proto\022\021" +
                        "envoy.api.v2.core\032\034envoy/api/v2/core/bas" +
                        "e.proto\032\036google/protobuf/duration.proto\032" +
                        "\034google/protobuf/struct.proto\032\036google/pr" +
                        "otobuf/wrappers.proto\032\027validate/validate" +
                        ".proto\032\024gogoproto/gogo.proto\"\307\r\n\013HealthC" +
                        "heck\022<\n\007timeout\030\001 \001(\0132\031.google.protobuf." +
                        "DurationB\020\272\351\300\003\007\252\001\004\010\001*\000\230\337\037\001\022=\n\010interval\030\002" +
                        " \001(\0132\031.google.protobuf.DurationB\020\272\351\300\003\007\252\001" +
                        "\004\010\001*\000\230\337\037\001\0222\n\017interval_jitter\030\003 \001(\0132\031.goo" +
                        "gle.protobuf.Duration\022\037\n\027interval_jitter" +
                        "_percent\030\022 \001(\r\0229\n\023unhealthy_threshold\030\004 " +
                        "\001(\0132\034.google.protobuf.UInt32Value\0227\n\021hea" +
                        "lthy_threshold\030\005 \001(\0132\034.google.protobuf.U" +
                        "Int32Value\022.\n\010alt_port\030\006 \001(\0132\034.google.pr" +
                        "otobuf.UInt32Value\0224\n\020reuse_connection\030\007" +
                        " \001(\0132\032.google.protobuf.BoolValue\022K\n\021http" +
                        "_health_check\030\010 \001(\0132..envoy.api.v2.core." +
                        "HealthCheck.HttpHealthCheckH\000\022I\n\020tcp_hea" +
                        "lth_check\030\t \001(\0132-.envoy.api.v2.core.Heal" +
                        "thCheck.TcpHealthCheckH\000\022K\n\021grpc_health_" +
                        "check\030\013 \001(\0132..envoy.api.v2.core.HealthCh" +
                        "eck.GrpcHealthCheckH\000\022O\n\023custom_health_c" +
                        "heck\030\r \001(\01320.envoy.api.v2.core.HealthChe" +
                        "ck.CustomHealthCheckH\000\0226\n\023no_traffic_int" +
                        "erval\030\014 \001(\0132\031.google.protobuf.Duration\0225" +
                        "\n\022unhealthy_interval\030\016 \001(\0132\031.google.prot" +
                        "obuf.Duration\022:\n\027unhealthy_edge_interval" +
                        "\030\017 \001(\0132\031.google.protobuf.Duration\0228\n\025hea" +
                        "lthy_edge_interval\030\020 \001(\0132\031.google.protob" +
                        "uf.Duration\022\026\n\016event_log_path\030\021 \001(\t\032H\n\007P" +
                        "ayload\022\031\n\004text\030\001 \001(\tB\t\272\351\300\003\004r\002 \001H\000\022\020\n\006bin" +
                        "ary\030\002 \001(\014H\000B\020\n\007payload\022\005\270\351\300\003\001\032\271\002\n\017HttpHe" +
                        "althCheck\022\014\n\004host\030\001 \001(\t\022\027\n\004path\030\002 \001(\tB\t\272" +
                        "\351\300\003\004r\002 \001\0224\n\004send\030\003 \001(\0132&.envoy.api.v2.co" +
                        "re.HealthCheck.Payload\0227\n\007receive\030\004 \001(\0132" +
                        "&.envoy.api.v2.core.HealthCheck.Payload\022" +
                        "\024\n\014service_name\030\005 \001(\t\022D\n\026request_headers" +
                        "_to_add\030\006 \003(\0132$.envoy.api.v2.core.Header" +
                        "ValueOption\022!\n\031request_headers_to_remove" +
                        "\030\010 \003(\t\022\021\n\tuse_http2\030\007 \001(\010\032\177\n\016TcpHealthCh" +
                        "eck\0224\n\004send\030\001 \001(\0132&.envoy.api.v2.core.He" +
                        "althCheck.Payload\0227\n\007receive\030\002 \003(\0132&.env" +
                        "oy.api.v2.core.HealthCheck.Payload\032\037\n\020Re" +
                        "disHealthCheck\022\013\n\003key\030\001 \001(\t\032\'\n\017GrpcHealt" +
                        "hCheck\022\024\n\014service_name\030\001 \001(\t\032U\n\021CustomHe" +
                        "althCheck\022\027\n\004name\030\001 \001(\tB\t\272\351\300\003\004r\002 \001\022\'\n\006co" +
                        "nfig\030\002 \001(\0132\027.google.protobuf.StructB\027\n\016h" +
                        "ealth_checker\022\005\270\351\300\003\001J\004\010\n\020\013R\022redis_health" +
                        "_check*R\n\014HealthStatus\022\013\n\007UNKNOWN\020\000\022\013\n\007H" +
                        "EALTHY\020\001\022\r\n\tUNHEALTHY\020\002\022\014\n\010DRAINING\020\003\022\013\n" +
                        "\007TIMEOUT\020\004B\004\250\342\036\001b\006proto3"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            com.google.protobuf.Descriptors.FileDescriptor root) {

                        descriptor = root;
                        return null;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[]{
                                Base.getDescriptor(),
                                com.google.protobuf.DurationProto.getDescriptor(),
                                com.google.protobuf.StructProto.getDescriptor(),
                                com.google.protobuf.WrappersProto.getDescriptor(),
                                Validate.getDescriptor(),
                                com.google.protobuf.GoGoProtos.getDescriptor(),
                        }, assigner);
        internal_static_envoy_api_v2_core_HealthCheck_descriptor =
                getDescriptor().getMessageTypes().get(0);
        internal_static_envoy_api_v2_core_HealthCheck_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_envoy_api_v2_core_HealthCheck_descriptor,
                new java.lang.String[]{"Timeout", "Interval", "IntervalJitter", "IntervalJitterPercent", "UnhealthyThreshold", "HealthyThreshold", "AltPort", "ReuseConnection", "HttpHealthCheck", "TcpHealthCheck", "GrpcHealthCheck", "CustomHealthCheck", "NoTrafficInterval", "UnhealthyInterval", "UnhealthyEdgeInterval", "HealthyEdgeInterval", "EventLogPath", "HealthChecker",});
        internal_static_envoy_api_v2_core_HealthCheck_Payload_descriptor =
                internal_static_envoy_api_v2_core_HealthCheck_descriptor.getNestedTypes().get(0);
        internal_static_envoy_api_v2_core_HealthCheck_Payload_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_envoy_api_v2_core_HealthCheck_Payload_descriptor,
                new java.lang.String[]{"Text", "Binary", "Payload",});
        internal_static_envoy_api_v2_core_HealthCheck_HttpHealthCheck_descriptor =
                internal_static_envoy_api_v2_core_HealthCheck_descriptor.getNestedTypes().get(1);
        internal_static_envoy_api_v2_core_HealthCheck_HttpHealthCheck_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_envoy_api_v2_core_HealthCheck_HttpHealthCheck_descriptor,
                new java.lang.String[]{"Host", "Path", "Send", "Receive", "ServiceName", "RequestHeadersToAdd", "RequestHeadersToRemove", "UseHttp2",});
        internal_static_envoy_api_v2_core_HealthCheck_TcpHealthCheck_descriptor =
                internal_static_envoy_api_v2_core_HealthCheck_descriptor.getNestedTypes().get(2);
        internal_static_envoy_api_v2_core_HealthCheck_TcpHealthCheck_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_envoy_api_v2_core_HealthCheck_TcpHealthCheck_descriptor,
                new java.lang.String[]{"Send", "Receive",});
        internal_static_envoy_api_v2_core_HealthCheck_RedisHealthCheck_descriptor =
                internal_static_envoy_api_v2_core_HealthCheck_descriptor.getNestedTypes().get(3);
        internal_static_envoy_api_v2_core_HealthCheck_RedisHealthCheck_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_envoy_api_v2_core_HealthCheck_RedisHealthCheck_descriptor,
                new java.lang.String[]{"Key",});
        internal_static_envoy_api_v2_core_HealthCheck_GrpcHealthCheck_descriptor =
                internal_static_envoy_api_v2_core_HealthCheck_descriptor.getNestedTypes().get(4);
        internal_static_envoy_api_v2_core_HealthCheck_GrpcHealthCheck_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_envoy_api_v2_core_HealthCheck_GrpcHealthCheck_descriptor,
                new java.lang.String[]{"ServiceName",});
        internal_static_envoy_api_v2_core_HealthCheck_CustomHealthCheck_descriptor =
                internal_static_envoy_api_v2_core_HealthCheck_descriptor.getNestedTypes().get(5);
        internal_static_envoy_api_v2_core_HealthCheck_CustomHealthCheck_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_envoy_api_v2_core_HealthCheck_CustomHealthCheck_descriptor,
                new java.lang.String[]{"Name", "Config",});
        com.google.protobuf.ExtensionRegistry registry =
                com.google.protobuf.ExtensionRegistry.newInstance();
        registry.add(com.google.protobuf.GoGoProtos.equalAll);
        registry.add(com.google.protobuf.GoGoProtos.stdduration);
        registry.add(Validate.required);
        registry.add(Validate.rules);
        com.google.protobuf.Descriptors.FileDescriptor
                .internalUpdateFileDescriptor(descriptor, registry);
        Base.getDescriptor();
        com.google.protobuf.DurationProto.getDescriptor();
        com.google.protobuf.StructProto.getDescriptor();
        com.google.protobuf.WrappersProto.getDescriptor();
        Validate.getDescriptor();
        com.google.protobuf.GoGoProtos.getDescriptor();
    }

    // @@protoc_insertion_point(outer_class_scope)
}
