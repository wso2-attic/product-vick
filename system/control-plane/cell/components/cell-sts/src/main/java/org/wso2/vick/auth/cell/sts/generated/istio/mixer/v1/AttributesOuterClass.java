// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mixer/v1/attributes.proto

package org.wso2.vick.auth.cell.sts.generated.istio.mixer.v1;

public final class AttributesOuterClass {
  private AttributesOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface AttributesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:istio.mixer.v1.Attributes)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A map of attribute name to its value.
     * </pre>
     *
     * <code>map&lt;string, .istio.mixer.v1.Attributes.AttributeValue&gt; attributes = 1;</code>
     */
    int getAttributesCount();
    /**
     * <pre>
     * A map of attribute name to its value.
     * </pre>
     *
     * <code>map&lt;string, .istio.mixer.v1.Attributes.AttributeValue&gt; attributes = 1;</code>
     */
    boolean containsAttributes(
            String key);
    /**
     * Use {@link #getAttributesMap()} instead.
     */
    @Deprecated
    java.util.Map<String, Attributes.AttributeValue>
    getAttributes();
    /**
     * <pre>
     * A map of attribute name to its value.
     * </pre>
     *
     * <code>map&lt;string, .istio.mixer.v1.Attributes.AttributeValue&gt; attributes = 1;</code>
     */
    java.util.Map<String, Attributes.AttributeValue>
    getAttributesMap();
    /**
     * <pre>
     * A map of attribute name to its value.
     * </pre>
     *
     * <code>map&lt;string, .istio.mixer.v1.Attributes.AttributeValue&gt; attributes = 1;</code>
     */

    Attributes.AttributeValue getAttributesOrDefault(
            String key,
            Attributes.AttributeValue defaultValue);
    /**
     * <pre>
     * A map of attribute name to its value.
     * </pre>
     *
     * <code>map&lt;string, .istio.mixer.v1.Attributes.AttributeValue&gt; attributes = 1;</code>
     */

    Attributes.AttributeValue getAttributesOrThrow(
            String key);
  }
  /**
   * <pre>
   * Attributes represents a set of typed name/value pairs. Many of Mixer's
   * API either consume and/or return attributes.
   * Istio uses attributes to control the runtime behavior of services running in the service mesh.
   * Attributes are named and typed pieces of metadata describing ingress and egress traffic and the
   * environment this traffic occurs in. An Istio attribute carries a specific piece
   * of information such as the error code of an API request, the latency of an API request, or the
   * original IP address of a TCP connection. For example:
   * ```
   * request.path: xyz/abc
   * request.size: 234
   * request.time: 12:34:56.789 04/17/2017
   * source.ip: 192.168.0.1
   * target.service: example
   * ```
   * A given Istio deployment has a fixed vocabulary of attributes that it understands.
   * The specific vocabulary is determined by the set of attribute producers being used
   * in the deployment. The primary attribute producer in Istio is Envoy, although
   * specialized Mixer adapters and services can also generate attributes.
   * The common baseline set of attributes available in most Istio deployments is defined
   * [here](https://istio.io/docs/reference/config/mixer/attribute-vocabulary.html).
   * Attributes are strongly typed. The supported attribute types are defined by
   * [ValueType](https://github.com/istio/api/blob/master/policy/v1beta1/value_type.proto).
   * Each type of value is encoded into one of the so-called transport types present
   * in this message.
   * Defines a map of attributes in uncompressed format.
   * Following places may use this message:
   * 1) Configure Istio/Proxy with static per-proxy attributes, such as source.uid.
   * 2) Service IDL definition to extract api attributes for active requests.
   * 3) Forward attributes from client proxy to server proxy for HTTP requests.
   * </pre>
   *
   * Protobuf type {@code istio.mixer.v1.Attributes}
   */
  public  static final class Attributes extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:istio.mixer.v1.Attributes)
      AttributesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Attributes.newBuilder() to construct.
    private Attributes(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Attributes() {
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Attributes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                attributes_ = com.google.protobuf.MapField.newMapField(
                    AttributesDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<String, AttributeValue>
              attributes__ = input.readMessage(
                  AttributesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              attributes_.getMutableMap().put(
                  attributes__.getKey(), attributes__.getValue());
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return AttributesOuterClass.internal_static_istio_mixer_v1_Attributes_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetAttributes();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return AttributesOuterClass.internal_static_istio_mixer_v1_Attributes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Attributes.class, Builder.class);
    }

    public interface AttributeValueOrBuilder extends
        // @@protoc_insertion_point(interface_extends:istio.mixer.v1.Attributes.AttributeValue)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Used for values of type STRING, DNS_NAME, EMAIL_ADDRESS, and URI
       * </pre>
       *
       * <code>string string_value = 2;</code>
       */
      String getStringValue();
      /**
       * <pre>
       * Used for values of type STRING, DNS_NAME, EMAIL_ADDRESS, and URI
       * </pre>
       *
       * <code>string string_value = 2;</code>
       */
      com.google.protobuf.ByteString
          getStringValueBytes();

      /**
       * <pre>
       * Used for values of type INT64
       * </pre>
       *
       * <code>int64 int64_value = 3;</code>
       */
      long getInt64Value();

      /**
       * <pre>
       * Used for values of type DOUBLE
       * </pre>
       *
       * <code>double double_value = 4;</code>
       */
      double getDoubleValue();

      /**
       * <pre>
       * Used for values of type BOOL
       * </pre>
       *
       * <code>bool bool_value = 5;</code>
       */
      boolean getBoolValue();

      /**
       * <pre>
       * Used for values of type BYTES
       * </pre>
       *
       * <code>bytes bytes_value = 6;</code>
       */
      com.google.protobuf.ByteString getBytesValue();

      /**
       * <pre>
       * Used for values of type TIMESTAMP
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp_value = 7;</code>
       */
      boolean hasTimestampValue();
      /**
       * <pre>
       * Used for values of type TIMESTAMP
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp_value = 7;</code>
       */
      com.google.protobuf.Timestamp getTimestampValue();
      /**
       * <pre>
       * Used for values of type TIMESTAMP
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp_value = 7;</code>
       */
      com.google.protobuf.TimestampOrBuilder getTimestampValueOrBuilder();

      /**
       * <pre>
       * Used for values of type DURATION
       * </pre>
       *
       * <code>.google.protobuf.Duration duration_value = 8;</code>
       */
      boolean hasDurationValue();
      /**
       * <pre>
       * Used for values of type DURATION
       * </pre>
       *
       * <code>.google.protobuf.Duration duration_value = 8;</code>
       */
      com.google.protobuf.Duration getDurationValue();
      /**
       * <pre>
       * Used for values of type DURATION
       * </pre>
       *
       * <code>.google.protobuf.Duration duration_value = 8;</code>
       */
      com.google.protobuf.DurationOrBuilder getDurationValueOrBuilder();

      /**
       * <pre>
       * Used for values of type STRING_MAP
       * </pre>
       *
       * <code>.istio.mixer.v1.Attributes.StringMap string_map_value = 9;</code>
       */
      boolean hasStringMapValue();
      /**
       * <pre>
       * Used for values of type STRING_MAP
       * </pre>
       *
       * <code>.istio.mixer.v1.Attributes.StringMap string_map_value = 9;</code>
       */
      StringMap getStringMapValue();
      /**
       * <pre>
       * Used for values of type STRING_MAP
       * </pre>
       *
       * <code>.istio.mixer.v1.Attributes.StringMap string_map_value = 9;</code>
       */
      StringMapOrBuilder getStringMapValueOrBuilder();

      public AttributeValue.ValueCase getValueCase();
    }
    /**
     * <pre>
     * Specifies one attribute value with different type.
     * </pre>
     *
     * Protobuf type {@code istio.mixer.v1.Attributes.AttributeValue}
     */
    public  static final class AttributeValue extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:istio.mixer.v1.Attributes.AttributeValue)
        AttributeValueOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use AttributeValue.newBuilder() to construct.
      private AttributeValue(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private AttributeValue() {
      }

      @Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private AttributeValue(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 18: {
                String s = input.readStringRequireUtf8();
                valueCase_ = 2;
                value_ = s;
                break;
              }
              case 24: {
                valueCase_ = 3;
                value_ = input.readInt64();
                break;
              }
              case 33: {
                valueCase_ = 4;
                value_ = input.readDouble();
                break;
              }
              case 40: {
                valueCase_ = 5;
                value_ = input.readBool();
                break;
              }
              case 50: {
                valueCase_ = 6;
                value_ = input.readBytes();
                break;
              }
              case 58: {
                com.google.protobuf.Timestamp.Builder subBuilder = null;
                if (valueCase_ == 7) {
                  subBuilder = ((com.google.protobuf.Timestamp) value_).toBuilder();
                }
                value_ =
                    input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((com.google.protobuf.Timestamp) value_);
                  value_ = subBuilder.buildPartial();
                }
                valueCase_ = 7;
                break;
              }
              case 66: {
                com.google.protobuf.Duration.Builder subBuilder = null;
                if (valueCase_ == 8) {
                  subBuilder = ((com.google.protobuf.Duration) value_).toBuilder();
                }
                value_ =
                    input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((com.google.protobuf.Duration) value_);
                  value_ = subBuilder.buildPartial();
                }
                valueCase_ = 8;
                break;
              }
              case 74: {
                StringMap.Builder subBuilder = null;
                if (valueCase_ == 9) {
                  subBuilder = ((StringMap) value_).toBuilder();
                }
                value_ =
                    input.readMessage(StringMap.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((StringMap) value_);
                  value_ = subBuilder.buildPartial();
                }
                valueCase_ = 9;
                break;
              }
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return AttributesOuterClass.internal_static_istio_mixer_v1_Attributes_AttributeValue_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return AttributesOuterClass.internal_static_istio_mixer_v1_Attributes_AttributeValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                AttributeValue.class, Builder.class);
      }

      private int valueCase_ = 0;
      private Object value_;
      public enum ValueCase
          implements com.google.protobuf.Internal.EnumLite {
        STRING_VALUE(2),
        INT64_VALUE(3),
        DOUBLE_VALUE(4),
        BOOL_VALUE(5),
        BYTES_VALUE(6),
        TIMESTAMP_VALUE(7),
        DURATION_VALUE(8),
        STRING_MAP_VALUE(9),
        VALUE_NOT_SET(0);
        private final int value;
        private ValueCase(int value) {
          this.value = value;
        }
        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @Deprecated
        public static ValueCase valueOf(int value) {
          return forNumber(value);
        }

        public static ValueCase forNumber(int value) {
          switch (value) {
            case 2: return STRING_VALUE;
            case 3: return INT64_VALUE;
            case 4: return DOUBLE_VALUE;
            case 5: return BOOL_VALUE;
            case 6: return BYTES_VALUE;
            case 7: return TIMESTAMP_VALUE;
            case 8: return DURATION_VALUE;
            case 9: return STRING_MAP_VALUE;
            case 0: return VALUE_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public ValueCase
      getValueCase() {
        return ValueCase.forNumber(
            valueCase_);
      }

      public static final int STRING_VALUE_FIELD_NUMBER = 2;
      /**
       * <pre>
       * Used for values of type STRING, DNS_NAME, EMAIL_ADDRESS, and URI
       * </pre>
       *
       * <code>string string_value = 2;</code>
       */
      public String getStringValue() {
        Object ref = "";
        if (valueCase_ == 2) {
          ref = value_;
        }
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (valueCase_ == 2) {
            value_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Used for values of type STRING, DNS_NAME, EMAIL_ADDRESS, and URI
       * </pre>
       *
       * <code>string string_value = 2;</code>
       */
      public com.google.protobuf.ByteString
          getStringValueBytes() {
        Object ref = "";
        if (valueCase_ == 2) {
          ref = value_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          if (valueCase_ == 2) {
            value_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int INT64_VALUE_FIELD_NUMBER = 3;
      /**
       * <pre>
       * Used for values of type INT64
       * </pre>
       *
       * <code>int64 int64_value = 3;</code>
       */
      public long getInt64Value() {
        if (valueCase_ == 3) {
          return (Long) value_;
        }
        return 0L;
      }

      public static final int DOUBLE_VALUE_FIELD_NUMBER = 4;
      /**
       * <pre>
       * Used for values of type DOUBLE
       * </pre>
       *
       * <code>double double_value = 4;</code>
       */
      public double getDoubleValue() {
        if (valueCase_ == 4) {
          return (Double) value_;
        }
        return 0D;
      }

      public static final int BOOL_VALUE_FIELD_NUMBER = 5;
      /**
       * <pre>
       * Used for values of type BOOL
       * </pre>
       *
       * <code>bool bool_value = 5;</code>
       */
      public boolean getBoolValue() {
        if (valueCase_ == 5) {
          return (Boolean) value_;
        }
        return false;
      }

      public static final int BYTES_VALUE_FIELD_NUMBER = 6;
      /**
       * <pre>
       * Used for values of type BYTES
       * </pre>
       *
       * <code>bytes bytes_value = 6;</code>
       */
      public com.google.protobuf.ByteString getBytesValue() {
        if (valueCase_ == 6) {
          return (com.google.protobuf.ByteString) value_;
        }
        return com.google.protobuf.ByteString.EMPTY;
      }

      public static final int TIMESTAMP_VALUE_FIELD_NUMBER = 7;
      /**
       * <pre>
       * Used for values of type TIMESTAMP
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp_value = 7;</code>
       */
      public boolean hasTimestampValue() {
        return valueCase_ == 7;
      }
      /**
       * <pre>
       * Used for values of type TIMESTAMP
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp_value = 7;</code>
       */
      public com.google.protobuf.Timestamp getTimestampValue() {
        if (valueCase_ == 7) {
           return (com.google.protobuf.Timestamp) value_;
        }
        return com.google.protobuf.Timestamp.getDefaultInstance();
      }
      /**
       * <pre>
       * Used for values of type TIMESTAMP
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp_value = 7;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getTimestampValueOrBuilder() {
        if (valueCase_ == 7) {
           return (com.google.protobuf.Timestamp) value_;
        }
        return com.google.protobuf.Timestamp.getDefaultInstance();
      }

      public static final int DURATION_VALUE_FIELD_NUMBER = 8;
      /**
       * <pre>
       * Used for values of type DURATION
       * </pre>
       *
       * <code>.google.protobuf.Duration duration_value = 8;</code>
       */
      public boolean hasDurationValue() {
        return valueCase_ == 8;
      }
      /**
       * <pre>
       * Used for values of type DURATION
       * </pre>
       *
       * <code>.google.protobuf.Duration duration_value = 8;</code>
       */
      public com.google.protobuf.Duration getDurationValue() {
        if (valueCase_ == 8) {
           return (com.google.protobuf.Duration) value_;
        }
        return com.google.protobuf.Duration.getDefaultInstance();
      }
      /**
       * <pre>
       * Used for values of type DURATION
       * </pre>
       *
       * <code>.google.protobuf.Duration duration_value = 8;</code>
       */
      public com.google.protobuf.DurationOrBuilder getDurationValueOrBuilder() {
        if (valueCase_ == 8) {
           return (com.google.protobuf.Duration) value_;
        }
        return com.google.protobuf.Duration.getDefaultInstance();
      }

      public static final int STRING_MAP_VALUE_FIELD_NUMBER = 9;
      /**
       * <pre>
       * Used for values of type STRING_MAP
       * </pre>
       *
       * <code>.istio.mixer.v1.Attributes.StringMap string_map_value = 9;</code>
       */
      public boolean hasStringMapValue() {
        return valueCase_ == 9;
      }
      /**
       * <pre>
       * Used for values of type STRING_MAP
       * </pre>
       *
       * <code>.istio.mixer.v1.Attributes.StringMap string_map_value = 9;</code>
       */
      public StringMap getStringMapValue() {
        if (valueCase_ == 9) {
           return (StringMap) value_;
        }
        return StringMap.getDefaultInstance();
      }
      /**
       * <pre>
       * Used for values of type STRING_MAP
       * </pre>
       *
       * <code>.istio.mixer.v1.Attributes.StringMap string_map_value = 9;</code>
       */
      public StringMapOrBuilder getStringMapValueOrBuilder() {
        if (valueCase_ == 9) {
           return (StringMap) value_;
        }
        return StringMap.getDefaultInstance();
      }

      private byte memoizedIsInitialized = -1;
      @Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (valueCase_ == 2) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, value_);
        }
        if (valueCase_ == 3) {
          output.writeInt64(
              3, (long)((Long) value_));
        }
        if (valueCase_ == 4) {
          output.writeDouble(
              4, (double)((Double) value_));
        }
        if (valueCase_ == 5) {
          output.writeBool(
              5, (boolean)((Boolean) value_));
        }
        if (valueCase_ == 6) {
          output.writeBytes(
              6, (com.google.protobuf.ByteString) value_);
        }
        if (valueCase_ == 7) {
          output.writeMessage(7, (com.google.protobuf.Timestamp) value_);
        }
        if (valueCase_ == 8) {
          output.writeMessage(8, (com.google.protobuf.Duration) value_);
        }
        if (valueCase_ == 9) {
          output.writeMessage(9, (StringMap) value_);
        }
        unknownFields.writeTo(output);
      }

      @Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (valueCase_ == 2) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, value_);
        }
        if (valueCase_ == 3) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(
                3, (long)((Long) value_));
        }
        if (valueCase_ == 4) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(
                4, (double)((Double) value_));
        }
        if (valueCase_ == 5) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(
                5, (boolean)((Boolean) value_));
        }
        if (valueCase_ == 6) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(
                6, (com.google.protobuf.ByteString) value_);
        }
        if (valueCase_ == 7) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, (com.google.protobuf.Timestamp) value_);
        }
        if (valueCase_ == 8) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, (com.google.protobuf.Duration) value_);
        }
        if (valueCase_ == 9) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(9, (StringMap) value_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @Override
      public boolean equals(final Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof AttributeValue)) {
          return super.equals(obj);
        }
        AttributeValue other = (AttributeValue) obj;

        boolean result = true;
        result = result && getValueCase().equals(
            other.getValueCase());
        if (!result) return false;
        switch (valueCase_) {
          case 2:
            result = result && getStringValue()
                .equals(other.getStringValue());
            break;
          case 3:
            result = result && (getInt64Value()
                == other.getInt64Value());
            break;
          case 4:
            result = result && (
                Double.doubleToLongBits(getDoubleValue())
                == Double.doubleToLongBits(
                    other.getDoubleValue()));
            break;
          case 5:
            result = result && (getBoolValue()
                == other.getBoolValue());
            break;
          case 6:
            result = result && getBytesValue()
                .equals(other.getBytesValue());
            break;
          case 7:
            result = result && getTimestampValue()
                .equals(other.getTimestampValue());
            break;
          case 8:
            result = result && getDurationValue()
                .equals(other.getDurationValue());
            break;
          case 9:
            result = result && getStringMapValue()
                .equals(other.getStringMapValue());
            break;
          case 0:
          default:
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        switch (valueCase_) {
          case 2:
            hash = (37 * hash) + STRING_VALUE_FIELD_NUMBER;
            hash = (53 * hash) + getStringValue().hashCode();
            break;
          case 3:
            hash = (37 * hash) + INT64_VALUE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getInt64Value());
            break;
          case 4:
            hash = (37 * hash) + DOUBLE_VALUE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                Double.doubleToLongBits(getDoubleValue()));
            break;
          case 5:
            hash = (37 * hash) + BOOL_VALUE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getBoolValue());
            break;
          case 6:
            hash = (37 * hash) + BYTES_VALUE_FIELD_NUMBER;
            hash = (53 * hash) + getBytesValue().hashCode();
            break;
          case 7:
            hash = (37 * hash) + TIMESTAMP_VALUE_FIELD_NUMBER;
            hash = (53 * hash) + getTimestampValue().hashCode();
            break;
          case 8:
            hash = (37 * hash) + DURATION_VALUE_FIELD_NUMBER;
            hash = (53 * hash) + getDurationValue().hashCode();
            break;
          case 9:
            hash = (37 * hash) + STRING_MAP_VALUE_FIELD_NUMBER;
            hash = (53 * hash) + getStringMapValue().hashCode();
            break;
          case 0:
          default:
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static AttributeValue parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static AttributeValue parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static AttributeValue parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static AttributeValue parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static AttributeValue parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static AttributeValue parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static AttributeValue parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static AttributeValue parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static AttributeValue parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static AttributeValue parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static AttributeValue parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static AttributeValue parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(AttributeValue prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @Override
      protected Builder newBuilderForType(
          BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Specifies one attribute value with different type.
       * </pre>
       *
       * Protobuf type {@code istio.mixer.v1.Attributes.AttributeValue}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:istio.mixer.v1.Attributes.AttributeValue)
          AttributeValueOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return AttributesOuterClass.internal_static_istio_mixer_v1_Attributes_AttributeValue_descriptor;
        }

        @Override
        protected FieldAccessorTable
            internalGetFieldAccessorTable() {
          return AttributesOuterClass.internal_static_istio_mixer_v1_Attributes_AttributeValue_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  AttributeValue.class, Builder.class);
        }

        // Construct using org.wso2.vick.telemetry.receiver.generated.AttributesOuterClass.Attributes.AttributeValue.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @Override
        public Builder clear() {
          super.clear();
          valueCase_ = 0;
          value_ = null;
          return this;
        }

        @Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return AttributesOuterClass.internal_static_istio_mixer_v1_Attributes_AttributeValue_descriptor;
        }

        @Override
        public AttributeValue getDefaultInstanceForType() {
          return AttributeValue.getDefaultInstance();
        }

        @Override
        public AttributeValue build() {
          AttributeValue result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @Override
        public AttributeValue buildPartial() {
          AttributeValue result = new AttributeValue(this);
          if (valueCase_ == 2) {
            result.value_ = value_;
          }
          if (valueCase_ == 3) {
            result.value_ = value_;
          }
          if (valueCase_ == 4) {
            result.value_ = value_;
          }
          if (valueCase_ == 5) {
            result.value_ = value_;
          }
          if (valueCase_ == 6) {
            result.value_ = value_;
          }
          if (valueCase_ == 7) {
            if (timestampValueBuilder_ == null) {
              result.value_ = value_;
            } else {
              result.value_ = timestampValueBuilder_.build();
            }
          }
          if (valueCase_ == 8) {
            if (durationValueBuilder_ == null) {
              result.value_ = value_;
            } else {
              result.value_ = durationValueBuilder_.build();
            }
          }
          if (valueCase_ == 9) {
            if (stringMapValueBuilder_ == null) {
              result.value_ = value_;
            } else {
              result.value_ = stringMapValueBuilder_.build();
            }
          }
          result.valueCase_ = valueCase_;
          onBuilt();
          return result;
        }

        @Override
        public Builder clone() {
          return (Builder) super.clone();
        }
        @Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        @Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        @Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        @Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        @Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        @Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof AttributeValue) {
            return mergeFrom((AttributeValue)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(AttributeValue other) {
          if (other == AttributeValue.getDefaultInstance()) return this;
          switch (other.getValueCase()) {
            case STRING_VALUE: {
              valueCase_ = 2;
              value_ = other.value_;
              onChanged();
              break;
            }
            case INT64_VALUE: {
              setInt64Value(other.getInt64Value());
              break;
            }
            case DOUBLE_VALUE: {
              setDoubleValue(other.getDoubleValue());
              break;
            }
            case BOOL_VALUE: {
              setBoolValue(other.getBoolValue());
              break;
            }
            case BYTES_VALUE: {
              setBytesValue(other.getBytesValue());
              break;
            }
            case TIMESTAMP_VALUE: {
              mergeTimestampValue(other.getTimestampValue());
              break;
            }
            case DURATION_VALUE: {
              mergeDurationValue(other.getDurationValue());
              break;
            }
            case STRING_MAP_VALUE: {
              mergeStringMapValue(other.getStringMapValue());
              break;
            }
            case VALUE_NOT_SET: {
              break;
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @Override
        public final boolean isInitialized() {
          return true;
        }

        @Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          AttributeValue parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (AttributeValue) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int valueCase_ = 0;
        private Object value_;
        public ValueCase
            getValueCase() {
          return ValueCase.forNumber(
              valueCase_);
        }

        public Builder clearValue() {
          valueCase_ = 0;
          value_ = null;
          onChanged();
          return this;
        }


        /**
         * <pre>
         * Used for values of type STRING, DNS_NAME, EMAIL_ADDRESS, and URI
         * </pre>
         *
         * <code>string string_value = 2;</code>
         */
        public String getStringValue() {
          Object ref = "";
          if (valueCase_ == 2) {
            ref = value_;
          }
          if (!(ref instanceof String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            String s = bs.toStringUtf8();
            if (valueCase_ == 2) {
              value_ = s;
            }
            return s;
          } else {
            return (String) ref;
          }
        }
        /**
         * <pre>
         * Used for values of type STRING, DNS_NAME, EMAIL_ADDRESS, and URI
         * </pre>
         *
         * <code>string string_value = 2;</code>
         */
        public com.google.protobuf.ByteString
            getStringValueBytes() {
          Object ref = "";
          if (valueCase_ == 2) {
            ref = value_;
          }
          if (ref instanceof String) {
            com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                    (String) ref);
            if (valueCase_ == 2) {
              value_ = b;
            }
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Used for values of type STRING, DNS_NAME, EMAIL_ADDRESS, and URI
         * </pre>
         *
         * <code>string string_value = 2;</code>
         */
        public Builder setStringValue(
            String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  valueCase_ = 2;
          value_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Used for values of type STRING, DNS_NAME, EMAIL_ADDRESS, and URI
         * </pre>
         *
         * <code>string string_value = 2;</code>
         */
        public Builder clearStringValue() {
          if (valueCase_ == 2) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
          return this;
        }
        /**
         * <pre>
         * Used for values of type STRING, DNS_NAME, EMAIL_ADDRESS, and URI
         * </pre>
         *
         * <code>string string_value = 2;</code>
         */
        public Builder setStringValueBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          valueCase_ = 2;
          value_ = value;
          onChanged();
          return this;
        }

        /**
         * <pre>
         * Used for values of type INT64
         * </pre>
         *
         * <code>int64 int64_value = 3;</code>
         */
        public long getInt64Value() {
          if (valueCase_ == 3) {
            return (Long) value_;
          }
          return 0L;
        }
        /**
         * <pre>
         * Used for values of type INT64
         * </pre>
         *
         * <code>int64 int64_value = 3;</code>
         */
        public Builder setInt64Value(long value) {
          valueCase_ = 3;
          value_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Used for values of type INT64
         * </pre>
         *
         * <code>int64 int64_value = 3;</code>
         */
        public Builder clearInt64Value() {
          if (valueCase_ == 3) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
          return this;
        }

        /**
         * <pre>
         * Used for values of type DOUBLE
         * </pre>
         *
         * <code>double double_value = 4;</code>
         */
        public double getDoubleValue() {
          if (valueCase_ == 4) {
            return (Double) value_;
          }
          return 0D;
        }
        /**
         * <pre>
         * Used for values of type DOUBLE
         * </pre>
         *
         * <code>double double_value = 4;</code>
         */
        public Builder setDoubleValue(double value) {
          valueCase_ = 4;
          value_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Used for values of type DOUBLE
         * </pre>
         *
         * <code>double double_value = 4;</code>
         */
        public Builder clearDoubleValue() {
          if (valueCase_ == 4) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
          return this;
        }

        /**
         * <pre>
         * Used for values of type BOOL
         * </pre>
         *
         * <code>bool bool_value = 5;</code>
         */
        public boolean getBoolValue() {
          if (valueCase_ == 5) {
            return (Boolean) value_;
          }
          return false;
        }
        /**
         * <pre>
         * Used for values of type BOOL
         * </pre>
         *
         * <code>bool bool_value = 5;</code>
         */
        public Builder setBoolValue(boolean value) {
          valueCase_ = 5;
          value_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Used for values of type BOOL
         * </pre>
         *
         * <code>bool bool_value = 5;</code>
         */
        public Builder clearBoolValue() {
          if (valueCase_ == 5) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
          return this;
        }

        /**
         * <pre>
         * Used for values of type BYTES
         * </pre>
         *
         * <code>bytes bytes_value = 6;</code>
         */
        public com.google.protobuf.ByteString getBytesValue() {
          if (valueCase_ == 6) {
            return (com.google.protobuf.ByteString) value_;
          }
          return com.google.protobuf.ByteString.EMPTY;
        }
        /**
         * <pre>
         * Used for values of type BYTES
         * </pre>
         *
         * <code>bytes bytes_value = 6;</code>
         */
        public Builder setBytesValue(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  valueCase_ = 6;
          value_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Used for values of type BYTES
         * </pre>
         *
         * <code>bytes bytes_value = 6;</code>
         */
        public Builder clearBytesValue() {
          if (valueCase_ == 6) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
          return this;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> timestampValueBuilder_;
        /**
         * <pre>
         * Used for values of type TIMESTAMP
         * </pre>
         *
         * <code>.google.protobuf.Timestamp timestamp_value = 7;</code>
         */
        public boolean hasTimestampValue() {
          return valueCase_ == 7;
        }
        /**
         * <pre>
         * Used for values of type TIMESTAMP
         * </pre>
         *
         * <code>.google.protobuf.Timestamp timestamp_value = 7;</code>
         */
        public com.google.protobuf.Timestamp getTimestampValue() {
          if (timestampValueBuilder_ == null) {
            if (valueCase_ == 7) {
              return (com.google.protobuf.Timestamp) value_;
            }
            return com.google.protobuf.Timestamp.getDefaultInstance();
          } else {
            if (valueCase_ == 7) {
              return timestampValueBuilder_.getMessage();
            }
            return com.google.protobuf.Timestamp.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * Used for values of type TIMESTAMP
         * </pre>
         *
         * <code>.google.protobuf.Timestamp timestamp_value = 7;</code>
         */
        public Builder setTimestampValue(com.google.protobuf.Timestamp value) {
          if (timestampValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value_ = value;
            onChanged();
          } else {
            timestampValueBuilder_.setMessage(value);
          }
          valueCase_ = 7;
          return this;
        }
        /**
         * <pre>
         * Used for values of type TIMESTAMP
         * </pre>
         *
         * <code>.google.protobuf.Timestamp timestamp_value = 7;</code>
         */
        public Builder setTimestampValue(
            com.google.protobuf.Timestamp.Builder builderForValue) {
          if (timestampValueBuilder_ == null) {
            value_ = builderForValue.build();
            onChanged();
          } else {
            timestampValueBuilder_.setMessage(builderForValue.build());
          }
          valueCase_ = 7;
          return this;
        }
        /**
         * <pre>
         * Used for values of type TIMESTAMP
         * </pre>
         *
         * <code>.google.protobuf.Timestamp timestamp_value = 7;</code>
         */
        public Builder mergeTimestampValue(com.google.protobuf.Timestamp value) {
          if (timestampValueBuilder_ == null) {
            if (valueCase_ == 7 &&
                value_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
              value_ = com.google.protobuf.Timestamp.newBuilder((com.google.protobuf.Timestamp) value_)
                  .mergeFrom(value).buildPartial();
            } else {
              value_ = value;
            }
            onChanged();
          } else {
            if (valueCase_ == 7) {
              timestampValueBuilder_.mergeFrom(value);
            }
            timestampValueBuilder_.setMessage(value);
          }
          valueCase_ = 7;
          return this;
        }
        /**
         * <pre>
         * Used for values of type TIMESTAMP
         * </pre>
         *
         * <code>.google.protobuf.Timestamp timestamp_value = 7;</code>
         */
        public Builder clearTimestampValue() {
          if (timestampValueBuilder_ == null) {
            if (valueCase_ == 7) {
              valueCase_ = 0;
              value_ = null;
              onChanged();
            }
          } else {
            if (valueCase_ == 7) {
              valueCase_ = 0;
              value_ = null;
            }
            timestampValueBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * Used for values of type TIMESTAMP
         * </pre>
         *
         * <code>.google.protobuf.Timestamp timestamp_value = 7;</code>
         */
        public com.google.protobuf.Timestamp.Builder getTimestampValueBuilder() {
          return getTimestampValueFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Used for values of type TIMESTAMP
         * </pre>
         *
         * <code>.google.protobuf.Timestamp timestamp_value = 7;</code>
         */
        public com.google.protobuf.TimestampOrBuilder getTimestampValueOrBuilder() {
          if ((valueCase_ == 7) && (timestampValueBuilder_ != null)) {
            return timestampValueBuilder_.getMessageOrBuilder();
          } else {
            if (valueCase_ == 7) {
              return (com.google.protobuf.Timestamp) value_;
            }
            return com.google.protobuf.Timestamp.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * Used for values of type TIMESTAMP
         * </pre>
         *
         * <code>.google.protobuf.Timestamp timestamp_value = 7;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>
            getTimestampValueFieldBuilder() {
          if (timestampValueBuilder_ == null) {
            if (!(valueCase_ == 7)) {
              value_ = com.google.protobuf.Timestamp.getDefaultInstance();
            }
            timestampValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                    (com.google.protobuf.Timestamp) value_,
                    getParentForChildren(),
                    isClean());
            value_ = null;
          }
          valueCase_ = 7;
          onChanged();;
          return timestampValueBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> durationValueBuilder_;
        /**
         * <pre>
         * Used for values of type DURATION
         * </pre>
         *
         * <code>.google.protobuf.Duration duration_value = 8;</code>
         */
        public boolean hasDurationValue() {
          return valueCase_ == 8;
        }
        /**
         * <pre>
         * Used for values of type DURATION
         * </pre>
         *
         * <code>.google.protobuf.Duration duration_value = 8;</code>
         */
        public com.google.protobuf.Duration getDurationValue() {
          if (durationValueBuilder_ == null) {
            if (valueCase_ == 8) {
              return (com.google.protobuf.Duration) value_;
            }
            return com.google.protobuf.Duration.getDefaultInstance();
          } else {
            if (valueCase_ == 8) {
              return durationValueBuilder_.getMessage();
            }
            return com.google.protobuf.Duration.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * Used for values of type DURATION
         * </pre>
         *
         * <code>.google.protobuf.Duration duration_value = 8;</code>
         */
        public Builder setDurationValue(com.google.protobuf.Duration value) {
          if (durationValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value_ = value;
            onChanged();
          } else {
            durationValueBuilder_.setMessage(value);
          }
          valueCase_ = 8;
          return this;
        }
        /**
         * <pre>
         * Used for values of type DURATION
         * </pre>
         *
         * <code>.google.protobuf.Duration duration_value = 8;</code>
         */
        public Builder setDurationValue(
            com.google.protobuf.Duration.Builder builderForValue) {
          if (durationValueBuilder_ == null) {
            value_ = builderForValue.build();
            onChanged();
          } else {
            durationValueBuilder_.setMessage(builderForValue.build());
          }
          valueCase_ = 8;
          return this;
        }
        /**
         * <pre>
         * Used for values of type DURATION
         * </pre>
         *
         * <code>.google.protobuf.Duration duration_value = 8;</code>
         */
        public Builder mergeDurationValue(com.google.protobuf.Duration value) {
          if (durationValueBuilder_ == null) {
            if (valueCase_ == 8 &&
                value_ != com.google.protobuf.Duration.getDefaultInstance()) {
              value_ = com.google.protobuf.Duration.newBuilder((com.google.protobuf.Duration) value_)
                  .mergeFrom(value).buildPartial();
            } else {
              value_ = value;
            }
            onChanged();
          } else {
            if (valueCase_ == 8) {
              durationValueBuilder_.mergeFrom(value);
            }
            durationValueBuilder_.setMessage(value);
          }
          valueCase_ = 8;
          return this;
        }
        /**
         * <pre>
         * Used for values of type DURATION
         * </pre>
         *
         * <code>.google.protobuf.Duration duration_value = 8;</code>
         */
        public Builder clearDurationValue() {
          if (durationValueBuilder_ == null) {
            if (valueCase_ == 8) {
              valueCase_ = 0;
              value_ = null;
              onChanged();
            }
          } else {
            if (valueCase_ == 8) {
              valueCase_ = 0;
              value_ = null;
            }
            durationValueBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * Used for values of type DURATION
         * </pre>
         *
         * <code>.google.protobuf.Duration duration_value = 8;</code>
         */
        public com.google.protobuf.Duration.Builder getDurationValueBuilder() {
          return getDurationValueFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Used for values of type DURATION
         * </pre>
         *
         * <code>.google.protobuf.Duration duration_value = 8;</code>
         */
        public com.google.protobuf.DurationOrBuilder getDurationValueOrBuilder() {
          if ((valueCase_ == 8) && (durationValueBuilder_ != null)) {
            return durationValueBuilder_.getMessageOrBuilder();
          } else {
            if (valueCase_ == 8) {
              return (com.google.protobuf.Duration) value_;
            }
            return com.google.protobuf.Duration.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * Used for values of type DURATION
         * </pre>
         *
         * <code>.google.protobuf.Duration duration_value = 8;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>
            getDurationValueFieldBuilder() {
          if (durationValueBuilder_ == null) {
            if (!(valueCase_ == 8)) {
              value_ = com.google.protobuf.Duration.getDefaultInstance();
            }
            durationValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                    (com.google.protobuf.Duration) value_,
                    getParentForChildren(),
                    isClean());
            value_ = null;
          }
          valueCase_ = 8;
          onChanged();;
          return durationValueBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            StringMap, StringMap.Builder, StringMapOrBuilder> stringMapValueBuilder_;
        /**
         * <pre>
         * Used for values of type STRING_MAP
         * </pre>
         *
         * <code>.istio.mixer.v1.Attributes.StringMap string_map_value = 9;</code>
         */
        public boolean hasStringMapValue() {
          return valueCase_ == 9;
        }
        /**
         * <pre>
         * Used for values of type STRING_MAP
         * </pre>
         *
         * <code>.istio.mixer.v1.Attributes.StringMap string_map_value = 9;</code>
         */
        public StringMap getStringMapValue() {
          if (stringMapValueBuilder_ == null) {
            if (valueCase_ == 9) {
              return (StringMap) value_;
            }
            return StringMap.getDefaultInstance();
          } else {
            if (valueCase_ == 9) {
              return stringMapValueBuilder_.getMessage();
            }
            return StringMap.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * Used for values of type STRING_MAP
         * </pre>
         *
         * <code>.istio.mixer.v1.Attributes.StringMap string_map_value = 9;</code>
         */
        public Builder setStringMapValue(StringMap value) {
          if (stringMapValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value_ = value;
            onChanged();
          } else {
            stringMapValueBuilder_.setMessage(value);
          }
          valueCase_ = 9;
          return this;
        }
        /**
         * <pre>
         * Used for values of type STRING_MAP
         * </pre>
         *
         * <code>.istio.mixer.v1.Attributes.StringMap string_map_value = 9;</code>
         */
        public Builder setStringMapValue(
            StringMap.Builder builderForValue) {
          if (stringMapValueBuilder_ == null) {
            value_ = builderForValue.build();
            onChanged();
          } else {
            stringMapValueBuilder_.setMessage(builderForValue.build());
          }
          valueCase_ = 9;
          return this;
        }
        /**
         * <pre>
         * Used for values of type STRING_MAP
         * </pre>
         *
         * <code>.istio.mixer.v1.Attributes.StringMap string_map_value = 9;</code>
         */
        public Builder mergeStringMapValue(StringMap value) {
          if (stringMapValueBuilder_ == null) {
            if (valueCase_ == 9 &&
                value_ != StringMap.getDefaultInstance()) {
              value_ = StringMap.newBuilder((StringMap) value_)
                  .mergeFrom(value).buildPartial();
            } else {
              value_ = value;
            }
            onChanged();
          } else {
            if (valueCase_ == 9) {
              stringMapValueBuilder_.mergeFrom(value);
            }
            stringMapValueBuilder_.setMessage(value);
          }
          valueCase_ = 9;
          return this;
        }
        /**
         * <pre>
         * Used for values of type STRING_MAP
         * </pre>
         *
         * <code>.istio.mixer.v1.Attributes.StringMap string_map_value = 9;</code>
         */
        public Builder clearStringMapValue() {
          if (stringMapValueBuilder_ == null) {
            if (valueCase_ == 9) {
              valueCase_ = 0;
              value_ = null;
              onChanged();
            }
          } else {
            if (valueCase_ == 9) {
              valueCase_ = 0;
              value_ = null;
            }
            stringMapValueBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * Used for values of type STRING_MAP
         * </pre>
         *
         * <code>.istio.mixer.v1.Attributes.StringMap string_map_value = 9;</code>
         */
        public StringMap.Builder getStringMapValueBuilder() {
          return getStringMapValueFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Used for values of type STRING_MAP
         * </pre>
         *
         * <code>.istio.mixer.v1.Attributes.StringMap string_map_value = 9;</code>
         */
        public StringMapOrBuilder getStringMapValueOrBuilder() {
          if ((valueCase_ == 9) && (stringMapValueBuilder_ != null)) {
            return stringMapValueBuilder_.getMessageOrBuilder();
          } else {
            if (valueCase_ == 9) {
              return (StringMap) value_;
            }
            return StringMap.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * Used for values of type STRING_MAP
         * </pre>
         *
         * <code>.istio.mixer.v1.Attributes.StringMap string_map_value = 9;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            StringMap, StringMap.Builder, StringMapOrBuilder>
            getStringMapValueFieldBuilder() {
          if (stringMapValueBuilder_ == null) {
            if (!(valueCase_ == 9)) {
              value_ = StringMap.getDefaultInstance();
            }
            stringMapValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                StringMap, StringMap.Builder, StringMapOrBuilder>(
                    (StringMap) value_,
                    getParentForChildren(),
                    isClean());
            value_ = null;
          }
          valueCase_ = 9;
          onChanged();;
          return stringMapValueBuilder_;
        }
        @Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        @Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:istio.mixer.v1.Attributes.AttributeValue)
      }

      // @@protoc_insertion_point(class_scope:istio.mixer.v1.Attributes.AttributeValue)
      private static final AttributeValue DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new AttributeValue();
      }

      public static AttributeValue getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<AttributeValue>
          PARSER = new com.google.protobuf.AbstractParser<AttributeValue>() {
        @Override
        public AttributeValue parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new AttributeValue(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<AttributeValue> parser() {
        return PARSER;
      }

      @Override
      public com.google.protobuf.Parser<AttributeValue> getParserForType() {
        return PARSER;
      }

      @Override
      public AttributeValue getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface StringMapOrBuilder extends
        // @@protoc_insertion_point(interface_extends:istio.mixer.v1.Attributes.StringMap)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Holds a set of name/value pairs.
       * </pre>
       *
       * <code>map&lt;string, string&gt; entries = 1;</code>
       */
      int getEntriesCount();
      /**
       * <pre>
       * Holds a set of name/value pairs.
       * </pre>
       *
       * <code>map&lt;string, string&gt; entries = 1;</code>
       */
      boolean containsEntries(
              String key);
      /**
       * Use {@link #getEntriesMap()} instead.
       */
      @Deprecated
      java.util.Map<String, String>
      getEntries();
      /**
       * <pre>
       * Holds a set of name/value pairs.
       * </pre>
       *
       * <code>map&lt;string, string&gt; entries = 1;</code>
       */
      java.util.Map<String, String>
      getEntriesMap();
      /**
       * <pre>
       * Holds a set of name/value pairs.
       * </pre>
       *
       * <code>map&lt;string, string&gt; entries = 1;</code>
       */

      String getEntriesOrDefault(
              String key,
              String defaultValue);
      /**
       * <pre>
       * Holds a set of name/value pairs.
       * </pre>
       *
       * <code>map&lt;string, string&gt; entries = 1;</code>
       */

      String getEntriesOrThrow(
              String key);
    }
    /**
     * <pre>
     * Defines a string map.
     * </pre>
     *
     * Protobuf type {@code istio.mixer.v1.Attributes.StringMap}
     */
    public  static final class StringMap extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:istio.mixer.v1.Attributes.StringMap)
        StringMapOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use StringMap.newBuilder() to construct.
      private StringMap(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private StringMap() {
      }

      @Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private StringMap(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  entries_ = com.google.protobuf.MapField.newMapField(
                      EntriesDefaultEntryHolder.defaultEntry);
                  mutable_bitField0_ |= 0x00000001;
                }
                com.google.protobuf.MapEntry<String, String>
                entries__ = input.readMessage(
                    EntriesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                entries_.getMutableMap().put(
                    entries__.getKey(), entries__.getValue());
                break;
              }
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return AttributesOuterClass.internal_static_istio_mixer_v1_Attributes_StringMap_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      @Override
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetEntries();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return AttributesOuterClass.internal_static_istio_mixer_v1_Attributes_StringMap_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                StringMap.class, Builder.class);
      }

      public static final int ENTRIES_FIELD_NUMBER = 1;
      private static final class EntriesDefaultEntryHolder {
        static final com.google.protobuf.MapEntry<
            String, String> defaultEntry =
                com.google.protobuf.MapEntry
                .<String, String>newDefaultInstance(
                    AttributesOuterClass.internal_static_istio_mixer_v1_Attributes_StringMap_EntriesEntry_descriptor,
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "",
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "");
      }
      private com.google.protobuf.MapField<
          String, String> entries_;
      private com.google.protobuf.MapField<String, String>
      internalGetEntries() {
        if (entries_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              EntriesDefaultEntryHolder.defaultEntry);
        }
        return entries_;
      }

      public int getEntriesCount() {
        return internalGetEntries().getMap().size();
      }
      /**
       * <pre>
       * Holds a set of name/value pairs.
       * </pre>
       *
       * <code>map&lt;string, string&gt; entries = 1;</code>
       */

      public boolean containsEntries(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        return internalGetEntries().getMap().containsKey(key);
      }
      /**
       * Use {@link #getEntriesMap()} instead.
       */
      @Deprecated
      public java.util.Map<String, String> getEntries() {
        return getEntriesMap();
      }
      /**
       * <pre>
       * Holds a set of name/value pairs.
       * </pre>
       *
       * <code>map&lt;string, string&gt; entries = 1;</code>
       */

      public java.util.Map<String, String> getEntriesMap() {
        return internalGetEntries().getMap();
      }
      /**
       * <pre>
       * Holds a set of name/value pairs.
       * </pre>
       *
       * <code>map&lt;string, string&gt; entries = 1;</code>
       */

      public String getEntriesOrDefault(
          String key,
          String defaultValue) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, String> map =
            internalGetEntries().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Holds a set of name/value pairs.
       * </pre>
       *
       * <code>map&lt;string, string&gt; entries = 1;</code>
       */

      public String getEntriesOrThrow(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, String> map =
            internalGetEntries().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }

      private byte memoizedIsInitialized = -1;
      @Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        com.google.protobuf.GeneratedMessageV3
          .serializeStringMapTo(
            output,
            internalGetEntries(),
            EntriesDefaultEntryHolder.defaultEntry,
            1);
        unknownFields.writeTo(output);
      }

      @Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        for (java.util.Map.Entry<String, String> entry
             : internalGetEntries().getMap().entrySet()) {
          com.google.protobuf.MapEntry<String, String>
          entries__ = EntriesDefaultEntryHolder.defaultEntry.newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
          size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(1, entries__);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @Override
      public boolean equals(final Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof StringMap)) {
          return super.equals(obj);
        }
        StringMap other = (StringMap) obj;

        boolean result = true;
        result = result && internalGetEntries().equals(
            other.internalGetEntries());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (!internalGetEntries().getMap().isEmpty()) {
          hash = (37 * hash) + ENTRIES_FIELD_NUMBER;
          hash = (53 * hash) + internalGetEntries().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static StringMap parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static StringMap parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static StringMap parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static StringMap parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static StringMap parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static StringMap parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static StringMap parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static StringMap parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static StringMap parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static StringMap parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static StringMap parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static StringMap parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(StringMap prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @Override
      protected Builder newBuilderForType(
          BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Defines a string map.
       * </pre>
       *
       * Protobuf type {@code istio.mixer.v1.Attributes.StringMap}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:istio.mixer.v1.Attributes.StringMap)
          StringMapOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return AttributesOuterClass.internal_static_istio_mixer_v1_Attributes_StringMap_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 1:
              return internalGetEntries();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMutableMapField(
            int number) {
          switch (number) {
            case 1:
              return internalGetMutableEntries();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @Override
        protected FieldAccessorTable
            internalGetFieldAccessorTable() {
          return AttributesOuterClass.internal_static_istio_mixer_v1_Attributes_StringMap_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  StringMap.class, Builder.class);
        }

        // Construct using org.wso2.vick.telemetry.receiver.generated.AttributesOuterClass.Attributes.StringMap.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @Override
        public Builder clear() {
          super.clear();
          internalGetMutableEntries().clear();
          return this;
        }

        @Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return AttributesOuterClass.internal_static_istio_mixer_v1_Attributes_StringMap_descriptor;
        }

        @Override
        public StringMap getDefaultInstanceForType() {
          return StringMap.getDefaultInstance();
        }

        @Override
        public StringMap build() {
          StringMap result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @Override
        public StringMap buildPartial() {
          StringMap result = new StringMap(this);
          int from_bitField0_ = bitField0_;
          result.entries_ = internalGetEntries();
          result.entries_.makeImmutable();
          onBuilt();
          return result;
        }

        @Override
        public Builder clone() {
          return (Builder) super.clone();
        }
        @Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        @Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        @Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        @Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        @Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        @Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof StringMap) {
            return mergeFrom((StringMap)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(StringMap other) {
          if (other == StringMap.getDefaultInstance()) return this;
          internalGetMutableEntries().mergeFrom(
              other.internalGetEntries());
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @Override
        public final boolean isInitialized() {
          return true;
        }

        @Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          StringMap parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (StringMap) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.MapField<
            String, String> entries_;
        private com.google.protobuf.MapField<String, String>
        internalGetEntries() {
          if (entries_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                EntriesDefaultEntryHolder.defaultEntry);
          }
          return entries_;
        }
        private com.google.protobuf.MapField<String, String>
        internalGetMutableEntries() {
          onChanged();;
          if (entries_ == null) {
            entries_ = com.google.protobuf.MapField.newMapField(
                EntriesDefaultEntryHolder.defaultEntry);
          }
          if (!entries_.isMutable()) {
            entries_ = entries_.copy();
          }
          return entries_;
        }

        public int getEntriesCount() {
          return internalGetEntries().getMap().size();
        }
        /**
         * <pre>
         * Holds a set of name/value pairs.
         * </pre>
         *
         * <code>map&lt;string, string&gt; entries = 1;</code>
         */

        public boolean containsEntries(
            String key) {
          if (key == null) { throw new NullPointerException(); }
          return internalGetEntries().getMap().containsKey(key);
        }
        /**
         * Use {@link #getEntriesMap()} instead.
         */
        @Deprecated
        public java.util.Map<String, String> getEntries() {
          return getEntriesMap();
        }
        /**
         * <pre>
         * Holds a set of name/value pairs.
         * </pre>
         *
         * <code>map&lt;string, string&gt; entries = 1;</code>
         */

        public java.util.Map<String, String> getEntriesMap() {
          return internalGetEntries().getMap();
        }
        /**
         * <pre>
         * Holds a set of name/value pairs.
         * </pre>
         *
         * <code>map&lt;string, string&gt; entries = 1;</code>
         */

        public String getEntriesOrDefault(
            String key,
            String defaultValue) {
          if (key == null) { throw new NullPointerException(); }
          java.util.Map<String, String> map =
              internalGetEntries().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         * Holds a set of name/value pairs.
         * </pre>
         *
         * <code>map&lt;string, string&gt; entries = 1;</code>
         */

        public String getEntriesOrThrow(
            String key) {
          if (key == null) { throw new NullPointerException(); }
          java.util.Map<String, String> map =
              internalGetEntries().getMap();
          if (!map.containsKey(key)) {
            throw new IllegalArgumentException();
          }
          return map.get(key);
        }

        public Builder clearEntries() {
          internalGetMutableEntries().getMutableMap()
              .clear();
          return this;
        }
        /**
         * <pre>
         * Holds a set of name/value pairs.
         * </pre>
         *
         * <code>map&lt;string, string&gt; entries = 1;</code>
         */

        public Builder removeEntries(
            String key) {
          if (key == null) { throw new NullPointerException(); }
          internalGetMutableEntries().getMutableMap()
              .remove(key);
          return this;
        }
        /**
         * Use alternate mutation accessors instead.
         */
        @Deprecated
        public java.util.Map<String, String>
        getMutableEntries() {
          return internalGetMutableEntries().getMutableMap();
        }
        /**
         * <pre>
         * Holds a set of name/value pairs.
         * </pre>
         *
         * <code>map&lt;string, string&gt; entries = 1;</code>
         */
        public Builder putEntries(
            String key,
            String value) {
          if (key == null) { throw new NullPointerException(); }
          if (value == null) { throw new NullPointerException(); }
          internalGetMutableEntries().getMutableMap()
              .put(key, value);
          return this;
        }
        /**
         * <pre>
         * Holds a set of name/value pairs.
         * </pre>
         *
         * <code>map&lt;string, string&gt; entries = 1;</code>
         */

        public Builder putAllEntries(
            java.util.Map<String, String> values) {
          internalGetMutableEntries().getMutableMap()
              .putAll(values);
          return this;
        }
        @Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        @Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:istio.mixer.v1.Attributes.StringMap)
      }

      // @@protoc_insertion_point(class_scope:istio.mixer.v1.Attributes.StringMap)
      private static final StringMap DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new StringMap();
      }

      public static StringMap getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<StringMap>
          PARSER = new com.google.protobuf.AbstractParser<StringMap>() {
        @Override
        public StringMap parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new StringMap(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<StringMap> parser() {
        return PARSER;
      }

      @Override
      public com.google.protobuf.Parser<StringMap> getParserForType() {
        return PARSER;
      }

      @Override
      public StringMap getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int ATTRIBUTES_FIELD_NUMBER = 1;
    private static final class AttributesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          String, AttributeValue> defaultEntry =
              com.google.protobuf.MapEntry
              .<String, AttributeValue>newDefaultInstance(
                  AttributesOuterClass.internal_static_istio_mixer_v1_Attributes_AttributesEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  AttributeValue.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        String, AttributeValue> attributes_;
    private com.google.protobuf.MapField<String, AttributeValue>
    internalGetAttributes() {
      if (attributes_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            AttributesDefaultEntryHolder.defaultEntry);
      }
      return attributes_;
    }

    public int getAttributesCount() {
      return internalGetAttributes().getMap().size();
    }
    /**
     * <pre>
     * A map of attribute name to its value.
     * </pre>
     *
     * <code>map&lt;string, .istio.mixer.v1.Attributes.AttributeValue&gt; attributes = 1;</code>
     */

    public boolean containsAttributes(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      return internalGetAttributes().getMap().containsKey(key);
    }
    /**
     * Use {@link #getAttributesMap()} instead.
     */
    @Deprecated
    public java.util.Map<String, AttributeValue> getAttributes() {
      return getAttributesMap();
    }
    /**
     * <pre>
     * A map of attribute name to its value.
     * </pre>
     *
     * <code>map&lt;string, .istio.mixer.v1.Attributes.AttributeValue&gt; attributes = 1;</code>
     */

    public java.util.Map<String, AttributeValue> getAttributesMap() {
      return internalGetAttributes().getMap();
    }
    /**
     * <pre>
     * A map of attribute name to its value.
     * </pre>
     *
     * <code>map&lt;string, .istio.mixer.v1.Attributes.AttributeValue&gt; attributes = 1;</code>
     */

    public AttributeValue getAttributesOrDefault(
        String key,
        AttributeValue defaultValue) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, AttributeValue> map =
          internalGetAttributes().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * A map of attribute name to its value.
     * </pre>
     *
     * <code>map&lt;string, .istio.mixer.v1.Attributes.AttributeValue&gt; attributes = 1;</code>
     */

    public AttributeValue getAttributesOrThrow(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, AttributeValue> map =
          internalGetAttributes().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetAttributes(),
          AttributesDefaultEntryHolder.defaultEntry,
          1);
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<String, AttributeValue> entry
           : internalGetAttributes().getMap().entrySet()) {
        com.google.protobuf.MapEntry<String, AttributeValue>
        attributes__ = AttributesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, attributes__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Attributes)) {
        return super.equals(obj);
      }
      Attributes other = (Attributes) obj;

      boolean result = true;
      result = result && internalGetAttributes().equals(
          other.internalGetAttributes());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetAttributes().getMap().isEmpty()) {
        hash = (37 * hash) + ATTRIBUTES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetAttributes().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Attributes parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Attributes parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Attributes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Attributes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Attributes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Attributes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Attributes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Attributes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Attributes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Attributes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Attributes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Attributes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Attributes prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Attributes represents a set of typed name/value pairs. Many of Mixer's
     * API either consume and/or return attributes.
     * Istio uses attributes to control the runtime behavior of services running in the service mesh.
     * Attributes are named and typed pieces of metadata describing ingress and egress traffic and the
     * environment this traffic occurs in. An Istio attribute carries a specific piece
     * of information such as the error code of an API request, the latency of an API request, or the
     * original IP address of a TCP connection. For example:
     * ```
     * request.path: xyz/abc
     * request.size: 234
     * request.time: 12:34:56.789 04/17/2017
     * source.ip: 192.168.0.1
     * target.service: example
     * ```
     * A given Istio deployment has a fixed vocabulary of attributes that it understands.
     * The specific vocabulary is determined by the set of attribute producers being used
     * in the deployment. The primary attribute producer in Istio is Envoy, although
     * specialized Mixer adapters and services can also generate attributes.
     * The common baseline set of attributes available in most Istio deployments is defined
     * [here](https://istio.io/docs/reference/config/mixer/attribute-vocabulary.html).
     * Attributes are strongly typed. The supported attribute types are defined by
     * [ValueType](https://github.com/istio/api/blob/master/policy/v1beta1/value_type.proto).
     * Each type of value is encoded into one of the so-called transport types present
     * in this message.
     * Defines a map of attributes in uncompressed format.
     * Following places may use this message:
     * 1) Configure Istio/Proxy with static per-proxy attributes, such as source.uid.
     * 2) Service IDL definition to extract api attributes for active requests.
     * 3) Forward attributes from client proxy to server proxy for HTTP requests.
     * </pre>
     *
     * Protobuf type {@code istio.mixer.v1.Attributes}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:istio.mixer.v1.Attributes)
        AttributesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return AttributesOuterClass.internal_static_istio_mixer_v1_Attributes_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetAttributes();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableAttributes();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return AttributesOuterClass.internal_static_istio_mixer_v1_Attributes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Attributes.class, Builder.class);
      }

      // Construct using org.wso2.vick.telemetry.receiver.generated.AttributesOuterClass.Attributes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        internalGetMutableAttributes().clear();
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return AttributesOuterClass.internal_static_istio_mixer_v1_Attributes_descriptor;
      }

      @Override
      public Attributes getDefaultInstanceForType() {
        return Attributes.getDefaultInstance();
      }

      @Override
      public Attributes build() {
        Attributes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public Attributes buildPartial() {
        Attributes result = new Attributes(this);
        int from_bitField0_ = bitField0_;
        result.attributes_ = internalGetAttributes();
        result.attributes_.makeImmutable();
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Attributes) {
          return mergeFrom((Attributes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Attributes other) {
        if (other == Attributes.getDefaultInstance()) return this;
        internalGetMutableAttributes().mergeFrom(
            other.internalGetAttributes());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Attributes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Attributes) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          String, AttributeValue> attributes_;
      private com.google.protobuf.MapField<String, AttributeValue>
      internalGetAttributes() {
        if (attributes_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              AttributesDefaultEntryHolder.defaultEntry);
        }
        return attributes_;
      }
      private com.google.protobuf.MapField<String, AttributeValue>
      internalGetMutableAttributes() {
        onChanged();;
        if (attributes_ == null) {
          attributes_ = com.google.protobuf.MapField.newMapField(
              AttributesDefaultEntryHolder.defaultEntry);
        }
        if (!attributes_.isMutable()) {
          attributes_ = attributes_.copy();
        }
        return attributes_;
      }

      public int getAttributesCount() {
        return internalGetAttributes().getMap().size();
      }
      /**
       * <pre>
       * A map of attribute name to its value.
       * </pre>
       *
       * <code>map&lt;string, .istio.mixer.v1.Attributes.AttributeValue&gt; attributes = 1;</code>
       */

      public boolean containsAttributes(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        return internalGetAttributes().getMap().containsKey(key);
      }
      /**
       * Use {@link #getAttributesMap()} instead.
       */
      @Deprecated
      public java.util.Map<String, AttributeValue> getAttributes() {
        return getAttributesMap();
      }
      /**
       * <pre>
       * A map of attribute name to its value.
       * </pre>
       *
       * <code>map&lt;string, .istio.mixer.v1.Attributes.AttributeValue&gt; attributes = 1;</code>
       */

      public java.util.Map<String, AttributeValue> getAttributesMap() {
        return internalGetAttributes().getMap();
      }
      /**
       * <pre>
       * A map of attribute name to its value.
       * </pre>
       *
       * <code>map&lt;string, .istio.mixer.v1.Attributes.AttributeValue&gt; attributes = 1;</code>
       */

      public AttributeValue getAttributesOrDefault(
          String key,
          AttributeValue defaultValue) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, AttributeValue> map =
            internalGetAttributes().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * A map of attribute name to its value.
       * </pre>
       *
       * <code>map&lt;string, .istio.mixer.v1.Attributes.AttributeValue&gt; attributes = 1;</code>
       */

      public AttributeValue getAttributesOrThrow(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, AttributeValue> map =
            internalGetAttributes().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearAttributes() {
        internalGetMutableAttributes().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * A map of attribute name to its value.
       * </pre>
       *
       * <code>map&lt;string, .istio.mixer.v1.Attributes.AttributeValue&gt; attributes = 1;</code>
       */

      public Builder removeAttributes(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        internalGetMutableAttributes().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @Deprecated
      public java.util.Map<String, AttributeValue>
      getMutableAttributes() {
        return internalGetMutableAttributes().getMutableMap();
      }
      /**
       * <pre>
       * A map of attribute name to its value.
       * </pre>
       *
       * <code>map&lt;string, .istio.mixer.v1.Attributes.AttributeValue&gt; attributes = 1;</code>
       */
      public Builder putAttributes(
          String key,
          AttributeValue value) {
        if (key == null) { throw new NullPointerException(); }
        if (value == null) { throw new NullPointerException(); }
        internalGetMutableAttributes().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * A map of attribute name to its value.
       * </pre>
       *
       * <code>map&lt;string, .istio.mixer.v1.Attributes.AttributeValue&gt; attributes = 1;</code>
       */

      public Builder putAllAttributes(
          java.util.Map<String, AttributeValue> values) {
        internalGetMutableAttributes().getMutableMap()
            .putAll(values);
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:istio.mixer.v1.Attributes)
    }

    // @@protoc_insertion_point(class_scope:istio.mixer.v1.Attributes)
    private static final Attributes DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Attributes();
    }

    public static Attributes getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Attributes>
        PARSER = new com.google.protobuf.AbstractParser<Attributes>() {
      @Override
      public Attributes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Attributes(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Attributes> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Attributes> getParserForType() {
      return PARSER;
    }

    @Override
    public Attributes getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CompressedAttributesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:istio.mixer.v1.CompressedAttributes)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The message-level dictionary.
     * </pre>
     *
     * <code>repeated string words = 1;</code>
     */
    java.util.List<String>
        getWordsList();
    /**
     * <pre>
     * The message-level dictionary.
     * </pre>
     *
     * <code>repeated string words = 1;</code>
     */
    int getWordsCount();
    /**
     * <pre>
     * The message-level dictionary.
     * </pre>
     *
     * <code>repeated string words = 1;</code>
     */
    String getWords(int index);
    /**
     * <pre>
     * The message-level dictionary.
     * </pre>
     *
     * <code>repeated string words = 1;</code>
     */
    com.google.protobuf.ByteString
        getWordsBytes(int index);

    /**
     * <pre>
     * Holds attributes of type STRING, DNS_NAME, EMAIL_ADDRESS, URI
     * </pre>
     *
     * <code>map&lt;sint32, sint32&gt; strings = 2;</code>
     */
    int getStringsCount();
    /**
     * <pre>
     * Holds attributes of type STRING, DNS_NAME, EMAIL_ADDRESS, URI
     * </pre>
     *
     * <code>map&lt;sint32, sint32&gt; strings = 2;</code>
     */
    boolean containsStrings(
            int key);
    /**
     * Use {@link #getStringsMap()} instead.
     */
    @Deprecated
    java.util.Map<Integer, Integer>
    getStrings();
    /**
     * <pre>
     * Holds attributes of type STRING, DNS_NAME, EMAIL_ADDRESS, URI
     * </pre>
     *
     * <code>map&lt;sint32, sint32&gt; strings = 2;</code>
     */
    java.util.Map<Integer, Integer>
    getStringsMap();
    /**
     * <pre>
     * Holds attributes of type STRING, DNS_NAME, EMAIL_ADDRESS, URI
     * </pre>
     *
     * <code>map&lt;sint32, sint32&gt; strings = 2;</code>
     */

    int getStringsOrDefault(
            int key,
            int defaultValue);
    /**
     * <pre>
     * Holds attributes of type STRING, DNS_NAME, EMAIL_ADDRESS, URI
     * </pre>
     *
     * <code>map&lt;sint32, sint32&gt; strings = 2;</code>
     */

    int getStringsOrThrow(
            int key);

    /**
     * <pre>
     * Holds attributes of type INT64
     * </pre>
     *
     * <code>map&lt;sint32, int64&gt; int64s = 3;</code>
     */
    int getInt64SCount();
    /**
     * <pre>
     * Holds attributes of type INT64
     * </pre>
     *
     * <code>map&lt;sint32, int64&gt; int64s = 3;</code>
     */
    boolean containsInt64S(
            int key);
    /**
     * Use {@link #getInt64SMap()} instead.
     */
    @Deprecated
    java.util.Map<Integer, Long>
    getInt64S();
    /**
     * <pre>
     * Holds attributes of type INT64
     * </pre>
     *
     * <code>map&lt;sint32, int64&gt; int64s = 3;</code>
     */
    java.util.Map<Integer, Long>
    getInt64SMap();
    /**
     * <pre>
     * Holds attributes of type INT64
     * </pre>
     *
     * <code>map&lt;sint32, int64&gt; int64s = 3;</code>
     */

    long getInt64SOrDefault(
            int key,
            long defaultValue);
    /**
     * <pre>
     * Holds attributes of type INT64
     * </pre>
     *
     * <code>map&lt;sint32, int64&gt; int64s = 3;</code>
     */

    long getInt64SOrThrow(
            int key);

    /**
     * <pre>
     * Holds attributes of type DOUBLE
     * </pre>
     *
     * <code>map&lt;sint32, double&gt; doubles = 4;</code>
     */
    int getDoublesCount();
    /**
     * <pre>
     * Holds attributes of type DOUBLE
     * </pre>
     *
     * <code>map&lt;sint32, double&gt; doubles = 4;</code>
     */
    boolean containsDoubles(
            int key);
    /**
     * Use {@link #getDoublesMap()} instead.
     */
    @Deprecated
    java.util.Map<Integer, Double>
    getDoubles();
    /**
     * <pre>
     * Holds attributes of type DOUBLE
     * </pre>
     *
     * <code>map&lt;sint32, double&gt; doubles = 4;</code>
     */
    java.util.Map<Integer, Double>
    getDoublesMap();
    /**
     * <pre>
     * Holds attributes of type DOUBLE
     * </pre>
     *
     * <code>map&lt;sint32, double&gt; doubles = 4;</code>
     */

    double getDoublesOrDefault(
            int key,
            double defaultValue);
    /**
     * <pre>
     * Holds attributes of type DOUBLE
     * </pre>
     *
     * <code>map&lt;sint32, double&gt; doubles = 4;</code>
     */

    double getDoublesOrThrow(
            int key);

    /**
     * <pre>
     * Holds attributes of type BOOL
     * </pre>
     *
     * <code>map&lt;sint32, bool&gt; bools = 5;</code>
     */
    int getBoolsCount();
    /**
     * <pre>
     * Holds attributes of type BOOL
     * </pre>
     *
     * <code>map&lt;sint32, bool&gt; bools = 5;</code>
     */
    boolean containsBools(
            int key);
    /**
     * Use {@link #getBoolsMap()} instead.
     */
    @Deprecated
    java.util.Map<Integer, Boolean>
    getBools();
    /**
     * <pre>
     * Holds attributes of type BOOL
     * </pre>
     *
     * <code>map&lt;sint32, bool&gt; bools = 5;</code>
     */
    java.util.Map<Integer, Boolean>
    getBoolsMap();
    /**
     * <pre>
     * Holds attributes of type BOOL
     * </pre>
     *
     * <code>map&lt;sint32, bool&gt; bools = 5;</code>
     */

    boolean getBoolsOrDefault(
            int key,
            boolean defaultValue);
    /**
     * <pre>
     * Holds attributes of type BOOL
     * </pre>
     *
     * <code>map&lt;sint32, bool&gt; bools = 5;</code>
     */

    boolean getBoolsOrThrow(
            int key);

    /**
     * <pre>
     * Holds attributes of type TIMESTAMP
     * </pre>
     *
     * <code>map&lt;sint32, .google.protobuf.Timestamp&gt; timestamps = 6 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */
    int getTimestampsCount();
    /**
     * <pre>
     * Holds attributes of type TIMESTAMP
     * </pre>
     *
     * <code>map&lt;sint32, .google.protobuf.Timestamp&gt; timestamps = 6 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */
    boolean containsTimestamps(
            int key);
    /**
     * Use {@link #getTimestampsMap()} instead.
     */
    @Deprecated
    java.util.Map<Integer, com.google.protobuf.Timestamp>
    getTimestamps();
    /**
     * <pre>
     * Holds attributes of type TIMESTAMP
     * </pre>
     *
     * <code>map&lt;sint32, .google.protobuf.Timestamp&gt; timestamps = 6 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */
    java.util.Map<Integer, com.google.protobuf.Timestamp>
    getTimestampsMap();
    /**
     * <pre>
     * Holds attributes of type TIMESTAMP
     * </pre>
     *
     * <code>map&lt;sint32, .google.protobuf.Timestamp&gt; timestamps = 6 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */

    com.google.protobuf.Timestamp getTimestampsOrDefault(
            int key,
            com.google.protobuf.Timestamp defaultValue);
    /**
     * <pre>
     * Holds attributes of type TIMESTAMP
     * </pre>
     *
     * <code>map&lt;sint32, .google.protobuf.Timestamp&gt; timestamps = 6 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */

    com.google.protobuf.Timestamp getTimestampsOrThrow(
            int key);

    /**
     * <pre>
     * Holds attributes of type DURATION
     * </pre>
     *
     * <code>map&lt;sint32, .google.protobuf.Duration&gt; durations = 7 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     */
    int getDurationsCount();
    /**
     * <pre>
     * Holds attributes of type DURATION
     * </pre>
     *
     * <code>map&lt;sint32, .google.protobuf.Duration&gt; durations = 7 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     */
    boolean containsDurations(
            int key);
    /**
     * Use {@link #getDurationsMap()} instead.
     */
    @Deprecated
    java.util.Map<Integer, com.google.protobuf.Duration>
    getDurations();
    /**
     * <pre>
     * Holds attributes of type DURATION
     * </pre>
     *
     * <code>map&lt;sint32, .google.protobuf.Duration&gt; durations = 7 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     */
    java.util.Map<Integer, com.google.protobuf.Duration>
    getDurationsMap();
    /**
     * <pre>
     * Holds attributes of type DURATION
     * </pre>
     *
     * <code>map&lt;sint32, .google.protobuf.Duration&gt; durations = 7 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     */

    com.google.protobuf.Duration getDurationsOrDefault(
            int key,
            com.google.protobuf.Duration defaultValue);
    /**
     * <pre>
     * Holds attributes of type DURATION
     * </pre>
     *
     * <code>map&lt;sint32, .google.protobuf.Duration&gt; durations = 7 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     */

    com.google.protobuf.Duration getDurationsOrThrow(
            int key);

    /**
     * <pre>
     * Holds attributes of type BYTES
     * </pre>
     *
     * <code>map&lt;sint32, bytes&gt; bytes = 8;</code>
     */
    int getBytesCount();
    /**
     * <pre>
     * Holds attributes of type BYTES
     * </pre>
     *
     * <code>map&lt;sint32, bytes&gt; bytes = 8;</code>
     */
    boolean containsBytes(
            int key);
    /**
     * Use {@link #getBytesMap()} instead.
     */
    @Deprecated
    java.util.Map<Integer, com.google.protobuf.ByteString>
    getBytes();
    /**
     * <pre>
     * Holds attributes of type BYTES
     * </pre>
     *
     * <code>map&lt;sint32, bytes&gt; bytes = 8;</code>
     */
    java.util.Map<Integer, com.google.protobuf.ByteString>
    getBytesMap();
    /**
     * <pre>
     * Holds attributes of type BYTES
     * </pre>
     *
     * <code>map&lt;sint32, bytes&gt; bytes = 8;</code>
     */

    com.google.protobuf.ByteString getBytesOrDefault(
            int key,
            com.google.protobuf.ByteString defaultValue);
    /**
     * <pre>
     * Holds attributes of type BYTES
     * </pre>
     *
     * <code>map&lt;sint32, bytes&gt; bytes = 8;</code>
     */

    com.google.protobuf.ByteString getBytesOrThrow(
            int key);

    /**
     * <pre>
     * Holds attributes of type STRING_MAP
     * </pre>
     *
     * <code>map&lt;sint32, .istio.mixer.v1.StringMap&gt; string_maps = 9 [(.gogoproto.nullable) = false];</code>
     */
    int getStringMapsCount();
    /**
     * <pre>
     * Holds attributes of type STRING_MAP
     * </pre>
     *
     * <code>map&lt;sint32, .istio.mixer.v1.StringMap&gt; string_maps = 9 [(.gogoproto.nullable) = false];</code>
     */
    boolean containsStringMaps(
            int key);
    /**
     * Use {@link #getStringMapsMap()} instead.
     */
    @Deprecated
    java.util.Map<Integer, StringMap>
    getStringMaps();
    /**
     * <pre>
     * Holds attributes of type STRING_MAP
     * </pre>
     *
     * <code>map&lt;sint32, .istio.mixer.v1.StringMap&gt; string_maps = 9 [(.gogoproto.nullable) = false];</code>
     */
    java.util.Map<Integer, StringMap>
    getStringMapsMap();
    /**
     * <pre>
     * Holds attributes of type STRING_MAP
     * </pre>
     *
     * <code>map&lt;sint32, .istio.mixer.v1.StringMap&gt; string_maps = 9 [(.gogoproto.nullable) = false];</code>
     */

    StringMap getStringMapsOrDefault(
            int key,
            StringMap defaultValue);
    /**
     * <pre>
     * Holds attributes of type STRING_MAP
     * </pre>
     *
     * <code>map&lt;sint32, .istio.mixer.v1.StringMap&gt; string_maps = 9 [(.gogoproto.nullable) = false];</code>
     */

    StringMap getStringMapsOrThrow(
            int key);
  }
  /**
   * <pre>
   * Defines a list of attributes in compressed format optimized for transport.
   * Within this message, strings are referenced using integer indices into
   * one of two string dictionaries. Positive integers index into the global
   * deployment-wide dictionary, whereas negative integers index into the message-level
   * dictionary instead. The message-level dictionary is carried by the
   * `words` field of this message, the deployment-wide dictionary is determined via
   * configuration.
   * </pre>
   *
   * Protobuf type {@code istio.mixer.v1.CompressedAttributes}
   */
  public  static final class CompressedAttributes extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:istio.mixer.v1.CompressedAttributes)
      CompressedAttributesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CompressedAttributes.newBuilder() to construct.
    private CompressedAttributes(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CompressedAttributes() {
      words_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CompressedAttributes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                words_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              words_.add(s);
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                strings_ = com.google.protobuf.MapField.newMapField(
                    StringsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<Integer, Integer>
              strings__ = input.readMessage(
                  StringsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              strings_.getMutableMap().put(
                  strings__.getKey(), strings__.getValue());
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                int64S_ = com.google.protobuf.MapField.newMapField(
                    Int64SDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<Integer, Long>
              int64S__ = input.readMessage(
                  Int64SDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              int64S_.getMutableMap().put(
                  int64S__.getKey(), int64S__.getValue());
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                doubles_ = com.google.protobuf.MapField.newMapField(
                    DoublesDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<Integer, Double>
              doubles__ = input.readMessage(
                  DoublesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              doubles_.getMutableMap().put(
                  doubles__.getKey(), doubles__.getValue());
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                bools_ = com.google.protobuf.MapField.newMapField(
                    BoolsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000010;
              }
              com.google.protobuf.MapEntry<Integer, Boolean>
              bools__ = input.readMessage(
                  BoolsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              bools_.getMutableMap().put(
                  bools__.getKey(), bools__.getValue());
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                timestamps_ = com.google.protobuf.MapField.newMapField(
                    TimestampsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000020;
              }
              com.google.protobuf.MapEntry<Integer, com.google.protobuf.Timestamp>
              timestamps__ = input.readMessage(
                  TimestampsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              timestamps_.getMutableMap().put(
                  timestamps__.getKey(), timestamps__.getValue());
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                durations_ = com.google.protobuf.MapField.newMapField(
                    DurationsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000040;
              }
              com.google.protobuf.MapEntry<Integer, com.google.protobuf.Duration>
              durations__ = input.readMessage(
                  DurationsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              durations_.getMutableMap().put(
                  durations__.getKey(), durations__.getValue());
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                bytes_ = com.google.protobuf.MapField.newMapField(
                    BytesDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000080;
              }
              com.google.protobuf.MapEntry<Integer, com.google.protobuf.ByteString>
              bytes__ = input.readMessage(
                  BytesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              bytes_.getMutableMap().put(
                  bytes__.getKey(), bytes__.getValue());
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                stringMaps_ = com.google.protobuf.MapField.newMapField(
                    StringMapsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000100;
              }
              com.google.protobuf.MapEntry<Integer, StringMap>
              stringMaps__ = input.readMessage(
                  StringMapsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              stringMaps_.getMutableMap().put(
                  stringMaps__.getKey(), stringMaps__.getValue());
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          words_ = words_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return AttributesOuterClass.internal_static_istio_mixer_v1_CompressedAttributes_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetStrings();
        case 3:
          return internalGetInt64S();
        case 4:
          return internalGetDoubles();
        case 5:
          return internalGetBools();
        case 6:
          return internalGetTimestamps();
        case 7:
          return internalGetDurations();
        case 8:
          return internalGetBytes();
        case 9:
          return internalGetStringMaps();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return AttributesOuterClass.internal_static_istio_mixer_v1_CompressedAttributes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CompressedAttributes.class, Builder.class);
    }

    public static final int WORDS_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList words_;
    /**
     * <pre>
     * The message-level dictionary.
     * </pre>
     *
     * <code>repeated string words = 1;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getWordsList() {
      return words_;
    }
    /**
     * <pre>
     * The message-level dictionary.
     * </pre>
     *
     * <code>repeated string words = 1;</code>
     */
    public int getWordsCount() {
      return words_.size();
    }
    /**
     * <pre>
     * The message-level dictionary.
     * </pre>
     *
     * <code>repeated string words = 1;</code>
     */
    public String getWords(int index) {
      return words_.get(index);
    }
    /**
     * <pre>
     * The message-level dictionary.
     * </pre>
     *
     * <code>repeated string words = 1;</code>
     */
    public com.google.protobuf.ByteString
        getWordsBytes(int index) {
      return words_.getByteString(index);
    }

    public static final int STRINGS_FIELD_NUMBER = 2;
    private static final class StringsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          Integer, Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<Integer, Integer>newDefaultInstance(
                  AttributesOuterClass.internal_static_istio_mixer_v1_CompressedAttributes_StringsEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.SINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.SINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        Integer, Integer> strings_;
    private com.google.protobuf.MapField<Integer, Integer>
    internalGetStrings() {
      if (strings_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            StringsDefaultEntryHolder.defaultEntry);
      }
      return strings_;
    }

    public int getStringsCount() {
      return internalGetStrings().getMap().size();
    }
    /**
     * <pre>
     * Holds attributes of type STRING, DNS_NAME, EMAIL_ADDRESS, URI
     * </pre>
     *
     * <code>map&lt;sint32, sint32&gt; strings = 2;</code>
     */

    public boolean containsStrings(
        int key) {

      return internalGetStrings().getMap().containsKey(key);
    }
    /**
     * Use {@link #getStringsMap()} instead.
     */
    @Deprecated
    public java.util.Map<Integer, Integer> getStrings() {
      return getStringsMap();
    }
    /**
     * <pre>
     * Holds attributes of type STRING, DNS_NAME, EMAIL_ADDRESS, URI
     * </pre>
     *
     * <code>map&lt;sint32, sint32&gt; strings = 2;</code>
     */

    public java.util.Map<Integer, Integer> getStringsMap() {
      return internalGetStrings().getMap();
    }
    /**
     * <pre>
     * Holds attributes of type STRING, DNS_NAME, EMAIL_ADDRESS, URI
     * </pre>
     *
     * <code>map&lt;sint32, sint32&gt; strings = 2;</code>
     */

    public int getStringsOrDefault(
        int key,
        int defaultValue) {

      java.util.Map<Integer, Integer> map =
          internalGetStrings().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Holds attributes of type STRING, DNS_NAME, EMAIL_ADDRESS, URI
     * </pre>
     *
     * <code>map&lt;sint32, sint32&gt; strings = 2;</code>
     */

    public int getStringsOrThrow(
        int key) {

      java.util.Map<Integer, Integer> map =
          internalGetStrings().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INT64S_FIELD_NUMBER = 3;
    private static final class Int64SDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          Integer, Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<Integer, Long>newDefaultInstance(
                  AttributesOuterClass.internal_static_istio_mixer_v1_CompressedAttributes_Int64sEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.SINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT64,
                  0L);
    }
    private com.google.protobuf.MapField<
        Integer, Long> int64S_;
    private com.google.protobuf.MapField<Integer, Long>
    internalGetInt64S() {
      if (int64S_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Int64SDefaultEntryHolder.defaultEntry);
      }
      return int64S_;
    }

    public int getInt64SCount() {
      return internalGetInt64S().getMap().size();
    }
    /**
     * <pre>
     * Holds attributes of type INT64
     * </pre>
     *
     * <code>map&lt;sint32, int64&gt; int64s = 3;</code>
     */

    public boolean containsInt64S(
        int key) {

      return internalGetInt64S().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInt64SMap()} instead.
     */
    @Deprecated
    public java.util.Map<Integer, Long> getInt64S() {
      return getInt64SMap();
    }
    /**
     * <pre>
     * Holds attributes of type INT64
     * </pre>
     *
     * <code>map&lt;sint32, int64&gt; int64s = 3;</code>
     */

    public java.util.Map<Integer, Long> getInt64SMap() {
      return internalGetInt64S().getMap();
    }
    /**
     * <pre>
     * Holds attributes of type INT64
     * </pre>
     *
     * <code>map&lt;sint32, int64&gt; int64s = 3;</code>
     */

    public long getInt64SOrDefault(
        int key,
        long defaultValue) {

      java.util.Map<Integer, Long> map =
          internalGetInt64S().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Holds attributes of type INT64
     * </pre>
     *
     * <code>map&lt;sint32, int64&gt; int64s = 3;</code>
     */

    public long getInt64SOrThrow(
        int key) {

      java.util.Map<Integer, Long> map =
          internalGetInt64S().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int DOUBLES_FIELD_NUMBER = 4;
    private static final class DoublesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          Integer, Double> defaultEntry =
              com.google.protobuf.MapEntry
              .<Integer, Double>newDefaultInstance(
                  AttributesOuterClass.internal_static_istio_mixer_v1_CompressedAttributes_DoublesEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.SINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.DOUBLE,
                  0D);
    }
    private com.google.protobuf.MapField<
        Integer, Double> doubles_;
    private com.google.protobuf.MapField<Integer, Double>
    internalGetDoubles() {
      if (doubles_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            DoublesDefaultEntryHolder.defaultEntry);
      }
      return doubles_;
    }

    public int getDoublesCount() {
      return internalGetDoubles().getMap().size();
    }
    /**
     * <pre>
     * Holds attributes of type DOUBLE
     * </pre>
     *
     * <code>map&lt;sint32, double&gt; doubles = 4;</code>
     */

    public boolean containsDoubles(
        int key) {

      return internalGetDoubles().getMap().containsKey(key);
    }
    /**
     * Use {@link #getDoublesMap()} instead.
     */
    @Deprecated
    public java.util.Map<Integer, Double> getDoubles() {
      return getDoublesMap();
    }
    /**
     * <pre>
     * Holds attributes of type DOUBLE
     * </pre>
     *
     * <code>map&lt;sint32, double&gt; doubles = 4;</code>
     */

    public java.util.Map<Integer, Double> getDoublesMap() {
      return internalGetDoubles().getMap();
    }
    /**
     * <pre>
     * Holds attributes of type DOUBLE
     * </pre>
     *
     * <code>map&lt;sint32, double&gt; doubles = 4;</code>
     */

    public double getDoublesOrDefault(
        int key,
        double defaultValue) {

      java.util.Map<Integer, Double> map =
          internalGetDoubles().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Holds attributes of type DOUBLE
     * </pre>
     *
     * <code>map&lt;sint32, double&gt; doubles = 4;</code>
     */

    public double getDoublesOrThrow(
        int key) {

      java.util.Map<Integer, Double> map =
          internalGetDoubles().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int BOOLS_FIELD_NUMBER = 5;
    private static final class BoolsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          Integer, Boolean> defaultEntry =
              com.google.protobuf.MapEntry
              .<Integer, Boolean>newDefaultInstance(
                  AttributesOuterClass.internal_static_istio_mixer_v1_CompressedAttributes_BoolsEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.SINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.BOOL,
                  false);
    }
    private com.google.protobuf.MapField<
        Integer, Boolean> bools_;
    private com.google.protobuf.MapField<Integer, Boolean>
    internalGetBools() {
      if (bools_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            BoolsDefaultEntryHolder.defaultEntry);
      }
      return bools_;
    }

    public int getBoolsCount() {
      return internalGetBools().getMap().size();
    }
    /**
     * <pre>
     * Holds attributes of type BOOL
     * </pre>
     *
     * <code>map&lt;sint32, bool&gt; bools = 5;</code>
     */

    public boolean containsBools(
        int key) {

      return internalGetBools().getMap().containsKey(key);
    }
    /**
     * Use {@link #getBoolsMap()} instead.
     */
    @Deprecated
    public java.util.Map<Integer, Boolean> getBools() {
      return getBoolsMap();
    }
    /**
     * <pre>
     * Holds attributes of type BOOL
     * </pre>
     *
     * <code>map&lt;sint32, bool&gt; bools = 5;</code>
     */

    public java.util.Map<Integer, Boolean> getBoolsMap() {
      return internalGetBools().getMap();
    }
    /**
     * <pre>
     * Holds attributes of type BOOL
     * </pre>
     *
     * <code>map&lt;sint32, bool&gt; bools = 5;</code>
     */

    public boolean getBoolsOrDefault(
        int key,
        boolean defaultValue) {

      java.util.Map<Integer, Boolean> map =
          internalGetBools().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Holds attributes of type BOOL
     * </pre>
     *
     * <code>map&lt;sint32, bool&gt; bools = 5;</code>
     */

    public boolean getBoolsOrThrow(
        int key) {

      java.util.Map<Integer, Boolean> map =
          internalGetBools().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int TIMESTAMPS_FIELD_NUMBER = 6;
    private static final class TimestampsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          Integer, com.google.protobuf.Timestamp> defaultEntry =
              com.google.protobuf.MapEntry
              .<Integer, com.google.protobuf.Timestamp>newDefaultInstance(
                  AttributesOuterClass.internal_static_istio_mixer_v1_CompressedAttributes_TimestampsEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.SINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  com.google.protobuf.Timestamp.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        Integer, com.google.protobuf.Timestamp> timestamps_;
    private com.google.protobuf.MapField<Integer, com.google.protobuf.Timestamp>
    internalGetTimestamps() {
      if (timestamps_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            TimestampsDefaultEntryHolder.defaultEntry);
      }
      return timestamps_;
    }

    public int getTimestampsCount() {
      return internalGetTimestamps().getMap().size();
    }
    /**
     * <pre>
     * Holds attributes of type TIMESTAMP
     * </pre>
     *
     * <code>map&lt;sint32, .google.protobuf.Timestamp&gt; timestamps = 6 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */

    public boolean containsTimestamps(
        int key) {

      return internalGetTimestamps().getMap().containsKey(key);
    }
    /**
     * Use {@link #getTimestampsMap()} instead.
     */
    @Deprecated
    public java.util.Map<Integer, com.google.protobuf.Timestamp> getTimestamps() {
      return getTimestampsMap();
    }
    /**
     * <pre>
     * Holds attributes of type TIMESTAMP
     * </pre>
     *
     * <code>map&lt;sint32, .google.protobuf.Timestamp&gt; timestamps = 6 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */

    public java.util.Map<Integer, com.google.protobuf.Timestamp> getTimestampsMap() {
      return internalGetTimestamps().getMap();
    }
    /**
     * <pre>
     * Holds attributes of type TIMESTAMP
     * </pre>
     *
     * <code>map&lt;sint32, .google.protobuf.Timestamp&gt; timestamps = 6 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */

    public com.google.protobuf.Timestamp getTimestampsOrDefault(
        int key,
        com.google.protobuf.Timestamp defaultValue) {

      java.util.Map<Integer, com.google.protobuf.Timestamp> map =
          internalGetTimestamps().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Holds attributes of type TIMESTAMP
     * </pre>
     *
     * <code>map&lt;sint32, .google.protobuf.Timestamp&gt; timestamps = 6 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */

    public com.google.protobuf.Timestamp getTimestampsOrThrow(
        int key) {

      java.util.Map<Integer, com.google.protobuf.Timestamp> map =
          internalGetTimestamps().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int DURATIONS_FIELD_NUMBER = 7;
    private static final class DurationsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          Integer, com.google.protobuf.Duration> defaultEntry =
              com.google.protobuf.MapEntry
              .<Integer, com.google.protobuf.Duration>newDefaultInstance(
                  AttributesOuterClass.internal_static_istio_mixer_v1_CompressedAttributes_DurationsEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.SINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  com.google.protobuf.Duration.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        Integer, com.google.protobuf.Duration> durations_;
    private com.google.protobuf.MapField<Integer, com.google.protobuf.Duration>
    internalGetDurations() {
      if (durations_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            DurationsDefaultEntryHolder.defaultEntry);
      }
      return durations_;
    }

    public int getDurationsCount() {
      return internalGetDurations().getMap().size();
    }
    /**
     * <pre>
     * Holds attributes of type DURATION
     * </pre>
     *
     * <code>map&lt;sint32, .google.protobuf.Duration&gt; durations = 7 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     */

    public boolean containsDurations(
        int key) {

      return internalGetDurations().getMap().containsKey(key);
    }
    /**
     * Use {@link #getDurationsMap()} instead.
     */
    @Deprecated
    public java.util.Map<Integer, com.google.protobuf.Duration> getDurations() {
      return getDurationsMap();
    }
    /**
     * <pre>
     * Holds attributes of type DURATION
     * </pre>
     *
     * <code>map&lt;sint32, .google.protobuf.Duration&gt; durations = 7 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     */

    public java.util.Map<Integer, com.google.protobuf.Duration> getDurationsMap() {
      return internalGetDurations().getMap();
    }
    /**
     * <pre>
     * Holds attributes of type DURATION
     * </pre>
     *
     * <code>map&lt;sint32, .google.protobuf.Duration&gt; durations = 7 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     */

    public com.google.protobuf.Duration getDurationsOrDefault(
        int key,
        com.google.protobuf.Duration defaultValue) {

      java.util.Map<Integer, com.google.protobuf.Duration> map =
          internalGetDurations().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Holds attributes of type DURATION
     * </pre>
     *
     * <code>map&lt;sint32, .google.protobuf.Duration&gt; durations = 7 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     */

    public com.google.protobuf.Duration getDurationsOrThrow(
        int key) {

      java.util.Map<Integer, com.google.protobuf.Duration> map =
          internalGetDurations().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int BYTES_FIELD_NUMBER = 8;
    private static final class BytesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          Integer, com.google.protobuf.ByteString> defaultEntry =
              com.google.protobuf.MapEntry
              .<Integer, com.google.protobuf.ByteString>newDefaultInstance(
                  AttributesOuterClass.internal_static_istio_mixer_v1_CompressedAttributes_BytesEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.SINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.BYTES,
                  com.google.protobuf.ByteString.EMPTY);
    }
    private com.google.protobuf.MapField<
        Integer, com.google.protobuf.ByteString> bytes_;
    private com.google.protobuf.MapField<Integer, com.google.protobuf.ByteString>
    internalGetBytes() {
      if (bytes_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            BytesDefaultEntryHolder.defaultEntry);
      }
      return bytes_;
    }

    public int getBytesCount() {
      return internalGetBytes().getMap().size();
    }
    /**
     * <pre>
     * Holds attributes of type BYTES
     * </pre>
     *
     * <code>map&lt;sint32, bytes&gt; bytes = 8;</code>
     */

    public boolean containsBytes(
        int key) {

      return internalGetBytes().getMap().containsKey(key);
    }
    /**
     * Use {@link #getBytesMap()} instead.
     */
    @Deprecated
    public java.util.Map<Integer, com.google.protobuf.ByteString> getBytes() {
      return getBytesMap();
    }
    /**
     * <pre>
     * Holds attributes of type BYTES
     * </pre>
     *
     * <code>map&lt;sint32, bytes&gt; bytes = 8;</code>
     */

    public java.util.Map<Integer, com.google.protobuf.ByteString> getBytesMap() {
      return internalGetBytes().getMap();
    }
    /**
     * <pre>
     * Holds attributes of type BYTES
     * </pre>
     *
     * <code>map&lt;sint32, bytes&gt; bytes = 8;</code>
     */

    public com.google.protobuf.ByteString getBytesOrDefault(
        int key,
        com.google.protobuf.ByteString defaultValue) {

      java.util.Map<Integer, com.google.protobuf.ByteString> map =
          internalGetBytes().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Holds attributes of type BYTES
     * </pre>
     *
     * <code>map&lt;sint32, bytes&gt; bytes = 8;</code>
     */

    public com.google.protobuf.ByteString getBytesOrThrow(
        int key) {

      java.util.Map<Integer, com.google.protobuf.ByteString> map =
          internalGetBytes().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int STRING_MAPS_FIELD_NUMBER = 9;
    private static final class StringMapsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          Integer, StringMap> defaultEntry =
              com.google.protobuf.MapEntry
              .<Integer, StringMap>newDefaultInstance(
                  AttributesOuterClass.internal_static_istio_mixer_v1_CompressedAttributes_StringMapsEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.SINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  StringMap.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        Integer, StringMap> stringMaps_;
    private com.google.protobuf.MapField<Integer, StringMap>
    internalGetStringMaps() {
      if (stringMaps_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            StringMapsDefaultEntryHolder.defaultEntry);
      }
      return stringMaps_;
    }

    public int getStringMapsCount() {
      return internalGetStringMaps().getMap().size();
    }
    /**
     * <pre>
     * Holds attributes of type STRING_MAP
     * </pre>
     *
     * <code>map&lt;sint32, .istio.mixer.v1.StringMap&gt; string_maps = 9 [(.gogoproto.nullable) = false];</code>
     */

    public boolean containsStringMaps(
        int key) {

      return internalGetStringMaps().getMap().containsKey(key);
    }
    /**
     * Use {@link #getStringMapsMap()} instead.
     */
    @Deprecated
    public java.util.Map<Integer, StringMap> getStringMaps() {
      return getStringMapsMap();
    }
    /**
     * <pre>
     * Holds attributes of type STRING_MAP
     * </pre>
     *
     * <code>map&lt;sint32, .istio.mixer.v1.StringMap&gt; string_maps = 9 [(.gogoproto.nullable) = false];</code>
     */

    public java.util.Map<Integer, StringMap> getStringMapsMap() {
      return internalGetStringMaps().getMap();
    }
    /**
     * <pre>
     * Holds attributes of type STRING_MAP
     * </pre>
     *
     * <code>map&lt;sint32, .istio.mixer.v1.StringMap&gt; string_maps = 9 [(.gogoproto.nullable) = false];</code>
     */

    public StringMap getStringMapsOrDefault(
        int key,
        StringMap defaultValue) {

      java.util.Map<Integer, StringMap> map =
          internalGetStringMaps().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Holds attributes of type STRING_MAP
     * </pre>
     *
     * <code>map&lt;sint32, .istio.mixer.v1.StringMap&gt; string_maps = 9 [(.gogoproto.nullable) = false];</code>
     */

    public StringMap getStringMapsOrThrow(
        int key) {

      java.util.Map<Integer, StringMap> map =
          internalGetStringMaps().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < words_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, words_.getRaw(i));
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetStrings(),
          StringsDefaultEntryHolder.defaultEntry,
          2);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetInt64S(),
          Int64SDefaultEntryHolder.defaultEntry,
          3);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetDoubles(),
          DoublesDefaultEntryHolder.defaultEntry,
          4);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetBools(),
          BoolsDefaultEntryHolder.defaultEntry,
          5);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetTimestamps(),
          TimestampsDefaultEntryHolder.defaultEntry,
          6);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetDurations(),
          DurationsDefaultEntryHolder.defaultEntry,
          7);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetBytes(),
          BytesDefaultEntryHolder.defaultEntry,
          8);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetStringMaps(),
          StringMapsDefaultEntryHolder.defaultEntry,
          9);
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < words_.size(); i++) {
          dataSize += computeStringSizeNoTag(words_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getWordsList().size();
      }
      for (java.util.Map.Entry<Integer, Integer> entry
           : internalGetStrings().getMap().entrySet()) {
        com.google.protobuf.MapEntry<Integer, Integer>
        strings__ = StringsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, strings__);
      }
      for (java.util.Map.Entry<Integer, Long> entry
           : internalGetInt64S().getMap().entrySet()) {
        com.google.protobuf.MapEntry<Integer, Long>
        int64S__ = Int64SDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, int64S__);
      }
      for (java.util.Map.Entry<Integer, Double> entry
           : internalGetDoubles().getMap().entrySet()) {
        com.google.protobuf.MapEntry<Integer, Double>
        doubles__ = DoublesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, doubles__);
      }
      for (java.util.Map.Entry<Integer, Boolean> entry
           : internalGetBools().getMap().entrySet()) {
        com.google.protobuf.MapEntry<Integer, Boolean>
        bools__ = BoolsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, bools__);
      }
      for (java.util.Map.Entry<Integer, com.google.protobuf.Timestamp> entry
           : internalGetTimestamps().getMap().entrySet()) {
        com.google.protobuf.MapEntry<Integer, com.google.protobuf.Timestamp>
        timestamps__ = TimestampsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, timestamps__);
      }
      for (java.util.Map.Entry<Integer, com.google.protobuf.Duration> entry
           : internalGetDurations().getMap().entrySet()) {
        com.google.protobuf.MapEntry<Integer, com.google.protobuf.Duration>
        durations__ = DurationsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, durations__);
      }
      for (java.util.Map.Entry<Integer, com.google.protobuf.ByteString> entry
           : internalGetBytes().getMap().entrySet()) {
        com.google.protobuf.MapEntry<Integer, com.google.protobuf.ByteString>
        bytes__ = BytesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, bytes__);
      }
      for (java.util.Map.Entry<Integer, StringMap> entry
           : internalGetStringMaps().getMap().entrySet()) {
        com.google.protobuf.MapEntry<Integer, StringMap>
        stringMaps__ = StringMapsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(9, stringMaps__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof CompressedAttributes)) {
        return super.equals(obj);
      }
      CompressedAttributes other = (CompressedAttributes) obj;

      boolean result = true;
      result = result && getWordsList()
          .equals(other.getWordsList());
      result = result && internalGetStrings().equals(
          other.internalGetStrings());
      result = result && internalGetInt64S().equals(
          other.internalGetInt64S());
      result = result && internalGetDoubles().equals(
          other.internalGetDoubles());
      result = result && internalGetBools().equals(
          other.internalGetBools());
      result = result && internalGetTimestamps().equals(
          other.internalGetTimestamps());
      result = result && internalGetDurations().equals(
          other.internalGetDurations());
      result = result && internalGetBytes().equals(
          other.internalGetBytes());
      result = result && internalGetStringMaps().equals(
          other.internalGetStringMaps());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getWordsCount() > 0) {
        hash = (37 * hash) + WORDS_FIELD_NUMBER;
        hash = (53 * hash) + getWordsList().hashCode();
      }
      if (!internalGetStrings().getMap().isEmpty()) {
        hash = (37 * hash) + STRINGS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetStrings().hashCode();
      }
      if (!internalGetInt64S().getMap().isEmpty()) {
        hash = (37 * hash) + INT64S_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInt64S().hashCode();
      }
      if (!internalGetDoubles().getMap().isEmpty()) {
        hash = (37 * hash) + DOUBLES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetDoubles().hashCode();
      }
      if (!internalGetBools().getMap().isEmpty()) {
        hash = (37 * hash) + BOOLS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetBools().hashCode();
      }
      if (!internalGetTimestamps().getMap().isEmpty()) {
        hash = (37 * hash) + TIMESTAMPS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetTimestamps().hashCode();
      }
      if (!internalGetDurations().getMap().isEmpty()) {
        hash = (37 * hash) + DURATIONS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetDurations().hashCode();
      }
      if (!internalGetBytes().getMap().isEmpty()) {
        hash = (37 * hash) + BYTES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetBytes().hashCode();
      }
      if (!internalGetStringMaps().getMap().isEmpty()) {
        hash = (37 * hash) + STRING_MAPS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetStringMaps().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static CompressedAttributes parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CompressedAttributes parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CompressedAttributes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CompressedAttributes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CompressedAttributes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CompressedAttributes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CompressedAttributes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CompressedAttributes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static CompressedAttributes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static CompressedAttributes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static CompressedAttributes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CompressedAttributes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(CompressedAttributes prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Defines a list of attributes in compressed format optimized for transport.
     * Within this message, strings are referenced using integer indices into
     * one of two string dictionaries. Positive integers index into the global
     * deployment-wide dictionary, whereas negative integers index into the message-level
     * dictionary instead. The message-level dictionary is carried by the
     * `words` field of this message, the deployment-wide dictionary is determined via
     * configuration.
     * </pre>
     *
     * Protobuf type {@code istio.mixer.v1.CompressedAttributes}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:istio.mixer.v1.CompressedAttributes)
        CompressedAttributesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return AttributesOuterClass.internal_static_istio_mixer_v1_CompressedAttributes_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetStrings();
          case 3:
            return internalGetInt64S();
          case 4:
            return internalGetDoubles();
          case 5:
            return internalGetBools();
          case 6:
            return internalGetTimestamps();
          case 7:
            return internalGetDurations();
          case 8:
            return internalGetBytes();
          case 9:
            return internalGetStringMaps();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMutableStrings();
          case 3:
            return internalGetMutableInt64S();
          case 4:
            return internalGetMutableDoubles();
          case 5:
            return internalGetMutableBools();
          case 6:
            return internalGetMutableTimestamps();
          case 7:
            return internalGetMutableDurations();
          case 8:
            return internalGetMutableBytes();
          case 9:
            return internalGetMutableStringMaps();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return AttributesOuterClass.internal_static_istio_mixer_v1_CompressedAttributes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                CompressedAttributes.class, Builder.class);
      }

      // Construct using org.wso2.vick.telemetry.receiver.generated.AttributesOuterClass.CompressedAttributes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        words_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        internalGetMutableStrings().clear();
        internalGetMutableInt64S().clear();
        internalGetMutableDoubles().clear();
        internalGetMutableBools().clear();
        internalGetMutableTimestamps().clear();
        internalGetMutableDurations().clear();
        internalGetMutableBytes().clear();
        internalGetMutableStringMaps().clear();
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return AttributesOuterClass.internal_static_istio_mixer_v1_CompressedAttributes_descriptor;
      }

      @Override
      public CompressedAttributes getDefaultInstanceForType() {
        return CompressedAttributes.getDefaultInstance();
      }

      @Override
      public CompressedAttributes build() {
        CompressedAttributes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public CompressedAttributes buildPartial() {
        CompressedAttributes result = new CompressedAttributes(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          words_ = words_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.words_ = words_;
        result.strings_ = internalGetStrings();
        result.strings_.makeImmutable();
        result.int64S_ = internalGetInt64S();
        result.int64S_.makeImmutable();
        result.doubles_ = internalGetDoubles();
        result.doubles_.makeImmutable();
        result.bools_ = internalGetBools();
        result.bools_.makeImmutable();
        result.timestamps_ = internalGetTimestamps();
        result.timestamps_.makeImmutable();
        result.durations_ = internalGetDurations();
        result.durations_.makeImmutable();
        result.bytes_ = internalGetBytes();
        result.bytes_.makeImmutable();
        result.stringMaps_ = internalGetStringMaps();
        result.stringMaps_.makeImmutable();
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CompressedAttributes) {
          return mergeFrom((CompressedAttributes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(CompressedAttributes other) {
        if (other == CompressedAttributes.getDefaultInstance()) return this;
        if (!other.words_.isEmpty()) {
          if (words_.isEmpty()) {
            words_ = other.words_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureWordsIsMutable();
            words_.addAll(other.words_);
          }
          onChanged();
        }
        internalGetMutableStrings().mergeFrom(
            other.internalGetStrings());
        internalGetMutableInt64S().mergeFrom(
            other.internalGetInt64S());
        internalGetMutableDoubles().mergeFrom(
            other.internalGetDoubles());
        internalGetMutableBools().mergeFrom(
            other.internalGetBools());
        internalGetMutableTimestamps().mergeFrom(
            other.internalGetTimestamps());
        internalGetMutableDurations().mergeFrom(
            other.internalGetDurations());
        internalGetMutableBytes().mergeFrom(
            other.internalGetBytes());
        internalGetMutableStringMaps().mergeFrom(
            other.internalGetStringMaps());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        CompressedAttributes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (CompressedAttributes) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList words_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureWordsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          words_ = new com.google.protobuf.LazyStringArrayList(words_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * The message-level dictionary.
       * </pre>
       *
       * <code>repeated string words = 1;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getWordsList() {
        return words_.getUnmodifiableView();
      }
      /**
       * <pre>
       * The message-level dictionary.
       * </pre>
       *
       * <code>repeated string words = 1;</code>
       */
      public int getWordsCount() {
        return words_.size();
      }
      /**
       * <pre>
       * The message-level dictionary.
       * </pre>
       *
       * <code>repeated string words = 1;</code>
       */
      public String getWords(int index) {
        return words_.get(index);
      }
      /**
       * <pre>
       * The message-level dictionary.
       * </pre>
       *
       * <code>repeated string words = 1;</code>
       */
      public com.google.protobuf.ByteString
          getWordsBytes(int index) {
        return words_.getByteString(index);
      }
      /**
       * <pre>
       * The message-level dictionary.
       * </pre>
       *
       * <code>repeated string words = 1;</code>
       */
      public Builder setWords(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureWordsIsMutable();
        words_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The message-level dictionary.
       * </pre>
       *
       * <code>repeated string words = 1;</code>
       */
      public Builder addWords(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureWordsIsMutable();
        words_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The message-level dictionary.
       * </pre>
       *
       * <code>repeated string words = 1;</code>
       */
      public Builder addAllWords(
          Iterable<String> values) {
        ensureWordsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, words_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The message-level dictionary.
       * </pre>
       *
       * <code>repeated string words = 1;</code>
       */
      public Builder clearWords() {
        words_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The message-level dictionary.
       * </pre>
       *
       * <code>repeated string words = 1;</code>
       */
      public Builder addWordsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureWordsIsMutable();
        words_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          Integer, Integer> strings_;
      private com.google.protobuf.MapField<Integer, Integer>
      internalGetStrings() {
        if (strings_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              StringsDefaultEntryHolder.defaultEntry);
        }
        return strings_;
      }
      private com.google.protobuf.MapField<Integer, Integer>
      internalGetMutableStrings() {
        onChanged();;
        if (strings_ == null) {
          strings_ = com.google.protobuf.MapField.newMapField(
              StringsDefaultEntryHolder.defaultEntry);
        }
        if (!strings_.isMutable()) {
          strings_ = strings_.copy();
        }
        return strings_;
      }

      public int getStringsCount() {
        return internalGetStrings().getMap().size();
      }
      /**
       * <pre>
       * Holds attributes of type STRING, DNS_NAME, EMAIL_ADDRESS, URI
       * </pre>
       *
       * <code>map&lt;sint32, sint32&gt; strings = 2;</code>
       */

      public boolean containsStrings(
          int key) {

        return internalGetStrings().getMap().containsKey(key);
      }
      /**
       * Use {@link #getStringsMap()} instead.
       */
      @Deprecated
      public java.util.Map<Integer, Integer> getStrings() {
        return getStringsMap();
      }
      /**
       * <pre>
       * Holds attributes of type STRING, DNS_NAME, EMAIL_ADDRESS, URI
       * </pre>
       *
       * <code>map&lt;sint32, sint32&gt; strings = 2;</code>
       */

      public java.util.Map<Integer, Integer> getStringsMap() {
        return internalGetStrings().getMap();
      }
      /**
       * <pre>
       * Holds attributes of type STRING, DNS_NAME, EMAIL_ADDRESS, URI
       * </pre>
       *
       * <code>map&lt;sint32, sint32&gt; strings = 2;</code>
       */

      public int getStringsOrDefault(
          int key,
          int defaultValue) {

        java.util.Map<Integer, Integer> map =
            internalGetStrings().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Holds attributes of type STRING, DNS_NAME, EMAIL_ADDRESS, URI
       * </pre>
       *
       * <code>map&lt;sint32, sint32&gt; strings = 2;</code>
       */

      public int getStringsOrThrow(
          int key) {

        java.util.Map<Integer, Integer> map =
            internalGetStrings().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearStrings() {
        internalGetMutableStrings().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Holds attributes of type STRING, DNS_NAME, EMAIL_ADDRESS, URI
       * </pre>
       *
       * <code>map&lt;sint32, sint32&gt; strings = 2;</code>
       */

      public Builder removeStrings(
          int key) {

        internalGetMutableStrings().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @Deprecated
      public java.util.Map<Integer, Integer>
      getMutableStrings() {
        return internalGetMutableStrings().getMutableMap();
      }
      /**
       * <pre>
       * Holds attributes of type STRING, DNS_NAME, EMAIL_ADDRESS, URI
       * </pre>
       *
       * <code>map&lt;sint32, sint32&gt; strings = 2;</code>
       */
      public Builder putStrings(
          int key,
          int value) {


        internalGetMutableStrings().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Holds attributes of type STRING, DNS_NAME, EMAIL_ADDRESS, URI
       * </pre>
       *
       * <code>map&lt;sint32, sint32&gt; strings = 2;</code>
       */

      public Builder putAllStrings(
          java.util.Map<Integer, Integer> values) {
        internalGetMutableStrings().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          Integer, Long> int64S_;
      private com.google.protobuf.MapField<Integer, Long>
      internalGetInt64S() {
        if (int64S_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              Int64SDefaultEntryHolder.defaultEntry);
        }
        return int64S_;
      }
      private com.google.protobuf.MapField<Integer, Long>
      internalGetMutableInt64S() {
        onChanged();;
        if (int64S_ == null) {
          int64S_ = com.google.protobuf.MapField.newMapField(
              Int64SDefaultEntryHolder.defaultEntry);
        }
        if (!int64S_.isMutable()) {
          int64S_ = int64S_.copy();
        }
        return int64S_;
      }

      public int getInt64SCount() {
        return internalGetInt64S().getMap().size();
      }
      /**
       * <pre>
       * Holds attributes of type INT64
       * </pre>
       *
       * <code>map&lt;sint32, int64&gt; int64s = 3;</code>
       */

      public boolean containsInt64S(
          int key) {

        return internalGetInt64S().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInt64SMap()} instead.
       */
      @Deprecated
      public java.util.Map<Integer, Long> getInt64S() {
        return getInt64SMap();
      }
      /**
       * <pre>
       * Holds attributes of type INT64
       * </pre>
       *
       * <code>map&lt;sint32, int64&gt; int64s = 3;</code>
       */

      public java.util.Map<Integer, Long> getInt64SMap() {
        return internalGetInt64S().getMap();
      }
      /**
       * <pre>
       * Holds attributes of type INT64
       * </pre>
       *
       * <code>map&lt;sint32, int64&gt; int64s = 3;</code>
       */

      public long getInt64SOrDefault(
          int key,
          long defaultValue) {

        java.util.Map<Integer, Long> map =
            internalGetInt64S().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Holds attributes of type INT64
       * </pre>
       *
       * <code>map&lt;sint32, int64&gt; int64s = 3;</code>
       */

      public long getInt64SOrThrow(
          int key) {

        java.util.Map<Integer, Long> map =
            internalGetInt64S().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInt64S() {
        internalGetMutableInt64S().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Holds attributes of type INT64
       * </pre>
       *
       * <code>map&lt;sint32, int64&gt; int64s = 3;</code>
       */

      public Builder removeInt64S(
          int key) {

        internalGetMutableInt64S().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @Deprecated
      public java.util.Map<Integer, Long>
      getMutableInt64S() {
        return internalGetMutableInt64S().getMutableMap();
      }
      /**
       * <pre>
       * Holds attributes of type INT64
       * </pre>
       *
       * <code>map&lt;sint32, int64&gt; int64s = 3;</code>
       */
      public Builder putInt64S(
          int key,
          long value) {


        internalGetMutableInt64S().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Holds attributes of type INT64
       * </pre>
       *
       * <code>map&lt;sint32, int64&gt; int64s = 3;</code>
       */

      public Builder putAllInt64S(
          java.util.Map<Integer, Long> values) {
        internalGetMutableInt64S().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          Integer, Double> doubles_;
      private com.google.protobuf.MapField<Integer, Double>
      internalGetDoubles() {
        if (doubles_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              DoublesDefaultEntryHolder.defaultEntry);
        }
        return doubles_;
      }
      private com.google.protobuf.MapField<Integer, Double>
      internalGetMutableDoubles() {
        onChanged();;
        if (doubles_ == null) {
          doubles_ = com.google.protobuf.MapField.newMapField(
              DoublesDefaultEntryHolder.defaultEntry);
        }
        if (!doubles_.isMutable()) {
          doubles_ = doubles_.copy();
        }
        return doubles_;
      }

      public int getDoublesCount() {
        return internalGetDoubles().getMap().size();
      }
      /**
       * <pre>
       * Holds attributes of type DOUBLE
       * </pre>
       *
       * <code>map&lt;sint32, double&gt; doubles = 4;</code>
       */

      public boolean containsDoubles(
          int key) {

        return internalGetDoubles().getMap().containsKey(key);
      }
      /**
       * Use {@link #getDoublesMap()} instead.
       */
      @Deprecated
      public java.util.Map<Integer, Double> getDoubles() {
        return getDoublesMap();
      }
      /**
       * <pre>
       * Holds attributes of type DOUBLE
       * </pre>
       *
       * <code>map&lt;sint32, double&gt; doubles = 4;</code>
       */

      public java.util.Map<Integer, Double> getDoublesMap() {
        return internalGetDoubles().getMap();
      }
      /**
       * <pre>
       * Holds attributes of type DOUBLE
       * </pre>
       *
       * <code>map&lt;sint32, double&gt; doubles = 4;</code>
       */

      public double getDoublesOrDefault(
          int key,
          double defaultValue) {

        java.util.Map<Integer, Double> map =
            internalGetDoubles().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Holds attributes of type DOUBLE
       * </pre>
       *
       * <code>map&lt;sint32, double&gt; doubles = 4;</code>
       */

      public double getDoublesOrThrow(
          int key) {

        java.util.Map<Integer, Double> map =
            internalGetDoubles().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearDoubles() {
        internalGetMutableDoubles().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Holds attributes of type DOUBLE
       * </pre>
       *
       * <code>map&lt;sint32, double&gt; doubles = 4;</code>
       */

      public Builder removeDoubles(
          int key) {

        internalGetMutableDoubles().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @Deprecated
      public java.util.Map<Integer, Double>
      getMutableDoubles() {
        return internalGetMutableDoubles().getMutableMap();
      }
      /**
       * <pre>
       * Holds attributes of type DOUBLE
       * </pre>
       *
       * <code>map&lt;sint32, double&gt; doubles = 4;</code>
       */
      public Builder putDoubles(
          int key,
          double value) {


        internalGetMutableDoubles().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Holds attributes of type DOUBLE
       * </pre>
       *
       * <code>map&lt;sint32, double&gt; doubles = 4;</code>
       */

      public Builder putAllDoubles(
          java.util.Map<Integer, Double> values) {
        internalGetMutableDoubles().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          Integer, Boolean> bools_;
      private com.google.protobuf.MapField<Integer, Boolean>
      internalGetBools() {
        if (bools_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              BoolsDefaultEntryHolder.defaultEntry);
        }
        return bools_;
      }
      private com.google.protobuf.MapField<Integer, Boolean>
      internalGetMutableBools() {
        onChanged();;
        if (bools_ == null) {
          bools_ = com.google.protobuf.MapField.newMapField(
              BoolsDefaultEntryHolder.defaultEntry);
        }
        if (!bools_.isMutable()) {
          bools_ = bools_.copy();
        }
        return bools_;
      }

      public int getBoolsCount() {
        return internalGetBools().getMap().size();
      }
      /**
       * <pre>
       * Holds attributes of type BOOL
       * </pre>
       *
       * <code>map&lt;sint32, bool&gt; bools = 5;</code>
       */

      public boolean containsBools(
          int key) {

        return internalGetBools().getMap().containsKey(key);
      }
      /**
       * Use {@link #getBoolsMap()} instead.
       */
      @Deprecated
      public java.util.Map<Integer, Boolean> getBools() {
        return getBoolsMap();
      }
      /**
       * <pre>
       * Holds attributes of type BOOL
       * </pre>
       *
       * <code>map&lt;sint32, bool&gt; bools = 5;</code>
       */

      public java.util.Map<Integer, Boolean> getBoolsMap() {
        return internalGetBools().getMap();
      }
      /**
       * <pre>
       * Holds attributes of type BOOL
       * </pre>
       *
       * <code>map&lt;sint32, bool&gt; bools = 5;</code>
       */

      public boolean getBoolsOrDefault(
          int key,
          boolean defaultValue) {

        java.util.Map<Integer, Boolean> map =
            internalGetBools().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Holds attributes of type BOOL
       * </pre>
       *
       * <code>map&lt;sint32, bool&gt; bools = 5;</code>
       */

      public boolean getBoolsOrThrow(
          int key) {

        java.util.Map<Integer, Boolean> map =
            internalGetBools().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearBools() {
        internalGetMutableBools().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Holds attributes of type BOOL
       * </pre>
       *
       * <code>map&lt;sint32, bool&gt; bools = 5;</code>
       */

      public Builder removeBools(
          int key) {

        internalGetMutableBools().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @Deprecated
      public java.util.Map<Integer, Boolean>
      getMutableBools() {
        return internalGetMutableBools().getMutableMap();
      }
      /**
       * <pre>
       * Holds attributes of type BOOL
       * </pre>
       *
       * <code>map&lt;sint32, bool&gt; bools = 5;</code>
       */
      public Builder putBools(
          int key,
          boolean value) {


        internalGetMutableBools().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Holds attributes of type BOOL
       * </pre>
       *
       * <code>map&lt;sint32, bool&gt; bools = 5;</code>
       */

      public Builder putAllBools(
          java.util.Map<Integer, Boolean> values) {
        internalGetMutableBools().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          Integer, com.google.protobuf.Timestamp> timestamps_;
      private com.google.protobuf.MapField<Integer, com.google.protobuf.Timestamp>
      internalGetTimestamps() {
        if (timestamps_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              TimestampsDefaultEntryHolder.defaultEntry);
        }
        return timestamps_;
      }
      private com.google.protobuf.MapField<Integer, com.google.protobuf.Timestamp>
      internalGetMutableTimestamps() {
        onChanged();;
        if (timestamps_ == null) {
          timestamps_ = com.google.protobuf.MapField.newMapField(
              TimestampsDefaultEntryHolder.defaultEntry);
        }
        if (!timestamps_.isMutable()) {
          timestamps_ = timestamps_.copy();
        }
        return timestamps_;
      }

      public int getTimestampsCount() {
        return internalGetTimestamps().getMap().size();
      }
      /**
       * <pre>
       * Holds attributes of type TIMESTAMP
       * </pre>
       *
       * <code>map&lt;sint32, .google.protobuf.Timestamp&gt; timestamps = 6 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       */

      public boolean containsTimestamps(
          int key) {

        return internalGetTimestamps().getMap().containsKey(key);
      }
      /**
       * Use {@link #getTimestampsMap()} instead.
       */
      @Deprecated
      public java.util.Map<Integer, com.google.protobuf.Timestamp> getTimestamps() {
        return getTimestampsMap();
      }
      /**
       * <pre>
       * Holds attributes of type TIMESTAMP
       * </pre>
       *
       * <code>map&lt;sint32, .google.protobuf.Timestamp&gt; timestamps = 6 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       */

      public java.util.Map<Integer, com.google.protobuf.Timestamp> getTimestampsMap() {
        return internalGetTimestamps().getMap();
      }
      /**
       * <pre>
       * Holds attributes of type TIMESTAMP
       * </pre>
       *
       * <code>map&lt;sint32, .google.protobuf.Timestamp&gt; timestamps = 6 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       */

      public com.google.protobuf.Timestamp getTimestampsOrDefault(
          int key,
          com.google.protobuf.Timestamp defaultValue) {

        java.util.Map<Integer, com.google.protobuf.Timestamp> map =
            internalGetTimestamps().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Holds attributes of type TIMESTAMP
       * </pre>
       *
       * <code>map&lt;sint32, .google.protobuf.Timestamp&gt; timestamps = 6 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       */

      public com.google.protobuf.Timestamp getTimestampsOrThrow(
          int key) {

        java.util.Map<Integer, com.google.protobuf.Timestamp> map =
            internalGetTimestamps().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearTimestamps() {
        internalGetMutableTimestamps().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Holds attributes of type TIMESTAMP
       * </pre>
       *
       * <code>map&lt;sint32, .google.protobuf.Timestamp&gt; timestamps = 6 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       */

      public Builder removeTimestamps(
          int key) {

        internalGetMutableTimestamps().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @Deprecated
      public java.util.Map<Integer, com.google.protobuf.Timestamp>
      getMutableTimestamps() {
        return internalGetMutableTimestamps().getMutableMap();
      }
      /**
       * <pre>
       * Holds attributes of type TIMESTAMP
       * </pre>
       *
       * <code>map&lt;sint32, .google.protobuf.Timestamp&gt; timestamps = 6 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       */
      public Builder putTimestamps(
          int key,
          com.google.protobuf.Timestamp value) {

        if (value == null) { throw new NullPointerException(); }
        internalGetMutableTimestamps().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Holds attributes of type TIMESTAMP
       * </pre>
       *
       * <code>map&lt;sint32, .google.protobuf.Timestamp&gt; timestamps = 6 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       */

      public Builder putAllTimestamps(
          java.util.Map<Integer, com.google.protobuf.Timestamp> values) {
        internalGetMutableTimestamps().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          Integer, com.google.protobuf.Duration> durations_;
      private com.google.protobuf.MapField<Integer, com.google.protobuf.Duration>
      internalGetDurations() {
        if (durations_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              DurationsDefaultEntryHolder.defaultEntry);
        }
        return durations_;
      }
      private com.google.protobuf.MapField<Integer, com.google.protobuf.Duration>
      internalGetMutableDurations() {
        onChanged();;
        if (durations_ == null) {
          durations_ = com.google.protobuf.MapField.newMapField(
              DurationsDefaultEntryHolder.defaultEntry);
        }
        if (!durations_.isMutable()) {
          durations_ = durations_.copy();
        }
        return durations_;
      }

      public int getDurationsCount() {
        return internalGetDurations().getMap().size();
      }
      /**
       * <pre>
       * Holds attributes of type DURATION
       * </pre>
       *
       * <code>map&lt;sint32, .google.protobuf.Duration&gt; durations = 7 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
       */

      public boolean containsDurations(
          int key) {

        return internalGetDurations().getMap().containsKey(key);
      }
      /**
       * Use {@link #getDurationsMap()} instead.
       */
      @Deprecated
      public java.util.Map<Integer, com.google.protobuf.Duration> getDurations() {
        return getDurationsMap();
      }
      /**
       * <pre>
       * Holds attributes of type DURATION
       * </pre>
       *
       * <code>map&lt;sint32, .google.protobuf.Duration&gt; durations = 7 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
       */

      public java.util.Map<Integer, com.google.protobuf.Duration> getDurationsMap() {
        return internalGetDurations().getMap();
      }
      /**
       * <pre>
       * Holds attributes of type DURATION
       * </pre>
       *
       * <code>map&lt;sint32, .google.protobuf.Duration&gt; durations = 7 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
       */

      public com.google.protobuf.Duration getDurationsOrDefault(
          int key,
          com.google.protobuf.Duration defaultValue) {

        java.util.Map<Integer, com.google.protobuf.Duration> map =
            internalGetDurations().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Holds attributes of type DURATION
       * </pre>
       *
       * <code>map&lt;sint32, .google.protobuf.Duration&gt; durations = 7 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
       */

      public com.google.protobuf.Duration getDurationsOrThrow(
          int key) {

        java.util.Map<Integer, com.google.protobuf.Duration> map =
            internalGetDurations().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearDurations() {
        internalGetMutableDurations().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Holds attributes of type DURATION
       * </pre>
       *
       * <code>map&lt;sint32, .google.protobuf.Duration&gt; durations = 7 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
       */

      public Builder removeDurations(
          int key) {

        internalGetMutableDurations().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @Deprecated
      public java.util.Map<Integer, com.google.protobuf.Duration>
      getMutableDurations() {
        return internalGetMutableDurations().getMutableMap();
      }
      /**
       * <pre>
       * Holds attributes of type DURATION
       * </pre>
       *
       * <code>map&lt;sint32, .google.protobuf.Duration&gt; durations = 7 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
       */
      public Builder putDurations(
          int key,
          com.google.protobuf.Duration value) {

        if (value == null) { throw new NullPointerException(); }
        internalGetMutableDurations().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Holds attributes of type DURATION
       * </pre>
       *
       * <code>map&lt;sint32, .google.protobuf.Duration&gt; durations = 7 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
       */

      public Builder putAllDurations(
          java.util.Map<Integer, com.google.protobuf.Duration> values) {
        internalGetMutableDurations().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          Integer, com.google.protobuf.ByteString> bytes_;
      private com.google.protobuf.MapField<Integer, com.google.protobuf.ByteString>
      internalGetBytes() {
        if (bytes_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              BytesDefaultEntryHolder.defaultEntry);
        }
        return bytes_;
      }
      private com.google.protobuf.MapField<Integer, com.google.protobuf.ByteString>
      internalGetMutableBytes() {
        onChanged();;
        if (bytes_ == null) {
          bytes_ = com.google.protobuf.MapField.newMapField(
              BytesDefaultEntryHolder.defaultEntry);
        }
        if (!bytes_.isMutable()) {
          bytes_ = bytes_.copy();
        }
        return bytes_;
      }

      public int getBytesCount() {
        return internalGetBytes().getMap().size();
      }
      /**
       * <pre>
       * Holds attributes of type BYTES
       * </pre>
       *
       * <code>map&lt;sint32, bytes&gt; bytes = 8;</code>
       */

      public boolean containsBytes(
          int key) {

        return internalGetBytes().getMap().containsKey(key);
      }
      /**
       * Use {@link #getBytesMap()} instead.
       */
      @Deprecated
      public java.util.Map<Integer, com.google.protobuf.ByteString> getBytes() {
        return getBytesMap();
      }
      /**
       * <pre>
       * Holds attributes of type BYTES
       * </pre>
       *
       * <code>map&lt;sint32, bytes&gt; bytes = 8;</code>
       */

      public java.util.Map<Integer, com.google.protobuf.ByteString> getBytesMap() {
        return internalGetBytes().getMap();
      }
      /**
       * <pre>
       * Holds attributes of type BYTES
       * </pre>
       *
       * <code>map&lt;sint32, bytes&gt; bytes = 8;</code>
       */

      public com.google.protobuf.ByteString getBytesOrDefault(
          int key,
          com.google.protobuf.ByteString defaultValue) {

        java.util.Map<Integer, com.google.protobuf.ByteString> map =
            internalGetBytes().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Holds attributes of type BYTES
       * </pre>
       *
       * <code>map&lt;sint32, bytes&gt; bytes = 8;</code>
       */

      public com.google.protobuf.ByteString getBytesOrThrow(
          int key) {

        java.util.Map<Integer, com.google.protobuf.ByteString> map =
            internalGetBytes().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearBytes() {
        internalGetMutableBytes().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Holds attributes of type BYTES
       * </pre>
       *
       * <code>map&lt;sint32, bytes&gt; bytes = 8;</code>
       */

      public Builder removeBytes(
          int key) {

        internalGetMutableBytes().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @Deprecated
      public java.util.Map<Integer, com.google.protobuf.ByteString>
      getMutableBytes() {
        return internalGetMutableBytes().getMutableMap();
      }
      /**
       * <pre>
       * Holds attributes of type BYTES
       * </pre>
       *
       * <code>map&lt;sint32, bytes&gt; bytes = 8;</code>
       */
      public Builder putBytes(
          int key,
          com.google.protobuf.ByteString value) {

        if (value == null) { throw new NullPointerException(); }
        internalGetMutableBytes().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Holds attributes of type BYTES
       * </pre>
       *
       * <code>map&lt;sint32, bytes&gt; bytes = 8;</code>
       */

      public Builder putAllBytes(
          java.util.Map<Integer, com.google.protobuf.ByteString> values) {
        internalGetMutableBytes().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          Integer, StringMap> stringMaps_;
      private com.google.protobuf.MapField<Integer, StringMap>
      internalGetStringMaps() {
        if (stringMaps_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              StringMapsDefaultEntryHolder.defaultEntry);
        }
        return stringMaps_;
      }
      private com.google.protobuf.MapField<Integer, StringMap>
      internalGetMutableStringMaps() {
        onChanged();;
        if (stringMaps_ == null) {
          stringMaps_ = com.google.protobuf.MapField.newMapField(
              StringMapsDefaultEntryHolder.defaultEntry);
        }
        if (!stringMaps_.isMutable()) {
          stringMaps_ = stringMaps_.copy();
        }
        return stringMaps_;
      }

      public int getStringMapsCount() {
        return internalGetStringMaps().getMap().size();
      }
      /**
       * <pre>
       * Holds attributes of type STRING_MAP
       * </pre>
       *
       * <code>map&lt;sint32, .istio.mixer.v1.StringMap&gt; string_maps = 9 [(.gogoproto.nullable) = false];</code>
       */

      public boolean containsStringMaps(
          int key) {

        return internalGetStringMaps().getMap().containsKey(key);
      }
      /**
       * Use {@link #getStringMapsMap()} instead.
       */
      @Deprecated
      public java.util.Map<Integer, StringMap> getStringMaps() {
        return getStringMapsMap();
      }
      /**
       * <pre>
       * Holds attributes of type STRING_MAP
       * </pre>
       *
       * <code>map&lt;sint32, .istio.mixer.v1.StringMap&gt; string_maps = 9 [(.gogoproto.nullable) = false];</code>
       */

      public java.util.Map<Integer, StringMap> getStringMapsMap() {
        return internalGetStringMaps().getMap();
      }
      /**
       * <pre>
       * Holds attributes of type STRING_MAP
       * </pre>
       *
       * <code>map&lt;sint32, .istio.mixer.v1.StringMap&gt; string_maps = 9 [(.gogoproto.nullable) = false];</code>
       */

      public StringMap getStringMapsOrDefault(
          int key,
          StringMap defaultValue) {

        java.util.Map<Integer, StringMap> map =
            internalGetStringMaps().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Holds attributes of type STRING_MAP
       * </pre>
       *
       * <code>map&lt;sint32, .istio.mixer.v1.StringMap&gt; string_maps = 9 [(.gogoproto.nullable) = false];</code>
       */

      public StringMap getStringMapsOrThrow(
          int key) {

        java.util.Map<Integer, StringMap> map =
            internalGetStringMaps().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearStringMaps() {
        internalGetMutableStringMaps().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Holds attributes of type STRING_MAP
       * </pre>
       *
       * <code>map&lt;sint32, .istio.mixer.v1.StringMap&gt; string_maps = 9 [(.gogoproto.nullable) = false];</code>
       */

      public Builder removeStringMaps(
          int key) {

        internalGetMutableStringMaps().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @Deprecated
      public java.util.Map<Integer, StringMap>
      getMutableStringMaps() {
        return internalGetMutableStringMaps().getMutableMap();
      }
      /**
       * <pre>
       * Holds attributes of type STRING_MAP
       * </pre>
       *
       * <code>map&lt;sint32, .istio.mixer.v1.StringMap&gt; string_maps = 9 [(.gogoproto.nullable) = false];</code>
       */
      public Builder putStringMaps(
          int key,
          StringMap value) {

        if (value == null) { throw new NullPointerException(); }
        internalGetMutableStringMaps().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Holds attributes of type STRING_MAP
       * </pre>
       *
       * <code>map&lt;sint32, .istio.mixer.v1.StringMap&gt; string_maps = 9 [(.gogoproto.nullable) = false];</code>
       */

      public Builder putAllStringMaps(
          java.util.Map<Integer, StringMap> values) {
        internalGetMutableStringMaps().getMutableMap()
            .putAll(values);
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:istio.mixer.v1.CompressedAttributes)
    }

    // @@protoc_insertion_point(class_scope:istio.mixer.v1.CompressedAttributes)
    private static final CompressedAttributes DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CompressedAttributes();
    }

    public static CompressedAttributes getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CompressedAttributes>
        PARSER = new com.google.protobuf.AbstractParser<CompressedAttributes>() {
      @Override
      public CompressedAttributes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CompressedAttributes(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CompressedAttributes> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<CompressedAttributes> getParserForType() {
      return PARSER;
    }

    @Override
    public CompressedAttributes getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StringMapOrBuilder extends
      // @@protoc_insertion_point(interface_extends:istio.mixer.v1.StringMap)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Holds a set of name/value pairs.
     * </pre>
     *
     * <code>map&lt;sint32, sint32&gt; entries = 1;</code>
     */
    int getEntriesCount();
    /**
     * <pre>
     * Holds a set of name/value pairs.
     * </pre>
     *
     * <code>map&lt;sint32, sint32&gt; entries = 1;</code>
     */
    boolean containsEntries(
            int key);
    /**
     * Use {@link #getEntriesMap()} instead.
     */
    @Deprecated
    java.util.Map<Integer, Integer>
    getEntries();
    /**
     * <pre>
     * Holds a set of name/value pairs.
     * </pre>
     *
     * <code>map&lt;sint32, sint32&gt; entries = 1;</code>
     */
    java.util.Map<Integer, Integer>
    getEntriesMap();
    /**
     * <pre>
     * Holds a set of name/value pairs.
     * </pre>
     *
     * <code>map&lt;sint32, sint32&gt; entries = 1;</code>
     */

    int getEntriesOrDefault(
            int key,
            int defaultValue);
    /**
     * <pre>
     * Holds a set of name/value pairs.
     * </pre>
     *
     * <code>map&lt;sint32, sint32&gt; entries = 1;</code>
     */

    int getEntriesOrThrow(
            int key);
  }
  /**
   * <pre>
   * A map of string to string. The keys and values in this map are dictionary
   * indices (see the [Attributes][istio.mixer.v1.CompressedAttributes] message for an explanation)
   * </pre>
   *
   * Protobuf type {@code istio.mixer.v1.StringMap}
   */
  public  static final class StringMap extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:istio.mixer.v1.StringMap)
      StringMapOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StringMap.newBuilder() to construct.
    private StringMap(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StringMap() {
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StringMap(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                entries_ = com.google.protobuf.MapField.newMapField(
                    EntriesDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<Integer, Integer>
              entries__ = input.readMessage(
                  EntriesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              entries_.getMutableMap().put(
                  entries__.getKey(), entries__.getValue());
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return AttributesOuterClass.internal_static_istio_mixer_v1_StringMap_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetEntries();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return AttributesOuterClass.internal_static_istio_mixer_v1_StringMap_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              StringMap.class, Builder.class);
    }

    public static final int ENTRIES_FIELD_NUMBER = 1;
    private static final class EntriesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          Integer, Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<Integer, Integer>newDefaultInstance(
                  AttributesOuterClass.internal_static_istio_mixer_v1_StringMap_EntriesEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.SINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.SINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        Integer, Integer> entries_;
    private com.google.protobuf.MapField<Integer, Integer>
    internalGetEntries() {
      if (entries_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            EntriesDefaultEntryHolder.defaultEntry);
      }
      return entries_;
    }

    public int getEntriesCount() {
      return internalGetEntries().getMap().size();
    }
    /**
     * <pre>
     * Holds a set of name/value pairs.
     * </pre>
     *
     * <code>map&lt;sint32, sint32&gt; entries = 1;</code>
     */

    public boolean containsEntries(
        int key) {

      return internalGetEntries().getMap().containsKey(key);
    }
    /**
     * Use {@link #getEntriesMap()} instead.
     */
    @Deprecated
    public java.util.Map<Integer, Integer> getEntries() {
      return getEntriesMap();
    }
    /**
     * <pre>
     * Holds a set of name/value pairs.
     * </pre>
     *
     * <code>map&lt;sint32, sint32&gt; entries = 1;</code>
     */

    public java.util.Map<Integer, Integer> getEntriesMap() {
      return internalGetEntries().getMap();
    }
    /**
     * <pre>
     * Holds a set of name/value pairs.
     * </pre>
     *
     * <code>map&lt;sint32, sint32&gt; entries = 1;</code>
     */

    public int getEntriesOrDefault(
        int key,
        int defaultValue) {

      java.util.Map<Integer, Integer> map =
          internalGetEntries().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Holds a set of name/value pairs.
     * </pre>
     *
     * <code>map&lt;sint32, sint32&gt; entries = 1;</code>
     */

    public int getEntriesOrThrow(
        int key) {

      java.util.Map<Integer, Integer> map =
          internalGetEntries().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetEntries(),
          EntriesDefaultEntryHolder.defaultEntry,
          1);
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<Integer, Integer> entry
           : internalGetEntries().getMap().entrySet()) {
        com.google.protobuf.MapEntry<Integer, Integer>
        entries__ = EntriesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, entries__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof StringMap)) {
        return super.equals(obj);
      }
      StringMap other = (StringMap) obj;

      boolean result = true;
      result = result && internalGetEntries().equals(
          other.internalGetEntries());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetEntries().getMap().isEmpty()) {
        hash = (37 * hash) + ENTRIES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetEntries().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static StringMap parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StringMap parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StringMap parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StringMap parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StringMap parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StringMap parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StringMap parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static StringMap parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static StringMap parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static StringMap parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static StringMap parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static StringMap parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(StringMap prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A map of string to string. The keys and values in this map are dictionary
     * indices (see the [Attributes][istio.mixer.v1.CompressedAttributes] message for an explanation)
     * </pre>
     *
     * Protobuf type {@code istio.mixer.v1.StringMap}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:istio.mixer.v1.StringMap)
        StringMapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return AttributesOuterClass.internal_static_istio_mixer_v1_StringMap_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetEntries();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableEntries();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return AttributesOuterClass.internal_static_istio_mixer_v1_StringMap_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                StringMap.class, Builder.class);
      }

      // Construct using org.wso2.vick.telemetry.receiver.generated.AttributesOuterClass.StringMap.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        internalGetMutableEntries().clear();
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return AttributesOuterClass.internal_static_istio_mixer_v1_StringMap_descriptor;
      }

      @Override
      public StringMap getDefaultInstanceForType() {
        return StringMap.getDefaultInstance();
      }

      @Override
      public StringMap build() {
        StringMap result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public StringMap buildPartial() {
        StringMap result = new StringMap(this);
        int from_bitField0_ = bitField0_;
        result.entries_ = internalGetEntries();
        result.entries_.makeImmutable();
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof StringMap) {
          return mergeFrom((StringMap)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(StringMap other) {
        if (other == StringMap.getDefaultInstance()) return this;
        internalGetMutableEntries().mergeFrom(
            other.internalGetEntries());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        StringMap parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (StringMap) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          Integer, Integer> entries_;
      private com.google.protobuf.MapField<Integer, Integer>
      internalGetEntries() {
        if (entries_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              EntriesDefaultEntryHolder.defaultEntry);
        }
        return entries_;
      }
      private com.google.protobuf.MapField<Integer, Integer>
      internalGetMutableEntries() {
        onChanged();;
        if (entries_ == null) {
          entries_ = com.google.protobuf.MapField.newMapField(
              EntriesDefaultEntryHolder.defaultEntry);
        }
        if (!entries_.isMutable()) {
          entries_ = entries_.copy();
        }
        return entries_;
      }

      public int getEntriesCount() {
        return internalGetEntries().getMap().size();
      }
      /**
       * <pre>
       * Holds a set of name/value pairs.
       * </pre>
       *
       * <code>map&lt;sint32, sint32&gt; entries = 1;</code>
       */

      public boolean containsEntries(
          int key) {
        
        return internalGetEntries().getMap().containsKey(key);
      }
      /**
       * Use {@link #getEntriesMap()} instead.
       */
      @Deprecated
      public java.util.Map<Integer, Integer> getEntries() {
        return getEntriesMap();
      }
      /**
       * <pre>
       * Holds a set of name/value pairs.
       * </pre>
       *
       * <code>map&lt;sint32, sint32&gt; entries = 1;</code>
       */

      public java.util.Map<Integer, Integer> getEntriesMap() {
        return internalGetEntries().getMap();
      }
      /**
       * <pre>
       * Holds a set of name/value pairs.
       * </pre>
       *
       * <code>map&lt;sint32, sint32&gt; entries = 1;</code>
       */

      public int getEntriesOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<Integer, Integer> map =
            internalGetEntries().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Holds a set of name/value pairs.
       * </pre>
       *
       * <code>map&lt;sint32, sint32&gt; entries = 1;</code>
       */

      public int getEntriesOrThrow(
          int key) {
        
        java.util.Map<Integer, Integer> map =
            internalGetEntries().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearEntries() {
        internalGetMutableEntries().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Holds a set of name/value pairs.
       * </pre>
       *
       * <code>map&lt;sint32, sint32&gt; entries = 1;</code>
       */

      public Builder removeEntries(
          int key) {
        
        internalGetMutableEntries().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @Deprecated
      public java.util.Map<Integer, Integer>
      getMutableEntries() {
        return internalGetMutableEntries().getMutableMap();
      }
      /**
       * <pre>
       * Holds a set of name/value pairs.
       * </pre>
       *
       * <code>map&lt;sint32, sint32&gt; entries = 1;</code>
       */
      public Builder putEntries(
          int key,
          int value) {
        
        
        internalGetMutableEntries().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Holds a set of name/value pairs.
       * </pre>
       *
       * <code>map&lt;sint32, sint32&gt; entries = 1;</code>
       */

      public Builder putAllEntries(
          java.util.Map<Integer, Integer> values) {
        internalGetMutableEntries().getMutableMap()
            .putAll(values);
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:istio.mixer.v1.StringMap)
    }

    // @@protoc_insertion_point(class_scope:istio.mixer.v1.StringMap)
    private static final StringMap DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new StringMap();
    }

    public static StringMap getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StringMap>
        PARSER = new com.google.protobuf.AbstractParser<StringMap>() {
      @Override
      public StringMap parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StringMap(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StringMap> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<StringMap> getParserForType() {
      return PARSER;
    }

    @Override
    public StringMap getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_mixer_v1_Attributes_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_mixer_v1_Attributes_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_mixer_v1_Attributes_AttributesEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_mixer_v1_Attributes_AttributesEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_mixer_v1_Attributes_AttributeValue_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_mixer_v1_Attributes_AttributeValue_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_mixer_v1_Attributes_StringMap_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_mixer_v1_Attributes_StringMap_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_mixer_v1_Attributes_StringMap_EntriesEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_mixer_v1_Attributes_StringMap_EntriesEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_mixer_v1_CompressedAttributes_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_mixer_v1_CompressedAttributes_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_mixer_v1_CompressedAttributes_StringsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_mixer_v1_CompressedAttributes_StringsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_mixer_v1_CompressedAttributes_Int64sEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_mixer_v1_CompressedAttributes_Int64sEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_mixer_v1_CompressedAttributes_DoublesEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_mixer_v1_CompressedAttributes_DoublesEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_mixer_v1_CompressedAttributes_BoolsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_mixer_v1_CompressedAttributes_BoolsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_mixer_v1_CompressedAttributes_TimestampsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_mixer_v1_CompressedAttributes_TimestampsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_mixer_v1_CompressedAttributes_DurationsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_mixer_v1_CompressedAttributes_DurationsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_mixer_v1_CompressedAttributes_BytesEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_mixer_v1_CompressedAttributes_BytesEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_mixer_v1_CompressedAttributes_StringMapsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_mixer_v1_CompressedAttributes_StringMapsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_mixer_v1_StringMap_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_mixer_v1_StringMap_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_istio_mixer_v1_StringMap_EntriesEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_istio_mixer_v1_StringMap_EntriesEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\031mixer/v1/attributes.proto\022\016istio.mixer" +
      ".v1\032\024gogoproto/gogo.proto\032\036google/protob" +
      "uf/duration.proto\032\037google/protobuf/times" +
      "tamp.proto\"\351\004\n\nAttributes\022>\n\nattributes\030" +
      "\001 \003(\0132*.istio.mixer.v1.Attributes.Attrib" +
      "utesEntry\032\\\n\017AttributesEntry\022\013\n\003key\030\001 \001(" +
      "\t\0228\n\005value\030\002 \001(\0132).istio.mixer.v1.Attrib" +
      "utes.AttributeValue:\0028\001\032\273\002\n\016AttributeVal" +
      "ue\022\026\n\014string_value\030\002 \001(\tH\000\022\025\n\013int64_valu" +
      "e\030\003 \001(\003H\000\022\026\n\014double_value\030\004 \001(\001H\000\022\024\n\nboo" +
      "l_value\030\005 \001(\010H\000\022\025\n\013bytes_value\030\006 \001(\014H\000\0225" +
      "\n\017timestamp_value\030\007 \001(\0132\032.google.protobu" +
      "f.TimestampH\000\0223\n\016duration_value\030\010 \001(\0132\031." +
      "google.protobuf.DurationH\000\022@\n\020string_map" +
      "_value\030\t \001(\0132$.istio.mixer.v1.Attributes" +
      ".StringMapH\000B\007\n\005value\032\177\n\tStringMap\022B\n\007en" +
      "tries\030\001 \003(\01321.istio.mixer.v1.Attributes." +
      "StringMap.EntriesEntry\032.\n\014EntriesEntry\022\013" +
      "\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\273\010\n\024Compr" +
      "essedAttributes\022\r\n\005words\030\001 \003(\t\022B\n\007string" +
      "s\030\002 \003(\01321.istio.mixer.v1.CompressedAttri" +
      "butes.StringsEntry\022@\n\006int64s\030\003 \003(\01320.ist" +
      "io.mixer.v1.CompressedAttributes.Int64sE" +
      "ntry\022B\n\007doubles\030\004 \003(\01321.istio.mixer.v1.C" +
      "ompressedAttributes.DoublesEntry\022>\n\005bool" +
      "s\030\005 \003(\0132/.istio.mixer.v1.CompressedAttri" +
      "butes.BoolsEntry\022R\n\ntimestamps\030\006 \003(\01324.i" +
      "stio.mixer.v1.CompressedAttributes.Times" +
      "tampsEntryB\010\310\336\037\000\220\337\037\001\022P\n\tdurations\030\007 \003(\0132" +
      "3.istio.mixer.v1.CompressedAttributes.Du" +
      "rationsEntryB\010\310\336\037\000\230\337\037\001\022>\n\005bytes\030\010 \003(\0132/." +
      "istio.mixer.v1.CompressedAttributes.Byte" +
      "sEntry\022O\n\013string_maps\030\t \003(\01324.istio.mixe" +
      "r.v1.CompressedAttributes.StringMapsEntr" +
      "yB\004\310\336\037\000\032.\n\014StringsEntry\022\013\n\003key\030\001 \001(\021\022\r\n\005" +
      "value\030\002 \001(\021:\0028\001\032-\n\013Int64sEntry\022\013\n\003key\030\001 " +
      "\001(\021\022\r\n\005value\030\002 \001(\003:\0028\001\032.\n\014DoublesEntry\022\013" +
      "\n\003key\030\001 \001(\021\022\r\n\005value\030\002 \001(\001:\0028\001\032,\n\nBoolsE" +
      "ntry\022\013\n\003key\030\001 \001(\021\022\r\n\005value\030\002 \001(\010:\0028\001\032M\n\017" +
      "TimestampsEntry\022\013\n\003key\030\001 \001(\021\022)\n\005value\030\002 " +
      "\001(\0132\032.google.protobuf.Timestamp:\0028\001\032K\n\016D" +
      "urationsEntry\022\013\n\003key\030\001 \001(\021\022(\n\005value\030\002 \001(" +
      "\0132\031.google.protobuf.Duration:\0028\001\032,\n\nByte" +
      "sEntry\022\013\n\003key\030\001 \001(\021\022\r\n\005value\030\002 \001(\014:\0028\001\032L" +
      "\n\017StringMapsEntry\022\013\n\003key\030\001 \001(\021\022(\n\005value\030" +
      "\002 \001(\0132\031.istio.mixer.v1.StringMap:\0028\001\"t\n\t" +
      "StringMap\0227\n\007entries\030\001 \003(\0132&.istio.mixer" +
      ".v1.StringMap.EntriesEntry\032.\n\014EntriesEnt" +
      "ry\022\013\n\003key\030\001 \001(\021\022\r\n\005value\030\002 \001(\021:\0028\001BM\n%or" +
      "g.wso2.vick.telemetry.receiver.coreZ\025ist" +
      "io.io/api/mixer/v1\370\001\001\310\341\036\000\250\342\036\000\360\341\036\000b\006proto" +
      "3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.GoGoProtos.getDescriptor(),
          com.google.protobuf.DurationProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
        }, assigner);
    internal_static_istio_mixer_v1_Attributes_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_istio_mixer_v1_Attributes_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_mixer_v1_Attributes_descriptor,
        new String[] { "Attributes", });
    internal_static_istio_mixer_v1_Attributes_AttributesEntry_descriptor =
      internal_static_istio_mixer_v1_Attributes_descriptor.getNestedTypes().get(0);
    internal_static_istio_mixer_v1_Attributes_AttributesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_mixer_v1_Attributes_AttributesEntry_descriptor,
        new String[] { "Key", "Value", });
    internal_static_istio_mixer_v1_Attributes_AttributeValue_descriptor =
      internal_static_istio_mixer_v1_Attributes_descriptor.getNestedTypes().get(1);
    internal_static_istio_mixer_v1_Attributes_AttributeValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_mixer_v1_Attributes_AttributeValue_descriptor,
        new String[] { "StringValue", "Int64Value", "DoubleValue", "BoolValue", "BytesValue", "TimestampValue", "DurationValue", "StringMapValue", "Value", });
    internal_static_istio_mixer_v1_Attributes_StringMap_descriptor =
      internal_static_istio_mixer_v1_Attributes_descriptor.getNestedTypes().get(2);
    internal_static_istio_mixer_v1_Attributes_StringMap_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_mixer_v1_Attributes_StringMap_descriptor,
        new String[] { "Entries", });
    internal_static_istio_mixer_v1_Attributes_StringMap_EntriesEntry_descriptor =
      internal_static_istio_mixer_v1_Attributes_StringMap_descriptor.getNestedTypes().get(0);
    internal_static_istio_mixer_v1_Attributes_StringMap_EntriesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_mixer_v1_Attributes_StringMap_EntriesEntry_descriptor,
        new String[] { "Key", "Value", });
    internal_static_istio_mixer_v1_CompressedAttributes_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_istio_mixer_v1_CompressedAttributes_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_mixer_v1_CompressedAttributes_descriptor,
        new String[] { "Words", "Strings", "Int64S", "Doubles", "Bools", "Timestamps", "Durations", "Bytes", "StringMaps", });
    internal_static_istio_mixer_v1_CompressedAttributes_StringsEntry_descriptor =
      internal_static_istio_mixer_v1_CompressedAttributes_descriptor.getNestedTypes().get(0);
    internal_static_istio_mixer_v1_CompressedAttributes_StringsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_mixer_v1_CompressedAttributes_StringsEntry_descriptor,
        new String[] { "Key", "Value", });
    internal_static_istio_mixer_v1_CompressedAttributes_Int64sEntry_descriptor =
      internal_static_istio_mixer_v1_CompressedAttributes_descriptor.getNestedTypes().get(1);
    internal_static_istio_mixer_v1_CompressedAttributes_Int64sEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_mixer_v1_CompressedAttributes_Int64sEntry_descriptor,
        new String[] { "Key", "Value", });
    internal_static_istio_mixer_v1_CompressedAttributes_DoublesEntry_descriptor =
      internal_static_istio_mixer_v1_CompressedAttributes_descriptor.getNestedTypes().get(2);
    internal_static_istio_mixer_v1_CompressedAttributes_DoublesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_mixer_v1_CompressedAttributes_DoublesEntry_descriptor,
        new String[] { "Key", "Value", });
    internal_static_istio_mixer_v1_CompressedAttributes_BoolsEntry_descriptor =
      internal_static_istio_mixer_v1_CompressedAttributes_descriptor.getNestedTypes().get(3);
    internal_static_istio_mixer_v1_CompressedAttributes_BoolsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_mixer_v1_CompressedAttributes_BoolsEntry_descriptor,
        new String[] { "Key", "Value", });
    internal_static_istio_mixer_v1_CompressedAttributes_TimestampsEntry_descriptor =
      internal_static_istio_mixer_v1_CompressedAttributes_descriptor.getNestedTypes().get(4);
    internal_static_istio_mixer_v1_CompressedAttributes_TimestampsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_mixer_v1_CompressedAttributes_TimestampsEntry_descriptor,
        new String[] { "Key", "Value", });
    internal_static_istio_mixer_v1_CompressedAttributes_DurationsEntry_descriptor =
      internal_static_istio_mixer_v1_CompressedAttributes_descriptor.getNestedTypes().get(5);
    internal_static_istio_mixer_v1_CompressedAttributes_DurationsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_mixer_v1_CompressedAttributes_DurationsEntry_descriptor,
        new String[] { "Key", "Value", });
    internal_static_istio_mixer_v1_CompressedAttributes_BytesEntry_descriptor =
      internal_static_istio_mixer_v1_CompressedAttributes_descriptor.getNestedTypes().get(6);
    internal_static_istio_mixer_v1_CompressedAttributes_BytesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_mixer_v1_CompressedAttributes_BytesEntry_descriptor,
        new String[] { "Key", "Value", });
    internal_static_istio_mixer_v1_CompressedAttributes_StringMapsEntry_descriptor =
      internal_static_istio_mixer_v1_CompressedAttributes_descriptor.getNestedTypes().get(7);
    internal_static_istio_mixer_v1_CompressedAttributes_StringMapsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_mixer_v1_CompressedAttributes_StringMapsEntry_descriptor,
        new String[] { "Key", "Value", });
    internal_static_istio_mixer_v1_StringMap_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_istio_mixer_v1_StringMap_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_mixer_v1_StringMap_descriptor,
        new String[] { "Entries", });
    internal_static_istio_mixer_v1_StringMap_EntriesEntry_descriptor =
      internal_static_istio_mixer_v1_StringMap_descriptor.getNestedTypes().get(0);
    internal_static_istio_mixer_v1_StringMap_EntriesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_istio_mixer_v1_StringMap_EntriesEntry_descriptor,
        new String[] { "Key", "Value", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.protobuf.GoGoProtos.equalAll);
    registry.add(com.google.protobuf.GoGoProtos.goprotoGettersAll);
    registry.add(com.google.protobuf.GoGoProtos.gostringAll);
    registry.add(com.google.protobuf.GoGoProtos.nullable);
    registry.add(com.google.protobuf.GoGoProtos.stdduration);
    registry.add(com.google.protobuf.GoGoProtos.stdtime);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.protobuf.GoGoProtos.getDescriptor();
    com.google.protobuf.DurationProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
